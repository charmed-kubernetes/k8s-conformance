  I1207 12:13:42.985932      20 e2e.go:109] Starting e2e run "8dec36a2-19ee-437b-ac64-cc13d82f4065" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1733573622 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1207 12:13:43.203479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:13:43.207011 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1207 12:13:43.248546 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1207 12:13:43.252671 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1207 12:13:43.252971 20 e2e.go:245] e2e test version: v1.31.3
  I1207 12:13:43.254041 20 e2e.go:254] kube-apiserver version: v1.31.3
  I1207 12:13:43.254364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:13:43.258668 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/07/24 12:13:43.459
  I1207 12:13:43.459798 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 12:13:43.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:13:43.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:13:43.488
  STEP: Creating a pod to test service account token:  @ 12/07/24 12:13:43.49
  STEP: Saw pod success @ 12/07/24 12:13:53.531
  I1207 12:13:53.535959 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod test-pod-c3e80616-2724-43ae-b342-ebbf96ea4707 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:13:53.552
  I1207 12:13:53.573683 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-639" for this suite. @ 12/07/24 12:13:53.577
• [10.125 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/07/24 12:13:53.585
  I1207 12:13:53.585392 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename prestop @ 12/07/24 12:13:53.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:13:53.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:13:53.609
  STEP: Creating server pod server in namespace prestop-9603 @ 12/07/24 12:13:53.612
  STEP: Waiting for pods to come up. @ 12/07/24 12:13:53.622
  STEP: Creating tester pod tester in namespace prestop-9603 @ 12/07/24 12:13:55.635
  STEP: Deleting pre-stop pod @ 12/07/24 12:13:57.651
  I1207 12:14:02.667830 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/07/24 12:14:02.668
  I1207 12:14:02.685830 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9603" for this suite. @ 12/07/24 12:14:02.694
• [9.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/07/24 12:14:02.7
  I1207 12:14:02.700811 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:14:02.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:02.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:02.727
  STEP: Creating a pod to test downward api env vars @ 12/07/24 12:14:02.729
  STEP: Saw pod success @ 12/07/24 12:14:06.754
  I1207 12:14:06.759171 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod downward-api-44d3e025-6aed-48cf-85f4-2a43a8ff5352 container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 12:14:06.778
  I1207 12:14:06.796842 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6652" for this suite. @ 12/07/24 12:14:06.801
• [4.108 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/07/24 12:14:06.808
  I1207 12:14:06.808583 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:14:06.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:06.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:06.831
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 12:14:06.833
  STEP: Saw pod success @ 12/07/24 12:14:10.857
  I1207 12:14:10.861005 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-f100048d-e4bc-45dd-ab7f-921f4f3d9043 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 12:14:10.869
  I1207 12:14:10.892270 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6535" for this suite. @ 12/07/24 12:14:10.895
• [4.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 12/07/24 12:14:10.903
  I1207 12:14:10.903769 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:14:10.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:10.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:10.927
  STEP: Setting up server cert @ 12/07/24 12:14:10.961
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:14:11.279
  STEP: Deploying the webhook pod @ 12/07/24 12:14:11.29
  STEP: Wait for the deployment to be ready @ 12/07/24 12:14:11.303
  I1207 12:14:11.311576 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1207 12:14:13.323113 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 12, 14, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 14, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 14, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 14, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/07/24 12:14:15.329
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:14:15.34
  I1207 12:14:16.340711 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/07/24 12:14:16.348
  I1207 12:14:16.397426 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1349" for this suite. @ 12/07/24 12:14:16.401
  STEP: Destroying namespace "webhook-markers-4857" for this suite. @ 12/07/24 12:14:16.413
• [5.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/07/24 12:14:16.422
  I1207 12:14:16.422831 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 12:14:16.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:16.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:16.45
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/07/24 12:14:16.454
  STEP: Saw pod success @ 12/07/24 12:14:20.48
  I1207 12:14:20.485597 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-958b74db-d52f-4fa0-aa39-18768ea8e2f4 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 12:14:20.493
  I1207 12:14:20.514222 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8570" for this suite. @ 12/07/24 12:14:20.518
• [4.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/07/24 12:14:20.526
  I1207 12:14:20.526453 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 12:14:20.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:20.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:20.552
  I1207 12:14:20.554966 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: creating the pod @ 12/07/24 12:14:20.555
  STEP: submitting the pod to kubernetes @ 12/07/24 12:14:20.555
  I1207 12:14:22.624265 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2046" for this suite. @ 12/07/24 12:14:22.628
• [2.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/07/24 12:14:22.634
  I1207 12:14:22.634499 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename ingressclass @ 12/07/24 12:14:22.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:22.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:22.656
  STEP: getting /apis @ 12/07/24 12:14:22.658
  STEP: getting /apis/networking.k8s.io @ 12/07/24 12:14:22.661
  STEP: getting /apis/networking.k8s.iov1 @ 12/07/24 12:14:22.662
  STEP: creating @ 12/07/24 12:14:22.663
  STEP: getting @ 12/07/24 12:14:22.679
  STEP: listing @ 12/07/24 12:14:22.682
  STEP: watching @ 12/07/24 12:14:22.684
  I1207 12:14:22.684999 20 ingressclass.go:348] starting watch
  STEP: patching @ 12/07/24 12:14:22.686
  STEP: updating @ 12/07/24 12:14:22.69
  I1207 12:14:22.696250 20 ingressclass.go:364] waiting for watch events with expected annotations
  I1207 12:14:22.696274 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/07/24 12:14:22.696
  STEP: deleting a collection @ 12/07/24 12:14:22.708
  I1207 12:14:22.730324 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8852" for this suite. @ 12/07/24 12:14:22.734
• [0.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/07/24 12:14:22.74
  I1207 12:14:22.740993 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 12:14:22.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:22.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:22.764
  STEP: Creating simple DaemonSet "daemon-set" @ 12/07/24 12:14:22.787
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/07/24 12:14:22.795
  I1207 12:14:22.799194 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:22.799224 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:22.802324 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:14:22.802341 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:14:23.801319 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:23.801371 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:23.805938 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:14:23.806029 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:14:24.801798 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:24.801853 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:24.806759 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:14:24.806793 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:14:25.800541 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:25.800583 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:25.805437 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1207 12:14:25.805470 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:14:26.803736 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:26.803776 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:26.807491 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1207 12:14:26.807513 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:14:27.800639 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:27.800671 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:27.803944 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:14:27.803965 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/07/24 12:14:27.807
  I1207 12:14:27.823744 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:27.823817 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:27.832071 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1207 12:14:27.832181 20 fixtures.go:130] Node ip-172-31-64-144 is running 0 daemon pod, expected 1
  I1207 12:14:28.825400 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:28.825619 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:28.829877 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1207 12:14:28.829899 20 fixtures.go:130] Node ip-172-31-64-144 is running 0 daemon pod, expected 1
  I1207 12:14:29.825616 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:29.825651 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:14:29.829406 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:14:29.829423 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/07/24 12:14:29.833
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3021, will wait for the garbage collector to delete the pods @ 12/07/24 12:14:29.833
  I1207 12:14:29.896705 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.616717ms
  I1207 12:14:29.997465 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.755447ms
  I1207 12:14:36.106614 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:14:36.106650 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1207 12:14:36.111005 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4862"},"items":null}

  I1207 12:14:36.114366 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4862"},"items":null}

  I1207 12:14:36.128535 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3021" for this suite. @ 12/07/24 12:14:36.132
• [13.399 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 12/07/24 12:14:36.139
  I1207 12:14:36.139670 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:14:36.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:36.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:36.163
  STEP: Creating a ResourceQuota @ 12/07/24 12:14:36.166
  STEP: Getting a ResourceQuota @ 12/07/24 12:14:36.172
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/07/24 12:14:36.175
  STEP: Patching the ResourceQuota @ 12/07/24 12:14:36.18
  STEP: Deleting a Collection of ResourceQuotas @ 12/07/24 12:14:36.186
  STEP: Verifying the deleted ResourceQuota @ 12/07/24 12:14:36.198
  I1207 12:14:36.201882 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6018" for this suite. @ 12/07/24 12:14:36.206
• [0.076 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/07/24 12:14:36.215
  I1207 12:14:36.215973 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 12:14:36.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:36.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:36.242
  STEP: Creating service test in namespace statefulset-9815 @ 12/07/24 12:14:36.244
  STEP: Looking for a node to schedule stateful set and pod @ 12/07/24 12:14:36.25
  STEP: Creating pod with conflicting port in namespace statefulset-9815 @ 12/07/24 12:14:36.254
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9815 @ 12/07/24 12:14:36.264
  STEP: Creating statefulset with conflicting port in namespace statefulset-9815 @ 12/07/24 12:14:38.274
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9815 @ 12/07/24 12:14:38.281
  I1207 12:14:38.309651 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-9815, name: ss-0, uid: b6731b79-abaa-49c0-b95c-7e45b459ebaa, status phase: Pending. Waiting for statefulset controller to delete.
  I1207 12:14:38.331893 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-9815, name: ss-0, uid: b6731b79-abaa-49c0-b95c-7e45b459ebaa, status phase: Failed. Waiting for statefulset controller to delete.
  I1207 12:14:38.341117 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-9815, name: ss-0, uid: b6731b79-abaa-49c0-b95c-7e45b459ebaa, status phase: Failed. Waiting for statefulset controller to delete.
  I1207 12:14:38.348835 20 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-9815
  STEP: Removing pod with conflicting port in namespace statefulset-9815 @ 12/07/24 12:14:38.348
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9815 and will be in running state @ 12/07/24 12:14:38.369
  I1207 12:14:40.378309 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9815
  I1207 12:14:40.381582 20 rest.go:150] Scaling statefulset ss to 0
  I1207 12:14:50.397176 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 12:14:50.400941 20 rest.go:88] Deleting statefulset ss
  I1207 12:14:50.417138 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9815" for this suite. @ 12/07/24 12:14:50.42
• [14.211 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/07/24 12:14:50.427
  I1207 12:14:50.427519 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replicaset @ 12/07/24 12:14:50.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:50.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:50.447
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/07/24 12:14:50.449
  STEP: When a replicaset with a matching selector is created @ 12/07/24 12:14:52.48
  STEP: Then the orphan pod is adopted @ 12/07/24 12:14:52.487
  STEP: When the matched label of one of its pods change @ 12/07/24 12:14:53.496
  I1207 12:14:53.500063 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/07/24 12:14:53.51
  I1207 12:14:54.520172 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4500" for this suite. @ 12/07/24 12:14:54.524
• [4.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 12/07/24 12:14:54.532
  I1207 12:14:54.532664 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:14:54.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:54.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:54.554
  STEP: Creating resourceQuota "e2e-rq-status-74mhx" @ 12/07/24 12:14:54.56
  I1207 12:14:54.568789 20 resource_quota.go:1102] Resource quota "e2e-rq-status-74mhx" reports spec: hard cpu limit of 500m
  I1207 12:14:54.568810 20 resource_quota.go:1104] Resource quota "e2e-rq-status-74mhx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-74mhx" /status @ 12/07/24 12:14:54.568
  STEP: Confirm /status for "e2e-rq-status-74mhx" resourceQuota via watch @ 12/07/24 12:14:54.578
  I1207 12:14:54.579334 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-74mhx" in namespace "resourcequota-7308" with hard status: v1.ResourceList(nil)
  I1207 12:14:54.579410 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-74mhx" in namespace "resourcequota-7308" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1207 12:14:54.579422 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-74mhx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/07/24 12:14:54.582
  I1207 12:14:54.589572 20 resource_quota.go:1152] Resource quota "e2e-rq-status-74mhx" reports spec: hard cpu limit of 1
  I1207 12:14:54.589591 20 resource_quota.go:1153] Resource quota "e2e-rq-status-74mhx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-74mhx" /status @ 12/07/24 12:14:54.589
  STEP: Confirm /status for "e2e-rq-status-74mhx" resourceQuota via watch @ 12/07/24 12:14:54.594
  I1207 12:14:54.595588 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-74mhx" in namespace "resourcequota-7308" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1207 12:14:54.595648 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-74mhx" in namespace "resourcequota-7308" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1207 12:14:54.595660 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-74mhx" /status was patched
  STEP: Get "e2e-rq-status-74mhx" /status @ 12/07/24 12:14:54.595
  I1207 12:14:54.599781 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-74mhx" reports status: hard cpu of 1
  I1207 12:14:54.599804 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-74mhx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-74mhx" /status before checking Spec is unchanged @ 12/07/24 12:14:54.603
  I1207 12:14:54.610651 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-74mhx" reports status: hard cpu of 2
  I1207 12:14:54.610680 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-74mhx" reports status: hard memory of 2Gi
  I1207 12:14:54.611804 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-74mhx" in namespace "resourcequota-7308" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1207 12:14:54.616997 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-74mhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-74mhx", GenerateName:"", Namespace:"resourcequota-7308", SelfLink:"", UID:"e487f5d3-7e05-448f-add0-2759af326f68", ResourceVersion:"5083", Generation:0, CreationTimestamp:time.Date(2024, time.December, 7, 12, 14, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-74mhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 7, 12, 14, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c8ea20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 7, 12, 14, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c8ea68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 7, 12, 14, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c8eab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I1207 12:14:59.616640 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-74mhx" Spec was unchanged and /status reset
  I1207 12:14:59.616767 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7308" for this suite. @ 12/07/24 12:14:59.621
• [5.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/07/24 12:14:59.627
  I1207 12:14:59.627499 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:14:59.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:59.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:59.658
  STEP: Creating configMap that has name configmap-test-emptyKey-4cda251e-ba8b-4f5e-ac0e-0cc0505c4de1 @ 12/07/24 12:14:59.66
  I1207 12:14:59.661926 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1765" for this suite. @ 12/07/24 12:14:59.666
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/07/24 12:14:59.673
  I1207 12:14:59.673966 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename containers @ 12/07/24 12:14:59.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:14:59.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:14:59.697
  STEP: Creating a pod to test override arguments @ 12/07/24 12:14:59.699
  STEP: Saw pod success @ 12/07/24 12:15:03.728
  I1207 12:15:03.732332 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod client-containers-85f88e4b-2d9f-4c55-9264-50fda4b9233c container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:15:03.739
  I1207 12:15:03.760976 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1296" for this suite. @ 12/07/24 12:15:03.765
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 12/07/24 12:15:03.775
  I1207 12:15:03.775479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubelet-test @ 12/07/24 12:15:03.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:03.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:03.801
  STEP: Waiting for pod completion @ 12/07/24 12:15:03.816
  I1207 12:15:05.837202 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6048" for this suite. @ 12/07/24 12:15:05.84
• [2.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/07/24 12:15:05.846
  I1207 12:15:05.846984 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename subpath @ 12/07/24 12:15:05.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:05.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:05.872
  STEP: Setting up data @ 12/07/24 12:15:05.874
  STEP: Creating pod pod-subpath-test-configmap-pfcx @ 12/07/24 12:15:05.884
  STEP: Creating a pod to test atomic-volume-subpath @ 12/07/24 12:15:05.884
  STEP: Saw pod success @ 12/07/24 12:15:27.959
  I1207 12:15:27.962487 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-subpath-test-configmap-pfcx container test-container-subpath-configmap-pfcx: <nil>
  STEP: delete the pod @ 12/07/24 12:15:27.97
  STEP: Deleting pod pod-subpath-test-configmap-pfcx @ 12/07/24 12:15:27.99
  I1207 12:15:27.990721 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-pfcx" in namespace "subpath-188"
  I1207 12:15:27.994019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-188" for this suite. @ 12/07/24 12:15:27.997
• [22.157 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/07/24 12:15:28.004
  I1207 12:15:28.004542 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:15:28.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:28.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:28.028
  I1207 12:15:28.070371 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6783" for this suite. @ 12/07/24 12:15:28.074
• [0.077 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 12/07/24 12:15:28.082
  I1207 12:15:28.082188 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:15:28.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:28.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:28.113
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/07/24 12:15:28.116
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/07/24 12:15:28.116
  STEP: creating a pod to probe DNS @ 12/07/24 12:15:28.116
  STEP: submitting the pod to kubernetes @ 12/07/24 12:15:28.116
  STEP: retrieving the pod @ 12/07/24 12:15:34.144
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:15:34.147
  I1207 12:15:34.166331 20 dns_common.go:527] DNS probes using dns-584/dns-test-6b2eee49-759b-4a05-90e2-6c4f12c932c1 succeeded

  STEP: deleting the pod @ 12/07/24 12:15:34.166
  I1207 12:15:34.183711 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-584" for this suite. @ 12/07/24 12:15:34.187
• [6.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 12/07/24 12:15:34.195
  I1207 12:15:34.195241 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubelet-test @ 12/07/24 12:15:34.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:34.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:34.218
  I1207 12:15:36.245892 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7315" for this suite. @ 12/07/24 12:15:36.25
• [2.062 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/07/24 12:15:36.257
  I1207 12:15:36.257428 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:15:36.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:36.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:36.284
  STEP: Creating secret with name secret-test-map-a8339fb8-9a05-40d1-9545-4d69eefd7013 @ 12/07/24 12:15:36.286
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:15:36.293
  STEP: Saw pod success @ 12/07/24 12:15:40.315
  I1207 12:15:40.320030 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-secrets-fd99b14e-7632-4437-9bfe-32d1273e923e container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:15:40.327
  I1207 12:15:40.346892 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7252" for this suite. @ 12/07/24 12:15:40.35
• [4.102 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 12/07/24 12:15:40.359
  I1207 12:15:40.359174 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:15:40.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:40.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:40.381
  STEP: creating a replication controller @ 12/07/24 12:15:40.383
  I1207 12:15:40.383679 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 create -f -'
  I1207 12:15:40.483290 20 builder.go:146] stderr: ""
  I1207 12:15:40.483331 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/07/24 12:15:40.483
  I1207 12:15:40.483461 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1207 12:15:40.541435 20 builder.go:146] stderr: ""
  I1207 12:15:40.541475 20 builder.go:147] stdout: "update-demo-nautilus-4nlq4 update-demo-nautilus-hjmfp "
  I1207 12:15:40.541522 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods update-demo-nautilus-4nlq4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 12:15:40.584764 20 builder.go:146] stderr: ""
  I1207 12:15:40.584805 20 builder.go:147] stdout: ""
  I1207 12:15:40.584816 20 kubectl.go:2502] update-demo-nautilus-4nlq4 is created but not running
  I1207 12:15:45.586476 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1207 12:15:45.633646 20 builder.go:146] stderr: ""
  I1207 12:15:45.633688 20 builder.go:147] stdout: "update-demo-nautilus-4nlq4 update-demo-nautilus-hjmfp "
  I1207 12:15:45.633732 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods update-demo-nautilus-4nlq4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 12:15:45.676555 20 builder.go:146] stderr: ""
  I1207 12:15:45.676609 20 builder.go:147] stdout: "true"
  I1207 12:15:45.676652 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods update-demo-nautilus-4nlq4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1207 12:15:45.719158 20 builder.go:146] stderr: ""
  I1207 12:15:45.719196 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 12:15:45.719206 20 kubectl.go:2393] validating pod update-demo-nautilus-4nlq4
  I1207 12:15:45.725250 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 12:15:45.725325 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 12:15:45.725339 20 kubectl.go:2520] update-demo-nautilus-4nlq4 is verified up and running
  I1207 12:15:45.725455 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods update-demo-nautilus-hjmfp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 12:15:45.767562 20 builder.go:146] stderr: ""
  I1207 12:15:45.767592 20 builder.go:147] stdout: "true"
  I1207 12:15:45.767632 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods update-demo-nautilus-hjmfp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1207 12:15:45.810308 20 builder.go:146] stderr: ""
  I1207 12:15:45.810341 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 12:15:45.810375 20 kubectl.go:2393] validating pod update-demo-nautilus-hjmfp
  I1207 12:15:45.816306 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 12:15:45.816361 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 12:15:45.816371 20 kubectl.go:2520] update-demo-nautilus-hjmfp is verified up and running
  STEP: using delete to clean up resources @ 12/07/24 12:15:45.816
  I1207 12:15:45.816443 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 delete --grace-period=0 --force -f -'
  I1207 12:15:45.864942 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:15:45.864978 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1207 12:15:45.865021 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get rc,svc -l name=update-demo --no-headers'
  I1207 12:15:45.927576 20 builder.go:146] stderr: "No resources found in kubectl-8674 namespace.\n"
  I1207 12:15:45.927626 20 builder.go:147] stdout: ""
  I1207 12:15:45.927673 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-8674 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1207 12:15:45.979042 20 builder.go:146] stderr: ""
  I1207 12:15:45.979082 20 builder.go:147] stdout: ""
  I1207 12:15:45.979333 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8674" for this suite. @ 12/07/24 12:15:45.983
• [5.633 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/07/24 12:15:45.992
  I1207 12:15:45.992371 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:15:45.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:15:46.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:15:46.019
  STEP: Creating configMap with name cm-test-opt-del-aafe59fe-df31-45c8-85c1-1c0326d8ae81 @ 12/07/24 12:15:46.025
  STEP: Creating configMap with name cm-test-opt-upd-83f9335e-f688-43de-bbf2-819fad55df24 @ 12/07/24 12:15:46.031
  STEP: Creating the pod @ 12/07/24 12:15:46.036
  STEP: Deleting configmap cm-test-opt-del-aafe59fe-df31-45c8-85c1-1c0326d8ae81 @ 12/07/24 12:15:48.08
  STEP: Updating configmap cm-test-opt-upd-83f9335e-f688-43de-bbf2-819fad55df24 @ 12/07/24 12:15:48.088
  STEP: Creating configMap with name cm-test-opt-create-3bca0f28-b9ba-4138-99b8-ebe634ed332d @ 12/07/24 12:15:48.093
  STEP: waiting to observe update in volume @ 12/07/24 12:15:48.098
  I1207 12:16:54.431467 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1441" for this suite. @ 12/07/24 12:16:54.436
• [68.452 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/07/24 12:16:54.444
  I1207 12:16:54.444306 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 12:16:54.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:16:54.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:16:54.472
  STEP: creating the pod @ 12/07/24 12:16:54.474
  STEP: submitting the pod to kubernetes @ 12/07/24 12:16:54.474
  STEP: verifying QOS class is set on the pod @ 12/07/24 12:16:54.485
  I1207 12:16:54.489180 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5024" for this suite. @ 12/07/24 12:16:54.492
• [0.058 seconds]
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/07/24 12:16:54.501
  I1207 12:16:54.501958 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:16:54.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:16:54.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:16:54.524
  STEP: Creating secret with name s-test-opt-del-df16ba0e-1c79-4a62-9d24-4b52dd6c8257 @ 12/07/24 12:16:54.53
  STEP: Creating secret with name s-test-opt-upd-ca9fc37d-9110-46a0-a46a-8c08cb16b09e @ 12/07/24 12:16:54.535
  STEP: Creating the pod @ 12/07/24 12:16:54.54
  STEP: Deleting secret s-test-opt-del-df16ba0e-1c79-4a62-9d24-4b52dd6c8257 @ 12/07/24 12:16:56.587
  STEP: Updating secret s-test-opt-upd-ca9fc37d-9110-46a0-a46a-8c08cb16b09e @ 12/07/24 12:16:56.595
  STEP: Creating secret with name s-test-opt-create-92edc9df-7e30-4391-b068-5dc1ac29a9ac @ 12/07/24 12:16:56.6
  STEP: waiting to observe update in volume @ 12/07/24 12:16:56.605
  I1207 12:18:00.944309 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4636" for this suite. @ 12/07/24 12:18:00.949
• [66.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/07/24 12:18:00.956
  I1207 12:18:00.956727 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:18:00.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:18:00.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:18:00.981
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 12:18:00.983
  STEP: Saw pod success @ 12/07/24 12:18:05.007
  I1207 12:18:05.011604 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod downwardapi-volume-6fa8c892-3149-4a69-8df7-d92ad5c89fbd container client-container: <nil>
  STEP: delete the pod @ 12/07/24 12:18:05.022
  I1207 12:18:05.043695 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3004" for this suite. @ 12/07/24 12:18:05.051
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 12/07/24 12:18:05.062
  I1207 12:18:05.062068 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:18:05.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:18:05.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:18:05.085
  STEP: Setting up server cert @ 12/07/24 12:18:05.116
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:18:05.259
  STEP: Deploying the webhook pod @ 12/07/24 12:18:05.269
  STEP: Wait for the deployment to be ready @ 12/07/24 12:18:05.285
  I1207 12:18:05.294195 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/07/24 12:18:07.309
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:18:07.321
  I1207 12:18:08.321922 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/07/24 12:18:08.33
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/07/24 12:18:08.331
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/07/24 12:18:08.331
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/07/24 12:18:08.331
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/07/24 12:18:08.332
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/07/24 12:18:08.332
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/07/24 12:18:08.333
  I1207 12:18:08.376781 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6618" for this suite. @ 12/07/24 12:18:08.381
  STEP: Destroying namespace "webhook-markers-8259" for this suite. @ 12/07/24 12:18:08.389
• [3.337 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 12/07/24 12:18:08.399
  I1207 12:18:08.399156 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption @ 12/07/24 12:18:08.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:18:08.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:18:08.421
  I1207 12:18:08.439380 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1207 12:19:08.444609 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/07/24 12:19:08.448
  I1207 12:19:08.472324 20 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1207 12:19:08.479641 20 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1207 12:19:08.494768 20 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1207 12:19:08.509016 20 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1207 12:19:08.529537 20 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1207 12:19:08.535438 20 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/07/24 12:19:08.535
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/07/24 12:19:10.571
  I1207 12:19:14.679321 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-651" for this suite. @ 12/07/24 12:19:14.683
• [66.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 12/07/24 12:19:14.692
  I1207 12:19:14.692622 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 12:19:14.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:14.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:14.719
  STEP: Creating Indexed job @ 12/07/24 12:19:14.721
  STEP: Ensuring job reaches completions @ 12/07/24 12:19:14.728
  STEP: Ensuring pods with index for job exist @ 12/07/24 12:19:24.739
  I1207 12:19:24.744491 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9216" for this suite. @ 12/07/24 12:19:24.748
• [10.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/07/24 12:19:24.756
  I1207 12:19:24.756156 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename controllerrevisions @ 12/07/24 12:19:24.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:24.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:24.776
  STEP: Creating DaemonSet "e2e-zz8f6-daemon-set" @ 12/07/24 12:19:24.801
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/07/24 12:19:24.808
  I1207 12:19:24.812572 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:24.812598 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:24.816672 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zz8f6-daemon-set: 0
  I1207 12:19:24.816698 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:19:25.814315 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:25.814377 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:25.818198 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zz8f6-daemon-set: 0
  I1207 12:19:25.818220 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:19:26.814407 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:26.814439 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:26.819215 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zz8f6-daemon-set: 3
  I1207 12:19:26.819236 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-zz8f6-daemon-set
  STEP: Confirm DaemonSet "e2e-zz8f6-daemon-set" successfully created with "daemonset-name=e2e-zz8f6-daemon-set" label @ 12/07/24 12:19:26.822
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zz8f6-daemon-set" @ 12/07/24 12:19:26.83
  I1207 12:19:26.834563 20 controller_revision.go:162] Located ControllerRevision: "e2e-zz8f6-daemon-set-6bddf9756d"
  STEP: Patching ControllerRevision "e2e-zz8f6-daemon-set-6bddf9756d" @ 12/07/24 12:19:26.837
  I1207 12:19:26.844073 20 controller_revision.go:173] e2e-zz8f6-daemon-set-6bddf9756d has been patched
  STEP: Create a new ControllerRevision @ 12/07/24 12:19:26.844
  I1207 12:19:26.851974 20 controller_revision.go:191] Created ControllerRevision: e2e-zz8f6-daemon-set-8575c59bb6
  STEP: Confirm that there are two ControllerRevisions @ 12/07/24 12:19:26.851
  I1207 12:19:26.852022 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1207 12:19:26.855426 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zz8f6-daemon-set-6bddf9756d" @ 12/07/24 12:19:26.855
  STEP: Confirm that there is only one ControllerRevision @ 12/07/24 12:19:26.864
  I1207 12:19:26.864796 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1207 12:19:26.867765 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zz8f6-daemon-set-8575c59bb6" @ 12/07/24 12:19:26.871
  I1207 12:19:26.881458 20 controller_revision.go:220] e2e-zz8f6-daemon-set-8575c59bb6 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/07/24 12:19:26.881
  W1207 12:19:26.890200      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/07/24 12:19:26.89
  I1207 12:19:26.890286 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1207 12:19:27.891023 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1207 12:19:27.895282 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zz8f6-daemon-set-8575c59bb6=updated" @ 12/07/24 12:19:27.895
  STEP: Confirm that there is only one ControllerRevision @ 12/07/24 12:19:27.906
  I1207 12:19:27.906337 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1207 12:19:27.909524 20 controller_revision.go:265] Found 1 ControllerRevisions
  I1207 12:19:27.912786 20 controller_revision.go:246] ControllerRevision "e2e-zz8f6-daemon-set-7d47b5b99f" has revision 3
  STEP: Deleting DaemonSet "e2e-zz8f6-daemon-set" @ 12/07/24 12:19:27.916
  STEP: deleting DaemonSet.extensions e2e-zz8f6-daemon-set in namespace controllerrevisions-1410, will wait for the garbage collector to delete the pods @ 12/07/24 12:19:27.916
  I1207 12:19:27.980519 20 resources.go:139] Deleting DaemonSet.extensions e2e-zz8f6-daemon-set took: 9.465033ms
  I1207 12:19:28.081608 20 resources.go:163] Terminating DaemonSet.extensions e2e-zz8f6-daemon-set pods took: 101.081529ms
  I1207 12:19:29.286887 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zz8f6-daemon-set: 0
  I1207 12:19:29.286917 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zz8f6-daemon-set
  I1207 12:19:29.290604 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6613"},"items":null}

  I1207 12:19:29.293804 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6613"},"items":null}

  I1207 12:19:29.310120 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1410" for this suite. @ 12/07/24 12:19:29.313
• [4.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/07/24 12:19:29.323
  I1207 12:19:29.323380 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:19:29.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:29.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:29.347
  STEP: Creating configMap with name cm-test-opt-del-a110b2e3-269f-46e6-93d0-551cc8463c54 @ 12/07/24 12:19:29.352
  STEP: Creating configMap with name cm-test-opt-upd-ff13ac2e-6b98-4227-8751-5835b9a4671c @ 12/07/24 12:19:29.357
  STEP: Creating the pod @ 12/07/24 12:19:29.362
  STEP: Deleting configmap cm-test-opt-del-a110b2e3-269f-46e6-93d0-551cc8463c54 @ 12/07/24 12:19:31.419
  STEP: Updating configmap cm-test-opt-upd-ff13ac2e-6b98-4227-8751-5835b9a4671c @ 12/07/24 12:19:31.426
  STEP: Creating configMap with name cm-test-opt-create-d66d9128-fa7b-4e28-9c21-acfe1593aa85 @ 12/07/24 12:19:31.431
  STEP: waiting to observe update in volume @ 12/07/24 12:19:31.438
  I1207 12:19:35.476307 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5475" for this suite. @ 12/07/24 12:19:35.48
• [6.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 12/07/24 12:19:35.488
  I1207 12:19:35.488569 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:19:35.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:35.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:35.512
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/07/24 12:19:35.514
  I1207 12:19:35.526161 20 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2932  240c69f6-a0cf-4dd5-b899-807e949d795b 6727 0 2024-12-07 12:19:35 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-07 12:19:35 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tdlhm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tdlhm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/07/24 12:19:37.534
  I1207 12:19:37.534490 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2932 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:19:37.534508 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:19:37.535014 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:19:37.535053 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2932/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/07/24 12:19:37.586
  I1207 12:19:37.586757 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2932 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:19:37.586776 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:19:37.587207 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:19:37.587251 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2932/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:19:37.629015 20 dns.go:423] Deleting pod test-dns-nameservers...
  I1207 12:19:37.646223 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2932" for this suite. @ 12/07/24 12:19:37.65
• [2.169 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/07/24 12:19:37.658
  I1207 12:19:37.658262 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 12:19:37.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:37.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:37.686
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/07/24 12:19:37.691
  STEP: Saw pod success @ 12/07/24 12:19:41.727
  I1207 12:19:41.733022 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-bedcbb99-de53-4c82-8741-882883c45b81 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 12:19:41.75
  I1207 12:19:41.768860 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6736" for this suite. @ 12/07/24 12:19:41.772
• [4.121 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/07/24 12:19:41.779
  I1207 12:19:41.779271 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:19:41.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:41.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:41.801
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 12:19:41.803
  STEP: Saw pod success @ 12/07/24 12:19:45.83
  I1207 12:19:45.834395 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-b03e4a8c-ce43-4c21-b89e-6dca31d3484b container client-container: <nil>
  STEP: delete the pod @ 12/07/24 12:19:45.843
  I1207 12:19:45.862490 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5348" for this suite. @ 12/07/24 12:19:45.865
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 12/07/24 12:19:45.874
  I1207 12:19:45.874186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename security-context @ 12/07/24 12:19:45.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:45.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:45.898
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/07/24 12:19:45.9
  STEP: Saw pod success @ 12/07/24 12:19:49.924
  I1207 12:19:49.927607 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod security-context-60c44674-82fe-4ff5-a829-cd7a46a7295a container test-container: <nil>
  STEP: delete the pod @ 12/07/24 12:19:49.935
  I1207 12:19:49.957730 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2440" for this suite. @ 12/07/24 12:19:49.962
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/07/24 12:19:49.969
  I1207 12:19:49.969974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 12:19:49.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:49.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:49.99
  STEP: creating a Pod with a static label @ 12/07/24 12:19:49.997
  STEP: watching for Pod to be ready @ 12/07/24 12:19:50.008
  I1207 12:19:50.009659 20 pods.go:945] observed Pod pod-test in namespace pods-4076 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1207 12:19:50.016297 20 pods.go:945] observed Pod pod-test in namespace pods-4076 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  }]
  I1207 12:19:50.037558 20 pods.go:945] observed Pod pod-test in namespace pods-4076 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  }]
  I1207 12:19:50.988560 20 pods.go:948] Found Pod pod-test in namespace pods-4076 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 12:19:50 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/07/24 12:19:50.994
  STEP: getting the Pod and ensuring that it's patched @ 12/07/24 12:19:51.003
  STEP: replacing the Pod's status Ready condition to False @ 12/07/24 12:19:51.006
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/07/24 12:19:51.02
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/07/24 12:19:51.02
  STEP: watching for the Pod to be deleted @ 12/07/24 12:19:51.031
  I1207 12:19:51.033040 20 pods.go:1058] observed event type MODIFIED
  I1207 12:19:52.996370 20 pods.go:1058] observed event type MODIFIED
  I1207 12:19:53.137699 20 pods.go:1058] observed event type MODIFIED
  I1207 12:19:54.004333 20 pods.go:1058] observed event type MODIFIED
  I1207 12:19:54.014740 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4076" for this suite. @ 12/07/24 12:19:54.018
• [4.059 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/07/24 12:19:54.028
  I1207 12:19:54.028929 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:19:54.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:54.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:54.049
  STEP: Creating secret with name secret-test-f5bdae01-70ec-4dc9-b1dc-925f84d50dfb @ 12/07/24 12:19:54.075
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:19:54.082
  STEP: Saw pod success @ 12/07/24 12:19:58.106
  I1207 12:19:58.109975 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-secrets-32ff4b09-6ddc-4d21-b8d5-26cf8952ef1d container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:19:58.117
  I1207 12:19:58.136958 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4606" for this suite. @ 12/07/24 12:19:58.141
  STEP: Destroying namespace "secret-namespace-5676" for this suite. @ 12/07/24 12:19:58.148
• [4.128 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/07/24 12:19:58.157
  I1207 12:19:58.157155 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 12:19:58.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:19:58.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:19:58.181
  I1207 12:19:58.205771 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1207 12:19:58.211488 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1207 12:19:58.215168 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:58.215193 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:58.220054 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:19:58.220074 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:19:59.215268 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:59.215304 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:19:59.218383 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1207 12:19:59.218404 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:20:00.217213 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:00.217257 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:00.220458 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:20:00.220480 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1207 12:20:00.220494 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1207 12:20:00.229329 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I1207 12:20:01.242815 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1207 12:20:01.254580 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I1207 12:20:01.254608 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1207 12:20:01.258171 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wctcq. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1207 12:20:01.258195 20 daemon_set.go:1198] Pod daemon-set-wctcq is not available
  I1207 12:20:01.263162 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:01.263185 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:02.265124 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:02.265168 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:03.258665 20 daemon_set.go:1198] Pod daemon-set-mrfg8 is not available
  I1207 12:20:03.262239 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:20:03.262270 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/07/24 12:20:03.268
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2602, will wait for the garbage collector to delete the pods @ 12/07/24 12:20:03.268
  I1207 12:20:03.330246 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.492646ms
  I1207 12:20:03.431023 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.770241ms
  I1207 12:20:05.335619 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:20:05.335658 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1207 12:20:05.339260 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7156"},"items":null}

  I1207 12:20:05.342387 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7156"},"items":null}

  I1207 12:20:05.355620 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2602" for this suite. @ 12/07/24 12:20:05.359
• [7.209 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/07/24 12:20:05.366
  I1207 12:20:05.366512 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename limitrange @ 12/07/24 12:20:05.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:20:05.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:20:05.39
  STEP: Creating LimitRange "e2e-limitrange-kdf4k" in namespace "limitrange-3584" @ 12/07/24 12:20:05.392
  STEP: Creating another limitRange in another namespace @ 12/07/24 12:20:05.399
  I1207 12:20:05.416338 20 limit_range.go:299] Namespace "e2e-limitrange-kdf4k-1556" created
  I1207 12:20:05.416381 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-kdf4k" in namespace "e2e-limitrange-kdf4k-1556"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-kdf4k" @ 12/07/24 12:20:05.421
  I1207 12:20:05.425527 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-kdf4k" in "limitrange-3584" namespace @ 12/07/24 12:20:05.425
  I1207 12:20:05.433193 20 limit_range.go:335] LimitRange "e2e-limitrange-kdf4k" has been patched
  STEP: Delete LimitRange "e2e-limitrange-kdf4k" by Collection with labelSelector: "e2e-limitrange-kdf4k=patched" @ 12/07/24 12:20:05.433
  STEP: Confirm that the limitRange "e2e-limitrange-kdf4k" has been deleted @ 12/07/24 12:20:05.441
  I1207 12:20:05.441583 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1207 12:20:05.444465 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-kdf4k=patched"
  I1207 12:20:05.444489 20 limit_range.go:344] LimitRange "e2e-limitrange-kdf4k" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-kdf4k" @ 12/07/24 12:20:05.444
  I1207 12:20:05.447681 20 limit_range.go:350] Found 1 limitRange
  I1207 12:20:05.447805 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3584" for this suite. @ 12/07/24 12:20:05.451
  STEP: Destroying namespace "e2e-limitrange-kdf4k-1556" for this suite. @ 12/07/24 12:20:05.459
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/07/24 12:20:05.468
  I1207 12:20:05.468472 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename watch @ 12/07/24 12:20:05.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:20:05.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:20:05.49
  STEP: creating a watch on configmaps with a certain label @ 12/07/24 12:20:05.493
  STEP: creating a new configmap @ 12/07/24 12:20:05.494
  STEP: modifying the configmap once @ 12/07/24 12:20:05.498
  STEP: changing the label value of the configmap @ 12/07/24 12:20:05.507
  STEP: Expecting to observe a delete notification for the watched object @ 12/07/24 12:20:05.514
  I1207 12:20:05.515017 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4601  a18c45fd-400b-4470-b190-cbbd644fb042 7180 0 2024-12-07 12:20:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-07 12:20:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:20:05.515220 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4601  a18c45fd-400b-4470-b190-cbbd644fb042 7181 0 2024-12-07 12:20:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-07 12:20:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:20:05.515329 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4601  a18c45fd-400b-4470-b190-cbbd644fb042 7182 0 2024-12-07 12:20:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-07 12:20:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/07/24 12:20:05.515
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/07/24 12:20:05.522
  STEP: changing the label value of the configmap back @ 12/07/24 12:20:15.524
  STEP: modifying the configmap a third time @ 12/07/24 12:20:15.535
  STEP: deleting the configmap @ 12/07/24 12:20:15.545
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/07/24 12:20:15.552
  I1207 12:20:15.552099 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4601  a18c45fd-400b-4470-b190-cbbd644fb042 7252 0 2024-12-07 12:20:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-07 12:20:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:20:15.552251 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4601  a18c45fd-400b-4470-b190-cbbd644fb042 7253 0 2024-12-07 12:20:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-07 12:20:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:20:15.552702 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4601  a18c45fd-400b-4470-b190-cbbd644fb042 7254 0 2024-12-07 12:20:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-07 12:20:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:20:15.552816 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4601" for this suite. @ 12/07/24 12:20:15.556
• [10.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/07/24 12:20:15.565
  I1207 12:20:15.565037 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 12:20:15.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:20:15.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:20:15.591
  I1207 12:20:15.613473 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/07/24 12:20:15.62
  I1207 12:20:15.623706 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:20:15.623726 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/07/24 12:20:15.623
  I1207 12:20:15.642257 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:20:15.642283 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:20:16.644960 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1207 12:20:16.644995 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/07/24 12:20:16.649
  I1207 12:20:16.663904 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1207 12:20:16.663927 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1207 12:20:17.667136 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:20:17.667169 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/07/24 12:20:17.667
  I1207 12:20:17.679080 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:20:17.679109 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:20:18.680655 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1207 12:20:18.680690 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/07/24 12:20:18.688
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5420, will wait for the garbage collector to delete the pods @ 12/07/24 12:20:18.688
  I1207 12:20:18.751096 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.815935ms
  I1207 12:20:18.852092 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.970792ms
  I1207 12:20:20.457241 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:20:20.457276 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1207 12:20:20.461091 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7331"},"items":null}

  I1207 12:20:20.465138 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7331"},"items":null}

  I1207 12:20:20.488464 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5420" for this suite. @ 12/07/24 12:20:20.492
• [4.935 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/07/24 12:20:20.5
  I1207 12:20:20.500215 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename ingress @ 12/07/24 12:20:20.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:20:20.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:20:20.524
  STEP: getting /apis @ 12/07/24 12:20:20.526
  STEP: getting /apis/networking.k8s.io @ 12/07/24 12:20:20.529
  STEP: getting /apis/networking.k8s.iov1 @ 12/07/24 12:20:20.53
  STEP: creating @ 12/07/24 12:20:20.531
  STEP: getting @ 12/07/24 12:20:20.549
  STEP: listing @ 12/07/24 12:20:20.552
  STEP: watching @ 12/07/24 12:20:20.559
  I1207 12:20:20.559847 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/07/24 12:20:20.56
  STEP: cluster-wide watching @ 12/07/24 12:20:20.568
  I1207 12:20:20.568755 20 ingress.go:198] starting watch
  STEP: patching @ 12/07/24 12:20:20.569
  STEP: updating @ 12/07/24 12:20:20.576
  I1207 12:20:20.585528 20 ingress.go:221] waiting for watch events with expected annotations
  I1207 12:20:20.585673 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/07/24 12:20:20.585
  STEP: updating /status @ 12/07/24 12:20:20.595
  STEP: get /status @ 12/07/24 12:20:20.603
  STEP: deleting @ 12/07/24 12:20:20.612
  STEP: deleting a collection @ 12/07/24 12:20:20.634
  I1207 12:20:20.651100 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4313" for this suite. @ 12/07/24 12:20:20.654
• [0.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/07/24 12:20:20.663
  I1207 12:20:20.663900 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 12:20:20.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:20:20.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:20:20.685
  STEP: Creating pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978 @ 12/07/24 12:20:20.687
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 12:20:22.705
  I1207 12:20:22.709829 20 container_probe.go:1749] Initial restart count of pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 is 0
  I1207 12:20:22.713622 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:24.719628 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:26.725091 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:28.730036 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:30.734881 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:32.740023 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:34.746410 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:36.751009 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:38.756388 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:40.761918 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:42.766483 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:44.771612 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:46.777995 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:48.782955 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:50.788752 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:52.794413 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:54.800167 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:56.805659 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:20:58.810733 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:00.816784 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:02.822495 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:04.827229 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:06.833151 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:08.837959 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:10.843775 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:12.848333 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:14.854241 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:16.860263 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:18.865542 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:20.870971 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:22.876750 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:24.881257 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:26.887173 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:28.893336 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:30.899311 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:32.904965 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:34.910367 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:36.916485 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:38.922294 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:40.928068 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:42.934053 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:44.940599 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:46.946688 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:48.952671 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:50.958176 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:52.963730 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:54.969038 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:56.976586 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:21:58.983201 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:00.988809 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:02.994459 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:05.000788 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:07.005964 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:09.012496 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:11.018739 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:13.024415 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:15.029968 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:17.036589 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:19.042293 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:21.048241 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:23.054321 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:25.060750 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:27.066004 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:29.071568 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:31.077453 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:33.082505 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:35.089403 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:37.095558 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:39.100980 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:41.107214 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:43.112033 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:45.117556 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:47.124589 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:49.129433 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:51.134690 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:53.139770 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:55.145602 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:57.152283 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:22:59.157126 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:01.162858 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:03.169924 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:05.174910 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:07.180936 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:09.187548 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:11.193412 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:13.199638 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:15.204618 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:17.210290 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:19.215586 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:21.221267 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:23.226399 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:25.232770 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:27.238872 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:29.245451 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:31.251230 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:33.257060 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:35.261974 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:37.267389 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:39.273019 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:41.278824 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:43.284037 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:45.290605 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:47.296232 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:49.302004 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:51.308040 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:53.313885 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:55.319189 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:57.324632 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:23:59.330070 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:01.335112 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:03.340425 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:05.345308 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:07.350953 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:09.356866 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:11.361407 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:13.367056 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:15.373299 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:17.378958 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:19.384472 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  I1207 12:24:21.390329 20 container_probe.go:1759] Get pod liveness-4f2d7087-f374-4c45-8fdd-64fc828fae05 in namespace container-probe-7978
  STEP: deleting the pod @ 12/07/24 12:24:23.391
  I1207 12:24:23.408514 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7978" for this suite. @ 12/07/24 12:24:23.411
• [242.757 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 12/07/24 12:24:23.421
  I1207 12:24:23.421528 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption @ 12/07/24 12:24:23.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:24:23.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:24:23.446
  I1207 12:24:23.462675 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1207 12:25:23.468693 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/07/24 12:25:23.476
  I1207 12:25:23.476539 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/07/24 12:25:23.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:25:23.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:25:23.501
  STEP: Finding an available node @ 12/07/24 12:25:23.503
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/07/24 12:25:23.503
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/07/24 12:25:25.525
  I1207 12:25:25.541979 20 preemption.go:585] found a healthy node: ip-172-31-9-19
  I1207 12:25:31.610430 20 preemption.go:708] pods created so far: [1 1 1]
  I1207 12:25:31.610457 20 preemption.go:709] length of pods created so far: 3
  I1207 12:25:33.623936 20 preemption.go:726] pods created so far: [2 2 1]
  I1207 12:25:40.712361 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6600" for this suite. @ 12/07/24 12:25:40.715
  I1207 12:25:40.722870 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8139" for this suite. @ 12/07/24 12:25:40.729
• [77.315 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/07/24 12:25:40.736
  I1207 12:25:40.736998 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename runtimeclass @ 12/07/24 12:25:40.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:25:40.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:25:40.76
  STEP: Deleting RuntimeClass runtimeclass-6553-delete-me @ 12/07/24 12:25:40.767
  STEP: Waiting for the RuntimeClass to disappear @ 12/07/24 12:25:40.775
  I1207 12:25:40.785170 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6553" for this suite. @ 12/07/24 12:25:40.789
• [0.062 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/07/24 12:25:40.799
  I1207 12:25:40.799265 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:25:40.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:25:40.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:25:40.825
  STEP: Creating configMap with name projected-configmap-test-volume-map-45d5b815-191d-4d8c-8401-1fa6f63b7db1 @ 12/07/24 12:25:40.828
  STEP: Creating a pod to test consume configMaps @ 12/07/24 12:25:40.834
  STEP: Saw pod success @ 12/07/24 12:25:42.854
  I1207 12:25:42.858147 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-projected-configmaps-e5d69f7e-6e6d-4003-ae24-c455c41005a2 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:25:42.875
  I1207 12:25:42.895559 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9231" for this suite. @ 12/07/24 12:25:42.899
• [2.108 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/07/24 12:25:42.906
  I1207 12:25:42.906922 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:25:42.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:25:42.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:25:42.931
  STEP: Creating a pod to test downward api env vars @ 12/07/24 12:25:42.933
  STEP: Saw pod success @ 12/07/24 12:25:44.954
  I1207 12:25:44.958395 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod downward-api-5037d85d-7369-4a01-830c-598614e13c7c container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 12:25:44.967
  I1207 12:25:44.986866 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1498" for this suite. @ 12/07/24 12:25:44.99
• [2.092 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 12/07/24 12:25:44.999
  I1207 12:25:44.999384 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:25:45
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:25:45.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:25:45.028
  STEP: creating service multi-endpoint-test in namespace services-7761 @ 12/07/24 12:25:45.032
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7761 to expose endpoints map[] @ 12/07/24 12:25:45.047
  I1207 12:25:45.054401 20 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I1207 12:25:46.068423 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7761 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7761 @ 12/07/24 12:25:46.068
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7761 to expose endpoints map[pod1:[100]] @ 12/07/24 12:25:48.088
  I1207 12:25:48.097853 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7761 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7761 @ 12/07/24 12:25:48.097
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7761 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/07/24 12:25:50.118
  I1207 12:25:50.133647 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7761 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/07/24 12:25:50.133
  I1207 12:25:50.133703 20 resource.go:361] Creating new exec pod
  I1207 12:25:53.148453 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7761 exec execpod5pwr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1207 12:25:53.239147 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1207 12:25:53.239187 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 12:25:53.239264 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7761 exec execpod5pwr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.138 80'
  I1207 12:25:53.321389 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.138 80\nConnection to 10.152.183.138 80 port [tcp/http] succeeded!\n"
  I1207 12:25:53.321443 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 12:25:53.321600 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7761 exec execpod5pwr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1207 12:25:53.405977 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1207 12:25:53.406024 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 12:25:53.406105 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7761 exec execpod5pwr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.138 81'
  I1207 12:25:53.480299 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.138 81\nConnection to 10.152.183.138 81 port [tcp/*] succeeded!\n"
  I1207 12:25:53.480341 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7761 @ 12/07/24 12:25:53.48
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7761 to expose endpoints map[pod2:[101]] @ 12/07/24 12:25:53.5
  I1207 12:25:54.523261 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7761 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7761 @ 12/07/24 12:25:54.523
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7761 to expose endpoints map[] @ 12/07/24 12:25:54.543
  I1207 12:25:55.563141 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7761 exposes endpoints map[]
  I1207 12:25:55.581864 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7761" for this suite. @ 12/07/24 12:25:55.584
• [10.595 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/07/24 12:25:55.594
  I1207 12:25:55.594545 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 12:25:55.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:25:55.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:25:55.617
  I1207 12:25:55.639818 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/07/24 12:25:55.645
  I1207 12:25:55.649386 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:55.649414 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:55.652824 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:25:55.652840 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:25:56.649926 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:56.649969 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:56.654271 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1207 12:25:56.654290 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:25:57.650342 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:57.650405 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:57.654516 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:25:57.654535 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/07/24 12:25:57.669
  STEP: Check that daemon pods images are updated. @ 12/07/24 12:25:57.68
  I1207 12:25:57.684802 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:57.684824 20 daemon_set.go:1193] Wrong image for pod: daemon-set-nnsgq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:57.684830 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wbkq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:57.687745 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:57.687773 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:58.685327 20 daemon_set.go:1198] Pod daemon-set-9t4c7 is not available
  I1207 12:25:58.685376 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:58.685384 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wbkq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:58.688871 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:58.688897 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:59.686060 20 daemon_set.go:1198] Pod daemon-set-9t4c7 is not available
  I1207 12:25:59.686087 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:59.686103 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wbkq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:25:59.690553 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:25:59.690579 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:00.685404 20 daemon_set.go:1198] Pod daemon-set-9t4c7 is not available
  I1207 12:26:00.685441 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:00.685450 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wbkq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:00.688830 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:00.688863 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:01.686006 20 daemon_set.go:1198] Pod daemon-set-9t4c7 is not available
  I1207 12:26:01.686041 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:01.686050 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wbkq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:01.690484 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:01.690515 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:02.686565 20 daemon_set.go:1198] Pod daemon-set-9t4c7 is not available
  I1207 12:26:02.686590 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:02.686597 20 daemon_set.go:1193] Wrong image for pod: daemon-set-wbkq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:02.691300 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:02.691331 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:03.684747 20 daemon_set.go:1198] Pod daemon-set-9nlbm is not available
  I1207 12:26:03.684775 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdwr8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1207 12:26:03.687838 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:03.687864 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:04.690269 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:04.690311 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:05.686557 20 daemon_set.go:1198] Pod daemon-set-xqmhj is not available
  I1207 12:26:05.690744 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:05.690770 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/07/24 12:26:05.69
  I1207 12:26:05.694246 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:05.694274 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:05.698510 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1207 12:26:05.698525 20 fixtures.go:130] Node ip-172-31-64-144 is running 0 daemon pod, expected 1
  I1207 12:26:06.696216 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:06.696250 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:26:06.699721 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:26:06.699744 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/07/24 12:26:06.719
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4265, will wait for the garbage collector to delete the pods @ 12/07/24 12:26:06.719
  I1207 12:26:06.781853 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.32843ms
  I1207 12:26:06.882746 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.88474ms
  I1207 12:26:11.987663 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:26:11.987696 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1207 12:26:11.991022 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8657"},"items":null}

  I1207 12:26:11.994888 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8657"},"items":null}

  I1207 12:26:12.010116 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4265" for this suite. @ 12/07/24 12:26:12.013
• [16.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/07/24 12:26:12.021
  I1207 12:26:12.021048 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 12:26:12.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:12.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:12.044
  I1207 12:26:12.047555 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/07/24 12:26:13.513
  I1207 12:26:13.513528 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-9628 --namespace=crd-publish-openapi-9628 create -f -'
  I1207 12:26:15.583776 20 builder.go:146] stderr: ""
  I1207 12:26:15.583827 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7924-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1207 12:26:15.583911 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-9628 --namespace=crd-publish-openapi-9628 delete e2e-test-crd-publish-openapi-7924-crds test-cr'
  I1207 12:26:15.635917 20 builder.go:146] stderr: ""
  I1207 12:26:15.635954 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7924-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1207 12:26:15.635992 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-9628 --namespace=crd-publish-openapi-9628 apply -f -'
  I1207 12:26:15.692475 20 builder.go:146] stderr: ""
  I1207 12:26:15.692511 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7924-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1207 12:26:15.692550 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-9628 --namespace=crd-publish-openapi-9628 delete e2e-test-crd-publish-openapi-7924-crds test-cr'
  I1207 12:26:15.742186 20 builder.go:146] stderr: ""
  I1207 12:26:15.742227 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7924-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/07/24 12:26:15.742
  I1207 12:26:15.742296 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-9628 explain e2e-test-crd-publish-openapi-7924-crds'
  I1207 12:26:15.782781 20 builder.go:146] stderr: ""
  I1207 12:26:15.782835 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7924-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1207 12:26:16.992041 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9628" for this suite. @ 12/07/24 12:26:16.998
• [4.986 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/07/24 12:26:17.006
  I1207 12:26:17.006888 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename namespaces @ 12/07/24 12:26:17.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:17.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:17.031
  STEP: creating a Namespace @ 12/07/24 12:26:17.033
  STEP: patching the Namespace @ 12/07/24 12:26:17.056
  STEP: get the Namespace and ensuring it has the label @ 12/07/24 12:26:17.062
  I1207 12:26:17.066494 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5724" for this suite. @ 12/07/24 12:26:17.073
  STEP: Destroying namespace "nspatchtest-0ffe1a95-4497-45bf-8df5-b6fdbc8cfe5f-6841" for this suite. @ 12/07/24 12:26:17.08
• [0.082 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 12/07/24 12:26:17.088
  I1207 12:26:17.088627 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:26:17.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:17.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:17.109
  STEP: Setting up server cert @ 12/07/24 12:26:17.14
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:26:17.325
  STEP: Deploying the webhook pod @ 12/07/24 12:26:17.337
  STEP: Wait for the deployment to be ready @ 12/07/24 12:26:17.351
  I1207 12:26:17.360806 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/07/24 12:26:19.374
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:26:19.387
  I1207 12:26:20.387696 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/07/24 12:26:20.397
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/07/24 12:26:20.411
  I1207 12:26:20.411721 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:26:20.468144 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-802" for this suite. @ 12/07/24 12:26:20.472
  STEP: Destroying namespace "webhook-markers-8435" for this suite. @ 12/07/24 12:26:20.481
• [3.399 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/07/24 12:26:20.487
  I1207 12:26:20.487431 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 12:26:20.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:20.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:20.506
  I1207 12:26:20.511689 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-5284"
  I1207 12:26:20.519478 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-5284"
  STEP: waiting for a new root ca configmap created @ 12/07/24 12:26:21.02
  I1207 12:26:21.025271 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-5284"
  I1207 12:26:21.031059 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-5284"
  STEP: waiting for the root ca configmap reconciled @ 12/07/24 12:26:21.531
  I1207 12:26:21.536599 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-5284"
  I1207 12:26:21.536708 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5284" for this suite. @ 12/07/24 12:26:21.541
• [1.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 12/07/24 12:26:21.551
  I1207 12:26:21.551336 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:26:21.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:21.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:21.574
  STEP: creating Agnhost RC @ 12/07/24 12:26:21.577
  I1207 12:26:21.577128 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-4017 create -f -'
  I1207 12:26:21.657907 20 builder.go:146] stderr: ""
  I1207 12:26:21.657942 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/07/24 12:26:21.657
  I1207 12:26:22.663431 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 12:26:22.663460 20 framework.go:733] Found 1 / 1
  I1207 12:26:22.663473 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/07/24 12:26:22.663
  I1207 12:26:22.667724 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 12:26:22.667745 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1207 12:26:22.667793 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-4017 patch pod agnhost-primary-w9j9p -p {"metadata":{"annotations":{"x":"y"}}}'
  I1207 12:26:22.725484 20 builder.go:146] stderr: ""
  I1207 12:26:22.725515 20 builder.go:147] stdout: "pod/agnhost-primary-w9j9p patched\n"
  STEP: checking annotations @ 12/07/24 12:26:22.725
  I1207 12:26:22.729140 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 12:26:22.729156 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1207 12:26:22.729289 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4017" for this suite. @ 12/07/24 12:26:22.734
• [1.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/07/24 12:26:22.743
  I1207 12:26:22.743407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:26:22.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:22.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:22.763
  STEP: Creating projection with secret that has name projected-secret-test-map-69988594-23dd-4e5d-ae37-c5e07022b369 @ 12/07/24 12:26:22.765
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:26:22.77
  STEP: Saw pod success @ 12/07/24 12:26:26.794
  I1207 12:26:26.798754 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-secrets-fcd4f522-abeb-4107-820f-ed5e5ccdb49e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:26:26.817
  I1207 12:26:26.838183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5972" for this suite. @ 12/07/24 12:26:26.842
• [4.106 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/07/24 12:26:26.849
  I1207 12:26:26.849438 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 12:26:26.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:26.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:26.873
  I1207 12:26:26.894283 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1207 12:26:26.894305 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1207 12:26:26.902115 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I1207 12:26:26.902134 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1207 12:26:26.909842 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1207 12:26:26.909859 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1207 12:26:26.916651 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1207 12:26:26.916668 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1207 12:26:26.925606 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1207 12:26:26.925628 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1207 12:26:26.930112 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1207 12:26:26.930127 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1207 12:26:26.938329 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1207 12:26:26.938367 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1207 12:26:26.943471 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1207 12:26:26.943487 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1207 12:26:26.951817 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1207 12:26:26.951834 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1207 12:26:26.951927 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6952" for this suite. @ 12/07/24 12:26:26.967
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/07/24 12:26:26.975
  I1207 12:26:26.975295 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/07/24 12:26:26.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:27.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:27.01
  STEP: create the container to handle the HTTPGet hook request. @ 12/07/24 12:26:27.017
  STEP: create the pod with lifecycle hook @ 12/07/24 12:26:29.038
  STEP: check poststart hook @ 12/07/24 12:26:31.065
  STEP: delete the pod with lifecycle hook @ 12/07/24 12:26:31.074
  I1207 12:26:33.092072 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7437" for this suite. @ 12/07/24 12:26:33.095
• [6.127 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/07/24 12:26:33.102
  I1207 12:26:33.102079 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 12:26:33.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:26:33.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:26:33.129
  STEP: Creating pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534 @ 12/07/24 12:26:33.131
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 12:26:35.149
  I1207 12:26:35.153295 20 container_probe.go:1749] Initial restart count of pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 is 0
  I1207 12:26:35.157832 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:37.163552 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:39.169378 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:41.173887 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:43.180195 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:45.186198 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:47.191636 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:49.197763 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:51.203613 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:53.209515 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:55.215070 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:57.220700 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:26:59.226213 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:01.231610 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:03.236900 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:05.242707 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:07.247711 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:09.253673 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:11.258262 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:13.263907 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:15.270033 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:17.275765 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:19.281815 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:21.288122 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:23.293305 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:25.298526 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:27.305577 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:29.310244 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:31.317250 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:33.321644 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:35.327376 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:37.333926 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:39.339216 20 container_probe.go:1759] Get pod test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 in namespace container-probe-8534
  I1207 12:27:39.339248 20 container_probe.go:1763] Restart count of pod container-probe-8534/test-grpc-23698c0c-6d78-46b7-9040-a0820c07e530 is now 1 (1m4.185929284s elapsed)
  STEP: deleting the pod @ 12/07/24 12:27:39.339
  I1207 12:27:39.358006 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8534" for this suite. @ 12/07/24 12:27:39.362
• [66.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 12/07/24 12:27:39.37
  I1207 12:27:39.370084 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:27:39.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:27:39.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:27:39.397
  STEP: creating a Service @ 12/07/24 12:27:39.402
  STEP: watching for the Service to be added @ 12/07/24 12:27:39.42
  I1207 12:27:39.421904 20 service.go:3445] Found Service test-service-lz2fx in namespace services-3680 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31968}]
  I1207 12:27:39.421935 20 service.go:3452] Service test-service-lz2fx created
  STEP: Getting /status @ 12/07/24 12:27:39.421
  I1207 12:27:39.426837 20 service.go:3463] Service test-service-lz2fx has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/07/24 12:27:39.426
  STEP: watching for the Service to be patched @ 12/07/24 12:27:39.433
  I1207 12:27:39.435406 20 service.go:3486] observed Service test-service-lz2fx in namespace services-3680 with annotations: map[] & LoadBalancer: {[]}
  I1207 12:27:39.435431 20 service.go:3489] Found Service test-service-lz2fx in namespace services-3680 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003858880 []}]}
  I1207 12:27:39.435440 20 service.go:3496] Service test-service-lz2fx has service status patched
  STEP: updating the ServiceStatus @ 12/07/24 12:27:39.435
  I1207 12:27:39.444321 20 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/07/24 12:27:39.444
  I1207 12:27:39.445875 20 service.go:3527] Observed Service test-service-lz2fx in namespace services-3680 with annotations: map[] & Conditions: []
  I1207 12:27:39.445971 20 service.go:3538] Observed Service test-service-lz2fx in namespace services-3680 with annotations: map[patchedstatus:true] & Conditions: []
  I1207 12:27:39.445993 20 service.go:3534] Found Service test-service-lz2fx in namespace services-3680 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1207 12:27:39.446001 20 service.go:3545] Service test-service-lz2fx has service status updated
  STEP: patching the service @ 12/07/24 12:27:39.446
  STEP: watching for the Service to be patched @ 12/07/24 12:27:39.454
  I1207 12:27:39.455946 20 service.go:3568] observed Service test-service-lz2fx in namespace services-3680 with labels: map[test-service-static:true]
  I1207 12:27:39.456042 20 service.go:3568] observed Service test-service-lz2fx in namespace services-3680 with labels: map[test-service-static:true]
  I1207 12:27:39.456051 20 service.go:3568] observed Service test-service-lz2fx in namespace services-3680 with labels: map[test-service-static:true]
  I1207 12:27:39.456066 20 service.go:3571] Found Service test-service-lz2fx in namespace services-3680 with labels: map[test-service:patched test-service-static:true]
  I1207 12:27:39.456073 20 service.go:3578] Service test-service-lz2fx patched
  STEP: deleting the service @ 12/07/24 12:27:39.456
  STEP: watching for the Service to be deleted @ 12/07/24 12:27:39.48
  I1207 12:27:39.482080 20 service.go:3602] Observed event: ADDED
  I1207 12:27:39.482174 20 service.go:3602] Observed event: MODIFIED
  I1207 12:27:39.482239 20 service.go:3602] Observed event: MODIFIED
  I1207 12:27:39.482249 20 service.go:3602] Observed event: MODIFIED
  I1207 12:27:39.482275 20 service.go:3598] Found Service test-service-lz2fx in namespace services-3680 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1207 12:27:39.482284 20 service.go:3607] Service test-service-lz2fx deleted
  I1207 12:27:39.482463 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3680" for this suite. @ 12/07/24 12:27:39.486
• [0.124 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/07/24 12:27:39.493
  I1207 12:27:39.494005 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 12:27:39.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:27:39.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:27:39.517
  I1207 12:28:01.597628 20 container_probe.go:92] Container started at 2024-12-07 12:27:40 +0000 UTC, pod became ready at 2024-12-07 12:27:59 +0000 UTC
  I1207 12:28:01.597748 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7487" for this suite. @ 12/07/24 12:28:01.601
• [22.115 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/07/24 12:28:01.609
  I1207 12:28:01.609428 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename proxy @ 12/07/24 12:28:01.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:28:01.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:28:01.634
  I1207 12:28:01.636513 20 proxy.go:293] Creating pod...
  I1207 12:28:03.656784 20 proxy.go:317] Creating service...
  I1207 12:28:03.667399 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/DELETE
  I1207 12:28:03.672887 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1207 12:28:03.672930 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/GET
  I1207 12:28:03.678832 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1207 12:28:03.678861 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/HEAD
  I1207 12:28:03.683313 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1207 12:28:03.683334 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/OPTIONS
  I1207 12:28:03.687285 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1207 12:28:03.687310 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/PATCH
  I1207 12:28:03.691236 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1207 12:28:03.691257 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/POST
  I1207 12:28:03.695362 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1207 12:28:03.695399 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/pods/agnhost/proxy/some/path/with/PUT
  I1207 12:28:03.699724 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1207 12:28:03.699750 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/DELETE
  I1207 12:28:03.706238 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1207 12:28:03.706259 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/GET
  I1207 12:28:03.711884 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1207 12:28:03.711907 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/HEAD
  I1207 12:28:03.717568 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1207 12:28:03.717590 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/OPTIONS
  I1207 12:28:03.723939 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1207 12:28:03.723961 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/PATCH
  I1207 12:28:03.729430 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1207 12:28:03.729458 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/POST
  I1207 12:28:03.735483 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1207 12:28:03.735514 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6892/services/test-service/proxy/some/path/with/PUT
  I1207 12:28:03.742074 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1207 12:28:03.742218 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6892" for this suite. @ 12/07/24 12:28:03.746
• [2.145 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 12/07/24 12:28:03.754
  I1207 12:28:03.754594 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/07/24 12:28:03.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:28:03.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:28:03.782
  I1207 12:28:03.784787 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1207 12:29:03.785573 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1207 12:29:03.790470 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 12/07/24 12:29:03.79
  I1207 12:29:04.011598 20 taints.go:463] Pod1 is running on ip-172-31-9-19. Tainting Node
  I1207 12:29:06.234369 20 taints.go:471] Pod2 is running on ip-172-31-9-19. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/07/24 12:29:06.234
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/07/24 12:29:06.244
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/07/24 12:29:06.249
  I1207 12:29:11.944300 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I1207 12:29:31.975501 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/07/24 12:29:31.986
  I1207 12:29:31.989160 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1442" for this suite. @ 12/07/24 12:29:31.992
• [88.246 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/07/24 12:29:32
  I1207 12:29:32.000517 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-runtime @ 12/07/24 12:29:32.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:29:32.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:29:32.029
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/07/24 12:29:32.043
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/07/24 12:29:46.127
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/07/24 12:29:46.13
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/07/24 12:29:46.138
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/07/24 12:29:46.138
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/07/24 12:29:46.167
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/07/24 12:29:48.182
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/07/24 12:29:49.19
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/07/24 12:29:49.198
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/07/24 12:29:49.198
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/07/24 12:29:49.224
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/07/24 12:29:50.233
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/07/24 12:29:51.241
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/07/24 12:29:51.25
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/07/24 12:29:51.25
  I1207 12:29:51.281178 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1226" for this suite. @ 12/07/24 12:29:51.284
• [19.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/07/24 12:29:51.294
  I1207 12:29:51.294951 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/07/24 12:29:51.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:29:51.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:29:51.316
  STEP: create the container to handle the HTTPGet hook request. @ 12/07/24 12:29:51.323
  STEP: create the pod with lifecycle hook @ 12/07/24 12:29:53.347
  STEP: delete the pod with lifecycle hook @ 12/07/24 12:29:55.366
  STEP: check prestop hook @ 12/07/24 12:29:57.386
  I1207 12:29:57.397671 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2023" for this suite. @ 12/07/24 12:29:57.401
• [6.115 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/07/24 12:29:57.41
  I1207 12:29:57.410310 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 12:29:57.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:29:57.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:29:57.432
  I1207 12:29:57.434426 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1207 12:29:57.444497 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1207 12:30:02.453869 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/07/24 12:30:02.453
  I1207 12:30:02.453943 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1207 12:30:02.461029 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1207 12:30:02.467938 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1207 12:30:04.476405 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1207 12:30:04.479901 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1207 12:30:04.491465 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1427",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5714e593-6828-45ac-8e4a-4dc89e972964",
      ResourceVersion: (string) (len=5) "10007",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869171402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 12:30:04.496743 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1427",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1349c918-9d00-4d69-b4f0-8de6c58aa51e",
      ResourceVersion: (string) (len=4) "9997",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869171402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5714e593-6828-45ac-8e4a-4dc89e972964",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 37 31 34 65 35  39 33 2d 36 38 32 38 2d  |\"5714e593-6828-|
              00000120  34 35 61 63 2d 38 65 34  61 2d 34 64 63 38 39 65  |45ac-8e4a-4dc89e|
              00000130  39 37 32 39 36 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |972964\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:30:04.497256 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1207 12:30:04.497568 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1427",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a111aea4-8c0d-44e9-b578-4b1cd169e6b0",
      ResourceVersion: (string) (len=5) "10006",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869171397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5714e593-6828-45ac-8e4a-4dc89e972964",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 37 31 34 65 35 39  |"uid\":\"5714e59|
              000000b0  33 2d 36 38 32 38 2d 34  35 61 63 2d 38 65 34 61  |3-6828-45ac-8e4a|
              000000c0  2d 34 64 63 38 39 65 39  37 32 39 36 34 5c 22 7d  |-4dc89e972964\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:30:04.502892 20 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-zkcgz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-zkcgz",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-1427",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1fadcfe-1118-43a2-a801-5cc4394f403c",
      ResourceVersion: (string) (len=4) "9996",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869171402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "1349c918-9d00-4d69-b4f0-8de6c58aa51e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  34 39 63 39 31 38 2d 39  |d\":\"1349c918-9|
              00000090  64 30 30 2d 34 64 36 39  2d 62 34 66 30 2d 38 64  |d00-4d69-b4f0-8d|
              000000a0  65 36 63 35 38 61 61 35  31 65 5c 22 7d 22 3a 7b  |e6c58aa51e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  2e 33 30 5c 22 7d 22 3a  |2.168.16.30\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xxjj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xxjj5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869171402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869171402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869171403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://a1abb53e2c1c6c3f156c160d3f293f181368ad98fbd04044073c010e570b2dc9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xxjj5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:30:04.504028 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1427" for this suite. @ 12/07/24 12:30:04.508
• [7.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/07/24 12:30:04.516
  I1207 12:30:04.516508 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename containers @ 12/07/24 12:30:04.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:30:04.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:30:04.538
  STEP: Creating a pod to test override command @ 12/07/24 12:30:04.541
  STEP: Saw pod success @ 12/07/24 12:30:08.565
  I1207 12:30:08.569034 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod client-containers-1b3bf917-ff60-44e3-a14a-d4789619b61e container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:30:08.574
  I1207 12:30:08.595907 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3936" for this suite. @ 12/07/24 12:30:08.6
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/07/24 12:30:08.61
  I1207 12:30:08.610392 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:30:08.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:30:08.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:30:08.636
  STEP: Creating secret with name secret-test-map-cb2ecec8-8cf8-45a5-b109-841178dc18ce @ 12/07/24 12:30:08.638
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:30:08.643
  STEP: Saw pod success @ 12/07/24 12:30:12.665
  I1207 12:30:12.670498 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-secrets-d3383dfa-ff47-4573-b934-6a7551ee9a21 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:30:12.678
  I1207 12:30:12.699819 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2796" for this suite. @ 12/07/24 12:30:12.703
• [4.102 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/07/24 12:30:12.713
  I1207 12:30:12.713197 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 12:30:12.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:30:12.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:30:12.737
  I1207 12:30:12.739833 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/07/24 12:30:13.954
  I1207 12:30:13.954895 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 create -f -'
  I1207 12:30:14.019493 20 builder.go:146] stderr: ""
  I1207 12:30:14.019526 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1207 12:30:14.019563 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 delete e2e-test-crd-publish-openapi-6-crds test-foo'
  I1207 12:30:14.070321 20 builder.go:146] stderr: ""
  I1207 12:30:14.070378 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1207 12:30:14.070430 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 apply -f -'
  I1207 12:30:14.126553 20 builder.go:146] stderr: ""
  I1207 12:30:14.126591 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1207 12:30:14.126631 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 delete e2e-test-crd-publish-openapi-6-crds test-foo'
  I1207 12:30:14.179841 20 builder.go:146] stderr: ""
  I1207 12:30:14.179885 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/07/24 12:30:14.179
  I1207 12:30:14.179955 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 create -f -'
  I1207 12:30:14.222935 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/07/24 12:30:14.223
  I1207 12:30:14.223055 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 create -f -'
  I1207 12:30:14.264536 20 builder.go:135] rc: 1
  I1207 12:30:14.264630 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 apply -f -'
  I1207 12:30:14.313187 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/07/24 12:30:14.313
  I1207 12:30:14.313301 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 create -f -'
  I1207 12:30:14.356337 20 builder.go:135] rc: 1
  I1207 12:30:14.356435 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 --namespace=crd-publish-openapi-2860 apply -f -'
  I1207 12:30:14.406831 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/07/24 12:30:14.406
  I1207 12:30:14.406952 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 explain e2e-test-crd-publish-openapi-6-crds'
  I1207 12:30:14.447801 20 builder.go:146] stderr: ""
  I1207 12:30:14.447858 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/07/24 12:30:14.448
  I1207 12:30:14.448127 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 explain e2e-test-crd-publish-openapi-6-crds.metadata'
  I1207 12:30:14.489410 20 builder.go:146] stderr: ""
  I1207 12:30:14.489517 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1207 12:30:14.489775 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 explain e2e-test-crd-publish-openapi-6-crds.spec'
  I1207 12:30:14.529964 20 builder.go:146] stderr: ""
  I1207 12:30:14.530000 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1207 12:30:14.530152 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 explain e2e-test-crd-publish-openapi-6-crds.spec.bars'
  I1207 12:30:14.570424 20 builder.go:146] stderr: ""
  I1207 12:30:14.570461 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/07/24 12:30:14.57
  I1207 12:30:14.570678 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-2860 explain e2e-test-crd-publish-openapi-6-crds.spec.bars2'
  I1207 12:30:14.609901 20 builder.go:135] rc: 1
  I1207 12:30:15.872251 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2860" for this suite. @ 12/07/24 12:30:15.879
• [3.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/07/24 12:30:15.888
  I1207 12:30:15.888953 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/07/24 12:30:15.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:30:15.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:30:15.913
  STEP: mirroring a new custom Endpoint @ 12/07/24 12:30:15.93
  I1207 12:30:15.943789 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/07/24 12:30:17.948
  I1207 12:30:17.961255 20 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/07/24 12:30:19.967
  I1207 12:30:19.979473 20 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1207 12:30:21.985775 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6541" for this suite. @ 12/07/24 12:30:21.99
• [6.111 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/07/24 12:30:22
  I1207 12:30:22.000260 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:30:22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:30:22.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:30:22.024
  STEP: Creating secret with name s-test-opt-del-9bf1f830-4a09-4dc0-bab7-883284b00795 @ 12/07/24 12:30:22.031
  STEP: Creating secret with name s-test-opt-upd-e758c733-3a95-43b8-a73f-e5fe50e01161 @ 12/07/24 12:30:22.037
  STEP: Creating the pod @ 12/07/24 12:30:22.042
  STEP: Deleting secret s-test-opt-del-9bf1f830-4a09-4dc0-bab7-883284b00795 @ 12/07/24 12:30:24.098
  STEP: Updating secret s-test-opt-upd-e758c733-3a95-43b8-a73f-e5fe50e01161 @ 12/07/24 12:30:24.106
  STEP: Creating secret with name s-test-opt-create-b9b0d468-5f95-484a-9676-e4eafec0425a @ 12/07/24 12:30:24.112
  STEP: waiting to observe update in volume @ 12/07/24 12:30:24.117
  I1207 12:31:56.612619 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4422" for this suite. @ 12/07/24 12:31:56.617
• [94.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/07/24 12:31:56.625
  I1207 12:31:56.625581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:31:56.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:31:56.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:31:56.648
  STEP: Creating the pod @ 12/07/24 12:31:56.653
  I1207 12:31:59.214915 20 pod_client.go:173] Successfully updated pod "annotationupdate0b979253-6114-4e5e-b3c7-15eaf0bbff8e"
  I1207 12:32:01.233387 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6066" for this suite. @ 12/07/24 12:32:01.238
• [4.621 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/07/24 12:32:01.247
  I1207 12:32:01.247526 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename cronjob @ 12/07/24 12:32:01.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:32:01.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:32:01.271
  STEP: Creating a ReplaceConcurrent cronjob @ 12/07/24 12:32:01.274
  STEP: Ensuring a job is scheduled @ 12/07/24 12:32:01.282
  STEP: Ensuring exactly one is scheduled @ 12/07/24 12:33:01.288
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/07/24 12:33:01.292
  STEP: Ensuring the job is replaced with a new one @ 12/07/24 12:33:01.296
  STEP: Removing cronjob @ 12/07/24 12:34:01.302
  I1207 12:34:01.311335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6423" for this suite. @ 12/07/24 12:34:01.317
• [120.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/07/24 12:34:01.327
  I1207 12:34:01.327262 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:34:01.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:34:01.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:34:01.359
  STEP: creating a secret @ 12/07/24 12:34:01.362
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/07/24 12:34:01.368
  STEP: patching the secret @ 12/07/24 12:34:01.372
  STEP: deleting the secret using a LabelSelector @ 12/07/24 12:34:01.382
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/07/24 12:34:01.391
  I1207 12:34:01.396206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6472" for this suite. @ 12/07/24 12:34:01.4
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 12/07/24 12:34:01.411
  I1207 12:34:01.411637 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:34:01.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:34:01.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:34:01.43
  STEP: creating an Endpoint @ 12/07/24 12:34:01.438
  STEP: waiting for available Endpoint @ 12/07/24 12:34:01.443
  STEP: listing all Endpoints @ 12/07/24 12:34:01.444
  STEP: updating the Endpoint @ 12/07/24 12:34:01.448
  STEP: fetching the Endpoint @ 12/07/24 12:34:01.455
  STEP: patching the Endpoint @ 12/07/24 12:34:01.458
  STEP: fetching the Endpoint @ 12/07/24 12:34:01.467
  STEP: deleting the Endpoint by Collection @ 12/07/24 12:34:01.471
  STEP: waiting for Endpoint deletion @ 12/07/24 12:34:01.481
  STEP: fetching the Endpoint @ 12/07/24 12:34:01.482
  I1207 12:34:01.486652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4870" for this suite. @ 12/07/24 12:34:01.491
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/07/24 12:34:01.5
  I1207 12:34:01.500136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename cronjob @ 12/07/24 12:34:01.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:34:01.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:34:01.522
  STEP: Creating a suspended cronjob @ 12/07/24 12:34:01.525
  STEP: Ensuring no jobs are scheduled @ 12/07/24 12:34:01.532
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/07/24 12:39:01.533
  STEP: Removing cronjob @ 12/07/24 12:39:01.538
  I1207 12:39:01.548487 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-399" for this suite. @ 12/07/24 12:39:01.552
• [300.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/07/24 12:39:01.562
  I1207 12:39:01.562093 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 12:39:01.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:39:01.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:39:01.587
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/07/24 12:39:01.611
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/07/24 12:39:01.619
  I1207 12:39:01.626849 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:01.626882 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:01.630568 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:39:01.630592 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:39:02.625175 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:02.625207 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:02.629436 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:39:02.629459 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:39:03.624542 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:03.624595 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:03.628952 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:39:03.628975 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/07/24 12:39:03.633
  I1207 12:39:03.651791 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:03.651822 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:39:03.656091 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:39:03.656107 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/07/24 12:39:03.656
  STEP: Deleting DaemonSet "daemon-set" @ 12/07/24 12:39:04.667
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8124, will wait for the garbage collector to delete the pods @ 12/07/24 12:39:04.667
  I1207 12:39:04.731480 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.940519ms
  I1207 12:39:04.831655 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.169745ms
  I1207 12:39:06.037567 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:39:06.037600 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1207 12:39:06.042542 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11494"},"items":null}

  I1207 12:39:06.046203 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11494"},"items":null}

  I1207 12:39:06.062535 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8124" for this suite. @ 12/07/24 12:39:06.066
• [4.514 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 12/07/24 12:39:06.076
  I1207 12:39:06.076615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:39:06.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:39:06.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:39:06.099
  STEP: Setting up server cert @ 12/07/24 12:39:06.127
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:39:06.268
  STEP: Deploying the webhook pod @ 12/07/24 12:39:06.282
  STEP: Wait for the deployment to be ready @ 12/07/24 12:39:06.298
  I1207 12:39:06.306869 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/07/24 12:39:08.32
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:39:08.333
  I1207 12:39:09.334459 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/07/24 12:39:09.343
  STEP: create a configmap that should be updated by the webhook @ 12/07/24 12:39:09.358
  I1207 12:39:09.419064 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4646" for this suite. @ 12/07/24 12:39:09.425
  STEP: Destroying namespace "webhook-markers-5605" for this suite. @ 12/07/24 12:39:09.435
• [3.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/07/24 12:39:09.443
  I1207 12:39:09.443680 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:39:09.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:39:09.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:39:09.464
  STEP: Creating a pod to test downward api env vars @ 12/07/24 12:39:09.467
  STEP: Saw pod success @ 12/07/24 12:39:13.494
  I1207 12:39:13.498430 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downward-api-f93c3dea-47f7-4ee9-b11c-3b5f32427f7f container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 12:39:13.517
  I1207 12:39:13.540426 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6723" for this suite. @ 12/07/24 12:39:13.544
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/07/24 12:39:13.552
  I1207 12:39:13.552305 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 12:39:13.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:39:13.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:39:13.576
  STEP: Creating service test in namespace statefulset-1309 @ 12/07/24 12:39:13.578
  STEP: Creating a new StatefulSet @ 12/07/24 12:39:13.583
  I1207 12:39:13.600543 20 wait.go:40] Found 0 stateful pods, waiting for 3
  I1207 12:39:23.600533 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1207 12:39:23.600565 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1207 12:39:23.600572 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1207 12:39:23.613683 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 12:39:23.706990 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 12:39:23.707029 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 12:39:23.707038 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/07/24 12:39:33.716
  I1207 12:39:33.726530 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/07/24 12:39:33.726
  STEP: Updating Pods in reverse ordinal order @ 12/07/24 12:39:43.736
  I1207 12:39:43.741044 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 12:39:43.831307 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 12:39:43.831393 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 12:39:43.831408 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 12:39:53.850255 20 wait.go:158] Waiting for StatefulSet statefulset-1309/ss2 to complete update
  I1207 12:39:53.850302 20 wait.go:165] Waiting for Pod statefulset-1309/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 12/07/24 12:40:03.852
  I1207 12:40:03.852406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 12:40:03.932620 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 12:40:03.932661 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 12:40:03.932672 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 12:40:13.954023 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/07/24 12:40:23.964
  I1207 12:40:23.967692 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 12:40:24.045633 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 12:40:24.045671 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 12:40:24.045681 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 12:40:34.065199 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1309
  I1207 12:40:34.068742 20 rest.go:150] Scaling statefulset ss2 to 0
  I1207 12:40:44.087079 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 12:40:44.091541 20 rest.go:88] Deleting statefulset ss2
  I1207 12:40:44.109112 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1309" for this suite. @ 12/07/24 12:40:44.112
• [90.568 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 12/07/24 12:40:44.12
  I1207 12:40:44.120905 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:40:44.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:40:44.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:40:44.143
  STEP: Counting existing ResourceQuota @ 12/07/24 12:40:44.146
  STEP: Creating a ResourceQuota @ 12/07/24 12:40:49.15
  STEP: Ensuring resource quota status is calculated @ 12/07/24 12:40:49.158
  STEP: Creating a Service @ 12/07/24 12:40:51.165
  STEP: Creating a NodePort Service @ 12/07/24 12:40:51.185
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/07/24 12:40:51.216
  STEP: Ensuring resource quota status captures service creation @ 12/07/24 12:40:51.244
  STEP: Deleting Services @ 12/07/24 12:40:53.249
  STEP: Ensuring resource quota status released usage @ 12/07/24 12:40:53.298
  I1207 12:40:55.304320 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-836" for this suite. @ 12/07/24 12:40:55.308
• [11.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 12/07/24 12:40:55.318
  I1207 12:40:55.318183 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:40:55.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:40:55.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:40:55.34
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5505 @ 12/07/24 12:40:55.342
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/07/24 12:40:55.36
  STEP: creating service externalsvc in namespace services-5505 @ 12/07/24 12:40:55.36
  STEP: creating replication controller externalsvc in namespace services-5505 @ 12/07/24 12:40:55.378
  I1207 12:40:55.389608      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5505, replica count: 2
  I1207 12:40:58.441636      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/07/24 12:40:58.446
  I1207 12:40:58.469690 20 resource.go:361] Creating new exec pod
  I1207 12:41:00.487797 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-5505 exec execpodrsgvw -- /bin/sh -x -c nslookup nodeport-service.services-5505.svc.cluster.local'
  I1207 12:41:00.594148 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-5505.svc.cluster.local\n"
  I1207 12:41:00.594193 20 builder.go:147] stdout: "Server:\t\t10.152.183.170\nAddress:\t10.152.183.170#53\n\nnodeport-service.services-5505.svc.cluster.local\tcanonical name = externalsvc.services-5505.svc.cluster.local.\nName:\texternalsvc.services-5505.svc.cluster.local\nAddress: 10.152.183.155\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5505, will wait for the garbage collector to delete the pods @ 12/07/24 12:41:00.594
  I1207 12:41:00.658981 20 resources.go:139] Deleting ReplicationController externalsvc took: 9.459331ms
  I1207 12:41:00.759723 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.730623ms
  I1207 12:41:04.181594 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1207 12:41:04.199004 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5505" for this suite. @ 12/07/24 12:41:04.203
• [8.895 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 12/07/24 12:41:04.213
  I1207 12:41:04.213076 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:41:04.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:41:04.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:41:04.236
  STEP: Creating a ResourceQuota @ 12/07/24 12:41:04.238
  STEP: Getting a ResourceQuota @ 12/07/24 12:41:04.243
  STEP: Updating a ResourceQuota @ 12/07/24 12:41:04.248
  STEP: Verifying a ResourceQuota was modified @ 12/07/24 12:41:04.254
  STEP: Deleting a ResourceQuota @ 12/07/24 12:41:04.258
  STEP: Verifying the deleted ResourceQuota @ 12/07/24 12:41:04.267
  I1207 12:41:04.271407 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4690" for this suite. @ 12/07/24 12:41:04.275
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 12/07/24 12:41:04.282
  I1207 12:41:04.282778 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 12:41:04.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:41:04.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:41:04.305
  STEP: Creating a job @ 12/07/24 12:41:04.308
  STEP: Ensuring job reaches completions @ 12/07/24 12:41:04.315
  I1207 12:41:14.327268 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2770" for this suite. @ 12/07/24 12:41:14.331
• [10.058 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/07/24 12:41:14.34
  I1207 12:41:14.340545 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replicaset @ 12/07/24 12:41:14.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:41:14.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:41:14.361
  STEP: Create a ReplicaSet @ 12/07/24 12:41:14.364
  STEP: Verify that the required pods have come up @ 12/07/24 12:41:14.371
  I1207 12:41:14.376974 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1207 12:41:19.381106 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/07/24 12:41:19.381
  I1207 12:41:19.385941 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/07/24 12:41:19.385
  STEP: DeleteCollection of the ReplicaSets @ 12/07/24 12:41:19.39
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/07/24 12:41:19.4
  I1207 12:41:19.405622 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8591" for this suite. @ 12/07/24 12:41:19.409
• [5.090 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/07/24 12:41:19.43
  I1207 12:41:19.430899 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:41:19.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:41:19.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:41:19.455
  STEP: Creating configMap with name configmap-test-upd-b8fd4fab-888f-445c-9ab4-115e79cb7d1a @ 12/07/24 12:41:19.463
  STEP: Creating the pod @ 12/07/24 12:41:19.473
  STEP: Updating configmap configmap-test-upd-b8fd4fab-888f-445c-9ab4-115e79cb7d1a @ 12/07/24 12:41:21.512
  STEP: waiting to observe update in volume @ 12/07/24 12:41:21.517
  I1207 12:42:27.841812 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2970" for this suite. @ 12/07/24 12:42:27.846
• [68.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/07/24 12:42:27.854
  I1207 12:42:27.854295 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename init-container @ 12/07/24 12:42:27.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:42:27.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:42:27.88
  STEP: creating the pod @ 12/07/24 12:42:27.883
  I1207 12:42:27.883172 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1207 12:43:14.357100 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d743723a-945b-4989-9e0b-7a0663227159", GenerateName:"", Namespace:"init-container-6381", SelfLink:"", UID:"ee45c0e0-3a0f-47eb-8f53-2bc4286c8662", ResourceVersion:"13043", Generation:0, CreationTimestamp:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"883163372"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001274870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 7, 12, 43, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012748a0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-srlwc", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003f1ec80), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-srlwc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-srlwc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-srlwc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0032c9a40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-64-144", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000bb7380), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0032c9ad0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0032c9af0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0032c9af8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0032c9afc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0042f9800), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 7, 12, 42, 29, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.64.144", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.64.144"}}, PodIP:"192.168.16.42", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.16.42"}}, StartTime:time.Date(2024, time.December, 7, 12, 42, 27, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000520e70)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000520ee0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://5ff08311170bf6c0ff867272132dd8d26da9d77c8c81ab731eb9f3270a697156", Started:(*bool)(0xc0032c9baa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-srlwc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0042f9820)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003f1ed00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0032c9bbd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-srlwc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0042f9840)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003f1ecc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0032c9b74), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-srlwc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0042f9810)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1207 12:43:14.357250 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6381" for this suite. @ 12/07/24 12:43:14.361
• [46.516 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/07/24 12:43:14.37
  I1207 12:43:14.370308 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/07/24 12:43:14.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:14.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:14.393
  STEP: creating a target pod @ 12/07/24 12:43:14.395
  STEP: adding an ephemeral container @ 12/07/24 12:43:16.421
  STEP: checking pod container endpoints @ 12/07/24 12:43:18.445
  I1207 12:43:18.445224 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2965 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:43:18.445242 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:43:18.445652 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:43:18.445687 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2965/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1207 12:43:18.480562 20 exec_util.go:111] Exec stderr: ""
  I1207 12:43:18.488071 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2965" for this suite. @ 12/07/24 12:43:18.491
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 12/07/24 12:43:18.5
  I1207 12:43:18.500073 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 12:43:18.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:18.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:18.521
  I1207 12:43:18.524777 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  W1207 12:43:21.064998      20 warnings.go:70] unknown field "alpha"
  W1207 12:43:21.065018      20 warnings.go:70] unknown field "beta"
  W1207 12:43:21.065021      20 warnings.go:70] unknown field "delta"
  W1207 12:43:21.065024      20 warnings.go:70] unknown field "epsilon"
  W1207 12:43:21.065027      20 warnings.go:70] unknown field "gamma"
  I1207 12:43:21.619182 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8524" for this suite. @ 12/07/24 12:43:21.623
• [3.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/07/24 12:43:21.632
  I1207 12:43:21.632620 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:43:21.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:21.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:21.654
  STEP: Creating configMap with name configmap-test-volume-fbcbd430-96b7-41dc-b2a0-cf74230f8ebd @ 12/07/24 12:43:21.657
  STEP: Creating a pod to test consume configMaps @ 12/07/24 12:43:21.664
  STEP: Saw pod success @ 12/07/24 12:43:25.694
  I1207 12:43:25.698745 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-configmaps-5ff80a11-bb2a-4a88-84a6-50dc81a2ff25 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:43:25.716
  I1207 12:43:25.738039 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3532" for this suite. @ 12/07/24 12:43:25.741
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 12/07/24 12:43:25.752
  I1207 12:43:25.752082 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:43:25.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:25.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:25.775
  STEP: fetching services @ 12/07/24 12:43:25.778
  I1207 12:43:25.781957 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9913" for this suite. @ 12/07/24 12:43:25.785
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 12/07/24 12:43:25.794
  I1207 12:43:25.794100 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:43:25.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:25.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:25.818
  STEP: validating api versions @ 12/07/24 12:43:25.821
  I1207 12:43:25.821234 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-4941 api-versions'
  I1207 12:43:25.862030 20 builder.go:146] stderr: ""
  I1207 12:43:25.862095 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1207 12:43:25.862193 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4941" for this suite. @ 12/07/24 12:43:25.867
• [0.084 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/07/24 12:43:25.878
  I1207 12:43:25.878019 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:43:25.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:25.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:25.903
  STEP: Creating the pod @ 12/07/24 12:43:25.905
  I1207 12:43:28.457200 20 pod_client.go:173] Successfully updated pod "annotationupdateb5877afc-cd93-414a-ba43-66e45e3bc211"
  I1207 12:43:30.475938 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9244" for this suite. @ 12/07/24 12:43:30.479
• [4.611 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/07/24 12:43:30.489
  I1207 12:43:30.489626 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replicaset @ 12/07/24 12:43:30.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:30.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:30.513
  I1207 12:43:30.515848 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-39c16017-9c61-412c-a9fb-38181e1f35ba
  I1207 12:43:30.527191 20 resource.go:87] Pod name my-hostname-basic-39c16017-9c61-412c-a9fb-38181e1f35ba: Found 0 pods out of 1
  I1207 12:43:35.532777 20 resource.go:87] Pod name my-hostname-basic-39c16017-9c61-412c-a9fb-38181e1f35ba: Found 1 pods out of 1
  I1207 12:43:35.532810 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-39c16017-9c61-412c-a9fb-38181e1f35ba" is running
  I1207 12:43:35.539101 20 replica_set.go:220] Pod "my-hostname-basic-39c16017-9c61-412c-a9fb-38181e1f35ba-vnlvv" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 12:43:31 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 12:43:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 12:43:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 12:43:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 12:43:30 +0000 UTC Reason: Message:}])
  I1207 12:43:35.539122 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/07/24 12:43:35.539
  I1207 12:43:35.558625 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1546" for this suite. @ 12/07/24 12:43:35.564
• [5.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/07/24 12:43:35.574
  I1207 12:43:35.574180 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:43:35.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:35.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:35.6
  STEP: Creating configMap with name configmap-projected-all-test-volume-0f8c9497-efaa-4240-b33b-929eca8dcddb @ 12/07/24 12:43:35.608
  STEP: Creating secret with name secret-projected-all-test-volume-f090f3c9-8cdb-42d5-bf21-474e280fd1b3 @ 12/07/24 12:43:35.615
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/07/24 12:43:35.627
  STEP: Saw pod success @ 12/07/24 12:43:37.667
  I1207 12:43:37.671232 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod projected-volume-792728e2-229a-4477-88c9-17963caf4e08 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:43:37.679
  I1207 12:43:37.703241 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7957" for this suite. @ 12/07/24 12:43:37.706
• [2.141 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/07/24 12:43:37.715
  I1207 12:43:37.715145 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename server-version @ 12/07/24 12:43:37.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:37.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:37.738
  STEP: Request ServerVersion @ 12/07/24 12:43:37.741
  STEP: Confirm major version @ 12/07/24 12:43:37.741
  I1207 12:43:37.742020 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/07/24 12:43:37.742
  I1207 12:43:37.742040 20 server_version.go:58] cleanMinorVersion: 31
  I1207 12:43:37.742050 20 server_version.go:62] Minor version: 31
  I1207 12:43:37.742157 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5423" for this suite. @ 12/07/24 12:43:37.746
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/07/24 12:43:37.753
  I1207 12:43:37.753305 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 12:43:37.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:37.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:37.773
  I1207 12:43:39.796704 20 delete.go:62] Deleting pod "var-expansion-3698d150-3990-4e9b-9001-ebfd3b17cc30" in namespace "var-expansion-9919"
  I1207 12:43:39.808675 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-3698d150-3990-4e9b-9001-ebfd3b17cc30" to be fully deleted
  I1207 12:43:41.818323 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9919" for this suite. @ 12/07/24 12:43:41.822
• [4.077 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/07/24 12:43:41.83
  I1207 12:43:41.830812 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:43:41.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:41.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:41.852
  STEP: Creating secret with name secret-test-f57c458e-c43f-40ab-b8b3-446799e141c9 @ 12/07/24 12:43:41.855
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:43:41.862
  STEP: Saw pod success @ 12/07/24 12:43:45.887
  I1207 12:43:45.894503 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-secrets-e0431103-b9b4-4e36-b802-b229bbab6f51 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:43:45.902
  I1207 12:43:45.928250 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4688" for this suite. @ 12/07/24 12:43:45.932
• [4.110 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 12/07/24 12:43:45.94
  I1207 12:43:45.940909 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 12:43:45.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:45.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:45.964
  STEP: apply creating a deployment @ 12/07/24 12:43:45.967
  I1207 12:43:45.986335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1212" for this suite. @ 12/07/24 12:43:45.99
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 12/07/24 12:43:46.001
  I1207 12:43:46.001548 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:43:46.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:46.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:46.022
  STEP: Creating a test headless service @ 12/07/24 12:43:46.024
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8954.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8954.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/07/24 12:43:46.032
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8954.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8954.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/07/24 12:43:46.032
  STEP: creating a pod to probe DNS @ 12/07/24 12:43:46.032
  STEP: submitting the pod to kubernetes @ 12/07/24 12:43:46.032
  STEP: retrieving the pod @ 12/07/24 12:43:48.052
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:43:48.056
  I1207 12:43:48.074734 20 dns_common.go:527] DNS probes using dns-8954/dns-test-d260fde3-d0cf-405a-a904-4c9a05091866 succeeded

  STEP: deleting the pod @ 12/07/24 12:43:48.074
  STEP: deleting the test headless service @ 12/07/24 12:43:48.093
  I1207 12:43:48.109150 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8954" for this suite. @ 12/07/24 12:43:48.112
• [2.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/07/24 12:43:48.122
  I1207 12:43:48.122243 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename namespaces @ 12/07/24 12:43:48.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:48.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:48.143
  STEP: Creating namespace "e2e-ns-w76gj" @ 12/07/24 12:43:48.146
  I1207 12:43:48.164128 20 namespace.go:411] Namespace "e2e-ns-w76gj-5473" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-w76gj-5473" @ 12/07/24 12:43:48.164
  I1207 12:43:48.174961 20 namespace.go:434] Namespace "e2e-ns-w76gj-5473" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-w76gj-5473" @ 12/07/24 12:43:48.174
  I1207 12:43:48.183889 20 namespace.go:463] Namespace "e2e-ns-w76gj-5473" has []v1.FinalizerName{"kubernetes"}
  I1207 12:43:48.183976 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2856" for this suite. @ 12/07/24 12:43:48.188
  STEP: Destroying namespace "e2e-ns-w76gj-5473" for this suite. @ 12/07/24 12:43:48.199
• [0.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/07/24 12:43:48.206
  I1207 12:43:48.206595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pod-network-test @ 12/07/24 12:43:48.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:43:48.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:43:48.228
  STEP: Performing setup for networking test in namespace pod-network-test-3994 @ 12/07/24 12:43:48.231
  STEP: creating a selector @ 12/07/24 12:43:48.231
  STEP: Creating the service pods in kubernetes @ 12/07/24 12:43:48.231
  I1207 12:43:48.231181 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/07/24 12:44:00.335
  I1207 12:44:02.364275 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1207 12:44:02.364307 20 networking.go:42] Breadth first check of 192.168.39.219 on host 172.31.22.155...
  I1207 12:44:02.367900 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.114.138:9080/dial?request=hostname&protocol=udp&host=192.168.39.219&port=8081&tries=1'] Namespace:pod-network-test-3994 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:44:02.367928 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:44:02.368381 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:44:02.368450 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3994/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.114.138%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.39.219%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1207 12:44:02.407657 20 utils.go:356] Waiting for responses: map[]
  I1207 12:44:02.407690 20 utils.go:360] reached 192.168.39.219 after 0/1 tries
  I1207 12:44:02.407699 20 networking.go:42] Breadth first check of 192.168.16.48 on host 172.31.64.144...
  I1207 12:44:02.411797 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.114.138:9080/dial?request=hostname&protocol=udp&host=192.168.16.48&port=8081&tries=1'] Namespace:pod-network-test-3994 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:44:02.411816 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:44:02.412257 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:44:02.412296 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3994/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.114.138%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.16.48%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1207 12:44:02.446575 20 utils.go:356] Waiting for responses: map[]
  I1207 12:44:02.446601 20 utils.go:360] reached 192.168.16.48 after 0/1 tries
  I1207 12:44:02.446611 20 networking.go:42] Breadth first check of 192.168.114.137 on host 172.31.9.19...
  I1207 12:44:02.450764 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.114.138:9080/dial?request=hostname&protocol=udp&host=192.168.114.137&port=8081&tries=1'] Namespace:pod-network-test-3994 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:44:02.450786 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:44:02.451260 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:44:02.451302 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3994/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.114.138%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.114.137%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1207 12:44:02.495553 20 utils.go:356] Waiting for responses: map[]
  I1207 12:44:02.495587 20 utils.go:360] reached 192.168.114.137 after 0/1 tries
  I1207 12:44:02.495597 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1207 12:44:02.495693 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3994" for this suite. @ 12/07/24 12:44:02.501
• [14.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 12/07/24 12:44:02.512
  I1207 12:44:02.512078 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 12:44:02.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:02.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:02.534
  STEP: Creating simple DaemonSet "daemon-set" @ 12/07/24 12:44:02.562
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/07/24 12:44:02.569
  I1207 12:44:02.573231 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:44:02.573259 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:44:02.579514 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:44:02.579534 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:44:03.576108 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:44:03.576153 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:44:03.580160 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1207 12:44:03.580179 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  I1207 12:44:04.578011 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:44:04.578076 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 12:44:04.586393 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 12:44:04.586424 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/07/24 12:44:04.59
  I1207 12:44:04.597875 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/07/24 12:44:04.597
  I1207 12:44:04.619048 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/07/24 12:44:04.619
  I1207 12:44:04.622057 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1207 12:44:04.622138 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.622194 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.622395 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.622489 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.622674 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.622693 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-6200 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1207 12:44:04.622703 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/07/24 12:44:04.622
  STEP: watching for the daemon set status to be patched @ 12/07/24 12:44:04.635
  I1207 12:44:04.639716 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1207 12:44:04.639797 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.639859 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.639993 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.640072 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.640136 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.640231 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-6200 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1207 12:44:04.640385 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1207 12:44:04.640406 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-6200 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1207 12:44:04.640418 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/07/24 12:44:04.645
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6200, will wait for the garbage collector to delete the pods @ 12/07/24 12:44:04.645
  I1207 12:44:04.711332 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.26612ms
  I1207 12:44:04.811956 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.622204ms
  I1207 12:44:05.716952 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 12:44:05.716985 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1207 12:44:05.721389 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13709"},"items":null}

  I1207 12:44:05.724765 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13709"},"items":null}

  I1207 12:44:05.739308 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6200" for this suite. @ 12/07/24 12:44:05.743
• [3.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 12/07/24 12:44:05.753
  I1207 12:44:05.753731 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 12:44:05.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:05.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:05.775
  STEP: Looking for a node to schedule job pod @ 12/07/24 12:44:05.778
  STEP: Creating a job @ 12/07/24 12:44:05.782
  STEP: Ensuring job fails @ 12/07/24 12:44:05.791
  I1207 12:44:11.800919 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3282" for this suite. @ 12/07/24 12:44:11.804
• [6.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 12/07/24 12:44:11.813
  I1207 12:44:11.813590 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:44:11.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:11.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:11.838
  STEP: Creating a test headless service @ 12/07/24 12:44:11.841
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2174.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2174.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2174.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2174.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 132.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.132_udp@PTR;check="$$(dig +tcp +noall +answer +search 132.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.132_tcp@PTR;sleep 1; done
   @ 12/07/24 12:44:11.863
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2174.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2174.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2174.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2174.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2174.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 132.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.132_udp@PTR;check="$$(dig +tcp +noall +answer +search 132.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.132_tcp@PTR;sleep 1; done
   @ 12/07/24 12:44:11.863
  STEP: creating a pod to probe DNS @ 12/07/24 12:44:11.863
  STEP: submitting the pod to kubernetes @ 12/07/24 12:44:11.863
  STEP: retrieving the pod @ 12/07/24 12:44:13.892
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:44:13.897
  I1207 12:44:13.902689 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.906223 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.910801 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.914964 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.936075 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.940061 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.944011 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.948311 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local from pod dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0: the server could not find the requested resource (get pods dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0)
  I1207 12:44:13.964383 20 dns_common.go:489] Lookups using dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0 failed for: [wheezy_udp@dns-test-service.dns-2174.svc.cluster.local wheezy_tcp@dns-test-service.dns-2174.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local jessie_udp@dns-test-service.dns-2174.svc.cluster.local jessie_tcp@dns-test-service.dns-2174.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2174.svc.cluster.local]

  I1207 12:44:13.978981 20 dns_common.go:495] Pod client logs for webserver: 
  I1207 12:44:13.986109 20 dns_common.go:495] Pod client logs for querier: 
  I1207 12:44:13.992619 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I1207 12:44:18.966320 20 dns_common.go:527] DNS probes using dns-2174/dns-test-e3f05f14-6fd3-454f-8d65-d8a6522781e0 succeeded

  STEP: deleting the pod @ 12/07/24 12:44:18.966
  STEP: deleting the test service @ 12/07/24 12:44:18.993
  STEP: deleting the test headless service @ 12/07/24 12:44:19.021
  I1207 12:44:19.036807 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2174" for this suite. @ 12/07/24 12:44:19.04
• [7.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 12/07/24 12:44:19.047
  I1207 12:44:19.047714 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:44:19.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:19.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:19.07
  STEP: Creating a test headless service @ 12/07/24 12:44:19.072
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8243 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8243;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8243 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8243;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8243.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8243.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8243.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8243.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8243.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8243.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8243.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8243.svc;check="$$(dig +notcp +noall +answer +search 129.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.129_udp@PTR;check="$$(dig +tcp +noall +answer +search 129.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.129_tcp@PTR;sleep 1; done
   @ 12/07/24 12:44:19.094
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8243 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8243;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8243 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8243;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8243.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8243.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8243.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8243.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8243.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8243.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8243.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8243.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8243.svc;check="$$(dig +notcp +noall +answer +search 129.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.129_udp@PTR;check="$$(dig +tcp +noall +answer +search 129.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.129_tcp@PTR;sleep 1; done
   @ 12/07/24 12:44:19.094
  STEP: creating a pod to probe DNS @ 12/07/24 12:44:19.094
  STEP: submitting the pod to kubernetes @ 12/07/24 12:44:19.094
  STEP: retrieving the pod @ 12/07/24 12:44:21.122
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:44:21.126
  I1207 12:44:21.131311 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.144235 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.148457 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8243 from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.152906 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8243 from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.157078 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.160624 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.166138 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.169934 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.190316 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.194063 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.197532 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8243 from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.201119 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8243 from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.205115 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.208626 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.212604 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.217234 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8243.svc from pod dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a: the server could not find the requested resource (get pods dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a)
  I1207 12:44:21.233365 20 dns_common.go:489] Lookups using dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8243 wheezy_tcp@dns-test-service.dns-8243 wheezy_udp@dns-test-service.dns-8243.svc wheezy_tcp@dns-test-service.dns-8243.svc wheezy_udp@_http._tcp.dns-test-service.dns-8243.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8243.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8243 jessie_tcp@dns-test-service.dns-8243 jessie_udp@dns-test-service.dns-8243.svc jessie_tcp@dns-test-service.dns-8243.svc jessie_udp@_http._tcp.dns-test-service.dns-8243.svc jessie_tcp@_http._tcp.dns-test-service.dns-8243.svc]

  I1207 12:44:21.241423 20 dns_common.go:495] Pod client logs for webserver: 
  I1207 12:44:21.248437 20 dns_common.go:495] Pod client logs for querier: 
  I1207 12:44:21.255212 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I1207 12:44:26.231632 20 dns_common.go:527] DNS probes using dns-8243/dns-test-ec293dbf-bfa4-407e-874b-6ae310947a3a succeeded

  STEP: deleting the pod @ 12/07/24 12:44:26.231
  STEP: deleting the test service @ 12/07/24 12:44:26.255
  STEP: deleting the test headless service @ 12/07/24 12:44:26.286
  I1207 12:44:26.300287 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8243" for this suite. @ 12/07/24 12:44:26.304
• [7.266 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/07/24 12:44:26.313
  I1207 12:44:26.313720 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 12:44:26.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:26.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:26.334
  I1207 12:44:26.348503 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1207 12:44:31.355811 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/07/24 12:44:31.355
  I1207 12:44:31.355885 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1207 12:44:33.361410 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1207 12:44:33.374280 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1207 12:44:35.383642 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1207 12:44:35.392915 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1207 12:44:35.401780 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1207 12:44:35.412670 20 deployment.go:313] Updating deployment test-rollover-deployment
  I1207 12:44:35.412698 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1207 12:44:37.424428 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1207 12:44:37.434425 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1207 12:44:37.441895 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1207 12:44:37.441947 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1207 12:44:39.452658 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1207 12:44:39.452713 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1207 12:44:41.451789 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1207 12:44:41.451847 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1207 12:44:43.452084 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1207 12:44:43.452140 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1207 12:44:45.451710 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1207 12:44:45.451766 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 12, 44, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 12, 44, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1207 12:44:47.451657 20 deployment.go:94] 
  I1207 12:44:47.451703 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I1207 12:44:47.464909 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6938beb-7f91-406e-a9c6-4cd1d4cc4f1f",
      ResourceVersion: (string) (len=5) "14174",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 12:44:47.468826 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "200aced5-eddd-4ccd-a329-05dfba803862",
      ResourceVersion: (string) (len=5) "14164",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "c6938beb-7f91-406e-a9c6-4cd1d4cc4f1f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 36 39 33 38 62  65 62 2d 37 66 39 31 2d  |\"c6938beb-7f91-|
              00000120  34 30 36 65 2d 61 39 63  36 2d 34 63 64 31 64 34  |406e-a9c6-4cd1d4|
              00000130  63 63 34 66 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cc4f1f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:44:47.469289 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1207 12:44:47.469514 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec33ab18-2c93-425a-9e0c-403d0e4be040",
      ResourceVersion: (string) (len=5) "14173",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172266,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "c6938beb-7f91-406e-a9c6-4cd1d4cc4f1f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  63 36 39 33 38 62 65 62  2d 37 66 39 31 2d 34 30  |c6938beb-7f91-40|
              000000c0  36 65 2d 61 39 63 36 2d  34 63 64 31 64 34 63 63  |6e-a9c6-4cd1d4cc|
              000000d0  34 66 31 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4f1f\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:44:47.470281 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c9ddc8f-88fa-4a33-8244-ec12060867ba",
      ResourceVersion: (string) (len=5) "14125",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "c6938beb-7f91-406e-a9c6-4cd1d4cc4f1f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 36 39 33 38 62  65 62 2d 37 66 39 31 2d  |\"c6938beb-7f91-|
              00000120  34 30 36 65 2d 61 39 63  36 2d 34 63 64 31 64 34  |406e-a9c6-4cd1d4|
              00000130  63 63 34 66 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cc4f1f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:44:47.475460 20 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-fsh24" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-fsh24",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-1438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25baff81-39da-410f-a3e7-abfd6d682e40",
      ResourceVersion: (string) (len=5) "14141",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "200aced5-eddd-4ccd-a329-05dfba803862",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  30 61 63 65 64 35 2d 65  |d\":\"200aced5-e|
              00000090  64 64 64 2d 34 63 63 64  2d 61 33 32 39 2d 30 35  |ddd-4ccd-a329-05|
              000000a0  64 66 62 61 38 30 33 38  36 32 5c 22 7d 22 3a 7b  |dfba803862\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 34 36 5c 22 7d  |2.168.114.146\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ng6cq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ng6cq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172276,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://7f7d1f0aa048516966183beaed8ac3f036f7b77f2d22a5dd391d6893fe71031c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ng6cq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:44:47.476466 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1438" for this suite. @ 12/07/24 12:44:47.481
• [21.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 12/07/24 12:44:47.491
  I1207 12:44:47.491467 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename disruption @ 12/07/24 12:44:47.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:47.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:47.515
  STEP: Creating a kubernetes client @ 12/07/24 12:44:47.517
  I1207 12:44:47.517495 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename disruption-2 @ 12/07/24 12:44:47.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:47.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:47.54
  STEP: Waiting for the pdb to be processed @ 12/07/24 12:44:47.549
  STEP: Waiting for the pdb to be processed @ 12/07/24 12:44:49.56
  STEP: Waiting for the pdb to be processed @ 12/07/24 12:44:51.572
  STEP: listing a collection of PDBs across all namespaces @ 12/07/24 12:44:53.577
  STEP: listing a collection of PDBs in namespace disruption-6055 @ 12/07/24 12:44:53.582
  STEP: deleting a collection of PDBs @ 12/07/24 12:44:53.587
  STEP: Waiting for the PDB collection to be deleted @ 12/07/24 12:44:53.605
  I1207 12:44:53.609549 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3405" for this suite. @ 12/07/24 12:44:53.613
  I1207 12:44:53.620637 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6055" for this suite. @ 12/07/24 12:44:53.624
• [6.141 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/07/24 12:44:53.632
  I1207 12:44:53.632980 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replicaset @ 12/07/24 12:44:53.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:53.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:53.656
  I1207 12:44:53.674684 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1207 12:44:58.681031 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/07/24 12:44:58.681
  STEP: Scaling up "test-rs" replicaset @ 12/07/24 12:44:58.681
  I1207 12:44:58.692566 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/07/24 12:44:58.692
  I1207 12:44:58.704151 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2777 with ReadyReplicas 1, AvailableReplicas 1
  I1207 12:44:58.718489 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2777 with ReadyReplicas 1, AvailableReplicas 1
  I1207 12:44:58.738656 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2777 with ReadyReplicas 1, AvailableReplicas 1
  I1207 12:44:58.754804 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2777 with ReadyReplicas 1, AvailableReplicas 1
  I1207 12:44:59.559329 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2777 with ReadyReplicas 2, AvailableReplicas 2
  I1207 12:44:59.703873 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-2777 with ReadyReplicas 3 found true
  I1207 12:44:59.703997 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2777" for this suite. @ 12/07/24 12:44:59.708
• [6.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 12/07/24 12:44:59.718
  I1207 12:44:59.718729 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:44:59.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:44:59.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:44:59.74
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3855 @ 12/07/24 12:44:59.743
  STEP: changing the ExternalName service to type=ClusterIP @ 12/07/24 12:44:59.75
  STEP: creating replication controller externalname-service in namespace services-3855 @ 12/07/24 12:44:59.765
  I1207 12:44:59.772712      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3855, replica count: 2
  I1207 12:45:02.824465      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 12:45:02.824503 20 resource.go:361] Creating new exec pod
  I1207 12:45:05.842569 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3855 exec execpodh9f4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1207 12:45:05.933786 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1207 12:45:05.933827 20 builder.go:147] stdout: ""
  I1207 12:45:06.842683 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3855 exec execpodh9f4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1207 12:45:06.924524 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1207 12:45:06.924577 20 builder.go:147] stdout: ""
  I1207 12:45:07.843449 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3855 exec execpodh9f4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1207 12:45:07.927067 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1207 12:45:07.927105 20 builder.go:147] stdout: "externalname-service-qjggd"
  I1207 12:45:07.927229 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3855 exec execpodh9f4b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.133 80'
  I1207 12:45:08.003365 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.133 80\nConnection to 10.152.183.133 80 port [tcp/http] succeeded!\n"
  I1207 12:45:08.003404 20 builder.go:147] stdout: "externalname-service-qjggd"
  I1207 12:45:08.003496 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1207 12:45:08.026030 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3855" for this suite. @ 12/07/24 12:45:08.03
• [8.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/07/24 12:45:08.04
  I1207 12:45:08.040099 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 12:45:08.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:08.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:08.062
  I1207 12:45:08.065022 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I1207 12:45:08.072953 20 deployment.go:1200] Waiting for observed generation 1
  I1207 12:45:10.082645 20 deployment.go:1205] Waiting for all required pods to come up
  I1207 12:45:10.087116 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/07/24 12:45:10.087
  I1207 12:45:10.087242 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1207 12:45:10.095443 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1207 12:45:10.107056 20 deployment.go:313] Updating deployment webserver-deployment
  I1207 12:45:10.107083 20 deployment.go:1224] Waiting for observed generation 2
  I1207 12:45:12.116408 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1207 12:45:12.120286 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1207 12:45:12.125055 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1207 12:45:12.136498 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1207 12:45:12.136526 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1207 12:45:12.140954 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1207 12:45:12.149266 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1207 12:45:12.149287 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1207 12:45:12.160149 20 deployment.go:313] Updating deployment webserver-deployment
  I1207 12:45:12.160177 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1207 12:45:12.169126 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1207 12:45:12.177229 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1207 12:45:12.192412 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d0520fb-3bfa-4e51-9f8b-8673e1e01603",
      ResourceVersion: (string) (len=5) "14722",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 12:45:12.203745 20 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
      ResourceVersion: (string) (len=5) "14719",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "8d0520fb-3bfa-4e51-9f8b-8673e1e01603",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 64 30 35 32 30  66 62 2d 33 62 66 61 2d  |\"8d0520fb-3bfa-|
              00000120  34 65 35 31 2d 39 66 38  62 2d 38 36 37 33 65 31  |4e51-9f8b-8673e1|
              00000130  65 30 31 36 30 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e01603\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:45:12.204180 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1207 12:45:12.204411 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
      ResourceVersion: (string) (len=5) "14718",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "8d0520fb-3bfa-4e51-9f8b-8673e1e01603",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 64 30 35 32 30  66 62 2d 33 62 66 61 2d  |\"8d0520fb-3bfa-|
              00000120  34 65 35 31 2d 39 66 38  62 2d 38 36 37 33 65 31  |4e51-9f8b-8673e1|
              00000130  65 30 31 36 30 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e01603\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:45:12.220900 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8w8rk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8w8rk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cf1aa34-fef6-4b06-89af-57c4a482c548",
      ResourceVersion: (string) (len=5) "14597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  2e 35 33 5c 22 7d 22 3a  |2.168.16.53\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjfhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjfhf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d9cd4804cf5b05fbe580034539c9328005543df4780eb35273f358e0ad22d1f4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pjfhf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.222029 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9982n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9982n",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "810cc0ca-cf3f-4f1d-b82c-dd9905e933ee",
      ResourceVersion: (string) (len=5) "14602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 39  2e 32 32 34 5c 22 7d 22  |2.168.39.224\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hp7ht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hp7ht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.155"
        }
      },
      PodIP: (string) (len=14) "192.168.39.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.39.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://23986ad7bb989a784486e77d84f0bf2193277b409ec501818e3243acd3cbc600",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hp7ht",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.224916 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-clnhm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-clnhm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e8e6556-2e2d-4e67-9090-58146fd24894",
      ResourceVersion: (string) (len=5) "14595",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 35 30 5c 22 7d  |2.168.114.150\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zgdjz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zgdjz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f125bd5ca29f0d87894bc05b96ed8904d944a533e83ee506cc670978f82b5aa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zgdjz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.228284 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-h76c9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-h76c9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1866e5b6-9f9d-4a16-a828-679adc9be4c8",
      ResourceVersion: (string) (len=5) "14588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  2e 35 32 5c 22 7d 22 3a  |2.168.16.52\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8lhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8lhf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e8782fdf5c28195670e0f613fef1742dee8a2e6e85a30c70e16f512157d75662",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m8lhf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.230280 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j6gzj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j6gzj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ceb598b-b17a-468b-ace7-abe1ee1e889b",
      ResourceVersion: (string) (len=5) "14608",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 39  2e 32 32 36 5c 22 7d 22  |2.168.39.226\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tl6sb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tl6sb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.155"
        }
      },
      PodIP: (string) (len=14) "192.168.39.226",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.39.226"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aeb94f788092c132de69a1102a0e116c9f128d4835b9723ca1b1ccf1436d3450",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tl6sb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.231568 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ln94s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ln94s",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9d29e68-e9b8-46c6-b6db-254aa5fe70d0",
      ResourceVersion: (string) (len=5) "14735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jb2rg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jb2rg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.232368 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mgntd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mgntd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dab69a45-4f75-443a-86d3-0d1586b24515",
      ResourceVersion: (string) (len=5) "14734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvmvp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvmvp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.233862 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-n5h7z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-n5h7z",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ef2e1e5-1d11-437a-83df-60f70d1b1818",
      ResourceVersion: (string) (len=5) "14725",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4gksn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4gksn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.235763 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ng42x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ng42x",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e138f25-cdd0-4fa8-96dd-49ebf042a5c5",
      ResourceVersion: (string) (len=5) "14594",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  2e 35 34 5c 22 7d 22 3a  |2.168.16.54\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6crw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6crw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7e9e6d90b9f84616af01150fe2b23891f90d27a1fe7869620ca35f22cd0b6686",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6crw7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.237845 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-v4pdl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-v4pdl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e8ec236-e22c-4e50-99ad-0dc4b71f2484",
      ResourceVersion: (string) (len=5) "14590",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 35 31 5c 22 7d  |2.168.114.151\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gvm4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gvm4m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172309,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://00f37db80087028f9ea0c6e2fd977d3887584750fb64f15b612235e2009cce68",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gvm4m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.240302 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-v7r2s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-v7r2s",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ba19222-0ace-4657-9ff2-1908269d2c5e",
      ResourceVersion: (string) (len=5) "14727",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9l5mz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9l5mz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.241224 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-vdsbd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-vdsbd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "203a398f-e567-468e-b432-778b90227900",
      ResourceVersion: (string) (len=5) "14605",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b157496f-ba1a-493f-83ad-e1d01bad2bab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  35 37 34 39 36 66 2d 62  |d\":\"b157496f-b|
              00000090  61 31 61 2d 34 39 33 66  2d 38 33 61 64 2d 65 31  |a1a-493f-83ad-e1|
              000000a0  64 30 31 62 61 64 32 62  61 62 5c 22 7d 22 3a 7b  |d01bad2bab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 39  2e 32 32 35 5c 22 7d 22  |2.168.39.225\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25z88",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25z88",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.155"
        }
      },
      PodIP: (string) (len=14) "192.168.39.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.39.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172308,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869172308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b85b3c17d28a3d382b29b0a6ad77a89c406d23ee53bf261af11ef70ebf30f95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-25z88",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.242645 20 deployment.go:67] Pod "webserver-deployment-786f49d774-2c7tv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2c7tv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47ad0244-ee96-44cc-bb5c-df0331b9fb98",
      ResourceVersion: (string) (len=5) "14683",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 39 2e 32 32  37 5c 22 7d 22 3a 7b 22  |68.39.227\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rxkd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rxkd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.155"
        }
      },
      PodIP: (string) (len=14) "192.168.39.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.39.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9rxkd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.244082 20 deployment.go:67] Pod "webserver-deployment-786f49d774-4vdkm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-4vdkm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc7a1a64-5146-4a12-9e49-d8b940fcb873",
      ResourceVersion: (string) (len=5) "14706",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 34 2e 31  35 33 5c 22 7d 22 3a 7b  |68.114.153\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npxpk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npxpk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-npxpk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.245334 20 deployment.go:67] Pod "webserver-deployment-786f49d774-bjxp8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bjxp8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c34930d-743b-46d6-ac6a-9c5d1eeb16f5",
      ResourceVersion: (string) (len=5) "14709",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 34 2e 31  35 32 5c 22 7d 22 3a 7b  |68.114.152\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvxzf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvxzf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lvxzf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.246694 20 deployment.go:67] Pod "webserver-deployment-786f49d774-kdkdm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-kdkdm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63726214-a775-4fa7-8350-595f8b335018",
      ResourceVersion: (string) (len=5) "14732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxjkb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxjkb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.247589 20 deployment.go:67] Pod "webserver-deployment-786f49d774-lh85k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lh85k",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8996335-9ccb-48fd-b540-d4d77d2fb45a",
      ResourceVersion: (string) (len=5) "14736",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbgrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbgrx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.249824 20 deployment.go:67] Pod "webserver-deployment-786f49d774-qsdr8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-qsdr8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5943acf1-c165-4958-9a75-cc34e365de04",
      ResourceVersion: (string) (len=5) "14711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 2e 35 36  5c 22 7d 22 3a 7b 22 2e  |68.16.56\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xx59b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xx59b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xx59b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.251661 20 deployment.go:67] Pod "webserver-deployment-786f49d774-v54j7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-v54j7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "844ae4d3-df3c-4e9d-b2cc-0294bea96332",
      ResourceVersion: (string) (len=5) "14730",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sdmvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sdmvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.253070 20 deployment.go:67] Pod "webserver-deployment-786f49d774-vw8zk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vw8zk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7a0f2b1-baa4-4ce0-b324-8474e75b3022",
      ResourceVersion: (string) (len=5) "14714",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "ebacb7d0-b458-4d13-bc22-38f1029ca85f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  61 63 62 37 64 30 2d 62  |d\":\"ebacb7d0-b|
              00000090  34 35 38 2d 34 64 31 33  2d 62 63 32 32 2d 33 38  |458-4d13-bc22-38|
              000000a0  66 31 30 32 39 63 61 38  35 66 5c 22 7d 22 3a 7b  |f1029ca85f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |68.16.55\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rnb6l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rnb6l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rnb6l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:45:12.254478 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5042" for this suite. @ 12/07/24 12:45:12.287
• [4.271 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/07/24 12:45:12.311
  I1207 12:45:12.311930 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/07/24 12:45:12.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:12.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:12.351
  I1207 12:45:12.354651 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:45:13.385713 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8161" for this suite. @ 12/07/24 12:45:13.389
• [1.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/07/24 12:45:13.397
  I1207 12:45:13.397734 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pod-network-test @ 12/07/24 12:45:13.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:13.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:13.425
  STEP: Performing setup for networking test in namespace pod-network-test-9893 @ 12/07/24 12:45:13.428
  STEP: creating a selector @ 12/07/24 12:45:13.428
  STEP: Creating the service pods in kubernetes @ 12/07/24 12:45:13.428
  I1207 12:45:13.428150 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/07/24 12:45:35.551
  I1207 12:45:37.595880 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1207 12:45:37.595907 20 utils.go:496] Going to poll 192.168.39.228 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1207 12:45:37.600403 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.39.228:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:45:37.600424 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:45:37.600826 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:45:37.600863 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.39.228%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:45:37.642246 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1207 12:45:37.642272 20 utils.go:496] Going to poll 192.168.16.57 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1207 12:45:37.646421 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.16.57:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:45:37.646440 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:45:37.646809 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:45:37.646850 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.16.57%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:45:37.683413 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1207 12:45:37.683441 20 utils.go:496] Going to poll 192.168.114.154 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1207 12:45:37.688593 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.114.154:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:45:37.688611 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:45:37.688967 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:45:37.689018 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.114.154%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:45:37.729421 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1207 12:45:37.729597 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9893" for this suite. @ 12/07/24 12:45:37.735
• [24.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/07/24 12:45:37.746
  I1207 12:45:37.746237 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 12:45:37.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:37.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:37.773
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/07/24 12:45:37.776
  STEP: Saw pod success @ 12/07/24 12:45:41.804
  I1207 12:45:41.809084 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-b10ac8a6-5c59-4868-94c6-f032cd812a2b container test-container: <nil>
  STEP: delete the pod @ 12/07/24 12:45:41.821
  I1207 12:45:41.843155 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6758" for this suite. @ 12/07/24 12:45:41.847
• [4.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/07/24 12:45:41.856
  I1207 12:45:41.856177 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:45:41.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:41.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:41.876
  STEP: Creating configMap with name projected-configmap-test-volume-f6c64878-b133-42fc-81e0-3924db32e9df @ 12/07/24 12:45:41.878
  STEP: Creating a pod to test consume configMaps @ 12/07/24 12:45:41.883
  STEP: Saw pod success @ 12/07/24 12:45:43.906
  I1207 12:45:43.910744 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-projected-configmaps-52ca7f92-7fd2-4edd-9dae-f46555dc505b container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:45:43.918
  I1207 12:45:43.943805 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5419" for this suite. @ 12/07/24 12:45:43.948
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/07/24 12:45:43.957
  I1207 12:45:43.957577 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename events @ 12/07/24 12:45:43.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:43.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:43.979
  STEP: creating a test event @ 12/07/24 12:45:43.981
  STEP: listing all events in all namespaces @ 12/07/24 12:45:43.986
  STEP: patching the test event @ 12/07/24 12:45:43.997
  STEP: fetching the test event @ 12/07/24 12:45:44.007
  STEP: updating the test event @ 12/07/24 12:45:44.01
  STEP: getting the test event @ 12/07/24 12:45:44.022
  STEP: deleting the test event @ 12/07/24 12:45:44.027
  STEP: listing all events in all namespaces @ 12/07/24 12:45:44.039
  I1207 12:45:44.050454 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2540" for this suite. @ 12/07/24 12:45:44.054
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/07/24 12:45:44.063
  I1207 12:45:44.063481 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename containers @ 12/07/24 12:45:44.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:44.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:44.085
  I1207 12:45:46.118990 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-627" for this suite. @ 12/07/24 12:45:46.123
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 12/07/24 12:45:46.132
  I1207 12:45:46.132378 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:45:46.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:46.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:46.155
  STEP: Setting up server cert @ 12/07/24 12:45:46.184
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:45:46.354
  STEP: Deploying the webhook pod @ 12/07/24 12:45:46.366
  STEP: Wait for the deployment to be ready @ 12/07/24 12:45:46.383
  I1207 12:45:46.391292 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/07/24 12:45:48.404
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:45:48.421
  I1207 12:45:49.421746 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/07/24 12:45:49.431
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/07/24 12:45:49.448
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/07/24 12:45:49.454
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/07/24 12:45:49.468
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/07/24 12:45:49.484
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/07/24 12:45:49.494
  I1207 12:45:49.572127 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4189" for this suite. @ 12/07/24 12:45:49.577
  STEP: Destroying namespace "webhook-markers-2338" for this suite. @ 12/07/24 12:45:49.593
• [3.472 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 12/07/24 12:45:49.604
  I1207 12:45:49.604444 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption @ 12/07/24 12:45:49.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:45:49.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:45:49.682
  I1207 12:45:49.709342 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1207 12:46:49.714325 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/07/24 12:46:49.718
  I1207 12:46:49.741160 20 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1207 12:46:49.751731 20 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1207 12:46:49.771594 20 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1207 12:46:49.780170 20 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1207 12:46:49.805084 20 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1207 12:46:49.811942 20 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/07/24 12:46:49.811
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/07/24 12:46:51.845
  I1207 12:46:55.939065 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3311" for this suite. @ 12/07/24 12:46:55.942
• [66.347 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 12/07/24 12:46:55.951
  I1207 12:46:55.951728 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:46:55.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:46:55.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:46:55.971
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2861.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2861.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/07/24 12:46:55.973
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2861.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2861.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/07/24 12:46:55.973
  STEP: creating a pod to probe /etc/hosts @ 12/07/24 12:46:55.973
  STEP: submitting the pod to kubernetes @ 12/07/24 12:46:55.973
  STEP: retrieving the pod @ 12/07/24 12:46:57.998
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:46:58.002
  I1207 12:46:58.021119 20 dns_common.go:527] DNS probes using dns-2861/dns-test-6195de47-33c4-47f7-bfb0-ab240af49dd4 succeeded

  STEP: deleting the pod @ 12/07/24 12:46:58.021
  I1207 12:46:58.038732 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2861" for this suite. @ 12/07/24 12:46:58.045
• [2.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/07/24 12:46:58.055
  I1207 12:46:58.055491 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename namespaces @ 12/07/24 12:46:58.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:46:58.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:46:58.077
  STEP: Read namespace status @ 12/07/24 12:46:58.08
  I1207 12:46:58.084500 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/07/24 12:46:58.084
  I1207 12:46:58.090450 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/07/24 12:46:58.09
  I1207 12:46:58.099308 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1207 12:46:58.099400 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8366" for this suite. @ 12/07/24 12:46:58.103
• [0.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 12/07/24 12:46:58.113
  I1207 12:46:58.113340 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:46:58.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:46:58.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:46:58.131
  STEP: creating all guestbook components @ 12/07/24 12:46:58.134
  I1207 12:46:58.134229 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1207 12:46:58.134290 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 create -f -'
  I1207 12:46:58.222937 20 builder.go:146] stderr: ""
  I1207 12:46:58.222972 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1207 12:46:58.223009 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1207 12:46:58.223064 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 create -f -'
  I1207 12:46:58.313452 20 builder.go:146] stderr: ""
  I1207 12:46:58.313483 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1207 12:46:58.313524 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1207 12:46:58.313574 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 create -f -'
  I1207 12:46:58.401894 20 builder.go:146] stderr: ""
  I1207 12:46:58.401932 20 builder.go:147] stdout: "service/frontend created\n"
  I1207 12:46:58.402008 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1207 12:46:58.402093 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 create -f -'
  I1207 12:46:58.466754 20 builder.go:146] stderr: ""
  I1207 12:46:58.466789 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1207 12:46:58.466849 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1207 12:46:58.466919 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 create -f -'
  I1207 12:46:58.529107 20 builder.go:146] stderr: ""
  I1207 12:46:58.529139 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1207 12:46:58.529211 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1207 12:46:58.529291 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 create -f -'
  I1207 12:46:58.616420 20 builder.go:146] stderr: ""
  I1207 12:46:58.616457 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/07/24 12:46:58.616
  I1207 12:46:58.616502 20 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I1207 12:47:03.667660 20 kubectl.go:2276] Waiting for frontend to serve content.
  I1207 12:47:03.677028 20 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1207 12:47:03.690371 20 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/07/24 12:47:03.701
  I1207 12:47:03.701101 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 delete --grace-period=0 --force -f -'
  I1207 12:47:03.761714 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:47:03.761757 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/07/24 12:47:03.761
  I1207 12:47:03.761863 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 delete --grace-period=0 --force -f -'
  I1207 12:47:03.829872 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:47:03.829906 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/07/24 12:47:03.83
  I1207 12:47:03.830154 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 delete --grace-period=0 --force -f -'
  I1207 12:47:03.895020 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:47:03.895055 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/07/24 12:47:03.895
  I1207 12:47:03.895184 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 delete --grace-period=0 --force -f -'
  I1207 12:47:03.947249 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:47:03.947283 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/07/24 12:47:03.947
  I1207 12:47:03.947415 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 delete --grace-period=0 --force -f -'
  I1207 12:47:04.003707 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:47:04.003739 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/07/24 12:47:04.003
  I1207 12:47:04.003980 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9456 delete --grace-period=0 --force -f -'
  I1207 12:47:04.064864 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:47:04.064902 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1207 12:47:04.065098 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9456" for this suite. @ 12/07/24 12:47:04.069
• [5.965 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 12/07/24 12:47:04.078
  I1207 12:47:04.078819 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:47:04.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:04.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:04.106
  STEP: Creating a ResourceQuota with best effort scope @ 12/07/24 12:47:04.109
  STEP: Ensuring ResourceQuota status is calculated @ 12/07/24 12:47:04.12
  STEP: Creating a ResourceQuota with not best effort scope @ 12/07/24 12:47:06.126
  STEP: Ensuring ResourceQuota status is calculated @ 12/07/24 12:47:06.132
  STEP: Creating a best-effort pod @ 12/07/24 12:47:08.137
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/07/24 12:47:08.154
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/07/24 12:47:10.159
  STEP: Deleting the pod @ 12/07/24 12:47:12.164
  STEP: Ensuring resource quota status released the pod usage @ 12/07/24 12:47:12.182
  STEP: Creating a not best-effort pod @ 12/07/24 12:47:14.188
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/07/24 12:47:14.2
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/07/24 12:47:16.207
  STEP: Deleting the pod @ 12/07/24 12:47:18.213
  STEP: Ensuring resource quota status released the pod usage @ 12/07/24 12:47:18.227
  I1207 12:47:20.233132 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4355" for this suite. @ 12/07/24 12:47:20.238
• [16.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/07/24 12:47:20.246
  I1207 12:47:20.246264 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename security-context-test @ 12/07/24 12:47:20.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:20.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:20.266
  I1207 12:47:24.298824 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-352" for this suite. @ 12/07/24 12:47:24.303
• [4.068 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/07/24 12:47:24.314
  I1207 12:47:24.314459 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename events @ 12/07/24 12:47:24.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:24.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:24.345
  STEP: Create set of events @ 12/07/24 12:47:24.348
  STEP: get a list of Events with a label in the current namespace @ 12/07/24 12:47:24.372
  STEP: delete a list of events @ 12/07/24 12:47:24.376
  I1207 12:47:24.376892 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/07/24 12:47:24.407
  I1207 12:47:24.411783 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2297" for this suite. @ 12/07/24 12:47:24.415
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/07/24 12:47:24.422
  I1207 12:47:24.422478 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:47:24.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:24.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:24.443
  STEP: Creating the pod @ 12/07/24 12:47:24.447
  I1207 12:47:27.017891 20 pod_client.go:173] Successfully updated pod "labelsupdate772a2be9-e2a1-45d6-bbea-f5fa16beb246"
  I1207 12:47:29.032635 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5471" for this suite. @ 12/07/24 12:47:29.037
• [4.624 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/07/24 12:47:29.046
  I1207 12:47:29.046375 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:47:29.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:29.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:29.064
  STEP: Creating configMap with name projected-configmap-test-volume-map-116a4077-282a-4b2a-8841-3d7773675516 @ 12/07/24 12:47:29.067
  STEP: Creating a pod to test consume configMaps @ 12/07/24 12:47:29.074
  STEP: Saw pod success @ 12/07/24 12:47:31.095
  I1207 12:47:31.099753 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-configmaps-322c8bbb-9887-4e33-ac9c-d122428e67e2 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:47:31.106
  I1207 12:47:31.128585 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2365" for this suite. @ 12/07/24 12:47:31.132
• [2.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/07/24 12:47:31.14
  I1207 12:47:31.140979 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 12:47:31.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:31.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:31.163
  STEP: create the rc1 @ 12/07/24 12:47:31.169
  STEP: create the rc2 @ 12/07/24 12:47:31.177
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/07/24 12:47:37.189
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/07/24 12:47:37.694
  STEP: wait for the rc to be deleted @ 12/07/24 12:47:37.703
  I1207 12:47:42.718384 20 garbage_collector.go:762] 67 pods remaining
  I1207 12:47:42.718411 20 garbage_collector.go:769] 67 pods has nil DeletionTimestamp
  I1207 12:47:42.718417 20 garbage_collector.go:770] 
  STEP: Gathering metrics @ 12/07/24 12:47:47.719
  W1207 12:47:47.724837      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1207 12:47:47.724871 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1207 12:47:47.724915 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2dpr4" in namespace "gc-5121"
  I1207 12:47:47.742096 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2g6jp" in namespace "gc-5121"
  I1207 12:47:47.760011 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wxvc" in namespace "gc-5121"
  I1207 12:47:47.776534 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-455wz" in namespace "gc-5121"
  I1207 12:47:47.792768 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-47mc7" in namespace "gc-5121"
  I1207 12:47:47.813218 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4llhm" in namespace "gc-5121"
  I1207 12:47:47.828755 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4w4vm" in namespace "gc-5121"
  I1207 12:47:47.845975 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xrlt" in namespace "gc-5121"
  I1207 12:47:47.863622 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59kl2" in namespace "gc-5121"
  I1207 12:47:47.881807 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5h7f8" in namespace "gc-5121"
  I1207 12:47:47.900569 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ptfs" in namespace "gc-5121"
  I1207 12:47:47.915106 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62br5" in namespace "gc-5121"
  I1207 12:47:47.928152 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mltf" in namespace "gc-5121"
  I1207 12:47:47.944771 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7wngn" in namespace "gc-5121"
  I1207 12:47:47.960485 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7zp8s" in namespace "gc-5121"
  I1207 12:47:47.977868 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8xk5p" in namespace "gc-5121"
  I1207 12:47:47.994595 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92zh8" in namespace "gc-5121"
  I1207 12:47:48.017802 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-98ttv" in namespace "gc-5121"
  I1207 12:47:48.037586 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b89fb" in namespace "gc-5121"
  I1207 12:47:48.057484 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8mwm" in namespace "gc-5121"
  I1207 12:47:48.078664 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbtq6" in namespace "gc-5121"
  I1207 12:47:48.093697 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgdgz" in namespace "gc-5121"
  I1207 12:47:48.114083 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjxhm" in namespace "gc-5121"
  I1207 12:47:48.137624 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c5bcg" in namespace "gc-5121"
  I1207 12:47:48.152756 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cfhj5" in namespace "gc-5121"
  I1207 12:47:48.175978 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cps25" in namespace "gc-5121"
  I1207 12:47:48.192933 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cr7r9" in namespace "gc-5121"
  I1207 12:47:48.212365 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8kld" in namespace "gc-5121"
  I1207 12:47:48.233685 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkfqw" in namespace "gc-5121"
  I1207 12:47:48.251878 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dpb9v" in namespace "gc-5121"
  I1207 12:47:48.268544 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzt6f" in namespace "gc-5121"
  I1207 12:47:48.292689 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f5mf5" in namespace "gc-5121"
  I1207 12:47:48.312828 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f8jb9" in namespace "gc-5121"
  I1207 12:47:48.329024 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-frwbl" in namespace "gc-5121"
  I1207 12:47:48.345919 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gkxtl" in namespace "gc-5121"
  I1207 12:47:48.359771 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-glk8l" in namespace "gc-5121"
  I1207 12:47:48.383150 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpmnt" in namespace "gc-5121"
  I1207 12:47:48.398673 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqsvp" in namespace "gc-5121"
  I1207 12:47:48.417013 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gvqkr" in namespace "gc-5121"
  I1207 12:47:48.436573 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gwjtb" in namespace "gc-5121"
  I1207 12:47:48.451906 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h6sgf" in namespace "gc-5121"
  I1207 12:47:48.473796 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j67s5" in namespace "gc-5121"
  I1207 12:47:48.490545 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j7psz" in namespace "gc-5121"
  I1207 12:47:48.510261 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jk5qm" in namespace "gc-5121"
  I1207 12:47:48.523343 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kfgs8" in namespace "gc-5121"
  I1207 12:47:48.546496 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-khc49" in namespace "gc-5121"
  I1207 12:47:48.559817 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kqxxg" in namespace "gc-5121"
  I1207 12:47:48.574259 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kw6ms" in namespace "gc-5121"
  I1207 12:47:48.594732 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kzfw2" in namespace "gc-5121"
  I1207 12:47:48.608631 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l479q" in namespace "gc-5121"
  I1207 12:47:48.623322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5121" for this suite. @ 12/07/24 12:47:48.629
• [17.497 seconds]
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/07/24 12:47:48.637
  I1207 12:47:48.637838 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 12:47:48.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:48.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:48.66
  STEP: creating the pod @ 12/07/24 12:47:48.663
  STEP: submitting the pod to kubernetes @ 12/07/24 12:47:48.663
  STEP: verifying the pod is in kubernetes @ 12/07/24 12:47:50.689
  STEP: updating the pod @ 12/07/24 12:47:50.693
  I1207 12:47:51.210525 20 pod_client.go:173] Successfully updated pod "pod-update-9becfc23-86c3-4e19-958e-81e00533f702"
  STEP: verifying the updated pod is in kubernetes @ 12/07/24 12:47:51.215
  I1207 12:47:51.219797 20 pods.go:391] Pod update OK
  I1207 12:47:51.220212 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1588" for this suite. @ 12/07/24 12:47:51.225
• [2.597 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/07/24 12:47:51.235
  I1207 12:47:51.235245 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:47:51.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:51.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:51.267
  STEP: Creating configMap with name configmap-test-upd-cedb2139-ff45-4863-a65a-2629d54ca75c @ 12/07/24 12:47:51.275
  STEP: Creating the pod @ 12/07/24 12:47:51.281
  STEP: Waiting for pod with text data @ 12/07/24 12:47:53.306
  STEP: Waiting for pod with binary data @ 12/07/24 12:47:53.316
  I1207 12:47:53.324949 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4629" for this suite. @ 12/07/24 12:47:53.328
• [2.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/07/24 12:47:53.337
  I1207 12:47:53.337831 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 12:47:53.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:53.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:53.359
  STEP: Create a pod @ 12/07/24 12:47:53.362
  STEP: patching /status @ 12/07/24 12:47:55.378
  I1207 12:47:55.385580 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1207 12:47:55.385694 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5335" for this suite. @ 12/07/24 12:47:55.389
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 12/07/24 12:47:55.399
  I1207 12:47:55.399850 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:47:55.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:47:55.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:47:55.42
  STEP: creating service multiprotocol-test in namespace services-7097 @ 12/07/24 12:47:55.422
  STEP: creating pod pod1 in namespace services-7097 @ 12/07/24 12:47:55.433
  STEP: Creating pod pod1 in namespace services-7097 @ 12/07/24 12:47:55.433
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7097 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/07/24 12:47:57.458
  I1207 12:47:57.469272 20 service.go:4392] successfully validated that service multiprotocol-test in namespace services-7097 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/07/24 12:47:57.469
  I1207 12:47:57.469319 20 resource.go:361] Creating new exec pod
  I1207 12:47:59.483663 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  I1207 12:47:59.572118 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [tcp/http] succeeded!\n"
  I1207 12:47:59.572165 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 12:47:59.572245 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.212 80'
  I1207 12:48:03.649227 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [udp/*] succeeded!\n"
  I1207 12:48:03.649269 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/07/24 12:48:03.649
  I1207 12:48:03.658858 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  I1207 12:48:03.778461 20 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.212 80\necho hostName\nConnection to 10.152.183.212 80 port [tcp/http] succeeded!\n"
  I1207 12:48:03.778499 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 12:48:03.778615 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.212 80'
  I1207 12:48:07.858276 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [udp/*] succeeded!\n"
  I1207 12:48:07.858322 20 builder.go:147] stdout: ""
  I1207 12:48:07.858400 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.212 80'
  I1207 12:48:11.955302 20 builder.go:146] stderr: "+ echo+ nc -v -u -w 2 10.152.183.212 80\n hostName\nConnection to 10.152.183.212 80 port [udp/*] succeeded!\n"
  I1207 12:48:11.955360 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/07/24 12:48:11.955
  I1207 12:48:11.967182 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.212 80'
  I1207 12:48:16.053614 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [udp/*] succeeded!\n"
  I1207 12:48:16.053661 20 builder.go:147] stdout: "pod1"
  I1207 12:48:16.053754 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  I1207 12:48:18.133250 20 builder.go:135] rc: 1
  I1207 12:48:18.133333 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.212 80
  nc: connect to 10.152.183.212 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1207 12:48:18.133416 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  I1207 12:48:20.211500 20 builder.go:135] rc: 1
  I1207 12:48:20.211558 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.212 80
  nc: connect to 10.152.183.212 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1207 12:48:20.211624 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  I1207 12:48:22.293143 20 builder.go:135] rc: 1
  I1207 12:48:22.293201 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7097 exec execpodk87tc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.212 80
  nc: connect to 10.152.183.212 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1207 12:48:22.293340 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7097" for this suite. @ 12/07/24 12:48:22.297
• [26.905 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/07/24 12:48:22.305
  I1207 12:48:22.305177 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:48:22.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:22.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:22.326
  STEP: Creating secret with name secret-test-40d07b92-27c3-4278-bc69-61f1445f2125 @ 12/07/24 12:48:22.329
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:48:22.334
  STEP: Saw pod success @ 12/07/24 12:48:24.354
  I1207 12:48:24.359151 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-secrets-4aa68109-b03b-44e1-a861-ff257cc23284 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:48:24.368
  I1207 12:48:24.387419 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3964" for this suite. @ 12/07/24 12:48:24.393
• [2.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/07/24 12:48:24.401
  I1207 12:48:24.401031 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:48:24.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:24.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:24.429
  STEP: starting the proxy server @ 12/07/24 12:48:24.434
  I1207 12:48:24.434307 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-4571 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/07/24 12:48:24.465
  I1207 12:48:24.470498 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1207 12:48:24.471571 20 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:40429

  I1207 12:48:24.471594 20 kubectl.go:2229] kubectl proxy stderr: W1207 12:48:24.465084     349 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4571" for this suite. @ 12/07/24 12:48:24.477
• [0.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/07/24 12:48:24.487
  I1207 12:48:24.487220 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename security-context-test @ 12/07/24 12:48:24.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:24.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:24.507
  I1207 12:48:28.537400 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-309" for this suite. @ 12/07/24 12:48:28.541
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/07/24 12:48:28.551
  I1207 12:48:28.551614 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/07/24 12:48:28.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:28.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:28.571
  STEP: creating a target pod @ 12/07/24 12:48:28.573
  STEP: adding an ephemeral container @ 12/07/24 12:48:30.597
  STEP: checking pod container endpoints @ 12/07/24 12:48:32.615
  I1207 12:48:32.615609 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5948 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:48:32.615624 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:48:32.616056 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:48:32.616103 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5948/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1207 12:48:32.652515 20 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/07/24 12:48:32.661
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/07/24 12:48:32.666
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/07/24 12:48:32.678
  I1207 12:48:32.683128 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5948" for this suite. @ 12/07/24 12:48:32.687
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/07/24 12:48:32.694
  I1207 12:48:32.694683 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:48:32.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:32.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:32.715
  STEP: creating secret secrets-526/secret-test-06258f84-d4ef-40ff-9541-eac1af494ff1 @ 12/07/24 12:48:32.718
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:48:32.722
  STEP: Saw pod success @ 12/07/24 12:48:36.75
  I1207 12:48:36.755834 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-configmaps-49d3eab8-48e8-48e7-a7b5-42d64e9aa401 container env-test: <nil>
  STEP: delete the pod @ 12/07/24 12:48:36.771
  I1207 12:48:36.793413 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-526" for this suite. @ 12/07/24 12:48:36.797
• [4.113 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 12/07/24 12:48:36.808
  I1207 12:48:36.808132 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:48:36.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:36.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:36.831
  I1207 12:48:36.834157 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9664 version'
  I1207 12:48:36.870558 20 builder.go:146] stderr: ""
  I1207 12:48:36.870585 20 builder.go:147] stdout: "Client Version: v1.31.3\nKustomize Version: v5.4.2\nServer Version: v1.31.3\n"
  I1207 12:48:36.870828 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9664" for this suite. @ 12/07/24 12:48:36.881
• [0.082 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 12/07/24 12:48:36.89
  I1207 12:48:36.890103 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:48:36.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:36.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:36.913
  STEP: create deployment with httpd image @ 12/07/24 12:48:36.916
  I1207 12:48:36.916384 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6517 create -f -'
  I1207 12:48:36.982836 20 builder.go:146] stderr: ""
  I1207 12:48:36.982864 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/07/24 12:48:36.982
  I1207 12:48:36.982942 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6517 diff -f -'
  I1207 12:48:41.285967 20 builder.go:135] rc: 1
  I1207 12:48:41.286079 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6517 delete -f -'
  I1207 12:48:41.334381 20 builder.go:146] stderr: ""
  I1207 12:48:41.334417 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1207 12:48:41.334557 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6517" for this suite. @ 12/07/24 12:48:41.338
• [4.458 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/07/24 12:48:41.348
  I1207 12:48:41.348691 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename endpointslice @ 12/07/24 12:48:41.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:41.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:41.373
  STEP: getting /apis @ 12/07/24 12:48:41.375
  STEP: getting /apis/discovery.k8s.io @ 12/07/24 12:48:41.378
  STEP: getting /apis/discovery.k8s.iov1 @ 12/07/24 12:48:41.379
  STEP: creating @ 12/07/24 12:48:41.38
  STEP: getting @ 12/07/24 12:48:41.395
  STEP: listing @ 12/07/24 12:48:41.399
  STEP: watching @ 12/07/24 12:48:41.403
  I1207 12:48:41.403222 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/07/24 12:48:41.404
  STEP: cluster-wide watching @ 12/07/24 12:48:41.407
  I1207 12:48:41.407797 20 endpointslice.go:459] starting watch
  STEP: patching @ 12/07/24 12:48:41.408
  STEP: updating @ 12/07/24 12:48:41.413
  I1207 12:48:41.423422 20 endpointslice.go:482] waiting for watch events with expected annotations
  I1207 12:48:41.423457 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/07/24 12:48:41.423
  STEP: deleting a collection @ 12/07/24 12:48:41.438
  I1207 12:48:41.456443 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-393" for this suite. @ 12/07/24 12:48:41.461
• [0.120 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 12/07/24 12:48:41.468
  I1207 12:48:41.468581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl-logs @ 12/07/24 12:48:41.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:41.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:41.489
  STEP: creating a pod @ 12/07/24 12:48:41.492
  I1207 12:48:41.492254 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1207 12:48:41.547139 20 builder.go:146] stderr: ""
  I1207 12:48:41.547166 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/07/24 12:48:41.547
  I1207 12:48:41.547326 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1207 12:48:43.558468 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/07/24 12:48:43.558
  I1207 12:48:43.558560 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 logs logs-generator logs-generator'
  I1207 12:48:43.611206 20 builder.go:146] stderr: ""
  I1207 12:48:43.611251 20 builder.go:147] stdout: "I1207 12:48:42.086494       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/rck4 484\nI1207 12:48:42.286587       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/582v 439\nI1207 12:48:42.487201       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/6w6 398\nI1207 12:48:42.686622       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/blb 515\nI1207 12:48:42.886980       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/gjqb 532\nI1207 12:48:43.087308       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/xptj 308\nI1207 12:48:43.286633       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/stk 563\nI1207 12:48:43.486930       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/q5b 492\n"
  STEP: limiting log lines @ 12/07/24 12:48:43.611
  I1207 12:48:43.611315 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 logs logs-generator logs-generator --tail=1'
  I1207 12:48:43.665583 20 builder.go:146] stderr: ""
  I1207 12:48:43.665613 20 builder.go:147] stdout: "I1207 12:48:43.486930       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/q5b 492\n"
  I1207 12:48:43.665625 20 logs.go:180] got output "I1207 12:48:43.486930       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/q5b 492\n"
  STEP: limiting log bytes @ 12/07/24 12:48:43.665
  I1207 12:48:43.665682 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 logs logs-generator logs-generator --limit-bytes=1'
  I1207 12:48:43.713511 20 builder.go:146] stderr: ""
  I1207 12:48:43.713538 20 builder.go:147] stdout: "I"
  I1207 12:48:43.713546 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 12/07/24 12:48:43.713
  I1207 12:48:43.713617 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 logs logs-generator logs-generator --tail=1 --timestamps'
  I1207 12:48:43.762592 20 builder.go:146] stderr: ""
  I1207 12:48:43.762623 20 builder.go:147] stdout: "2024-12-07T12:48:43.687436597Z I1207 12:48:43.687343       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/lrp 335\n"
  I1207 12:48:43.762632 20 logs.go:192] got output "2024-12-07T12:48:43.687436597Z I1207 12:48:43.687343       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/lrp 335\n"
  STEP: restricting to a time range @ 12/07/24 12:48:43.762
  I1207 12:48:46.263555 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 logs logs-generator logs-generator --since=1s'
  I1207 12:48:46.314647 20 builder.go:146] stderr: ""
  I1207 12:48:46.314697 20 builder.go:147] stdout: "I1207 12:48:45.487195       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/cgtf 555\nI1207 12:48:45.686556       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/qq9p 238\nI1207 12:48:45.887073       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/6g8 227\nI1207 12:48:46.087389       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/5gg9 499\nI1207 12:48:46.287419       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/xjh2 405\n"
  I1207 12:48:46.314743 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 logs logs-generator logs-generator --since=24h'
  I1207 12:48:46.364443 20 builder.go:146] stderr: ""
  I1207 12:48:46.364511 20 builder.go:147] stdout: "I1207 12:48:42.086494       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/rck4 484\nI1207 12:48:42.286587       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/582v 439\nI1207 12:48:42.487201       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/6w6 398\nI1207 12:48:42.686622       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/blb 515\nI1207 12:48:42.886980       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/gjqb 532\nI1207 12:48:43.087308       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/xptj 308\nI1207 12:48:43.286633       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/stk 563\nI1207 12:48:43.486930       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/q5b 492\nI1207 12:48:43.687343       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/lrp 335\nI1207 12:48:43.886727       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/4wb 292\nI1207 12:48:44.087049       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/2hg 208\nI1207 12:48:44.287377       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/wxn 355\nI1207 12:48:44.486605       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/pxl 329\nI1207 12:48:44.686955       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/rbk8 370\nI1207 12:48:44.887271       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/48cq 274\nI1207 12:48:45.086561       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/bw5x 309\nI1207 12:48:45.286873       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/2dzm 266\nI1207 12:48:45.487195       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/cgtf 555\nI1207 12:48:45.686556       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/qq9p 238\nI1207 12:48:45.887073       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/6g8 227\nI1207 12:48:46.087389       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/5gg9 499\nI1207 12:48:46.287419       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/xjh2 405\n"
  I1207 12:48:46.364640 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-logs-895 delete pod logs-generator'
  I1207 12:48:47.076089 20 builder.go:146] stderr: ""
  I1207 12:48:47.076135 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1207 12:48:47.076264 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-895" for this suite. @ 12/07/24 12:48:47.08
• [5.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 12/07/24 12:48:47.09
  I1207 12:48:47.090944 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:48:47.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:47.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:47.11
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3592 @ 12/07/24 12:48:47.113
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/07/24 12:48:47.124
  STEP: creating service externalsvc in namespace services-3592 @ 12/07/24 12:48:47.124
  STEP: creating replication controller externalsvc in namespace services-3592 @ 12/07/24 12:48:47.142
  I1207 12:48:47.148838      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-3592, replica count: 2
  I1207 12:48:50.200963      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/07/24 12:48:50.206
  I1207 12:48:50.223600 20 resource.go:361] Creating new exec pod
  I1207 12:48:52.238603 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3592 exec execpod4vpzm -- /bin/sh -x -c nslookup clusterip-service.services-3592.svc.cluster.local'
  I1207 12:48:52.342218 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-3592.svc.cluster.local\n"
  I1207 12:48:52.342260 20 builder.go:147] stdout: "Server:\t\t10.152.183.170\nAddress:\t10.152.183.170#53\n\nclusterip-service.services-3592.svc.cluster.local\tcanonical name = externalsvc.services-3592.svc.cluster.local.\nName:\texternalsvc.services-3592.svc.cluster.local\nAddress: 10.152.183.26\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3592, will wait for the garbage collector to delete the pods @ 12/07/24 12:48:52.342
  I1207 12:48:52.405901 20 resources.go:139] Deleting ReplicationController externalsvc took: 9.450942ms
  I1207 12:48:52.506490 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.584293ms
  I1207 12:48:55.124087 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1207 12:48:55.136245 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3592" for this suite. @ 12/07/24 12:48:55.14
• [8.058 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 12/07/24 12:48:55.148
  I1207 12:48:55.148975 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:48:55.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:48:55.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:48:55.169
  STEP: Counting existing ResourceQuota @ 12/07/24 12:48:55.172
  STEP: Creating a ResourceQuota @ 12/07/24 12:49:00.177
  STEP: Ensuring resource quota status is calculated @ 12/07/24 12:49:00.184
  STEP: Creating a Pod that fits quota @ 12/07/24 12:49:02.19
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/07/24 12:49:02.206
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/07/24 12:49:04.212
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/07/24 12:49:04.214
  STEP: Ensuring a pod cannot update its resource requirements @ 12/07/24 12:49:04.216
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/07/24 12:49:04.221
  STEP: Deleting the pod @ 12/07/24 12:49:06.227
  STEP: Ensuring resource quota status released the pod usage @ 12/07/24 12:49:06.247
  I1207 12:49:08.254282 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-763" for this suite. @ 12/07/24 12:49:08.259
• [13.119 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/07/24 12:49:08.268
  I1207 12:49:08.268408 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:49:08.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:08.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:08.29
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 12:49:08.292
  STEP: Saw pod success @ 12/07/24 12:49:10.313
  I1207 12:49:10.318864 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-852b53ea-1ef6-4f61-97cc-d5edfe626c8d container client-container: <nil>
  STEP: delete the pod @ 12/07/24 12:49:10.33
  I1207 12:49:10.358310 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1237" for this suite. @ 12/07/24 12:49:10.366
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/07/24 12:49:10.385
  I1207 12:49:10.385731 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename containers @ 12/07/24 12:49:10.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:10.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:10.409
  STEP: Creating a pod to test override all @ 12/07/24 12:49:10.419
  STEP: Saw pod success @ 12/07/24 12:49:12.446
  I1207 12:49:12.450329 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod client-containers-0e08b7a0-0b4d-4761-a6a7-d439bd737735 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:49:12.458
  I1207 12:49:12.479315 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8074" for this suite. @ 12/07/24 12:49:12.483
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/07/24 12:49:12.492
  I1207 12:49:12.492886 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 12:49:12.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:12.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:12.514
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/07/24 12:49:12.516
  STEP: Saw pod success @ 12/07/24 12:49:14.533
  I1207 12:49:14.538295 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-ba04137c-1bd4-4fb0-b52a-139a75f341b3 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 12:49:14.554
  I1207 12:49:14.579792 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9798" for this suite. @ 12/07/24 12:49:14.585
• [2.106 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/07/24 12:49:14.599
  I1207 12:49:14.599117 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 12:49:14.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:14.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:14.623
  STEP: set up a multi version CRD @ 12/07/24 12:49:14.627
  I1207 12:49:14.627435 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: rename a version @ 12/07/24 12:49:17.684
  STEP: check the new version name is served @ 12/07/24 12:49:17.695
  STEP: check the old version name is removed @ 12/07/24 12:49:18.508
  STEP: check the other version is not changed @ 12/07/24 12:49:19.114
  I1207 12:49:21.542318 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5273" for this suite. @ 12/07/24 12:49:21.55
• [6.958 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/07/24 12:49:21.557
  I1207 12:49:21.557712 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:49:21.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:21.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:21.579
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 12:49:21.581
  STEP: Saw pod success @ 12/07/24 12:49:25.604
  I1207 12:49:25.609331 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-0c32d9a3-0405-49db-9cd0-907b465ce8ff container client-container: <nil>
  STEP: delete the pod @ 12/07/24 12:49:25.62
  I1207 12:49:25.638327 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1688" for this suite. @ 12/07/24 12:49:25.642
• [4.093 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 12/07/24 12:49:25.65
  I1207 12:49:25.650584 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:49:25.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:25.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:25.673
  I1207 12:49:25.679689 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3218" for this suite. @ 12/07/24 12:49:25.683
• [0.041 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 12/07/24 12:49:25.692
  I1207 12:49:25.692027 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 12:49:25.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:25.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:25.713
  I1207 12:49:25.717151 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  W1207 12:49:25.717620      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003d3a150 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1207 12:49:28.255433      20 warnings.go:70] unknown field "alpha"
  W1207 12:49:28.255464      20 warnings.go:70] unknown field "beta"
  W1207 12:49:28.255467      20 warnings.go:70] unknown field "delta"
  W1207 12:49:28.255470      20 warnings.go:70] unknown field "epsilon"
  W1207 12:49:28.255475      20 warnings.go:70] unknown field "gamma"
  I1207 12:49:28.807452 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9430" for this suite. @ 12/07/24 12:49:28.81
• [3.127 seconds]
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 12/07/24 12:49:28.819
  I1207 12:49:28.819391 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 12:49:28.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:28.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:28.84
  STEP: creating a collection of services @ 12/07/24 12:49:28.843
  I1207 12:49:28.843046 20 service.go:3655] Creating e2e-svc-a-8lzh8
  I1207 12:49:28.854514 20 service.go:3655] Creating e2e-svc-b-xd66b
  I1207 12:49:28.866595 20 service.go:3655] Creating e2e-svc-c-qlhfs
  STEP: deleting service collection @ 12/07/24 12:49:28.879
  I1207 12:49:28.918839 20 service.go:3690] Collection of services has been deleted
  I1207 12:49:28.918944 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6097" for this suite. @ 12/07/24 12:49:28.923
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/07/24 12:49:28.93
  I1207 12:49:28.930530 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 12:49:28.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:28.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:28.95
  STEP: create the rc @ 12/07/24 12:49:28.952
  W1207 12:49:28.957617      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/07/24 12:49:33.964
  STEP: wait for all pods to be garbage collected @ 12/07/24 12:49:33.97
  STEP: Gathering metrics @ 12/07/24 12:49:38.98
  W1207 12:49:38.986110      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1207 12:49:38.986140 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1207 12:49:38.986328 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8014" for this suite. @ 12/07/24 12:49:38.989
• [10.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 12/07/24 12:49:38.999
  I1207 12:49:38.999361 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename disruption @ 12/07/24 12:49:38.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:39.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:39.023
  STEP: creating the pdb @ 12/07/24 12:49:39.026
  STEP: Waiting for the pdb to be processed @ 12/07/24 12:49:39.033
  STEP: updating the pdb @ 12/07/24 12:49:41.039
  STEP: Waiting for the pdb to be processed @ 12/07/24 12:49:41.048
  STEP: patching the pdb @ 12/07/24 12:49:43.054
  STEP: Waiting for the pdb to be processed @ 12/07/24 12:49:43.066
  STEP: Waiting for the pdb to be deleted @ 12/07/24 12:49:45.08
  I1207 12:49:45.083204 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3563" for this suite. @ 12/07/24 12:49:45.087
• [6.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/07/24 12:49:45.096
  I1207 12:49:45.096140 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pod-network-test @ 12/07/24 12:49:45.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:45.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:45.119
  STEP: Performing setup for networking test in namespace pod-network-test-2806 @ 12/07/24 12:49:45.121
  STEP: creating a selector @ 12/07/24 12:49:45.121
  STEP: Creating the service pods in kubernetes @ 12/07/24 12:49:45.121
  I1207 12:49:45.121857 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/07/24 12:49:57.212
  I1207 12:49:59.233043 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1207 12:49:59.233072 20 networking.go:42] Breadth first check of 192.168.39.208 on host 172.31.22.155...
  I1207 12:49:59.237240 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.114.151:9080/dial?request=hostname&protocol=http&host=192.168.39.208&port=8083&tries=1'] Namespace:pod-network-test-2806 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:49:59.237265 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:49:59.237674 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:49:59.237713 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2806/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.114.151%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.39.208%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1207 12:49:59.279069 20 utils.go:356] Waiting for responses: map[]
  I1207 12:49:59.279106 20 utils.go:360] reached 192.168.39.208 after 0/1 tries
  I1207 12:49:59.279115 20 networking.go:42] Breadth first check of 192.168.16.44 on host 172.31.64.144...
  I1207 12:49:59.284088 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.114.151:9080/dial?request=hostname&protocol=http&host=192.168.16.44&port=8083&tries=1'] Namespace:pod-network-test-2806 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:49:59.284113 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:49:59.284524 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:49:59.284563 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2806/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.114.151%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.16.44%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1207 12:49:59.320990 20 utils.go:356] Waiting for responses: map[]
  I1207 12:49:59.321011 20 utils.go:360] reached 192.168.16.44 after 0/1 tries
  I1207 12:49:59.321020 20 networking.go:42] Breadth first check of 192.168.114.150 on host 172.31.9.19...
  I1207 12:49:59.325410 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.114.151:9080/dial?request=hostname&protocol=http&host=192.168.114.150&port=8083&tries=1'] Namespace:pod-network-test-2806 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:49:59.325425 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:49:59.325776 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:49:59.325817 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2806/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.114.151%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.114.150%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1207 12:49:59.363028 20 utils.go:356] Waiting for responses: map[]
  I1207 12:49:59.363067 20 utils.go:360] reached 192.168.114.150 after 0/1 tries
  I1207 12:49:59.363074 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1207 12:49:59.363158 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2806" for this suite. @ 12/07/24 12:49:59.367
• [14.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/07/24 12:49:59.377
  I1207 12:49:59.377797 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename security-context-test @ 12/07/24 12:49:59.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:49:59.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:49:59.4
  I1207 12:50:03.431653 20 security_context.go:538] Got logs for pod "busybox-privileged-false-e6c5fc98-6f77-4119-b4a9-e28abd19d05a": "ip: RTNETLINK answers: Operation not permitted\n"
  I1207 12:50:03.431765 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6014" for this suite. @ 12/07/24 12:50:03.436
• [4.066 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/07/24 12:50:03.443
  I1207 12:50:03.443654 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/07/24 12:50:03.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:50:03.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:50:03.466
  STEP: creating a policy with variables @ 12/07/24 12:50:03.472
  STEP: waiting until the marker is denied @ 12/07/24 12:50:03.489
  STEP: testing a replicated Deployment to be allowed @ 12/07/24 12:50:04.099
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/07/24 12:50:04.115
  I1207 12:50:04.159091 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9165" for this suite. @ 12/07/24 12:50:04.164
• [0.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/07/24 12:50:04.178
  I1207 12:50:04.178646 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 12:50:04.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:50:04.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:50:04.21
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/07/24 12:50:04.213
  I1207 12:50:04.213724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:50:05.462390 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:50:10.401304 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8575" for this suite. @ 12/07/24 12:50:10.407
• [6.237 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/07/24 12:50:10.415
  I1207 12:50:10.415751 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:50:10.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:50:10.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:50:10.436
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e56fc7d0-a210-4c6d-b8ee-f48375dc567b @ 12/07/24 12:50:10.441
  STEP: Creating the pod @ 12/07/24 12:50:10.446
  STEP: Updating configmap projected-configmap-test-upd-e56fc7d0-a210-4c6d-b8ee-f48375dc567b @ 12/07/24 12:50:12.479
  STEP: waiting to observe update in volume @ 12/07/24 12:50:12.484
  I1207 12:51:26.838248 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-473" for this suite. @ 12/07/24 12:51:26.841
• [76.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 12/07/24 12:51:26.851
  I1207 12:51:26.851328 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 12:51:26.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:51:26.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:51:26.873
  STEP: Creating a job @ 12/07/24 12:51:26.876
  STEP: Ensuring active pods == parallelism @ 12/07/24 12:51:26.882
  STEP: delete a job @ 12/07/24 12:51:28.887
  STEP: deleting Job.batch foo in namespace job-4504, will wait for the garbage collector to delete the pods @ 12/07/24 12:51:28.887
  I1207 12:51:28.950302 20 resources.go:139] Deleting Job.batch foo took: 8.143968ms
  I1207 12:51:29.050817 20 resources.go:163] Terminating Job.batch foo pods took: 100.511008ms
  STEP: Ensuring job was deleted @ 12/07/24 12:51:30.451
  I1207 12:51:30.456206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4504" for this suite. @ 12/07/24 12:51:30.46
• [3.618 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/07/24 12:51:30.469
  I1207 12:51:30.469358 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename watch @ 12/07/24 12:51:30.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:51:30.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:51:30.488
  STEP: creating a watch on configmaps @ 12/07/24 12:51:30.491
  STEP: creating a new configmap @ 12/07/24 12:51:30.492
  STEP: modifying the configmap once @ 12/07/24 12:51:30.497
  STEP: closing the watch once it receives two notifications @ 12/07/24 12:51:30.507
  I1207 12:51:30.507329 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3437  6be3470a-ac16-4efa-9ee9-afd96551af84 21014 0 2024-12-07 12:51:30 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-07 12:51:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:51:30.507446 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3437  6be3470a-ac16-4efa-9ee9-afd96551af84 21015 0 2024-12-07 12:51:30 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-07 12:51:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/07/24 12:51:30.507
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/07/24 12:51:30.515
  STEP: deleting the configmap @ 12/07/24 12:51:30.517
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/07/24 12:51:30.524
  I1207 12:51:30.524957 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3437  6be3470a-ac16-4efa-9ee9-afd96551af84 21016 0 2024-12-07 12:51:30 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-07 12:51:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:51:30.525091 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3437  6be3470a-ac16-4efa-9ee9-afd96551af84 21017 0 2024-12-07 12:51:30 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-07 12:51:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:51:30.525169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3437" for this suite. @ 12/07/24 12:51:30.528
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/07/24 12:51:30.536
  I1207 12:51:30.536210 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/07/24 12:51:30.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:51:30.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:51:30.557
  STEP: create the container to handle the HTTPGet hook request. @ 12/07/24 12:51:30.562
  STEP: create the pod with lifecycle hook @ 12/07/24 12:51:32.586
  STEP: check poststart hook @ 12/07/24 12:51:34.604
  STEP: delete the pod with lifecycle hook @ 12/07/24 12:51:34.618
  I1207 12:51:36.637391 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6028" for this suite. @ 12/07/24 12:51:36.641
• [6.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/07/24 12:51:36.648
  I1207 12:51:36.648598 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename subpath @ 12/07/24 12:51:36.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:51:36.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:51:36.67
  STEP: Setting up data @ 12/07/24 12:51:36.672
  STEP: Creating pod pod-subpath-test-downwardapi-brln @ 12/07/24 12:51:36.682
  STEP: Creating a pod to test atomic-volume-subpath @ 12/07/24 12:51:36.682
  STEP: Saw pod success @ 12/07/24 12:51:58.756
  I1207 12:51:58.760084 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-subpath-test-downwardapi-brln container test-container-subpath-downwardapi-brln: <nil>
  STEP: delete the pod @ 12/07/24 12:51:58.768
  STEP: Deleting pod pod-subpath-test-downwardapi-brln @ 12/07/24 12:51:58.788
  I1207 12:51:58.788711 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-brln" in namespace "subpath-1315"
  I1207 12:51:58.792455 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1315" for this suite. @ 12/07/24 12:51:58.796
• [22.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/07/24 12:51:58.803
  I1207 12:51:58.803393 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename hostport @ 12/07/24 12:51:58.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:51:58.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:51:58.828
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/07/24 12:51:58.839
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.22.155 on the node which pod1 resides and expect scheduled @ 12/07/24 12:52:00.864
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.22.155 but use UDP protocol on the node which pod2 resides @ 12/07/24 12:52:02.88
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/07/24 12:52:06.915
  I1207 12:52:06.915097 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.22.155 http://127.0.0.1:54323/hostname] Namespace:hostport-1434 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:52:06.915113 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:52:06.915533 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:52:06.915571 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1434/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.22.155+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.22.155, port: 54323 @ 12/07/24 12:52:06.962
  I1207 12:52:06.962507 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.22.155:54323/hostname] Namespace:hostport-1434 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:52:06.962522 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:52:06.962929 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:52:06.962989 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1434/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.22.155%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.22.155, port: 54323 UDP @ 12/07/24 12:52:06.994
  I1207 12:52:06.994649 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.22.155 54323] Namespace:hostport-1434 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:52:06.994663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:52:06.995126 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:52:06.995182 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1434/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.22.155+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1207 12:52:12.030216 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1434" for this suite. @ 12/07/24 12:52:12.035
• [13.240 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/07/24 12:52:12.043
  I1207 12:52:12.044006 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 12:52:12.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:52:12.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:52:12.067
  STEP: Creating service test in namespace statefulset-1061 @ 12/07/24 12:52:12.069
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/07/24 12:52:12.074
  STEP: Creating stateful set ss in namespace statefulset-1061 @ 12/07/24 12:52:12.077
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1061 @ 12/07/24 12:52:12.085
  I1207 12:52:12.088621 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I1207 12:52:22.091469 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/07/24 12:52:22.091
  I1207 12:52:22.096032 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 12:52:22.177180 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 12:52:22.177213 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 12:52:22.177222 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 12:52:22.181723 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1207 12:52:32.184642 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1207 12:52:32.184683 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1207 12:52:32.202305 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999812s
  I1207 12:52:33.207795 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.996270433s
  I1207 12:52:34.213289 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.991242481s
  I1207 12:52:35.218889 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.985069012s
  I1207 12:52:36.225476 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.980124997s
  I1207 12:52:37.230983 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.973262527s
  I1207 12:52:38.235625 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.967764963s
  I1207 12:52:39.241507 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.96268464s
  I1207 12:52:40.248005 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.956592079s
  I1207 12:52:41.252588 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 951.018063ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1061 @ 12/07/24 12:52:42.252
  I1207 12:52:42.258383 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 12:52:42.340730 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 12:52:42.340768 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 12:52:42.340776 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 12:52:42.347224 20 wait.go:40] Found 1 stateful pods, waiting for 3
  I1207 12:52:52.346781 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1207 12:52:52.346812 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1207 12:52:52.346821 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/07/24 12:52:52.346
  STEP: Scale down will halt with unhealthy stateful pod @ 12/07/24 12:52:52.346
  I1207 12:52:52.355685 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 12:52:52.439758 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 12:52:52.439788 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 12:52:52.439796 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 12:52:52.439837 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 12:52:52.519984 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 12:52:52.520014 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 12:52:52.520027 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 12:52:52.520078 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 12:52:52.597849 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 12:52:52.597894 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 12:52:52.597904 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 12:52:52.597912 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1207 12:52:52.603023 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1207 12:53:02.611285 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1207 12:53:02.611319 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1207 12:53:02.611326 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1207 12:53:02.626751 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.99999977s
  I1207 12:53:03.632386 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995350823s
  I1207 12:53:04.637466 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990398738s
  I1207 12:53:05.643234 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.985378943s
  I1207 12:53:06.647982 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.979383967s
  I1207 12:53:07.653647 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.974840966s
  I1207 12:53:08.659728 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.968508666s
  I1207 12:53:09.664369 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.963113055s
  I1207 12:53:10.669285 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.958488242s
  I1207 12:53:11.674387 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 953.3035ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1061 @ 12/07/24 12:53:12.674
  I1207 12:53:12.679536 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 12:53:12.765635 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 12:53:12.765668 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 12:53:12.765677 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 12:53:12.765719 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 12:53:12.849261 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 12:53:12.849298 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 12:53:12.849307 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 12:53:12.849390 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-1061 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 12:53:12.923796 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 12:53:12.923833 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 12:53:12.923843 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 12:53:12.923852 20 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/07/24 12:53:22.932
  I1207 12:53:22.932945 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1061
  I1207 12:53:22.936700 20 rest.go:150] Scaling statefulset ss to 0
  I1207 12:53:22.944588 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 12:53:22.948988 20 rest.go:88] Deleting statefulset ss
  I1207 12:53:22.963023 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1061" for this suite. @ 12/07/24 12:53:22.967
• [70.933 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/07/24 12:53:22.976
  I1207 12:53:22.976930 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename endpointslice @ 12/07/24 12:53:22.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:53:22.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:53:22.997
  I1207 12:53:23.010372 20 endpointslice.go:1045] Endpoints addresses: [172.31.14.252 172.31.19.219] , ports: [6443]
  I1207 12:53:23.010392 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.14.252 172.31.19.219] , ports: [6443]
  I1207 12:53:23.010461 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1803" for this suite. @ 12/07/24 12:53:23.014
• [0.046 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 12/07/24 12:53:23.022
  I1207 12:53:23.022520 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 12:53:23.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:53:23.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:53:23.045
  STEP: Creating a test externalName service @ 12/07/24 12:53:23.047
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9968.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9968.svc.cluster.local; sleep 1; done
   @ 12/07/24 12:53:23.054
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9968.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9968.svc.cluster.local; sleep 1; done
   @ 12/07/24 12:53:23.054
  STEP: creating a pod to probe DNS @ 12/07/24 12:53:23.054
  STEP: submitting the pod to kubernetes @ 12/07/24 12:53:23.054
  STEP: retrieving the pod @ 12/07/24 12:53:25.072
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:53:25.076
  I1207 12:53:25.087242 20 dns_common.go:552] DNS probes using dns-test-ab0452a7-734d-4e04-a22c-4bda95028e83 succeeded

  STEP: changing the externalName to bar.example.com @ 12/07/24 12:53:25.087
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9968.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9968.svc.cluster.local; sleep 1; done
   @ 12/07/24 12:53:25.096
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9968.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9968.svc.cluster.local; sleep 1; done
   @ 12/07/24 12:53:25.096
  STEP: creating a second pod to probe DNS @ 12/07/24 12:53:25.096
  STEP: submitting the pod to kubernetes @ 12/07/24 12:53:25.096
  STEP: retrieving the pod @ 12/07/24 12:53:31.124
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:53:31.127
  I1207 12:53:31.138835 20 dns_common.go:552] DNS probes using dns-test-4a37d211-fb37-4eab-afae-b907b66b2074 succeeded

  STEP: changing the service to type=ClusterIP @ 12/07/24 12:53:31.138
  W1207 12:53:31.153141      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9968.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9968.svc.cluster.local; sleep 1; done
   @ 12/07/24 12:53:31.153
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9968.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9968.svc.cluster.local; sleep 1; done
   @ 12/07/24 12:53:31.153
  STEP: creating a third pod to probe DNS @ 12/07/24 12:53:31.153
  STEP: submitting the pod to kubernetes @ 12/07/24 12:53:31.158
  STEP: retrieving the pod @ 12/07/24 12:53:33.178
  STEP: looking for the results for each expected name from probers @ 12/07/24 12:53:33.181
  I1207 12:53:33.192519 20 dns_common.go:552] DNS probes using dns-test-ed6add71-01b0-42ea-a792-a5a935cdb632 succeeded

  STEP: deleting the pod @ 12/07/24 12:53:33.192
  STEP: deleting the pod @ 12/07/24 12:53:33.209
  STEP: deleting the pod @ 12/07/24 12:53:33.227
  STEP: deleting the test externalName service @ 12/07/24 12:53:33.245
  I1207 12:53:33.262591 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9968" for this suite. @ 12/07/24 12:53:33.266
• [10.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/07/24 12:53:33.275
  I1207 12:53:33.275358 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename watch @ 12/07/24 12:53:33.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:53:33.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:53:33.296
  STEP: creating a watch on configmaps with label A @ 12/07/24 12:53:33.298
  STEP: creating a watch on configmaps with label B @ 12/07/24 12:53:33.299
  STEP: creating a watch on configmaps with label A or B @ 12/07/24 12:53:33.3
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/07/24 12:53:33.301
  I1207 12:53:33.305669 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21823 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:33.305775 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21823 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/07/24 12:53:33.305
  I1207 12:53:33.313368 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21824 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:33.313431 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21824 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/07/24 12:53:33.313
  I1207 12:53:33.322444 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21825 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:33.322519 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21825 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/07/24 12:53:33.322
  I1207 12:53:33.331250 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21826 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:33.331281 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8097  6c6fc882-0114-447b-b12a-95b4024ee425 21826 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/07/24 12:53:33.331
  I1207 12:53:33.336768 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8097  40fa7103-baec-4471-bd91-33392d58fce8 21828 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:33.336820 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8097  40fa7103-baec-4471-bd91-33392d58fce8 21828 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/07/24 12:53:43.336
  I1207 12:53:43.346519 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8097  40fa7103-baec-4471-bd91-33392d58fce8 21899 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:43.346561 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8097  40fa7103-baec-4471-bd91-33392d58fce8 21899 0 2024-12-07 12:53:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-07 12:53:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 12:53:53.347394 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8097" for this suite. @ 12/07/24 12:53:53.353
• [20.086 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 12/07/24 12:53:53.361
  I1207 12:53:53.361469 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:53:53.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:53:53.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:53:53.385
  STEP: Setting up server cert @ 12/07/24 12:53:53.41
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:53:53.65
  STEP: Deploying the webhook pod @ 12/07/24 12:53:53.659
  STEP: Wait for the deployment to be ready @ 12/07/24 12:53:53.678
  I1207 12:53:53.686128 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/07/24 12:53:55.699
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:53:55.713
  I1207 12:53:56.714470 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/07/24 12:53:56.722
  STEP: create a pod @ 12/07/24 12:53:56.743
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/07/24 12:53:58.773
  I1207 12:53:58.773336 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=webhook-8000 attach --namespace=webhook-8000 to-be-attached-pod -i -c=container1'
  I1207 12:53:58.831706 20 builder.go:135] rc: 1
  I1207 12:53:58.886973 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8000" for this suite. @ 12/07/24 12:53:58.89
  STEP: Destroying namespace "webhook-markers-350" for this suite. @ 12/07/24 12:53:58.9
• [5.546 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 12/07/24 12:53:58.907
  I1207 12:53:58.907881 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:53:58.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:53:58.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:53:58.928
  STEP: Setting up server cert @ 12/07/24 12:53:58.957
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:53:59.188
  STEP: Deploying the webhook pod @ 12/07/24 12:53:59.194
  STEP: Wait for the deployment to be ready @ 12/07/24 12:53:59.209
  I1207 12:53:59.215836 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/07/24 12:54:01.228
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:54:01.242
  I1207 12:54:02.243452 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/07/24 12:54:02.253
  I1207 12:54:02.300988 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6465" for this suite. @ 12/07/24 12:54:02.305
  STEP: Destroying namespace "webhook-markers-5668" for this suite. @ 12/07/24 12:54:02.314
• [3.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 12/07/24 12:54:02.324
  I1207 12:54:02.324250 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:54:02.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:02.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:02.344
  STEP: Setting up server cert @ 12/07/24 12:54:02.372
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:54:02.624
  STEP: Deploying the webhook pod @ 12/07/24 12:54:02.63
  STEP: Wait for the deployment to be ready @ 12/07/24 12:54:02.642
  I1207 12:54:02.652866 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/07/24 12:54:04.666
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:54:04.679
  I1207 12:54:05.680158 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/07/24 12:54:05.688
  STEP: create a pod that should be denied by the webhook @ 12/07/24 12:54:05.704
  STEP: create a pod that causes the webhook to hang @ 12/07/24 12:54:05.72
  STEP: create a configmap that should be denied by the webhook @ 12/07/24 12:54:15.727
  STEP: create a configmap that should be admitted by the webhook @ 12/07/24 12:54:15.757
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/07/24 12:54:15.766
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/07/24 12:54:15.775
  STEP: create a namespace that bypass the webhook @ 12/07/24 12:54:15.781
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/07/24 12:54:15.814
  I1207 12:54:15.876572 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6912" for this suite. @ 12/07/24 12:54:15.88
  STEP: Destroying namespace "webhook-markers-5325" for this suite. @ 12/07/24 12:54:15.887
  STEP: Destroying namespace "exempted-namespace-9291" for this suite. @ 12/07/24 12:54:15.893
• [13.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/07/24 12:54:15.901
  I1207 12:54:15.901101 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 12:54:15.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:15.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:15.922
  STEP: Saw pod success @ 12/07/24 12:54:19.976
  I1207 12:54:19.980951 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod client-envvars-76d538f8-be29-46c1-95d3-0c3824fa0000 container env3cont: <nil>
  STEP: delete the pod @ 12/07/24 12:54:19.998
  I1207 12:54:20.018025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2126" for this suite. @ 12/07/24 12:54:20.022
• [4.128 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/07/24 12:54:20.029
  I1207 12:54:20.029499 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 12:54:20.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:20.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:20.053
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 12:54:20.055
  STEP: Saw pod success @ 12/07/24 12:54:24.082
  I1207 12:54:24.086897 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-df15c835-a13f-4584-8afe-ab4c21651646 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 12:54:24.095
  I1207 12:54:24.116386 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5750" for this suite. @ 12/07/24 12:54:24.119
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/07/24 12:54:24.129
  I1207 12:54:24.129033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename csi-storageclass @ 12/07/24 12:54:24.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:24.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:24.151
  STEP: Creating a StorageClass @ 12/07/24 12:54:24.153
  STEP: Get StorageClass "e2e-mzwqh" @ 12/07/24 12:54:24.158
  STEP: Patching the StorageClass "e2e-mzwqh" @ 12/07/24 12:54:24.161
  STEP: Delete StorageClass "e2e-mzwqh" @ 12/07/24 12:54:24.166
  STEP: Confirm deletion of StorageClass "e2e-mzwqh" @ 12/07/24 12:54:24.174
  STEP: Create a replacement StorageClass @ 12/07/24 12:54:24.177
  STEP: Updating StorageClass "e2e-v2-vjctg" @ 12/07/24 12:54:24.181
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-vjctg=updated" @ 12/07/24 12:54:24.189
  STEP: Deleting StorageClass "e2e-v2-vjctg" via DeleteCollection @ 12/07/24 12:54:24.193
  STEP: Confirm deletion of StorageClass "e2e-v2-vjctg" @ 12/07/24 12:54:24.203
  I1207 12:54:24.207675 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5786" for this suite. @ 12/07/24 12:54:24.211
• [0.092 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/07/24 12:54:24.22
  I1207 12:54:24.220878 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pod-network-test @ 12/07/24 12:54:24.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:24.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:24.242
  STEP: Performing setup for networking test in namespace pod-network-test-9582 @ 12/07/24 12:54:24.245
  STEP: creating a selector @ 12/07/24 12:54:24.245
  STEP: Creating the service pods in kubernetes @ 12/07/24 12:54:24.245
  I1207 12:54:24.245130 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/07/24 12:54:36.331
  I1207 12:54:38.364573 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1207 12:54:38.364609 20 utils.go:496] Going to poll 192.168.39.213 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1207 12:54:38.368812 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.39.213 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9582 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:54:38.368834 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:54:38.369240 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:54:38.369278 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9582/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.39.213+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:54:39.403549 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1207 12:54:39.403608 20 utils.go:496] Going to poll 192.168.16.51 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1207 12:54:39.408041 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.16.51 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9582 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:54:39.408063 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:54:39.408490 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:54:39.408530 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9582/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.16.51+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:54:40.446603 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1207 12:54:40.446642 20 utils.go:496] Going to poll 192.168.114.166 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1207 12:54:40.451474 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.114.166 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9582 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:54:40.451495 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:54:40.451897 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:54:40.451934 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9582/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.114.166+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1207 12:54:41.491562 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1207 12:54:41.491696 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9582" for this suite. @ 12/07/24 12:54:41.496
• [17.283 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 12/07/24 12:54:41.503
  I1207 12:54:41.503837 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 12:54:41.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:41.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:41.525
  STEP: creating the pod @ 12/07/24 12:54:41.527
  I1207 12:54:41.527613 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 create -f -'
  I1207 12:54:41.613721 20 builder.go:146] stderr: ""
  I1207 12:54:41.613770 20 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/07/24 12:54:43.623
  I1207 12:54:43.623190 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 label pods pause testing-label=testing-label-value'
  I1207 12:54:43.683772 20 builder.go:146] stderr: ""
  I1207 12:54:43.683819 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/07/24 12:54:43.683
  I1207 12:54:43.683887 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 get pod pause -L testing-label'
  I1207 12:54:43.731390 20 builder.go:146] stderr: ""
  I1207 12:54:43.731447 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/07/24 12:54:43.731
  I1207 12:54:43.731530 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 label pods pause testing-label-'
  I1207 12:54:43.793163 20 builder.go:146] stderr: ""
  I1207 12:54:43.793204 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/07/24 12:54:43.793
  I1207 12:54:43.793300 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 get pod pause -L testing-label'
  I1207 12:54:43.839235 20 builder.go:146] stderr: ""
  I1207 12:54:43.839271 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/07/24 12:54:43.839
  I1207 12:54:43.839495 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 delete --grace-period=0 --force -f -'
  I1207 12:54:43.897129 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 12:54:43.897164 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1207 12:54:43.897218 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 get rc,svc -l name=pause --no-headers'
  I1207 12:54:43.944697 20 builder.go:146] stderr: "No resources found in kubectl-1221 namespace.\n"
  I1207 12:54:43.944735 20 builder.go:147] stdout: ""
  I1207 12:54:43.944856 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-1221 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1207 12:54:43.987493 20 builder.go:146] stderr: ""
  I1207 12:54:43.987531 20 builder.go:147] stdout: ""
  I1207 12:54:43.987638 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1221" for this suite. @ 12/07/24 12:54:43.992
• [2.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/07/24 12:54:44.001
  I1207 12:54:44.001686 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename discovery @ 12/07/24 12:54:44.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:44.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:44.026
  STEP: Setting up server cert @ 12/07/24 12:54:44.029
  STEP: Requesting APIResourceList from "/api/v1" @ 12/07/24 12:54:44.276
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/07/24 12:54:44.277
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/07/24 12:54:44.278
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/07/24 12:54:44.279
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/07/24 12:54:44.28
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/07/24 12:54:44.281
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/07/24 12:54:44.282
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/07/24 12:54:44.283
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/07/24 12:54:44.284
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/07/24 12:54:44.285
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/07/24 12:54:44.286
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/07/24 12:54:44.287
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/07/24 12:54:44.288
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/07/24 12:54:44.289
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/07/24 12:54:44.29
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/07/24 12:54:44.291
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/07/24 12:54:44.292
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/07/24 12:54:44.293
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/07/24 12:54:44.294
  I1207 12:54:44.295424 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3843" for this suite. @ 12/07/24 12:54:44.3
• [0.306 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/07/24 12:54:44.307
  I1207 12:54:44.307634 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:54:44.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:44.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:44.327
  STEP: Creating configMap with name configmap-test-volume-b6fd5999-7261-4cfe-8455-79dccb06c61f @ 12/07/24 12:54:44.329
  STEP: Creating a pod to test consume configMaps @ 12/07/24 12:54:44.334
  STEP: Saw pod success @ 12/07/24 12:54:48.361
  I1207 12:54:48.366864 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-configmaps-786acf2e-7fa4-42d9-b0a0-61e68001863f container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:54:48.386
  I1207 12:54:48.409517 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1232" for this suite. @ 12/07/24 12:54:48.413
• [4.115 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/07/24 12:54:48.422
  I1207 12:54:48.422588 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename runtimeclass @ 12/07/24 12:54:48.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:48.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:48.446
  I1207 12:54:48.455091 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1684" for this suite. @ 12/07/24 12:54:48.458
• [0.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/07/24 12:54:48.466
  I1207 12:54:48.466757 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 12:54:48.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:48.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:48.49
  STEP: Creating a pod to test env composition @ 12/07/24 12:54:48.494
  STEP: Saw pod success @ 12/07/24 12:54:52.521
  I1207 12:54:52.525855 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod var-expansion-8eb4c83b-2194-4798-b813-e60cb5b16a82 container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 12:54:52.533
  I1207 12:54:52.553283 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2402" for this suite. @ 12/07/24 12:54:52.557
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/07/24 12:54:52.565
  I1207 12:54:52.565333 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename events @ 12/07/24 12:54:52.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:52.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:52.586
  STEP: creating a test event @ 12/07/24 12:54:52.588
  STEP: listing events in all namespaces @ 12/07/24 12:54:52.597
  STEP: listing events in test namespace @ 12/07/24 12:54:52.608
  STEP: listing events with field selection filtering on source @ 12/07/24 12:54:52.611
  STEP: listing events with field selection filtering on reportingController @ 12/07/24 12:54:52.614
  STEP: getting the test event @ 12/07/24 12:54:52.618
  STEP: patching the test event @ 12/07/24 12:54:52.621
  STEP: getting the test event @ 12/07/24 12:54:52.631
  STEP: updating the test event @ 12/07/24 12:54:52.634
  STEP: getting the test event @ 12/07/24 12:54:52.642
  STEP: deleting the test event @ 12/07/24 12:54:52.645
  STEP: listing events in all namespaces @ 12/07/24 12:54:52.654
  STEP: listing events in test namespace @ 12/07/24 12:54:52.663
  I1207 12:54:52.667498 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7721" for this suite. @ 12/07/24 12:54:52.67
• [0.113 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/07/24 12:54:52.678
  I1207 12:54:52.678806 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename events @ 12/07/24 12:54:52.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:52.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:52.699
  STEP: Create set of events @ 12/07/24 12:54:52.702
  I1207 12:54:52.707888 20 core_events.go:198] created test-event-1
  I1207 12:54:52.714891 20 core_events.go:198] created test-event-2
  I1207 12:54:52.719626 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/07/24 12:54:52.719
  STEP: delete collection of events @ 12/07/24 12:54:52.723
  I1207 12:54:52.723076 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/07/24 12:54:52.748
  I1207 12:54:52.748862 20 core_events.go:230] requesting list of events to confirm quantity
  I1207 12:54:52.752153 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9274" for this suite. @ 12/07/24 12:54:52.755
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/07/24 12:54:52.764
  I1207 12:54:52.764134 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 12:54:52.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:52.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:52.788
  I1207 12:54:52.790177 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1207 12:54:52.797948 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1207 12:54:52.803691 20 deployment.go:222] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I1207 12:54:54.811578 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1207 12:54:54.814987 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1207 12:54:54.825555 20 deployment.go:313] Updating deployment test-recreate-deployment
  I1207 12:54:54.825577 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1207 12:54:54.922362 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa756320-0733-4b87-8402-24753fbcedfd",
      ResourceVersion: (string) (len=5) "22744",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 12:54:54.926430 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee337c23-6f42-44cb-9341-45e252fbb134",
      ResourceVersion: (string) (len=5) "22741",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fa756320-0733-4b87-8402-24753fbcedfd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 37 35 36 33  32 30 2d 30 37 33 33 2d  |\"fa756320-0733-|
              00000120  34 62 38 37 2d 38 34 30  32 2d 32 34 37 35 33 66  |4b87-8402-24753f|
              00000130  62 63 65 64 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bcedfd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:54:54.926935 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1207 12:54:54.927137 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54f0696c-401c-4337-b524-1d1ac7a21f49",
      ResourceVersion: (string) (len=5) "22732",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fa756320-0733-4b87-8402-24753fbcedfd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 37 35 36 33  32 30 2d 30 37 33 33 2d  |\"fa756320-0733-|
              00000120  34 62 38 37 2d 38 34 30  32 2d 32 34 37 35 33 66  |4b87-8402-24753f|
              00000130  62 63 65 64 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bcedfd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:54:54.930862 20 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-m74c5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-m74c5",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-2438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c848938-99d2-4f41-a267-0c7062b8397b",
      ResourceVersion: (string) (len=5) "22745",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "ee337c23-6f42-44cb-9341-45e252fbb134",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 65  33 33 37 63 32 33 2d 36  |d\":\"ee337c23-6|
              00000090  66 34 32 2d 34 34 63 62  2d 39 33 34 31 2d 34 35  |f42-44cb-9341-45|
              000000a0  65 32 35 32 66 62 62 31  33 34 5c 22 7d 22 3a 7b  |e252fbb134\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kf6xg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kf6xg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869172894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869172894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kf6xg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:54:54.931904 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2438" for this suite. @ 12/07/24 12:54:54.936
• [2.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/07/24 12:54:54.947
  I1207 12:54:54.947234 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename proxy @ 12/07/24 12:54:54.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:54.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:54.966
  I1207 12:54:55.017782 20 proxy.go:387] Creating pod...
  I1207 12:54:57.037840 20 proxy.go:411] Creating service...
  I1207 12:54:57.050877 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=DELETE
  I1207 12:54:57.055740 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1207 12:54:57.055815 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=OPTIONS
  I1207 12:54:57.060177 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1207 12:54:57.060231 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=PATCH
  I1207 12:54:57.065161 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1207 12:54:57.065189 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=POST
  I1207 12:54:57.069427 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1207 12:54:57.069458 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=PUT
  I1207 12:54:57.073531 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1207 12:54:57.073559 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=DELETE
  I1207 12:54:57.079731 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1207 12:54:57.079851 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1207 12:54:57.086213 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1207 12:54:57.086288 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=PATCH
  I1207 12:54:57.091729 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1207 12:54:57.091763 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=POST
  I1207 12:54:57.097591 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1207 12:54:57.097614 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=PUT
  I1207 12:54:57.102510 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1207 12:54:57.102550 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=GET
  I1207 12:54:57.106023 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1207 12:54:57.106052 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=GET
  I1207 12:54:57.112165 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1207 12:54:57.112267 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/pods/agnhost/proxy?method=HEAD
  I1207 12:54:57.116432 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1207 12:54:57.116457 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5894/services/e2e-proxy-test-service/proxy?method=HEAD
  I1207 12:54:57.120931 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1207 12:54:57.121027 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5894" for this suite. @ 12/07/24 12:54:57.124
• [2.186 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 12/07/24 12:54:57.133
  I1207 12:54:57.133084 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 12:54:57.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:54:57.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:54:57.158
  I1207 12:54:57.160719 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  W1207 12:54:59.706448      20 warnings.go:70] unknown field "alpha"
  W1207 12:54:59.706470      20 warnings.go:70] unknown field "beta"
  W1207 12:54:59.706473      20 warnings.go:70] unknown field "delta"
  W1207 12:54:59.706476      20 warnings.go:70] unknown field "epsilon"
  W1207 12:54:59.706479      20 warnings.go:70] unknown field "gamma"
  I1207 12:55:00.249964 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5810" for this suite. @ 12/07/24 12:55:00.253
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/07/24 12:55:00.26
  I1207 12:55:00.260933 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/07/24 12:55:00.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:55:00.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:55:00.283
  STEP: Cleaning up the secret @ 12/07/24 12:55:02.315
  STEP: Cleaning up the configmap @ 12/07/24 12:55:02.322
  STEP: Cleaning up the pod @ 12/07/24 12:55:02.329
  I1207 12:55:02.343563 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5372" for this suite. @ 12/07/24 12:55:02.348
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 12/07/24 12:55:02.354
  I1207 12:55:02.354574 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 12:55:02.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:55:02.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:55:02.376
  STEP: Creating a ResourceQuota with terminating scope @ 12/07/24 12:55:02.378
  STEP: Ensuring ResourceQuota status is calculated @ 12/07/24 12:55:02.383
  STEP: Creating a ResourceQuota with not terminating scope @ 12/07/24 12:55:04.389
  STEP: Ensuring ResourceQuota status is calculated @ 12/07/24 12:55:04.394
  STEP: Creating a long running pod @ 12/07/24 12:55:06.4
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/07/24 12:55:06.417
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/07/24 12:55:08.423
  STEP: Deleting the pod @ 12/07/24 12:55:10.428
  STEP: Ensuring resource quota status released the pod usage @ 12/07/24 12:55:10.446
  STEP: Creating a terminating pod @ 12/07/24 12:55:12.452
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/07/24 12:55:12.465
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/07/24 12:55:14.471
  STEP: Deleting the pod @ 12/07/24 12:55:16.478
  STEP: Ensuring resource quota status released the pod usage @ 12/07/24 12:55:16.494
  I1207 12:55:18.499788 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7207" for this suite. @ 12/07/24 12:55:18.503
• [16.157 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/07/24 12:55:18.512
  I1207 12:55:18.512077 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 12:55:18.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:55:18.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:55:18.534
  STEP: Creating secret with name secret-test-c9f0e034-3bea-4e8d-b195-e28a6f87742b @ 12/07/24 12:55:18.536
  STEP: Creating a pod to test consume secrets @ 12/07/24 12:55:18.543
  STEP: Saw pod success @ 12/07/24 12:55:22.571
  I1207 12:55:22.575532 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-secrets-36523431-e395-4bd2-be43-29abbb27c5b8 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 12:55:22.582
  I1207 12:55:22.599402 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3636" for this suite. @ 12/07/24 12:55:22.603
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 12/07/24 12:55:22.612
  I1207 12:55:22.612690 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename taint-single-pod @ 12/07/24 12:55:22.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:55:22.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:55:22.633
  I1207 12:55:22.635956 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1207 12:56:22.637562 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1207 12:56:22.642873 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 12/07/24 12:56:22.642
  I1207 12:56:22.858947 20 taints.go:294] Pod is running on ip-172-31-9-19. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/07/24 12:56:22.858
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/07/24 12:56:22.869
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/07/24 12:56:22.873
  I1207 12:56:22.873739 20 taints.go:313] Pod wasn't evicted. Proceeding
  I1207 12:56:22.873751 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/07/24 12:56:22.882
  STEP: Waiting some time to make sure that toleration time passed. @ 12/07/24 12:56:22.885
  I1207 12:57:37.889453 20 taints.go:329] Pod wasn't evicted. Test successful
  I1207 12:57:37.889636 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5324" for this suite. @ 12/07/24 12:57:37.894
• [135.290 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 12/07/24 12:57:37.902
  I1207 12:57:37.902778 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 12:57:37.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:57:37.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:57:37.925
  STEP: Setting up server cert @ 12/07/24 12:57:37.949
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 12:57:38.248
  STEP: Deploying the webhook pod @ 12/07/24 12:57:38.259
  STEP: Wait for the deployment to be ready @ 12/07/24 12:57:38.272
  I1207 12:57:38.279439 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/07/24 12:57:40.292
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 12:57:40.306
  I1207 12:57:41.306672 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/07/24 12:57:41.314
  STEP: create the configmap with a random name @ 12/07/24 12:57:41.332
  STEP: verify the configmap is mutated @ 12/07/24 12:57:41.344
  STEP: create the configmap with 'skip-me' name @ 12/07/24 12:57:41.344
  I1207 12:57:41.407012 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8389" for this suite. @ 12/07/24 12:57:41.41
  STEP: Destroying namespace "webhook-markers-4616" for this suite. @ 12/07/24 12:57:41.417
• [3.524 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/07/24 12:57:41.427
  I1207 12:57:41.427071 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 12:57:41.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:57:41.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:57:41.445
  I1207 12:57:41.448141 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I1207 12:57:41.463871 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 12/07/24 12:57:43.481
  STEP: updating a scale subresource @ 12/07/24 12:57:43.484
  STEP: verifying the deployment Spec.Replicas was modified @ 12/07/24 12:57:43.493
  STEP: Patch a scale subresource @ 12/07/24 12:57:43.497
  I1207 12:57:43.514288 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db1c0045-ba21-451c-beff-46b5a1e9cdbf",
      ResourceVersion: (string) (len=5) "23458",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 12:57:43.523559 20 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1dafd77-5fcb-48e7-888c-e0062c64d9a7",
      ResourceVersion: (string) (len=5) "23461",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "db1c0045-ba21-451c-beff-46b5a1e9cdbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 62 31 63 30 30  34 35 2d 62 61 32 31 2d  |\"db1c0045-ba21-|
              00000120  34 35 31 63 2d 62 65 66  66 2d 34 36 62 35 61 31  |451c-beff-46b5a1|
              00000130  65 39 63 64 62 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e9cdbf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 12:57:43.529491 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-6r67j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-6r67j",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e433d96f-bc43-43bc-9f87-716075708c6e",
      ResourceVersion: (string) (len=5) "23443",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b1dafd77-5fcb-48e7-888c-e0062c64d9a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  64 61 66 64 37 37 2d 35  |d\":\"b1dafd77-5|
              00000090  66 63 62 2d 34 38 65 37  2d 38 38 38 63 2d 65 30  |fcb-48e7-888c-e0|
              000000a0  30 36 32 63 36 34 64 39  61 37 5c 22 7d 22 3a 7b  |062c64d9a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 33 31 5c 22 7d  |2.168.114.131\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-292nq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-292nq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869173062,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://117ea435912a43604581e0a4bb39c7f179ac88ec4990dc84c9a8226ff828584c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-292nq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:57:43.530863 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-zccph" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-zccph",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65630322-a501-4755-86f1-34582b32f0a1",
      ResourceVersion: (string) (len=5) "23463",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b1dafd77-5fcb-48e7-888c-e0062c64d9a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  64 61 66 64 37 37 2d 35  |d\":\"b1dafd77-5|
              00000090  66 63 62 2d 34 38 65 37  2d 38 38 38 63 2d 65 30  |fcb-48e7-888c-e0|
              000000a0  30 36 32 63 36 34 64 39  61 37 5c 22 7d 22 3a 7b  |062c64d9a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfdd6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfdd6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 12:57:43.531572 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9534" for this suite. @ 12/07/24 12:57:43.538
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/07/24 12:57:43.55
  I1207 12:57:43.550982 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 12:57:43.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:57:43.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:57:43.58
  STEP: Creating the pod @ 12/07/24 12:57:43.582
  I1207 12:57:46.137986 20 pod_client.go:173] Successfully updated pod "labelsupdated277ec6a-6621-47e2-8a91-c1959e70cf66"
  I1207 12:57:48.154791 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5169" for this suite. @ 12/07/24 12:57:48.159
• [4.616 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/07/24 12:57:48.167
  I1207 12:57:48.167197 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename init-container @ 12/07/24 12:57:48.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:57:48.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:57:48.19
  STEP: creating the pod @ 12/07/24 12:57:48.192
  I1207 12:57:48.192577 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1207 12:57:50.931234 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1162" for this suite. @ 12/07/24 12:57:50.936
• [2.777 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/07/24 12:57:50.944
  I1207 12:57:50.944880 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename cronjob @ 12/07/24 12:57:50.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:57:50.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:57:50.967
  STEP: Creating a cronjob @ 12/07/24 12:57:50.969
  STEP: Ensuring more than one job is running at a time @ 12/07/24 12:57:50.975
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/07/24 12:59:00.98
  STEP: Removing cronjob @ 12/07/24 12:59:00.984
  I1207 12:59:00.992113 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2693" for this suite. @ 12/07/24 12:59:00.995
• [70.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/07/24 12:59:01.003
  I1207 12:59:01.003426 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-runtime @ 12/07/24 12:59:01.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:59:01.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:59:01.035
  STEP: create the container @ 12/07/24 12:59:01.037
  W1207 12:59:01.046855      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/07/24 12:59:01.046
  STEP: get the container status @ 12/07/24 12:59:04.071
  STEP: the container should be terminated @ 12/07/24 12:59:04.075
  STEP: the termination message should be set @ 12/07/24 12:59:04.075
  I1207 12:59:04.075987 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/07/24 12:59:04.076
  I1207 12:59:04.096649 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3087" for this suite. @ 12/07/24 12:59:04.1
• [3.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/07/24 12:59:04.108
  I1207 12:59:04.108067 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 12:59:04.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:59:04.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:59:04.131
  STEP: Creating configMap with name configmap-test-volume-map-dde70d12-726f-4466-8cd7-2354505a92d2 @ 12/07/24 12:59:04.133
  STEP: Creating a pod to test consume configMaps @ 12/07/24 12:59:04.139
  STEP: Saw pod success @ 12/07/24 12:59:08.162
  I1207 12:59:08.167169 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-f75360c1-84f1-4452-8ff6-3cc96fd1f35e container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 12:59:08.175
  I1207 12:59:08.198678 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5317" for this suite. @ 12/07/24 12:59:08.202
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/07/24 12:59:08.211
  I1207 12:59:08.211780 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 12:59:08.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:59:08.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:59:08.234
  STEP: creating the pod @ 12/07/24 12:59:08.236
  STEP: waiting for pod running @ 12/07/24 12:59:08.244
  STEP: creating a file in subpath @ 12/07/24 12:59:10.253
  I1207 12:59:10.258026 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7965 PodName:var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:59:10.258051 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:59:10.258510 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:59:10.258562 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7965/pods/var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/07/24 12:59:10.304
  I1207 12:59:10.308569 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7965 PodName:var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 12:59:10.308590 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 12:59:10.308935 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 12:59:10.308977 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7965/pods/var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/07/24 12:59:10.343
  I1207 12:59:10.857543 20 pod_client.go:173] Successfully updated pod "var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0"
  STEP: waiting for annotated pod running @ 12/07/24 12:59:10.857
  STEP: deleting the pod gracefully @ 12/07/24 12:59:10.861
  I1207 12:59:10.861941 20 delete.go:62] Deleting pod "var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0" in namespace "var-expansion-7965"
  I1207 12:59:10.870712 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-782f26ee-afa9-4b7b-bbb9-96c3b6125ad0" to be fully deleted
  I1207 12:59:42.961017 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7965" for this suite. @ 12/07/24 12:59:42.964
• [34.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 12/07/24 12:59:42.972
  I1207 12:59:42.972123 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-pred @ 12/07/24 12:59:42.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:59:42.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:59:42.994
  I1207 12:59:42.996200 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1207 12:59:43.003368 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1207 12:59:43.007572 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-155 before test
  I1207 12:59:43.013421 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-jw5cc from ingress-nginx-kubernetes-worker started at 2024-12-07 11:54:23 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.013441 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 12:59:43.013447 20 predicates.go:957] calico-node-gdvcw from kube-system started at 2024-12-07 12:10:53 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.013452 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 12:59:43.013458 20 predicates.go:957] coredns-5b4857d7c8-wxhzr from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.013462 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1207 12:59:43.013468 20 predicates.go:957] kube-state-metrics-5d7bdccd49-jvjgd from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.013472 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1207 12:59:43.013477 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-s5vnh from kube-system started at 2024-12-07 11:55:18 +0000 UTC (2 container statuses recorded)
  I1207 12:59:43.013481 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1207 12:59:43.013485 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1207 12:59:43.013491 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-dqcg9 from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.013495 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1207 12:59:43.013500 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-kpwtp from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.013505 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 2
  I1207 12:59:43.013511 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-kfczm from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 12:59:43.013516 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 12:59:43.013520 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 12:59:43.013524 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-64-144 before test
  I1207 12:59:43.018285 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-t2j8z from ingress-nginx-kubernetes-worker started at 2024-12-07 12:06:13 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.018296 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 12:59:43.018302 20 predicates.go:957] calico-node-sdkxp from kube-system started at 2024-12-07 12:11:14 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.018306 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 12:59:43.018313 20 predicates.go:957] sonobuoy-e2e-job-684450c905e04fbe from sonobuoy started at 2024-12-07 12:13:32 +0000 UTC (2 container statuses recorded)
  I1207 12:59:43.018318 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1207 12:59:43.018323 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 12:59:43.018332 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-jzt9d from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 12:59:43.018336 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 12:59:43.018341 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 12:59:43.018361 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-19 before test
  I1207 12:59:43.023153 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-42sn8 from ingress-nginx-kubernetes-worker started at 2024-12-07 12:56:34 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.023168 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 12:59:43.023174 20 predicates.go:957] calico-node-gdhw7 from kube-system started at 2024-12-07 12:10:43 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.023179 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 12:59:43.023185 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-07 12:13:30 +0000 UTC (1 container statuses recorded)
  I1207 12:59:43.023190 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1207 12:59:43.023196 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-zt4zf from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 12:59:43.023203 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 12:59:43.023208 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/07/24 12:59:43.023
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/07/24 12:59:45.046
  STEP: Trying to apply a random label on the found node. @ 12/07/24 12:59:45.063
  STEP: verifying the node has the label kubernetes.io/e2e-be93cd52-773b-4d7c-8870-de3e90eca37a 42 @ 12/07/24 12:59:45.072
  STEP: Trying to relaunch the pod, now with labels. @ 12/07/24 12:59:45.075
  STEP: removing the label kubernetes.io/e2e-be93cd52-773b-4d7c-8870-de3e90eca37a off the node ip-172-31-9-19 @ 12/07/24 12:59:47.097
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-be93cd52-773b-4d7c-8870-de3e90eca37a @ 12/07/24 12:59:47.11
  I1207 12:59:47.113398 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1562" for this suite. @ 12/07/24 12:59:47.117
• [4.153 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/07/24 12:59:47.124
  I1207 12:59:47.124802 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-watch @ 12/07/24 12:59:47.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 12:59:47.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 12:59:47.146
  I1207 12:59:47.149052 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Creating first CR  @ 12/07/24 12:59:49.686
  I1207 12:59:49.693219 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-07T12:59:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-07T12:59:49Z]] name:name1 resourceVersion:24096 uid:7ab2744b-4a28-4cbc-a05a-a20be4386152] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/07/24 12:59:59.693
  I1207 12:59:59.702971 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-07T12:59:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-07T12:59:59Z]] name:name2 resourceVersion:24141 uid:0ca4b58c-bc31-4cdf-96c7-cb175fcfc22e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/07/24 13:00:09.704
  I1207 13:00:09.712844 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-07T12:59:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-07T13:00:09Z]] name:name1 resourceVersion:24164 uid:7ab2744b-4a28-4cbc-a05a-a20be4386152] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/07/24 13:00:19.713
  I1207 13:00:19.722295 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-07T12:59:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-07T13:00:19Z]] name:name2 resourceVersion:24183 uid:0ca4b58c-bc31-4cdf-96c7-cb175fcfc22e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/07/24 13:00:29.722
  I1207 13:00:29.731500 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-07T12:59:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-07T13:00:09Z]] name:name1 resourceVersion:24203 uid:7ab2744b-4a28-4cbc-a05a-a20be4386152] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/07/24 13:00:39.732
  I1207 13:00:39.742585 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-07T12:59:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-07T13:00:19Z]] name:name2 resourceVersion:24222 uid:0ca4b58c-bc31-4cdf-96c7-cb175fcfc22e] num:map[num1:9223372036854775807 num2:1000000]]}
  I1207 13:00:50.258493 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1555" for this suite. @ 12/07/24 13:00:50.262
• [63.146 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/07/24 13:00:50.271
  I1207 13:00:50.271053 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 13:00:50.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:00:50.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:00:50.292
  STEP: create the rc @ 12/07/24 13:00:50.298
  W1207 13:00:50.304221      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/07/24 13:00:54.321
  STEP: wait for the rc to be deleted @ 12/07/24 13:00:54.332
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/07/24 13:00:59.337
  STEP: Gathering metrics @ 12/07/24 13:01:29.346
  W1207 13:01:29.353178      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1207 13:01:29.353204 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1207 13:01:29.353254 20 delete.go:95] Deleting pod "simpletest.rc-2rk6r" in namespace "gc-1238"
  I1207 13:01:29.368322 20 delete.go:95] Deleting pod "simpletest.rc-2tcb2" in namespace "gc-1238"
  I1207 13:01:29.385960 20 delete.go:95] Deleting pod "simpletest.rc-2z9vq" in namespace "gc-1238"
  I1207 13:01:29.401827 20 delete.go:95] Deleting pod "simpletest.rc-44bgv" in namespace "gc-1238"
  I1207 13:01:29.416904 20 delete.go:95] Deleting pod "simpletest.rc-4cjw8" in namespace "gc-1238"
  I1207 13:01:29.433686 20 delete.go:95] Deleting pod "simpletest.rc-4qq7q" in namespace "gc-1238"
  I1207 13:01:29.447303 20 delete.go:95] Deleting pod "simpletest.rc-4z5dj" in namespace "gc-1238"
  I1207 13:01:29.466475 20 delete.go:95] Deleting pod "simpletest.rc-58j2m" in namespace "gc-1238"
  I1207 13:01:29.482000 20 delete.go:95] Deleting pod "simpletest.rc-5gszs" in namespace "gc-1238"
  I1207 13:01:29.499662 20 delete.go:95] Deleting pod "simpletest.rc-5hhvv" in namespace "gc-1238"
  I1207 13:01:29.514445 20 delete.go:95] Deleting pod "simpletest.rc-5r7tq" in namespace "gc-1238"
  I1207 13:01:29.527003 20 delete.go:95] Deleting pod "simpletest.rc-5z5tz" in namespace "gc-1238"
  I1207 13:01:29.541671 20 delete.go:95] Deleting pod "simpletest.rc-62cjh" in namespace "gc-1238"
  I1207 13:01:29.557274 20 delete.go:95] Deleting pod "simpletest.rc-69c98" in namespace "gc-1238"
  I1207 13:01:29.574573 20 delete.go:95] Deleting pod "simpletest.rc-6b9wp" in namespace "gc-1238"
  I1207 13:01:29.597097 20 delete.go:95] Deleting pod "simpletest.rc-6d5x9" in namespace "gc-1238"
  I1207 13:01:29.619437 20 delete.go:95] Deleting pod "simpletest.rc-6mm5z" in namespace "gc-1238"
  I1207 13:01:29.632927 20 delete.go:95] Deleting pod "simpletest.rc-6ndst" in namespace "gc-1238"
  I1207 13:01:29.648814 20 delete.go:95] Deleting pod "simpletest.rc-6sg6d" in namespace "gc-1238"
  I1207 13:01:29.662571 20 delete.go:95] Deleting pod "simpletest.rc-7bljq" in namespace "gc-1238"
  I1207 13:01:29.681891 20 delete.go:95] Deleting pod "simpletest.rc-7khkf" in namespace "gc-1238"
  I1207 13:01:29.696721 20 delete.go:95] Deleting pod "simpletest.rc-7s4jj" in namespace "gc-1238"
  I1207 13:01:29.712982 20 delete.go:95] Deleting pod "simpletest.rc-7zf9r" in namespace "gc-1238"
  I1207 13:01:29.727298 20 delete.go:95] Deleting pod "simpletest.rc-87pdr" in namespace "gc-1238"
  I1207 13:01:29.742253 20 delete.go:95] Deleting pod "simpletest.rc-8lttq" in namespace "gc-1238"
  I1207 13:01:29.765636 20 delete.go:95] Deleting pod "simpletest.rc-8m49h" in namespace "gc-1238"
  I1207 13:01:29.791253 20 delete.go:95] Deleting pod "simpletest.rc-8skk8" in namespace "gc-1238"
  I1207 13:01:29.813013 20 delete.go:95] Deleting pod "simpletest.rc-8sqs7" in namespace "gc-1238"
  I1207 13:01:29.831559 20 delete.go:95] Deleting pod "simpletest.rc-96z57" in namespace "gc-1238"
  I1207 13:01:29.852541 20 delete.go:95] Deleting pod "simpletest.rc-9gd2w" in namespace "gc-1238"
  I1207 13:01:29.872517 20 delete.go:95] Deleting pod "simpletest.rc-9mx8q" in namespace "gc-1238"
  I1207 13:01:29.890594 20 delete.go:95] Deleting pod "simpletest.rc-9wl68" in namespace "gc-1238"
  I1207 13:01:29.904543 20 delete.go:95] Deleting pod "simpletest.rc-9xgtm" in namespace "gc-1238"
  I1207 13:01:29.922749 20 delete.go:95] Deleting pod "simpletest.rc-bg8jb" in namespace "gc-1238"
  I1207 13:01:29.940939 20 delete.go:95] Deleting pod "simpletest.rc-bgxpw" in namespace "gc-1238"
  I1207 13:01:29.953426 20 delete.go:95] Deleting pod "simpletest.rc-bj5nx" in namespace "gc-1238"
  I1207 13:01:29.968927 20 delete.go:95] Deleting pod "simpletest.rc-bkzdw" in namespace "gc-1238"
  I1207 13:01:29.987343 20 delete.go:95] Deleting pod "simpletest.rc-bqqnp" in namespace "gc-1238"
  I1207 13:01:30.009035 20 delete.go:95] Deleting pod "simpletest.rc-bxb6r" in namespace "gc-1238"
  I1207 13:01:30.031398 20 delete.go:95] Deleting pod "simpletest.rc-chbh8" in namespace "gc-1238"
  I1207 13:01:30.053335 20 delete.go:95] Deleting pod "simpletest.rc-ckpz5" in namespace "gc-1238"
  I1207 13:01:30.069264 20 delete.go:95] Deleting pod "simpletest.rc-ddjf8" in namespace "gc-1238"
  I1207 13:01:30.087497 20 delete.go:95] Deleting pod "simpletest.rc-dgm9j" in namespace "gc-1238"
  I1207 13:01:30.102286 20 delete.go:95] Deleting pod "simpletest.rc-dl2dw" in namespace "gc-1238"
  I1207 13:01:30.116826 20 delete.go:95] Deleting pod "simpletest.rc-dwrl5" in namespace "gc-1238"
  I1207 13:01:30.134838 20 delete.go:95] Deleting pod "simpletest.rc-fbbbz" in namespace "gc-1238"
  I1207 13:01:30.153400 20 delete.go:95] Deleting pod "simpletest.rc-fbth8" in namespace "gc-1238"
  I1207 13:01:30.171306 20 delete.go:95] Deleting pod "simpletest.rc-fkn8x" in namespace "gc-1238"
  I1207 13:01:30.190533 20 delete.go:95] Deleting pod "simpletest.rc-fnrrb" in namespace "gc-1238"
  I1207 13:01:30.207394 20 delete.go:95] Deleting pod "simpletest.rc-fnz8z" in namespace "gc-1238"
  I1207 13:01:30.226681 20 delete.go:95] Deleting pod "simpletest.rc-fp899" in namespace "gc-1238"
  I1207 13:01:30.241167 20 delete.go:95] Deleting pod "simpletest.rc-fqbvh" in namespace "gc-1238"
  I1207 13:01:30.260818 20 delete.go:95] Deleting pod "simpletest.rc-fr6sc" in namespace "gc-1238"
  I1207 13:01:30.273917 20 delete.go:95] Deleting pod "simpletest.rc-fzklg" in namespace "gc-1238"
  I1207 13:01:30.297918 20 delete.go:95] Deleting pod "simpletest.rc-fzkzs" in namespace "gc-1238"
  I1207 13:01:30.314500 20 delete.go:95] Deleting pod "simpletest.rc-fzl82" in namespace "gc-1238"
  I1207 13:01:30.332093 20 delete.go:95] Deleting pod "simpletest.rc-ghwp5" in namespace "gc-1238"
  I1207 13:01:30.343778 20 delete.go:95] Deleting pod "simpletest.rc-gjhrw" in namespace "gc-1238"
  I1207 13:01:30.362783 20 delete.go:95] Deleting pod "simpletest.rc-gtv6j" in namespace "gc-1238"
  I1207 13:01:30.376781 20 delete.go:95] Deleting pod "simpletest.rc-h9g7h" in namespace "gc-1238"
  I1207 13:01:30.394066 20 delete.go:95] Deleting pod "simpletest.rc-hrrrz" in namespace "gc-1238"
  I1207 13:01:30.415618 20 delete.go:95] Deleting pod "simpletest.rc-j68nm" in namespace "gc-1238"
  I1207 13:01:30.433598 20 delete.go:95] Deleting pod "simpletest.rc-jrlmp" in namespace "gc-1238"
  I1207 13:01:30.445513 20 delete.go:95] Deleting pod "simpletest.rc-jsvtw" in namespace "gc-1238"
  I1207 13:01:30.462478 20 delete.go:95] Deleting pod "simpletest.rc-jzm2r" in namespace "gc-1238"
  I1207 13:01:30.476083 20 delete.go:95] Deleting pod "simpletest.rc-k7mm6" in namespace "gc-1238"
  I1207 13:01:30.499692 20 delete.go:95] Deleting pod "simpletest.rc-kfjks" in namespace "gc-1238"
  I1207 13:01:30.516743 20 delete.go:95] Deleting pod "simpletest.rc-kqzxm" in namespace "gc-1238"
  I1207 13:01:30.531593 20 delete.go:95] Deleting pod "simpletest.rc-ljv97" in namespace "gc-1238"
  I1207 13:01:30.547546 20 delete.go:95] Deleting pod "simpletest.rc-lptmn" in namespace "gc-1238"
  I1207 13:01:30.563013 20 delete.go:95] Deleting pod "simpletest.rc-mn95b" in namespace "gc-1238"
  I1207 13:01:30.577850 20 delete.go:95] Deleting pod "simpletest.rc-mwwlj" in namespace "gc-1238"
  I1207 13:01:30.598765 20 delete.go:95] Deleting pod "simpletest.rc-mxgcg" in namespace "gc-1238"
  I1207 13:01:30.640642 20 delete.go:95] Deleting pod "simpletest.rc-ngpsn" in namespace "gc-1238"
  I1207 13:01:30.657845 20 delete.go:95] Deleting pod "simpletest.rc-nrgz9" in namespace "gc-1238"
  I1207 13:01:30.703196 20 delete.go:95] Deleting pod "simpletest.rc-pqlc4" in namespace "gc-1238"
  I1207 13:01:30.754853 20 delete.go:95] Deleting pod "simpletest.rc-q4d55" in namespace "gc-1238"
  I1207 13:01:30.809066 20 delete.go:95] Deleting pod "simpletest.rc-q5h5s" in namespace "gc-1238"
  I1207 13:01:30.850186 20 delete.go:95] Deleting pod "simpletest.rc-qjr8h" in namespace "gc-1238"
  I1207 13:01:30.902982 20 delete.go:95] Deleting pod "simpletest.rc-qlg7l" in namespace "gc-1238"
  I1207 13:01:30.957487 20 delete.go:95] Deleting pod "simpletest.rc-qm46p" in namespace "gc-1238"
  I1207 13:01:31.020166 20 delete.go:95] Deleting pod "simpletest.rc-qx7bw" in namespace "gc-1238"
  I1207 13:01:31.053749 20 delete.go:95] Deleting pod "simpletest.rc-rk7qm" in namespace "gc-1238"
  I1207 13:01:31.106480 20 delete.go:95] Deleting pod "simpletest.rc-sbl7x" in namespace "gc-1238"
  I1207 13:01:31.157064 20 delete.go:95] Deleting pod "simpletest.rc-sk8v8" in namespace "gc-1238"
  I1207 13:01:31.205122 20 delete.go:95] Deleting pod "simpletest.rc-skrqp" in namespace "gc-1238"
  I1207 13:01:31.256644 20 delete.go:95] Deleting pod "simpletest.rc-snx5q" in namespace "gc-1238"
  I1207 13:01:31.306267 20 delete.go:95] Deleting pod "simpletest.rc-t7ndc" in namespace "gc-1238"
  I1207 13:01:31.353549 20 delete.go:95] Deleting pod "simpletest.rc-t9zsf" in namespace "gc-1238"
  I1207 13:01:31.405093 20 delete.go:95] Deleting pod "simpletest.rc-tqjg7" in namespace "gc-1238"
  I1207 13:01:31.456251 20 delete.go:95] Deleting pod "simpletest.rc-trps7" in namespace "gc-1238"
  I1207 13:01:31.504690 20 delete.go:95] Deleting pod "simpletest.rc-txv7f" in namespace "gc-1238"
  I1207 13:01:31.555664 20 delete.go:95] Deleting pod "simpletest.rc-w2zs7" in namespace "gc-1238"
  I1207 13:01:31.609858 20 delete.go:95] Deleting pod "simpletest.rc-w4442" in namespace "gc-1238"
  I1207 13:01:31.666357 20 delete.go:95] Deleting pod "simpletest.rc-wjjmj" in namespace "gc-1238"
  I1207 13:01:31.706162 20 delete.go:95] Deleting pod "simpletest.rc-wr54x" in namespace "gc-1238"
  I1207 13:01:31.752790 20 delete.go:95] Deleting pod "simpletest.rc-ws8lg" in namespace "gc-1238"
  I1207 13:01:31.804977 20 delete.go:95] Deleting pod "simpletest.rc-xqwnm" in namespace "gc-1238"
  I1207 13:01:31.861027 20 delete.go:95] Deleting pod "simpletest.rc-zgz6d" in namespace "gc-1238"
  I1207 13:01:31.904554 20 delete.go:95] Deleting pod "simpletest.rc-zlws2" in namespace "gc-1238"
  I1207 13:01:31.955616 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1238" for this suite. @ 12/07/24 13:01:31.994
• [41.775 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/07/24 13:01:32.046
  I1207 13:01:32.046190 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replication-controller @ 12/07/24 13:01:32.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:32.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:32.091
  STEP: creating a ReplicationController @ 12/07/24 13:01:32.098
  STEP: waiting for RC to be added @ 12/07/24 13:01:32.109
  STEP: waiting for available Replicas @ 12/07/24 13:01:32.11
  STEP: patching ReplicationController @ 12/07/24 13:01:35.934
  STEP: waiting for RC to be modified @ 12/07/24 13:01:35.941
  STEP: patching ReplicationController status @ 12/07/24 13:01:35.941
  STEP: waiting for RC to be modified @ 12/07/24 13:01:35.948
  STEP: waiting for available Replicas @ 12/07/24 13:01:35.948
  STEP: fetching ReplicationController status @ 12/07/24 13:01:35.953
  STEP: patching ReplicationController scale @ 12/07/24 13:01:35.957
  STEP: waiting for RC to be modified @ 12/07/24 13:01:35.962
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/07/24 13:01:35.962
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/07/24 13:01:36.798
  STEP: updating ReplicationController status @ 12/07/24 13:01:36.802
  STEP: waiting for RC to be modified @ 12/07/24 13:01:36.815
  STEP: listing all ReplicationControllers @ 12/07/24 13:01:36.815
  STEP: checking that ReplicationController has expected values @ 12/07/24 13:01:36.817
  STEP: deleting ReplicationControllers by collection @ 12/07/24 13:01:36.817
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/07/24 13:01:36.828
  I1207 13:01:36.881942 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1207 13:01:36.882050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-137" for this suite. @ 12/07/24 13:01:36.885
• [4.846 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/07/24 13:01:36.891
  I1207 13:01:36.891891 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:01:36.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:36.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:36.917
  STEP: Creating a pod to test downward api env vars @ 12/07/24 13:01:36.919
  E1207 13:01:37.882241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:38.882644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:39.883312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:40.883422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:01:40.943
  I1207 13:01:40.947631 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downward-api-dceb606e-24cb-4e84-826e-afc0606fcf7a container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 13:01:40.967
  I1207 13:01:40.986038 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4598" for this suite. @ 12/07/24 13:01:40.99
• [4.107 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 12/07/24 13:01:40.998
  I1207 13:01:40.998758 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename security-context @ 12/07/24 13:01:40.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:41.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:41.019
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/07/24 13:01:41.021
  E1207 13:01:41.883952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:42.884043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:43.884505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:44.884608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:01:45.043
  I1207 13:01:45.047862 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod security-context-0433f631-9ab8-4c45-99cb-091d8308d7cb container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:01:45.058
  I1207 13:01:45.080157 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1293" for this suite. @ 12/07/24 13:01:45.084
• [4.093 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/07/24 13:01:45.092
  I1207 13:01:45.092328 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:01:45.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:45.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:45.112
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:01:45.114
  E1207 13:01:45.884696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:46.885571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:01:47.137
  I1207 13:01:47.140327 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-54f6b51a-55f8-4f55-87ac-c896a4d06280 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:01:47.149
  I1207 13:01:47.169894 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4850" for this suite. @ 12/07/24 13:01:47.173
• [2.090 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/07/24 13:01:47.182
  I1207 13:01:47.182131 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replication-controller @ 12/07/24 13:01:47.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:47.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:47.205
  STEP: Given a ReplicationController is created @ 12/07/24 13:01:47.207
  STEP: When the matched label of one of its pods change @ 12/07/24 13:01:47.212
  I1207 13:01:47.215325 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1207 13:01:47.886180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:48.886602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:49.887585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:50.887735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:51.888532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:01:52.219888 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/07/24 13:01:52.231
  E1207 13:01:52.888679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:01:53.240291 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-502" for this suite. @ 12/07/24 13:01:53.244
• [6.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/07/24 13:01:53.254
  I1207 13:01:53.254228 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 13:01:53.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:53.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:53.275
  STEP: create the deployment @ 12/07/24 13:01:53.277
  W1207 13:01:53.282735      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/07/24 13:01:53.282
  STEP: delete the deployment @ 12/07/24 13:01:53.788
  STEP: wait for all rs to be garbage collected @ 12/07/24 13:01:53.794
  STEP: expected 0 rs, got 1 rs @ 12/07/24 13:01:53.801
  STEP: expected 0 pods, got 2 pods @ 12/07/24 13:01:53.807
  E1207 13:01:53.889710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/07/24 13:01:54.304
  W1207 13:01:54.309330      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1207 13:01:54.309376 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1207 13:01:54.309532 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5513" for this suite. @ 12/07/24 13:01:54.313
• [1.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/07/24 13:01:54.321
  I1207 13:01:54.321088 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:01:54.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:54.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:54.344
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/07/24 13:01:54.346
  E1207 13:01:54.889837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:55.889963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:01:56.365
  I1207 13:01:56.368946 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-358fed86-f39a-4ea0-9e77-e955269618ce container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:01:56.376
  I1207 13:01:56.395960 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6394" for this suite. @ 12/07/24 13:01:56.4
• [2.087 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/07/24 13:01:56.407
  I1207 13:01:56.407719 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:01:56.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:01:56.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:01:56.432
  STEP: Creating configMap with name configmap-test-volume-map-328d151d-7d5c-4f8f-a99d-7afd8dcf6ebd @ 12/07/24 13:01:56.434
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:01:56.439
  E1207 13:01:56.890088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:57.890719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:58.890826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:01:59.891585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:00.463
  I1207 13:02:00.466404 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-5bc4bef6-0d6a-477d-aa81-05cf028bb4ff container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 13:02:00.473
  I1207 13:02:00.494012 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-721" for this suite. @ 12/07/24 13:02:00.497
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/07/24 13:02:00.509
  I1207 13:02:00.509199 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:02:00.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:00.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:00.533
  STEP: Creating configMap with name projected-configmap-test-volume-551bdecd-0045-421a-ad0b-ff6124b8adf0 @ 12/07/24 13:02:00.536
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:02:00.54
  E1207 13:02:00.891786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:01.892576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:02.893219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:03.893485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:04.564
  I1207 13:02:04.568909 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-configmaps-5faf77ec-58bd-4d8c-b1f5-10a84148b510 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 13:02:04.576
  I1207 13:02:04.597257 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5156" for this suite. @ 12/07/24 13:02:04.601
• [4.100 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/07/24 13:02:04.609
  I1207 13:02:04.609636 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:02:04.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:04.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:04.633
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/07/24 13:02:04.635
  E1207 13:02:04.894048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:05.894150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:06.894872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:07.894937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:08.658
  I1207 13:02:08.663170 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-ac43489b-2787-4e2c-b4a5-5d4432ca69fb container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:02:08.669
  I1207 13:02:08.690334 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-447" for this suite. @ 12/07/24 13:02:08.694
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/07/24 13:02:08.704
  I1207 13:02:08.704142 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:02:08.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:08.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:08.725
  STEP: Creating configMap with name configmap-test-volume-map-02cd6b44-9304-4234-a490-e9b55e21b23b @ 12/07/24 13:02:08.727
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:02:08.733
  E1207 13:02:08.895090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:09.895193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:10.895573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:11.895681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:12.753
  I1207 13:02:12.758750 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-dac8f617-e0bf-4766-a119-8ab10edcd0a0 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 13:02:12.766
  I1207 13:02:12.787492 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8606" for this suite. @ 12/07/24 13:02:12.791
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/07/24 13:02:12.8
  I1207 13:02:12.800838 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:02:12.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:12.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:12.822
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:02:12.825
  E1207 13:02:12.896572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:13.896892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:14.897578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:15.897783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:16.85
  I1207 13:02:16.855258 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-1804cdac-17cb-4380-bd85-9edf4d1af8b9 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:02:16.862
  I1207 13:02:16.882025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3782" for this suite. @ 12/07/24 13:02:16.886
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/07/24 13:02:16.894
  I1207 13:02:16.894591 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 13:02:16.895
  E1207 13:02:16.898329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:16.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:16.915
  STEP: create the deployment @ 12/07/24 13:02:16.917
  W1207 13:02:16.924767      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/07/24 13:02:16.924
  STEP: delete the deployment @ 12/07/24 13:02:17.433
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/07/24 13:02:17.441
  E1207 13:02:17.898451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/07/24 13:02:17.965
  W1207 13:02:17.970817      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1207 13:02:17.970855 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1207 13:02:17.971002 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6770" for this suite. @ 12/07/24 13:02:17.974
• [1.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 12/07/24 13:02:17.981
  I1207 13:02:17.981436 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:02:17.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:18.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:18.004
  I1207 13:02:18.006507 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 create -f -'
  I1207 13:02:18.085313 20 builder.go:146] stderr: ""
  I1207 13:02:18.085361 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1207 13:02:18.085401 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 create -f -'
  I1207 13:02:18.175389 20 builder.go:146] stderr: ""
  I1207 13:02:18.175441 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/07/24 13:02:18.175
  E1207 13:02:18.899157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:19.180309 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 13:02:19.180364 20 framework.go:733] Found 1 / 1
  I1207 13:02:19.180378 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1207 13:02:19.184859 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 13:02:19.184876 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1207 13:02:19.184920 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 describe pod agnhost-primary-vnxxs'
  I1207 13:02:19.240159 20 builder.go:146] stderr: ""
  I1207 13:02:19.240216 20 builder.go:147] stdout: "Name:             agnhost-primary-vnxxs\nNamespace:        kubectl-2257\nPriority:         0\nService Account:  default\nNode:             ip-172-31-9-19/172.31.9.19\nStart Time:       Sat, 07 Dec 2024 13:02:18 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.114.169\nIPs:\n  IP:           192.168.114.169\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://79d2423ae0000e784b7ad8f4f05473ae38fcdae95f3a0efdc5e3dd7f5b10dbef\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 07 Dec 2024 13:02:18 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qjr5k (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-qjr5k:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2257/agnhost-primary-vnxxs to ip-172-31-9-19\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1207 13:02:19.240263 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 describe rc agnhost-primary'
  I1207 13:02:19.296985 20 builder.go:146] stderr: ""
  I1207 13:02:19.297029 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2257\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-vnxxs\n"
  I1207 13:02:19.297073 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 describe service agnhost-primary'
  I1207 13:02:19.350022 20 builder.go:146] stderr: ""
  I1207 13:02:19.350059 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2257\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.232\nIPs:                      10.152.183.232\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.114.169:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1207 13:02:19.354294 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 describe node ip-172-31-14-252'
  I1207 13:02:19.436708 20 builder.go:146] stderr: ""
  I1207 13:02:19.436815 20 builder.go:147] stdout: "Name:               ip-172-31-14-252\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-14-252\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 07 Dec 2024 11:52:01 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-14-252\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 07 Dec 2024 13:02:10 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 07 Dec 2024 12:11:06 +0000   Sat, 07 Dec 2024 12:11:06 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 07 Dec 2024 13:00:01 +0000   Sat, 07 Dec 2024 11:52:01 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 07 Dec 2024 13:00:01 +0000   Sat, 07 Dec 2024 11:52:01 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 07 Dec 2024 13:00:01 +0000   Sat, 07 Dec 2024 11:52:01 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 07 Dec 2024 13:00:01 +0000   Sat, 07 Dec 2024 11:54:30 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.14.252\n  Hostname:    ip-172-31-14-252\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967652Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865252Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec290c9fdd032e13cdec48bc54291fe0\n  System UUID:                ec290c9f-dd03-2e13-cdec-48bc54291fe0\n  Boot ID:                    2f213a2c-ca56-4a0e-9e16-5361815e428b\n  Kernel Version:             6.8.0-1019-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.3\n  Kube-Proxy Version:         v1.31.3\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-5688bfc6d9-fm6nl                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         51m\n  kube-system                 calico-node-bd6pv                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         51m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-xrj2j    0 (0%)        0 (0%)      0 (0%)           0 (0%)         48m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 59m   kube-proxy       \n  Normal   Starting                 56m   kube-proxy       \n  Normal   Starting                 60m   kube-proxy       \n  Normal   Starting                 57m   kube-proxy       \n  Normal   Starting                 57m   kube-proxy       \n  Normal   Starting                 58m   kube-proxy       \n  Normal   Starting                 60m   kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  60m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  60m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    60m   kubelet          Node ip-172-31-14-252 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     60m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  59m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    59m   kubelet          Node ip-172-31-14-252 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     59m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  59m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      59m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 59m   kubelet          Starting kubelet.\n  Normal   Starting                 58m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      58m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  58m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     58m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  58m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    58m   kubelet          Node ip-172-31-14-252 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 57m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      57m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  57m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  57m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    57m   kubelet          Node ip-172-31-14-252 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     57m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  57m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      57m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  57m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    57m   kubelet          Node ip-172-31-14-252 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     57m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientPID\n  Normal   Starting                 57m   kubelet          Starting kubelet.\n  Normal   RegisteredNode           56m   node-controller  Node ip-172-31-14-252 event: Registered Node ip-172-31-14-252 in Controller\n  Normal   Starting                 56m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      56m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  56m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  56m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    56m   kubelet          Node ip-172-31-14-252 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     56m   kubelet          Node ip-172-31-14-252 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           56m   node-controller  Node ip-172-31-14-252 event: Registered Node ip-172-31-14-252 in Controller\n"
  I1207 13:02:19.436948 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2257 describe namespace kubectl-2257'
  I1207 13:02:19.490734 20 builder.go:146] stderr: ""
  I1207 13:02:19.490769 20 builder.go:147] stdout: "Name:         kubectl-2257\nLabels:       e2e-framework=kubectl\n              e2e-run=8dec36a2-19ee-437b-ac64-cc13d82f4065\n              kubernetes.io/metadata.name=kubectl-2257\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1207 13:02:19.490876 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2257" for this suite. @ 12/07/24 13:02:19.494
• [1.523 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/07/24 13:02:19.504
  I1207 13:02:19.504260 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:02:19.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:19.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:19.527
  STEP: Creating projection with secret that has name projected-secret-test-c84a05b0-484e-4a5c-8275-24d4e01aaa58 @ 12/07/24 13:02:19.529
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:02:19.534
  E1207 13:02:19.899986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:20.900161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:21.900832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:22.900881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:23.557
  I1207 13:02:23.561049 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-projected-secrets-15fa5f52-4b01-4565-ac01-d1f98d1e5689 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:02:23.592
  I1207 13:02:23.622566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9817" for this suite. @ 12/07/24 13:02:23.626
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/07/24 13:02:23.634
  I1207 13:02:23.634046 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/07/24 13:02:23.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:23.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:23.657
  STEP: Creating 50 configmaps @ 12/07/24 13:02:23.66
  E1207 13:02:23.901717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 12/07/24 13:02:23.91
  I1207 13:02:23.993464 20 resource.go:87] Pod name wrapped-volume-race-cba0360e-c5c9-422d-9799-ab763d3e9d13: Found 3 pods out of 5
  E1207 13:02:24.901863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:25.901955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:26.901985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:27.902084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:28.902412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:29.000462 20 resource.go:87] Pod name wrapped-volume-race-cba0360e-c5c9-422d-9799-ab763d3e9d13: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/07/24 13:02:29
  STEP: Creating RC which spawns configmap-volume pods @ 12/07/24 13:02:29.031
  I1207 13:02:29.049395 20 resource.go:87] Pod name wrapped-volume-race-51e88435-0360-4bed-81c1-a02196a2b82b: Found 0 pods out of 5
  E1207 13:02:29.902618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:30.902751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:31.903742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:32.903799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:33.904560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:34.057214 20 resource.go:87] Pod name wrapped-volume-race-51e88435-0360-4bed-81c1-a02196a2b82b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/07/24 13:02:34.057
  STEP: Creating RC which spawns configmap-volume pods @ 12/07/24 13:02:34.08
  I1207 13:02:34.097109 20 resource.go:87] Pod name wrapped-volume-race-72587da8-5372-43da-8b05-a9b42ada57c5: Found 0 pods out of 5
  E1207 13:02:34.905566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:35.905677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:36.905850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:37.906543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:38.906894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:39.104462 20 resource.go:87] Pod name wrapped-volume-race-72587da8-5372-43da-8b05-a9b42ada57c5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/07/24 13:02:39.104
  STEP: deleting ReplicationController wrapped-volume-race-72587da8-5372-43da-8b05-a9b42ada57c5 in namespace emptydir-wrapper-4085, will wait for the garbage collector to delete the pods @ 12/07/24 13:02:39.125
  I1207 13:02:39.196243 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-72587da8-5372-43da-8b05-a9b42ada57c5 took: 16.199093ms
  I1207 13:02:39.296416 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-72587da8-5372-43da-8b05-a9b42ada57c5 pods took: 100.152874ms
  E1207 13:02:39.907385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-51e88435-0360-4bed-81c1-a02196a2b82b in namespace emptydir-wrapper-4085, will wait for the garbage collector to delete the pods @ 12/07/24 13:02:40.396
  I1207 13:02:40.459394 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-51e88435-0360-4bed-81c1-a02196a2b82b took: 8.052111ms
  I1207 13:02:40.560479 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-51e88435-0360-4bed-81c1-a02196a2b82b pods took: 101.079659ms
  E1207 13:02:40.911893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:41.908024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-cba0360e-c5c9-422d-9799-ab763d3e9d13 in namespace emptydir-wrapper-4085, will wait for the garbage collector to delete the pods @ 12/07/24 13:02:42.161
  I1207 13:02:42.225257 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-cba0360e-c5c9-422d-9799-ab763d3e9d13 took: 9.868639ms
  I1207 13:02:42.325562 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-cba0360e-c5c9-422d-9799-ab763d3e9d13 pods took: 100.299624ms
  E1207 13:02:42.908151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 12/07/24 13:02:43.426
  I1207 13:02:43.779298 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4085" for this suite. @ 12/07/24 13:02:43.783
• [20.158 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/07/24 13:02:43.791
  I1207 13:02:43.791924 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/07/24 13:02:43.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:43.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:43.816
  I1207 13:02:43.818525 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:02:43.908810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:44.909696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:45.909842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:46.881732 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1919" for this suite. @ 12/07/24 13:02:46.885
• [3.104 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/07/24 13:02:46.896
  I1207 13:02:46.896136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:02:46.896
  E1207 13:02:46.910149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:46.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:46.921
  STEP: Creating projection with secret that has name projected-secret-test-map-4e050450-f0ea-415f-981b-084ca09743c1 @ 12/07/24 13:02:46.923
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:02:46.928
  E1207 13:02:47.910374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:48.910531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:49.910711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:50.910812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:02:50.949
  I1207 13:02:50.953706 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-secrets-4af89587-821e-43b6-9f6e-370979a76e89 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:02:50.963
  I1207 13:02:50.985104 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4147" for this suite. @ 12/07/24 13:02:50.989
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/07/24 13:02:50.996
  I1207 13:02:50.996779 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 13:02:50.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:51.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:51.017
  STEP: Creating projection with secret that has name secret-emptykey-test-a16a82b8-a8bf-4601-acb5-3bdeb5a0db2b @ 12/07/24 13:02:51.019
  I1207 13:02:51.020831 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9106" for this suite. @ 12/07/24 13:02:51.023
• [0.034 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 12/07/24 13:02:51.03
  I1207 13:02:51.030487 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:02:51.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:51.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:51.052
  STEP: Setting up server cert @ 12/07/24 13:02:51.088
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:02:51.261
  STEP: Deploying the webhook pod @ 12/07/24 13:02:51.27
  STEP: Wait for the deployment to be ready @ 12/07/24 13:02:51.286
  I1207 13:02:51.294779 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:02:51.911732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:52.911903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:02:53.307
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:02:53.319
  E1207 13:02:53.912028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:54.320463 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/07/24 13:02:54.404
  STEP: Creating a configMap that should be mutated @ 12/07/24 13:02:54.414
  STEP: Deleting the collection of validation webhooks @ 12/07/24 13:02:54.44
  STEP: Creating a configMap that should not be mutated @ 12/07/24 13:02:54.506
  I1207 13:02:54.558990 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3520" for this suite. @ 12/07/24 13:02:54.564
  STEP: Destroying namespace "webhook-markers-3967" for this suite. @ 12/07/24 13:02:54.572
• [3.548 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 12/07/24 13:02:54.579
  I1207 13:02:54.579179 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:02:54.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:02:54.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:02:54.606
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-581 @ 12/07/24 13:02:54.609
  STEP: changing the ExternalName service to type=NodePort @ 12/07/24 13:02:54.615
  STEP: creating replication controller externalname-service in namespace services-581 @ 12/07/24 13:02:54.632
  I1207 13:02:54.641046      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-581, replica count: 2
  E1207 13:02:54.913033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:55.913505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:56.914569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:02:57.692485      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:02:57.692520 20 resource.go:361] Creating new exec pod
  E1207 13:02:57.915415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:58.915756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:02:59.916552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:00.715521 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-581 exec execpodfxcfw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1207 13:03:00.797022 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1207 13:03:00.797060 20 builder.go:147] stdout: "externalname-service-p5fcz"
  I1207 13:03:00.797133 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-581 exec execpodfxcfw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.24 80'
  I1207 13:03:00.872291 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.24 80\nConnection to 10.152.183.24 80 port [tcp/http] succeeded!\n"
  I1207 13:03:00.872329 20 builder.go:147] stdout: "externalname-service-p5fcz"
  I1207 13:03:00.872432 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-581 exec execpodfxcfw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 30866'
  E1207 13:03:00.916771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:00.951418 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 30866\nConnection to 172.31.22.155 30866 port [tcp/*] succeeded!\n"
  I1207 13:03:00.951463 20 builder.go:147] stdout: ""
  I1207 13:03:01.873431 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-581 exec execpodfxcfw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 30866'
  E1207 13:03:01.916916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:01.964727 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 30866\nConnection to 172.31.22.155 30866 port [tcp/*] succeeded!\n"
  I1207 13:03:01.964778 20 builder.go:147] stdout: ""
  I1207 13:03:02.872559 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-581 exec execpodfxcfw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 30866'
  E1207 13:03:02.917156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:02.995084 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 30866\nConnection to 172.31.22.155 30866 port [tcp/*] succeeded!\n"
  I1207 13:03:02.995124 20 builder.go:147] stdout: "externalname-service-p5fcz"
  I1207 13:03:02.995209 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-581 exec execpodfxcfw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.19 30866'
  I1207 13:03:03.081493 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.9.19 30866\nConnection to 172.31.9.19 30866 port [tcp/*] succeeded!\n"
  I1207 13:03:03.081535 20 builder.go:147] stdout: "externalname-service-p5fcz"
  I1207 13:03:03.081614 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1207 13:03:03.106134 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-581" for this suite. @ 12/07/24 13:03:03.111
• [8.540 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 12/07/24 13:03:03.119
  I1207 13:03:03.119497 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename daemonsets @ 12/07/24 13:03:03.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:03.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:03.143
  STEP: Creating simple DaemonSet "daemon-set" @ 12/07/24 13:03:03.169
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/07/24 13:03:03.175
  I1207 13:03:03.181499 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 13:03:03.181532 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 13:03:03.184381 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1207 13:03:03.184401 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  E1207 13:03:03.917247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:04.181980 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 13:03:04.182015 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 13:03:04.185419 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1207 13:03:04.185439 20 fixtures.go:130] Node ip-172-31-22-155 is running 0 daemon pod, expected 1
  E1207 13:03:04.917647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:05.181165 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-252 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 13:03:05.181196 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-219 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1207 13:03:05.184481 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1207 13:03:05.184503 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/07/24 13:03:05.187
  STEP: DeleteCollection of the DaemonSets @ 12/07/24 13:03:05.192
  STEP: Verify that ReplicaSets have been deleted @ 12/07/24 13:03:05.201
  I1207 13:03:05.211569 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28376"},"items":null}

  I1207 13:03:05.221857 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28380"},"items":[{"metadata":{"name":"daemon-set-f58h9","generateName":"daemon-set-","namespace":"daemonsets-9911","uid":"25fd8478-941e-420f-b302-2f5f494d5b13","resourceVersion":"28379","creationTimestamp":"2024-12-07T13:03:03Z","deletionTimestamp":"2024-12-07T13:03:35Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9cbaf48a-ee10-472a-90d8-ff916a723fba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-07T13:03:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9cbaf48a-ee10-472a-90d8-ff916a723fba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-07T13:03:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.114.178\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wfszf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wfszf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-9-19","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-9-19"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:04Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:04Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:04Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"}],"hostIP":"172.31.9.19","hostIPs":[{"ip":"172.31.9.19"}],"podIP":"192.168.114.178","podIPs":[{"ip":"192.168.114.178"}],"startTime":"2024-12-07T13:03:03Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-07T13:03:03Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://656e14714710f337b0863f82fdb9e4f722d2c1c2a9c1e7953bb5c9717a96142e","started":true,"volumeMounts":[{"name":"kube-api-access-wfszf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vfckm","generateName":"daemon-set-","namespace":"daemonsets-9911","uid":"3e28a6ec-6d85-4440-b6ab-d8622832517a","resourceVersion":"28378","creationTimestamp":"2024-12-07T13:03:03Z","deletionTimestamp":"2024-12-07T13:03:35Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9cbaf48a-ee10-472a-90d8-ff916a723fba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-07T13:03:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9cbaf48a-ee10-472a-90d8-ff916a723fba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-07T13:03:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.39.244\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5bxtj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5bxtj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-155","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-155"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:04Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:04Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:04Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"}],"hostIP":"172.31.22.155","hostIPs":[{"ip":"172.31.22.155"}],"podIP":"192.168.39.244","podIPs":[{"ip":"192.168.39.244"}],"startTime":"2024-12-07T13:03:03Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-07T13:03:03Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://294b6778c19fd8168087030334b839b4227bad999599a05dca47651eccc55340","started":true,"volumeMounts":[{"name":"kube-api-access-5bxtj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vnmdd","generateName":"daemon-set-","namespace":"daemonsets-9911","uid":"56ee2a28-e3d4-4f64-a44a-e8e1cac05b5e","resourceVersion":"28380","creationTimestamp":"2024-12-07T13:03:03Z","deletionTimestamp":"2024-12-07T13:03:35Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9cbaf48a-ee10-472a-90d8-ff916a723fba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-07T13:03:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9cbaf48a-ee10-472a-90d8-ff916a723fba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-07T13:03:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.16.38\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ftrrk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ftrrk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-64-144","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-64-144"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T13:03:03Z"}],"hostIP":"172.31.64.144","hostIPs":[{"ip":"172.31.64.144"}],"podIP":"192.168.16.38","podIPs":[{"ip":"192.168.16.38"}],"startTime":"2024-12-07T13:03:03Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-07T13:03:03Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://54d0d8fb55fc0731ca194e3e23e2643f4c6a7ba2af78f50511dc11ab669f66ec","started":true,"volumeMounts":[{"name":"kube-api-access-ftrrk","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1207 13:03:05.238919 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9911" for this suite. @ 12/07/24 13:03:05.243
• [2.132 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/07/24 13:03:05.251
  I1207 13:03:05.251614 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 13:03:05.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:05.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:05.278
  STEP: Creating service test in namespace statefulset-7131 @ 12/07/24 13:03:05.281
  I1207 13:03:05.297989 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1207 13:03:05.917882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:06.918167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:07.918335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:08.918460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:09.918666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:10.918880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:11.919003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:12.919152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:13.919252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:14.919435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:15.299267 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/07/24 13:03:15.306
  I1207 13:03:15.325578 20 wait.go:40] Found 1 stateful pods, waiting for 2
  E1207 13:03:15.919942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:16.920208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:17.920700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:18.921091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:19.921320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:20.921463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:21.921503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:22.921675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:23.922055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:24.922093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:25.328304 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:03:25.328329 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/07/24 13:03:25.335
  STEP: Delete all of the StatefulSets @ 12/07/24 13:03:25.339
  STEP: Verify that StatefulSets have been deleted @ 12/07/24 13:03:25.349
  I1207 13:03:25.352739 20 statefulset.go:138] Deleting all statefulset in ns statefulset-7131
  I1207 13:03:25.366004 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7131" for this suite. @ 12/07/24 13:03:25.371
• [20.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 12/07/24 13:03:25.381
  I1207 13:03:25.381537 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pv @ 12/07/24 13:03:25.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:25.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:25.406
  STEP: Creating initial PV and PVC @ 12/07/24 13:03:25.409
  I1207 13:03:25.409437 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2385" @ 12/07/24 13:03:25.422
  STEP: Listing PVCs in namespace "pv-2385" @ 12/07/24 13:03:25.425
  STEP: Reading "pvc-fkxcp" Status @ 12/07/24 13:03:25.429
  STEP: Reading "pv-2385-rcfwv" Status @ 12/07/24 13:03:25.433
  STEP: Patching "pvc-fkxcp" Status @ 12/07/24 13:03:25.438
  STEP: Patching "pv-2385-rcfwv" Status @ 12/07/24 13:03:25.444
  STEP: Updating "pvc-fkxcp" Status @ 12/07/24 13:03:25.45
  STEP: Updating "pv-2385-rcfwv" Status @ 12/07/24 13:03:25.459
  I1207 13:03:25.493854 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1207 13:03:25.493891 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-fkxcp"
  I1207 13:03:25.501713 20 pv.go:193] Deleting PersistentVolume "pv-2385-rcfwv"
  I1207 13:03:25.509096 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2385" for this suite. @ 12/07/24 13:03:25.514
• [0.148 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 12/07/24 13:03:25.531
  I1207 13:03:25.531572 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename disruption @ 12/07/24 13:03:25.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:25.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:25.552
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:03:25.563
  E1207 13:03:25.922243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:26.922320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/07/24 13:03:27.59
  I1207 13:03:27.598419 20 disruption.go:691] running pods: 0 < 3
  E1207 13:03:27.922596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:28.922672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:29.600364 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4114" for this suite. @ 12/07/24 13:03:29.604
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 12/07/24 13:03:29.611
  I1207 13:03:29.611925 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:03:29.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:29.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:29.632
  STEP: creating service in namespace services-522 @ 12/07/24 13:03:29.634
  STEP: creating service affinity-nodeport in namespace services-522 @ 12/07/24 13:03:29.634
  STEP: creating replication controller affinity-nodeport in namespace services-522 @ 12/07/24 13:03:29.653
  I1207 13:03:29.661004      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-522, replica count: 3
  E1207 13:03:29.923591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:30.923796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:31.923893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:32.711729      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:03:32.723859 20 resource.go:361] Creating new exec pod
  E1207 13:03:32.924556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:33.924870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:34.925818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:35.746921 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-522 exec execpod-affinity6gdqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1207 13:03:35.828678 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1207 13:03:35.828736 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:03:35.828859 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-522 exec execpod-affinity6gdqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.250 80'
  I1207 13:03:35.899979 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.250 80\nConnection to 10.152.183.250 80 port [tcp/http] succeeded!\n"
  I1207 13:03:35.900022 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:03:35.900169 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-522 exec execpod-affinity6gdqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.64.144 32564'
  E1207 13:03:35.926548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:35.984650 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.64.144 32564\nConnection to 172.31.64.144 32564 port [tcp/*] succeeded!\n"
  I1207 13:03:35.984686 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:03:35.984748 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-522 exec execpod-affinity6gdqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 32564'
  I1207 13:03:36.062340 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 32564\nConnection to 172.31.22.155 32564 port [tcp/*] succeeded!\n"
  I1207 13:03:36.062405 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:03:36.062462 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-522 exec execpod-affinity6gdqc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.155:32564/ ; done'
  I1207 13:03:36.211092 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:32564/\n"
  I1207 13:03:36.211150 20 builder.go:147] stdout: "\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s\naffinity-nodeport-z995s"
  I1207 13:03:36.211164 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211173 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211180 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211186 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211192 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211198 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211204 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211211 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211219 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211225 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211230 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211263 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211269 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211274 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211280 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211286 20 service.go:242] Received response from host: affinity-nodeport-z995s
  I1207 13:03:36.211414 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-522, will wait for the garbage collector to delete the pods @ 12/07/24 13:03:36.227
  I1207 13:03:36.291058 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 8.60065ms
  I1207 13:03:36.391649 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.583468ms
  E1207 13:03:36.927012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:37.927706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:38.928486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:39.416335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-522" for this suite. @ 12/07/24 13:03:39.419
• [9.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/07/24 13:03:39.428
  I1207 13:03:39.428643 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 13:03:39.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:39.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:39.451
  I1207 13:03:39.454379 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:03:39.928649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/07/24 13:03:40.655
  I1207 13:03:40.655936 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-6948 --namespace=crd-publish-openapi-6948 create -f -'
  E1207 13:03:40.929726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:41.930026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:42.718939 20 builder.go:146] stderr: ""
  I1207 13:03:42.718994 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6605-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1207 13:03:42.719044 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-6948 --namespace=crd-publish-openapi-6948 delete e2e-test-crd-publish-openapi-6605-crds test-cr'
  I1207 13:03:42.777467 20 builder.go:146] stderr: ""
  I1207 13:03:42.777511 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6605-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1207 13:03:42.777557 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-6948 --namespace=crd-publish-openapi-6948 apply -f -'
  I1207 13:03:42.832567 20 builder.go:146] stderr: ""
  I1207 13:03:42.832602 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6605-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1207 13:03:42.832641 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-6948 --namespace=crd-publish-openapi-6948 delete e2e-test-crd-publish-openapi-6605-crds test-cr'
  I1207 13:03:42.879489 20 builder.go:146] stderr: ""
  I1207 13:03:42.879525 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6605-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/07/24 13:03:42.879
  I1207 13:03:42.879592 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-6948 explain e2e-test-crd-publish-openapi-6605-crds'
  I1207 13:03:42.919869 20 builder.go:146] stderr: ""
  I1207 13:03:42.919915 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6605-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1207 13:03:42.930375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:43.931286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:44.273574 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6948" for this suite. @ 12/07/24 13:03:44.279
• [4.860 seconds]
------------------------------
S
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/07/24 13:03:44.289
  I1207 13:03:44.289151 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename conformance-tests @ 12/07/24 13:03:44.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:44.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:44.313
  STEP: Getting node addresses @ 12/07/24 13:03:44.315
  I1207 13:03:44.315715 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1207 13:03:44.320901 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5844" for this suite. @ 12/07/24 13:03:44.324
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/07/24 13:03:44.332
  I1207 13:03:44.332651 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:03:44.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:44.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:44.351
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/07/24 13:03:44.354
  E1207 13:03:44.931540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:45.931756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:46.932782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:47.932897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:03:48.377
  I1207 13:03:48.381060 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-3acb56a8-422a-45bd-b136-a6f5499b77b0 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:03:48.39
  I1207 13:03:48.409386 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3706" for this suite. @ 12/07/24 13:03:48.412
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/07/24 13:03:48.422
  I1207 13:03:48.422631 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:03:48.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:48.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:48.444
  STEP: Creating a pod to test downward api env vars @ 12/07/24 13:03:48.446
  E1207 13:03:48.933838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:49.934552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:50.934678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:51.934772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:03:52.469
  I1207 13:03:52.473258 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downward-api-25379066-3f28-431a-bdf3-238ba230fec3 container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 13:03:52.48
  I1207 13:03:52.501688 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8544" for this suite. @ 12/07/24 13:03:52.506
• [4.095 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/07/24 13:03:52.517
  I1207 13:03:52.517226 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename cronjob @ 12/07/24 13:03:52.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:52.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:52.538
  STEP: Creating a cronjob @ 12/07/24 13:03:52.54
  STEP: creating @ 12/07/24 13:03:52.54
  STEP: getting @ 12/07/24 13:03:52.546
  STEP: listing @ 12/07/24 13:03:52.549
  STEP: watching @ 12/07/24 13:03:52.554
  I1207 13:03:52.554373 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/07/24 13:03:52.555
  STEP: cluster-wide watching @ 12/07/24 13:03:52.558
  I1207 13:03:52.558563 20 cronjob.go:382] starting watch
  STEP: patching @ 12/07/24 13:03:52.559
  STEP: updating @ 12/07/24 13:03:52.566
  I1207 13:03:52.575937 20 cronjob.go:406] waiting for watch events with expected annotations
  I1207 13:03:52.575966 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/07/24 13:03:52.576
  STEP: updating /status @ 12/07/24 13:03:52.588
  STEP: get /status @ 12/07/24 13:03:52.597
  STEP: deleting @ 12/07/24 13:03:52.601
  STEP: deleting a collection @ 12/07/24 13:03:52.616
  I1207 13:03:52.629724 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8127" for this suite. @ 12/07/24 13:03:52.633
• [0.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/07/24 13:03:52.641
  I1207 13:03:52.641340 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:03:52.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:03:52.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:03:52.666
  STEP: Creating pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536 @ 12/07/24 13:03:52.668
  E1207 13:03:52.935788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:53.936093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 13:03:54.69
  I1207 13:03:54.693573 20 container_probe.go:1749] Initial restart count of pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 is 0
  I1207 13:03:54.697531 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:03:54.937192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:55.937563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:56.704386 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:03:56.937679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:57.937813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:03:58.709005 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:03:58.938439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:03:59.938458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:00.714797 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:00.939135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:01.939456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:02.720055 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:02.940434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:03.940628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:04.725292 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:04.941648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:05.941760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:06.730256 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:06.942584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:07.942688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:08.735915 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:08.943259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:09.943376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:10.741161 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:10.943538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:11.943633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:12.746954 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:12.944221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:13.944484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:14.751251 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:14.944627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:15.945543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:16.756745 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:16.945993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:17.946116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:18.762834 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:18.947090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:19.947288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:20.767413 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:20.947548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:21.947726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:22.772723 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:22.947917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:23.948041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:24.779254 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:24.948473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:25.948670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:26.784406 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:26.949661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:27.949801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:28.791090 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:28.950312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:29.950451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:30.796653 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:30.950927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:31.951108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:32.802668 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:32.951968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:33.952058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:34.809140 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:34.952404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:35.952662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:36.814086 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:36.953275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:37.953397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:38.819968 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:38.954201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:39.954290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:40.825106 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:40.955402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:41.955611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:42.830314 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  E1207 13:04:42.956477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:43.956815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:04:44.835215 20 container_probe.go:1759] Get pod busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 in namespace container-probe-9536
  I1207 13:04:44.835252 20 container_probe.go:1763] Restart count of pod container-probe-9536/busybox-b2976a71-068e-4f6c-b2b4-4472b705a3a9 is now 1 (50.141652427s elapsed)
  STEP: deleting the pod @ 12/07/24 13:04:44.835
  I1207 13:04:44.854901 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9536" for this suite. @ 12/07/24 13:04:44.859
• [52.227 seconds]
------------------------------
SSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/07/24 13:04:44.868
  I1207 13:04:44.868687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename lease-test @ 12/07/24 13:04:44.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:04:44.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:04:44.895
  I1207 13:04:44.955968 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1207 13:04:44.956981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "lease-test-1603" for this suite. @ 12/07/24 13:04:44.959
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/07/24 13:04:44.967
  I1207 13:04:44.967872 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename namespaces @ 12/07/24 13:04:44.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:04:44.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:04:44.989
  STEP: Updating Namespace "namespaces-6884" @ 12/07/24 13:04:44.993
  I1207 13:04:45.004605 20 namespace.go:389] Namespace "namespaces-6884" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8dec36a2-19ee-437b-ac64-cc13d82f4065", "kubernetes.io/metadata.name":"namespaces-6884", "namespaces-6884":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1207 13:04:45.004681 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6884" for this suite. @ 12/07/24 13:04:45.008
• [0.049 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/07/24 13:04:45.017
  I1207 13:04:45.017104 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 13:04:45.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:04:45.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:04:45.04
  STEP: Creating secret with name secret-test-734cd2fe-65ce-4d8f-9c43-afd5975684ac @ 12/07/24 13:04:45.046
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:04:45.052
  E1207 13:04:45.957109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:46.957326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:47.957621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:48.958055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:04:49.078
  I1207 13:04:49.083114 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-secrets-f97741fa-8ba5-4111-a2f5-01d241b4924a container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:04:49.09
  I1207 13:04:49.110406 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4623" for this suite. @ 12/07/24 13:04:49.114
• [4.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/07/24 13:04:49.122
  I1207 13:04:49.122715 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename chunking @ 12/07/24 13:04:49.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:04:49.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:04:49.142
  STEP: creating a large number of resources @ 12/07/24 13:04:49.144
  E1207 13:04:49.958795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:50.959282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:51.959414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:52.959472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:53.959531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:54.959729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:55.960525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:56.961437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:57.961746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:58.962585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:04:59.963119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:00.964118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:01.964719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:02.965697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:03.965791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:04.966179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:05.966337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 12/07/24 13:05:06.829
  I1207 13:05:06.878470 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1207 13:05:06.928970 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E1207 13:05:06.967002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:06.978758 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1207 13:05:07.029179 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1207 13:05:07.078794 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1207 13:05:07.128675 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1207 13:05:07.178935 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1207 13:05:07.229132 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1207 13:05:07.277893 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1207 13:05:07.329522 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1207 13:05:07.378869 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1207 13:05:07.428673 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1207 13:05:07.479210 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1207 13:05:07.529679 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1207 13:05:07.578534 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1207 13:05:07.628812 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1207 13:05:07.680105 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1207 13:05:07.727645 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1207 13:05:07.778698 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1207 13:05:07.829170 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1207 13:05:07.877465 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1207 13:05:07.928408 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E1207 13:05:07.967431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:07.978802 20 chunking.go:98] Retrieved 17/17 results with rv 29736 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1207 13:05:08.028333 20 chunking.go:98] Retrieved 9/17 results with rv 29736 and continue 
  I1207 13:05:08.078548 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1207 13:05:08.128222 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1207 13:05:08.177758 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1207 13:05:08.228007 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1207 13:05:08.279189 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1207 13:05:08.327884 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1207 13:05:08.379128 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1207 13:05:08.429017 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1207 13:05:08.478749 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1207 13:05:08.529042 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1207 13:05:08.578256 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1207 13:05:08.627550 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1207 13:05:08.678124 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1207 13:05:08.729460 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1207 13:05:08.777901 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1207 13:05:08.829437 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1207 13:05:08.878674 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1207 13:05:08.928305 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E1207 13:05:08.968433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:08.978227 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1207 13:05:09.028679 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1207 13:05:09.078472 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1207 13:05:09.128632 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1207 13:05:09.179214 20 chunking.go:98] Retrieved 17/17 results with rv 29738 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3MzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1207 13:05:09.227465 20 chunking.go:98] Retrieved 9/17 results with rv 29738 and continue 
  I1207 13:05:09.279060 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1207 13:05:09.328712 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1207 13:05:09.378685 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1207 13:05:09.428651 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1207 13:05:09.479141 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1207 13:05:09.527745 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1207 13:05:09.578862 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1207 13:05:09.629256 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1207 13:05:09.677682 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1207 13:05:09.727861 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1207 13:05:09.778829 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1207 13:05:09.828302 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1207 13:05:09.878920 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1207 13:05:09.929379 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E1207 13:05:09.969539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:09.977954 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1207 13:05:10.029042 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1207 13:05:10.078556 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1207 13:05:10.128093 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1207 13:05:10.178114 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1207 13:05:10.228232 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1207 13:05:10.278113 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1207 13:05:10.327684 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1207 13:05:10.378808 20 chunking.go:98] Retrieved 17/17 results with rv 29740 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk3NDAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1207 13:05:10.428166 20 chunking.go:98] Retrieved 9/17 results with rv 29740 and continue 
  STEP: retrieving those results all at once @ 12/07/24 13:05:10.428
  I1207 13:05:10.485109 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1211" for this suite. @ 12/07/24 13:05:10.528
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 12/07/24 13:05:10.583
  I1207 13:05:10.583399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:05:10.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:10.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:10.607
  STEP: creating service endpoint-test2 in namespace services-3280 @ 12/07/24 13:05:10.609
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3280 to expose endpoints map[] @ 12/07/24 13:05:10.62
  I1207 13:05:10.624216 20 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1207 13:05:10.970580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:11.632696 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3280 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3280 @ 12/07/24 13:05:11.632
  E1207 13:05:11.970725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:12.970757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3280 to expose endpoints map[pod1:[80]] @ 12/07/24 13:05:13.652
  I1207 13:05:13.665104 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3280 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/07/24 13:05:13.665
  I1207 13:05:13.665142 20 resource.go:361] Creating new exec pod
  E1207 13:05:13.971808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:14.972058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:15.973077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:16.679488 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3280 exec execpodm2qq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1207 13:05:16.773658 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1207 13:05:16.773708 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:05:16.773789 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3280 exec execpodm2qq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.141 80'
  I1207 13:05:16.845583 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.141 80\nConnection to 10.152.183.141 80 port [tcp/http] succeeded!\n"
  I1207 13:05:16.845624 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3280 @ 12/07/24 13:05:16.845
  E1207 13:05:16.973963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:17.974065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3280 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/07/24 13:05:18.87
  I1207 13:05:18.887790 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3280 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/07/24 13:05:18.887
  E1207 13:05:18.974523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:19.888663 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3280 exec execpodm2qq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1207 13:05:19.968788 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1207 13:05:19.968839 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:05:19.968911 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3280 exec execpodm2qq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.141 80'
  E1207 13:05:19.975198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:20.046491 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.141 80\nConnection to 10.152.183.141 80 port [tcp/http] succeeded!\n"
  I1207 13:05:20.046544 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3280 @ 12/07/24 13:05:20.046
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3280 to expose endpoints map[pod2:[80]] @ 12/07/24 13:05:20.065
  I1207 13:05:20.080423 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3280 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/07/24 13:05:20.08
  E1207 13:05:20.975341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:21.080707 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3280 exec execpodm2qq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1207 13:05:21.162935 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1207 13:05:21.162976 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:05:21.163051 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-3280 exec execpodm2qq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.141 80'
  I1207 13:05:21.240449 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.141 80\nConnection to 10.152.183.141 80 port [tcp/http] succeeded!\n"
  I1207 13:05:21.240487 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3280 @ 12/07/24 13:05:21.24
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3280 to expose endpoints map[] @ 12/07/24 13:05:21.261
  I1207 13:05:21.270798 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3280 exposes endpoints map[]
  I1207 13:05:21.289442 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3280" for this suite. @ 12/07/24 13:05:21.293
• [10.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 12/07/24 13:05:21.302
  I1207 13:05:21.302275 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 13:05:21.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:21.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:21.325
  STEP: Counting existing ResourceQuota @ 12/07/24 13:05:21.327
  E1207 13:05:21.975426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:22.975516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:23.976548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:24.976703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:25.977654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/07/24 13:05:26.333
  STEP: Ensuring resource quota status is calculated @ 12/07/24 13:05:26.34
  E1207 13:05:26.978603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:27.979584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 12/07/24 13:05:28.345
  STEP: Ensuring resource quota status captures replicaset creation @ 12/07/24 13:05:28.359
  E1207 13:05:28.979715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:29.979823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 12/07/24 13:05:30.366
  STEP: Ensuring resource quota status released usage @ 12/07/24 13:05:30.373
  E1207 13:05:30.980733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:31.980954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:32.379428 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3409" for this suite. @ 12/07/24 13:05:32.384
• [11.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/07/24 13:05:32.393
  I1207 13:05:32.393613 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:05:32.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:32.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:32.417
  STEP: Creating projection with secret that has name projected-secret-test-20095686-43ca-461e-b55c-1e196f513e48 @ 12/07/24 13:05:32.419
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:05:32.424
  E1207 13:05:32.981110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:33.981234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:34.981395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:35.981601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:05:36.447
  I1207 13:05:36.452138 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-secrets-a42247de-dd97-4105-a197-6051ce67bdc8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:05:36.458
  I1207 13:05:36.478167 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9588" for this suite. @ 12/07/24 13:05:36.481
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/07/24 13:05:36.489
  I1207 13:05:36.489225 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename certificates @ 12/07/24 13:05:36.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:36.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:36.512
  STEP: getting /apis @ 12/07/24 13:05:36.685
  STEP: getting /apis/certificates.k8s.io @ 12/07/24 13:05:36.689
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/07/24 13:05:36.69
  STEP: creating @ 12/07/24 13:05:36.691
  STEP: getting @ 12/07/24 13:05:36.71
  STEP: listing @ 12/07/24 13:05:36.713
  STEP: watching @ 12/07/24 13:05:36.718
  I1207 13:05:36.718232 20 certificates.go:316] starting watch
  STEP: patching @ 12/07/24 13:05:36.719
  STEP: updating @ 12/07/24 13:05:36.724
  I1207 13:05:36.731283 20 certificates.go:332] waiting for watch events with expected annotations
  I1207 13:05:36.731313 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/07/24 13:05:36.731
  STEP: patching /approval @ 12/07/24 13:05:36.735
  STEP: updating /approval @ 12/07/24 13:05:36.741
  STEP: getting /status @ 12/07/24 13:05:36.746
  STEP: patching /status @ 12/07/24 13:05:36.75
  STEP: updating /status @ 12/07/24 13:05:36.757
  STEP: deleting @ 12/07/24 13:05:36.766
  STEP: deleting a collection @ 12/07/24 13:05:36.781
  I1207 13:05:36.800644 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8141" for this suite. @ 12/07/24 13:05:36.805
• [0.323 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/07/24 13:05:36.812
  I1207 13:05:36.812455 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 13:05:36.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:36.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:36.833
  STEP: Create set of pods @ 12/07/24 13:05:36.835
  I1207 13:05:36.846726 20 pods.go:871] created test-pod-1
  I1207 13:05:36.854303 20 pods.go:871] created test-pod-2
  I1207 13:05:36.862219 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/07/24 13:05:36.862
  E1207 13:05:36.981636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:37.981861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 12/07/24 13:05:38.899
  I1207 13:05:38.904377 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1207 13:05:38.982544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:39.904552 20 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E1207 13:05:39.982807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:40.905100 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2049" for this suite. @ 12/07/24 13:05:40.908
• [4.104 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/07/24 13:05:40.916
  I1207 13:05:40.916663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-runtime @ 12/07/24 13:05:40.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:40.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:40.939
  STEP: create the container @ 12/07/24 13:05:40.941
  W1207 13:05:40.950322      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/07/24 13:05:40.95
  E1207 13:05:40.983012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:41.983403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/07/24 13:05:42.963
  STEP: the container should be terminated @ 12/07/24 13:05:42.967
  STEP: the termination message should be set @ 12/07/24 13:05:42.967
  I1207 13:05:42.967840 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/07/24 13:05:42.967
  E1207 13:05:42.983927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:42.987033 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-73" for this suite. @ 12/07/24 13:05:42.99
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/07/24 13:05:42.998
  I1207 13:05:42.998990 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/07/24 13:05:42.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:43.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:43.021
  STEP: fetching the /apis discovery document @ 12/07/24 13:05:43.023
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/07/24 13:05:43.024
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/07/24 13:05:43.024
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/07/24 13:05:43.024
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/07/24 13:05:43.025
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/07/24 13:05:43.025
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/07/24 13:05:43.026
  I1207 13:05:43.026219 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-782" for this suite. @ 12/07/24 13:05:43.03
• [0.041 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 12/07/24 13:05:43.039
  I1207 13:05:43.039562 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-webhook @ 12/07/24 13:05:43.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:43.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:43.06
  STEP: Setting up server cert @ 12/07/24 13:05:43.062
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/07/24 13:05:43.428
  STEP: Deploying the custom resource conversion webhook pod @ 12/07/24 13:05:43.438
  STEP: Wait for the deployment to be ready @ 12/07/24 13:05:43.453
  I1207 13:05:43.462001 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1207 13:05:43.984500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:44.984603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:05:45.475
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:05:45.489
  E1207 13:05:45.984686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:05:46.489273 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1207 13:05:46.496256 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:05:46.984775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:47.984950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:48.986016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/07/24 13:05:49.065
  STEP: v2 custom resource should be converted @ 12/07/24 13:05:49.07
  I1207 13:05:49.632638 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5871" for this suite. @ 12/07/24 13:05:49.635
• [6.605 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/07/24 13:05:49.645
  I1207 13:05:49.645164 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-runtime @ 12/07/24 13:05:49.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:49.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:49.667
  STEP: create the container @ 12/07/24 13:05:49.669
  W1207 13:05:49.679462      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/07/24 13:05:49.679
  E1207 13:05:49.986580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:50.986937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:51.987403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/07/24 13:05:52.699
  STEP: the container should be terminated @ 12/07/24 13:05:52.702
  STEP: the termination message should be set @ 12/07/24 13:05:52.702
  I1207 13:05:52.702335 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/07/24 13:05:52.702
  I1207 13:05:52.722285 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-557" for this suite. @ 12/07/24 13:05:52.726
• [3.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/07/24 13:05:52.733
  I1207 13:05:52.733480 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:05:52.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:52.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:52.754
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:05:52.756
  E1207 13:05:52.988135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:53.988230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:54.989074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:55.989195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:05:56.779
  I1207 13:05:56.783917 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-18980629-4ad8-4e9f-ae30-7ca9021e6fe5 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:05:56.792
  I1207 13:05:56.813376 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9840" for this suite. @ 12/07/24 13:05:56.816
• [4.091 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/07/24 13:05:56.824
  I1207 13:05:56.824230 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sysctl @ 12/07/24 13:05:56.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:56.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:56.844
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/07/24 13:05:56.846
  STEP: Watching for error events or started pod @ 12/07/24 13:05:56.855
  E1207 13:05:56.989294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:57.989508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 12/07/24 13:05:58.86
  STEP: Checking that the pod succeeded @ 12/07/24 13:05:58.867
  STEP: Getting logs from the pod @ 12/07/24 13:05:58.867
  STEP: Checking that the sysctl is actually updated @ 12/07/24 13:05:58.874
  I1207 13:05:58.874922 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3280" for this suite. @ 12/07/24 13:05:58.879
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/07/24 13:05:58.888
  I1207 13:05:58.888235 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 13:05:58.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:05:58.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:05:58.91
  I1207 13:05:58.912640 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: creating the pod @ 12/07/24 13:05:58.913
  STEP: submitting the pod to kubernetes @ 12/07/24 13:05:58.913
  E1207 13:05:58.990552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:05:59.990770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:06:00.945152 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7338" for this suite. @ 12/07/24 13:06:00.949
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/07/24 13:06:00.956
  I1207 13:06:00.956848 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:06:00.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:00.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:00.979
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:06:00.981
  E1207 13:06:00.991575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:01.991871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:02.992886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:03.992998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:04.993150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:06:05.006
  I1207 13:06:05.010221 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod downwardapi-volume-0c4f1536-38e0-4bf1-a6d3-cd46420f4acf container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:06:05.024
  I1207 13:06:05.045607 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6947" for this suite. @ 12/07/24 13:06:05.051
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/07/24 13:06:05.063
  I1207 13:06:05.063940 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:06:05.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:05.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:05.084
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/07/24 13:06:05.086
  E1207 13:06:05.993519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:06.993815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:07.994211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:08.994564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:06:09.107
  I1207 13:06:09.111136 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-41456665-7058-4016-823f-5adee5df3101 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:06:09.118
  I1207 13:06:09.139887 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1630" for this suite. @ 12/07/24 13:06:09.144
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/07/24 13:06:09.152
  I1207 13:06:09.152773 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename podtemplate @ 12/07/24 13:06:09.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:09.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:09.175
  STEP: Create a pod template @ 12/07/24 13:06:09.177
  STEP: Replace a pod template @ 12/07/24 13:06:09.182
  I1207 13:06:09.192656 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1207 13:06:09.192735 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5517" for this suite. @ 12/07/24 13:06:09.196
• [0.050 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/07/24 13:06:09.203
  I1207 13:06:09.203497 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:06:09.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:09.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:09.222
  STEP: Creating Pod @ 12/07/24 13:06:09.224
  E1207 13:06:09.994734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:10.995567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 12/07/24 13:06:11.248
  I1207 13:06:11.248067 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3502 PodName:pod-sharedvolume-c22f65bd-4396-465b-a270-3283e6a9c757 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:06:11.248085 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:06:11.248568 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:06:11.248608 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-3502/pods/pod-sharedvolume-c22f65bd-4396-465b-a270-3283e6a9c757/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1207 13:06:11.287464 20 exec_util.go:111] Exec stderr: ""
  I1207 13:06:11.287600 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3502" for this suite. @ 12/07/24 13:06:11.291
• [2.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/07/24 13:06:11.298
  I1207 13:06:11.298645 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename subpath @ 12/07/24 13:06:11.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:11.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:11.32
  STEP: Setting up data @ 12/07/24 13:06:11.322
  STEP: Creating pod pod-subpath-test-configmap-hkdn @ 12/07/24 13:06:11.331
  STEP: Creating a pod to test atomic-volume-subpath @ 12/07/24 13:06:11.331
  E1207 13:06:11.995677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:12.995879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:13.996143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:14.996224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:15.996377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:16.996587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:17.996696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:18.997575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:19.997725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:20.997842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:21.997960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:22.998737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:23.998863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:24.999058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:25.999065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:26.999228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:27.999252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:28.999823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:30.000263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:31.000377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:32.000477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:33.001299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:34.002053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:35.002919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:06:35.415
  I1207 13:06:35.418136 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-subpath-test-configmap-hkdn container test-container-subpath-configmap-hkdn: <nil>
  STEP: delete the pod @ 12/07/24 13:06:35.425
  STEP: Deleting pod pod-subpath-test-configmap-hkdn @ 12/07/24 13:06:35.444
  I1207 13:06:35.444500 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-hkdn" in namespace "subpath-9234"
  I1207 13:06:35.447576 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9234" for this suite. @ 12/07/24 13:06:35.45
• [24.158 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/07/24 13:06:35.456
  I1207 13:06:35.456958 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename watch @ 12/07/24 13:06:35.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:35.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:35.48
  STEP: creating a new configmap @ 12/07/24 13:06:35.482
  STEP: modifying the configmap once @ 12/07/24 13:06:35.487
  STEP: modifying the configmap a second time @ 12/07/24 13:06:35.494
  STEP: deleting the configmap @ 12/07/24 13:06:35.502
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/07/24 13:06:35.509
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/07/24 13:06:35.51
  I1207 13:06:35.510856 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1578  cb379df9-cc3c-4816-b40e-5cb6fcf092c0 30974 0 2024-12-07 13:06:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-07 13:06:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 13:06:35.510990 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1578  cb379df9-cc3c-4816-b40e-5cb6fcf092c0 30975 0 2024-12-07 13:06:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-07 13:06:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1207 13:06:35.511075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1578" for this suite. @ 12/07/24 13:06:35.515
• [0.065 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/07/24 13:06:35.521
  I1207 13:06:35.521490 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:06:35.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:35.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:35.541
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/07/24 13:06:35.543
  E1207 13:06:36.003583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:37.004031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:38.004689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:39.004799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:06:39.564
  I1207 13:06:39.568506 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-67e24caf-10f2-4888-8b4b-cf5955d71d9f container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:06:39.575
  I1207 13:06:39.595923 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4039" for this suite. @ 12/07/24 13:06:39.599
• [4.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/07/24 13:06:39.605
  I1207 13:06:39.605826 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:06:39.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:39.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:39.626
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:06:39.628
  E1207 13:06:40.004891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:41.004987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:42.005085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:43.005281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:06:43.648
  I1207 13:06:43.651531 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-9485be8c-7d4b-4ec6-b475-590c9dbfdc95 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:06:43.664
  I1207 13:06:43.685935 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7039" for this suite. @ 12/07/24 13:06:43.689
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/07/24 13:06:43.697
  I1207 13:06:43.697334 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:06:43.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:43.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:43.721
  STEP: Creating configMap with name configmap-test-volume-a1dc5c5c-e213-483f-a2c9-73c3e7c0624a @ 12/07/24 13:06:43.723
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:06:43.728
  E1207 13:06:44.006083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:45.007198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:46.007194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:47.007324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:06:47.751
  I1207 13:06:47.755133 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-cd38cca6-6dd8-4a24-84e6-3e36d5e7ae90 container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:06:47.761
  I1207 13:06:47.781444 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9544" for this suite. @ 12/07/24 13:06:47.785
• [4.097 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/07/24 13:06:47.794
  I1207 13:06:47.794071 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 13:06:47.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:47.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:47.816
  I1207 13:06:47.845848 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"45e3f01e-39b0-4c11-b3d6-db21f81343dc", Controller:(*bool)(0xc0014c5346), BlockOwnerDeletion:(*bool)(0xc0014c5347)}}
  I1207 13:06:47.852063 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"242b5f1a-26d4-48a2-9046-acdbc8aed6dc", Controller:(*bool)(0xc0049e74d6), BlockOwnerDeletion:(*bool)(0xc0049e74d7)}}
  I1207 13:06:47.858135 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"704d990b-48fb-41c5-a4fb-e77cc820a840", Controller:(*bool)(0xc0014c5636), BlockOwnerDeletion:(*bool)(0xc0014c5637)}}
  E1207 13:06:48.007979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:49.008182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:50.008308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:51.008463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:52.008525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:06:52.872894 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3645" for this suite. @ 12/07/24 13:06:52.877
• [5.093 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/07/24 13:06:52.887
  I1207 13:06:52.887500 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/07/24 13:06:52.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:52.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:52.908
  STEP: create the container to handle the HTTPGet hook request. @ 12/07/24 13:06:52.914
  E1207 13:06:53.008749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:54.008870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/07/24 13:06:54.937
  E1207 13:06:55.009248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:56.009542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/07/24 13:06:56.955
  E1207 13:06:57.010157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:06:58.010744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/07/24 13:06:58.971
  I1207 13:06:58.979541 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1743" for this suite. @ 12/07/24 13:06:58.985
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/07/24 13:06:58.993
  I1207 13:06:58.993890 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:06:58.994
  E1207 13:06:59.010976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:06:59.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:06:59.019
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:06:59.022
  E1207 13:07:00.011214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:01.011412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:07:01.039
  I1207 13:07:01.043721 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-e0633527-38dc-47fa-bccc-43e73b6fd5e6 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:07:01.051
  I1207 13:07:01.071613 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9899" for this suite. @ 12/07/24 13:07:01.075
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/07/24 13:07:01.082
  I1207 13:07:01.082978 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:07:01.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:07:01.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:07:01.114
  STEP: Creating pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378 @ 12/07/24 13:07:01.122
  E1207 13:07:02.011596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:03.011967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 13:07:03.152
  I1207 13:07:03.156516 20 container_probe.go:1749] Initial restart count of pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 is 0
  I1207 13:07:03.160261 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:04.012090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:05.013071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:05.166308 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:06.013171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:07.013259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:07.171316 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:08.013287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:09.013949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:09.176665 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:10.014507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:11.014603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:11.181787 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:12.015568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:13.015978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:13.186915 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:14.016501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:15.017637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:15.192475 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:16.018383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:17.018499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:17.198507 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:18.019396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:19.019558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:19.203179 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:20.020379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:21.020501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:21.209093 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:22.021023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:23.021433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:23.215060 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:24.021908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:25.022180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:25.219380 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:26.022576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:27.022675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:27.224851 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:28.023650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:29.023793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:29.230203 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:30.023923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:31.024008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:31.234847 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:32.024562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:33.024590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:33.241177 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:34.025560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:35.026095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:35.246482 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:36.026331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:37.026515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:37.251864 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:38.027283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:39.027447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:39.258366 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:40.028127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:41.028561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:41.263412 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:42.029203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:43.029272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:43.268806 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:44.029531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:45.029623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:45.275420 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:46.030242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:47.030571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:47.280256 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:48.030774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:49.031000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:49.285643 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:50.031502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:51.031611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:51.290708 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:52.032570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:53.032933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:53.296917 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:54.033503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:55.033566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:55.301638 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:56.034505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:57.035573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:57.306923 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:07:58.036046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:07:59.036167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:07:59.312909 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:00.036739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:01.036986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:01.318240 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:02.037082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:03.037307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:03.324553 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:04.037393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:05.037632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:05.330726 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:06.038628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:07.038759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:07.335505 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:08.039305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:09.039442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:09.340577 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:10.039825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:11.040090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:11.346054 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:12.040207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:13.040267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:13.351953 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:14.040759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:15.041754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:15.358283 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:16.041822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:17.042030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:17.362884 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:18.042659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:19.042704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:19.367754 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:20.043430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:21.043525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:21.373281 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:22.043611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:23.044643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:23.379085 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:24.045564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:25.045751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:25.384588 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:26.046308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:27.046431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:27.389702 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:28.047427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:29.047689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:29.394421 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:30.047787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:31.047900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:31.400150 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:32.048041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:33.048262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:33.405722 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:34.048443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:35.048954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:35.412017 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:36.049236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:37.049587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:37.417698 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:38.050381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:39.050566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:39.422908 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:40.050690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:41.050892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:41.428720 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:42.051393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:43.051732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:43.433552 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:44.052271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:45.053125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:45.439295 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:46.053901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:47.054558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:47.445313 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:48.054722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:49.055106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:49.449327 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:50.055683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:51.055899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:51.455367 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:52.056541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:53.056964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:53.460026 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:54.057735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:55.057870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:55.466169 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:56.058642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:57.059150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:57.471890 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:08:58.059639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:08:59.059747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:08:59.476847 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:00.060544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:01.060675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:01.482320 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:02.060888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:03.061375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:03.488608 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:04.062339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:05.062701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:05.493945 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:06.063566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:07.063671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:07.499418 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:08.064753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:09.065545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:09.505442 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:10.065653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:11.066544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:11.511010 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:12.066644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:13.066995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:13.516710 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:14.067383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:15.067766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:15.521764 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:16.068434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:17.068522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:17.526970 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:18.068615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:19.069532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:19.531861 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:20.070444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:21.070709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:21.536605 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:22.070809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:23.071785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:23.542538 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:24.072037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:25.072128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:25.547687 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:26.072240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:27.072917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:27.553013 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:28.073683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:29.073786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:29.558339 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:30.074537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:31.074632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:31.563440 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:32.074729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:33.075079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:33.569559 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:34.075135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:35.075558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:35.575853 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:36.076550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:37.076653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:37.580392 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:38.076736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:39.076992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:39.585610 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:40.077230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:41.077665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:41.591884 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:42.078284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:43.078901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:43.597231 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:44.079944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:45.080269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:45.602533 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:46.081165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:47.081370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:47.608878 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:48.081738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:49.081922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:49.614380 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:50.082117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:51.082342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:51.620427 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:52.082949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:53.083336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:53.625717 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:54.084304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:55.084469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:55.630386 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:56.084578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:57.084893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:57.635983 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:09:58.085411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:09:59.085600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:09:59.643015 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:00.086612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:01.087038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:01.648553 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:02.087664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:03.088391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:03.652466 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:04.089113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:05.089221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:05.658103 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:06.089336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:07.089482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:07.664382 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:08.089872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:09.089985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:09.669129 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:10.090786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:11.090977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:11.674103 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:12.091689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:13.092432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:13.679598 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:14.093171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:15.093945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:15.684823 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:16.094038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:17.095003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:17.690699 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:18.095285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:19.095421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:19.695148 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:20.095625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:21.095861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:21.701376 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:22.096540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:23.097463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:23.707566 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:24.098086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:25.098304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:25.712711 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:26.099315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:27.099458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:27.718377 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:28.100025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:29.100117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:29.724056 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:30.100253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:31.100465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:31.729488 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:32.100961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:33.101337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:33.735595 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:34.102093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:35.102199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:35.741607 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:36.102491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:37.103404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:37.747014 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:38.103780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:39.104549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:39.751889 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:40.105316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:41.105925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:41.757890 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:42.106039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:43.106785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:43.763768 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:44.107198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:45.107560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:45.772173 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:46.108537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:47.108722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:47.777672 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:48.109261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:49.109673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:49.783923 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:50.110468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:51.110567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:51.788933 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:52.111338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:53.112406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:53.794829 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:54.113229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:55.113547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:55.800488 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:56.113642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:57.114549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:57.806449 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:10:58.114918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:10:59.115299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:10:59.812250 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:11:00.115589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:01.116076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:11:01.817488 20 container_probe.go:1759] Get pod test-grpc-b8100ac6-3887-4fda-90f5-786c310adfd6 in namespace container-probe-6378
  E1207 13:11:02.116927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:03.117824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/07/24 13:11:03.817
  I1207 13:11:03.834134 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6378" for this suite. @ 12/07/24 13:11:03.838
• [242.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/07/24 13:11:03.847
  I1207 13:11:03.847089 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 13:11:03.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:11:03.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:11:03.868
  STEP: creating a Deployment @ 12/07/24 13:11:03.874
  I1207 13:11:03.874104 20 deployment.go:507] Creating simple deployment test-deployment-46zcm
  I1207 13:11:03.888781 20 deployment.go:222] deployment "test-deployment-46zcm" doesn't have the required revision set
  E1207 13:11:04.118033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:05.118982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 12/07/24 13:11:05.906
  I1207 13:11:05.909772 20 deployment.go:532] Deployment test-deployment-46zcm has Conditions: [{Available True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-46zcm-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/07/24 13:11:05.909
  I1207 13:11:05.920941 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 11, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 11, 3, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-46zcm-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/07/24 13:11:05.92
  I1207 13:11:05.922461 20 deployment.go:579] Observed &Deployment event: ADDED
  I1207 13:11:05.922488 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-46zcm-f4dbbbf74"}
  I1207 13:11:05.922600 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1207 13:11:05.922619 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-46zcm-f4dbbbf74"}
  I1207 13:11:05.922706 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1207 13:11:05.922825 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1207 13:11:05.922868 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1207 13:11:05.922879 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-46zcm-f4dbbbf74" is progressing.}
  I1207 13:11:05.922953 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1207 13:11:05.922963 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1207 13:11:05.922971 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-46zcm-f4dbbbf74" has successfully progressed.}
  I1207 13:11:05.923032 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1207 13:11:05.923043 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1207 13:11:05.923054 20 deployment.go:575] Observed Deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-46zcm-f4dbbbf74" has successfully progressed.}
  I1207 13:11:05.923089 20 deployment.go:572] Found Deployment test-deployment-46zcm in namespace deployment-7272 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:11:05.923100 20 deployment.go:583] Deployment test-deployment-46zcm has an updated status
  STEP: patching the Statefulset Status @ 12/07/24 13:11:05.923
  I1207 13:11:05.923135 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1207 13:11:05.928315 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/07/24 13:11:05.928
  I1207 13:11:05.929553 20 deployment.go:616] Observed &Deployment event: ADDED
  I1207 13:11:05.929575 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-46zcm-f4dbbbf74"}
  I1207 13:11:05.929639 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1207 13:11:05.929653 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-46zcm-f4dbbbf74"}
  I1207 13:11:05.929662 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1207 13:11:05.929728 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1207 13:11:05.929802 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1207 13:11:05.929862 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:03 +0000 UTC 2024-12-07 13:11:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-46zcm-f4dbbbf74" is progressing.}
  I1207 13:11:05.929963 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1207 13:11:05.930015 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1207 13:11:05.930025 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-46zcm-f4dbbbf74" has successfully progressed.}
  I1207 13:11:05.930129 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1207 13:11:05.930194 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1207 13:11:05.930204 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-07 13:11:05 +0000 UTC 2024-12-07 13:11:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-46zcm-f4dbbbf74" has successfully progressed.}
  I1207 13:11:05.930221 20 deployment.go:612] Observed deployment test-deployment-46zcm in namespace deployment-7272 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:11:05.930374 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1207 13:11:05.930430 20 deployment.go:609] Found deployment test-deployment-46zcm in namespace deployment-7272 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1207 13:11:05.930461 20 deployment.go:620] Deployment test-deployment-46zcm has a patched status
  I1207 13:11:05.934956 20 deployment.go:633] Deployment "test-deployment-46zcm":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-46zcm",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d7ad0b8-f5a4-4532-8d5b-c8343a2c3084",
      ResourceVersion: (string) (len=5) "31829",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 13:11:05.939383 20 deployment.go:39] New ReplicaSet "test-deployment-46zcm-f4dbbbf74" of Deployment "test-deployment-46zcm":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-46zcm-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4be1bcd-34b3-4840-9635-a5541a2b228f",
      ResourceVersion: (string) (len=5) "31826",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-46zcm",
          UID: (types.UID) (len=36) "3d7ad0b8-f5a4-4532-8d5b-c8343a2c3084",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 64 37  |k:{\"uid\":\"3d7|
              00000120  61 64 30 62 38 2d 66 35  61 34 2d 34 35 33 32 2d  |ad0b8-f5a4-4532-|
              00000130  38 64 35 62 2d 63 38 33  34 33 61 32 63 33 30 38  |8d5b-c8343a2c308|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 13:11:05.943054 20 deployment.go:67] Pod "test-deployment-46zcm-f4dbbbf74-tsbzr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-46zcm-f4dbbbf74-tsbzr",
      GenerateName: (string) (len=32) "test-deployment-46zcm-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-7272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac912252-aac8-4954-89db-32f7893379d8",
      ResourceVersion: (string) (len=5) "31825",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-46zcm-f4dbbbf74",
          UID: (types.UID) (len=36) "b4be1bcd-34b3-4840-9635-a5541a2b228f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 34 62 65 31 62 63  64 2d 33 34 62 33 2d 34  |"b4be1bcd-34b3-4|
              000000a0  38 34 30 2d 39 36 33 35  2d 61 35 35 34 31 61 32  |840-9635-a5541a2|
              000000b0  62 32 32 38 66 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b228f\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 38 37 5c 22 7d  |2.168.114.187\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hvr8c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hvr8c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869173863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869173863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869173864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4cdf0bbff6fe6e7acf73e72376ab0efcb208a8d9eca6e828277b15812e2d5785",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hvr8c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 13:11:05.944028 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7272" for this suite. @ 12/07/24 13:11:05.95
• [2.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/07/24 13:11:05.957
  I1207 13:11:05.957982 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:11:05.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:11:05.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:11:05.981
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:11:05.983
  E1207 13:11:06.119297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:07.119438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:08.120014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:09.120115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:11:10.007
  I1207 13:11:10.010401 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-e5393f57-c696-413c-8274-8b54ba9e7a34 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:11:10.02
  I1207 13:11:10.040139 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2202" for this suite. @ 12/07/24 13:11:10.044
• [4.094 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 12/07/24 13:11:10.052
  I1207 13:11:10.052616 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubelet-test @ 12/07/24 13:11:10.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:11:10.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:11:10.074
  E1207 13:11:10.120631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:11.121570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:12.121851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:13.122796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:11:14.097259 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1574" for this suite. @ 12/07/24 13:11:14.101
• [4.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/07/24 13:11:14.109
  I1207 13:11:14.109503 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 13:11:14.11
  E1207 13:11:14.123045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:11:14.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:11:14.133
  STEP: creating pod @ 12/07/24 13:11:14.135
  E1207 13:11:15.123221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:16.123320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:11:16.158419 20 pods.go:83] Pod pod-hostip-b751e001-0960-408a-9b88-0e9ffde2fa5b has hostIP: 172.31.9.19
  I1207 13:11:16.158523 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7516" for this suite. @ 12/07/24 13:11:16.162
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/07/24 13:11:16.17
  I1207 13:11:16.170708 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:11:16.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:11:16.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:11:16.194
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:11:16.197
  E1207 13:11:17.123506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:18.123602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:19.123691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:20.123788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:11:20.221
  I1207 13:11:20.225164 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod downwardapi-volume-10dc1c5e-605c-4d32-8a2f-3c3b163cd06e container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:11:20.244
  I1207 13:11:20.262076 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9378" for this suite. @ 12/07/24 13:11:20.266
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 12/07/24 13:11:20.273
  I1207 13:11:20.273455 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption @ 12/07/24 13:11:20.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:11:20.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:11:20.294
  I1207 13:11:20.313570 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1207 13:11:21.124537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:22.125540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:23.126447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:24.126723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:25.126874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:26.126970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:27.127071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:28.127396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:29.127582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:30.127770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:31.128847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:32.129050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:33.129865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:34.130049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:35.130197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:36.130393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:37.130509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:38.130654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:39.130727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:40.130931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:41.131080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:42.131150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:43.132118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:44.132700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:45.133722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:46.134537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:47.135187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:48.135685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:49.135805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:50.135985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:51.136248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:52.136471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:53.137093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:54.137272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:55.138002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:56.138137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:57.138246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:58.138894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:11:59.139048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:00.139547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:01.139705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:02.139878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:03.140946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:04.141064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:05.141199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:06.141563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:07.142536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:08.142918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:09.143016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:10.143598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:11.144563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:12.145550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:13.146381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:14.146569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:15.147316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:16.147536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:17.147689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:18.147775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:19.147887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:20.148559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:12:20.318950 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 12/07/24 13:12:20.323
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 12/07/24 13:12:20.332
  I1207 13:12:20.345165 20 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 12/07/24 13:12:20.345
  E1207 13:12:21.148715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:22.148874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 12/07/24 13:12:22.353
  I1207 13:12:22.360910 20 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 12/07/24 13:12:22.36
  E1207 13:12:23.149437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:24.149669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 12/07/24 13:12:24.37
  I1207 13:12:24.374804 20 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1207 13:12:24.891768 20 pod_client.go:173] Successfully updated pod "victim-pod"
  I1207 13:12:24.940764 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8507" for this suite. @ 12/07/24 13:12:24.946
• [64.683 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/07/24 13:12:24.956
  I1207 13:12:24.956847 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 13:12:24.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:12:24.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:12:24.976
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/07/24 13:12:24.978
  I1207 13:12:24.979064 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:12:25.150227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:26.150252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:12:26.307080 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:12:27.150403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:28.150364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:29.150960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:30.151977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:31.152525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:12:31.271811 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2960" for this suite. @ 12/07/24 13:12:31.279
• [6.330 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/07/24 13:12:31.287
  I1207 13:12:31.287115 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replicaset @ 12/07/24 13:12:31.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:12:31.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:12:31.311
  STEP: Create a Replicaset @ 12/07/24 13:12:31.317
  STEP: Verify that the required pods have come up. @ 12/07/24 13:12:31.323
  I1207 13:12:31.327076 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1207 13:12:32.152677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:33.153418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:34.153523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:35.153588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:36.153683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:12:36.333217 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/07/24 13:12:36.333
  STEP: Getting /status @ 12/07/24 13:12:36.333
  I1207 13:12:36.337419 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/07/24 13:12:36.337
  I1207 13:12:36.347845 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/07/24 13:12:36.347
  I1207 13:12:36.349379 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1207 13:12:36.349443 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.349512 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.349679 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.349704 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-2545 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1207 13:12:36.349716 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/07/24 13:12:36.349
  I1207 13:12:36.349811 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1207 13:12:36.354963 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/07/24 13:12:36.354
  I1207 13:12:36.356446 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1207 13:12:36.356557 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.356627 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.356780 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.356806 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-2545 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:12:36.356858 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1207 13:12:36.356873 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-2545 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1207 13:12:36.356881 20 replica_set.go:729] Replicaset test-rs has a patched status
  I1207 13:12:36.356967 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2545" for this suite. @ 12/07/24 13:12:36.36
• [5.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/07/24 13:12:36.367
  I1207 13:12:36.367107 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replication-controller @ 12/07/24 13:12:36.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:12:36.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:12:36.389
  I1207 13:12:36.391294 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1207 13:12:37.153805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/07/24 13:12:37.404
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/07/24 13:12:37.411
  E1207 13:12:38.154858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/07/24 13:12:38.419
  I1207 13:12:38.430125 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/07/24 13:12:38.43
  E1207 13:12:39.154956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:12:39.441196 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-170" for this suite. @ 12/07/24 13:12:39.444
• [3.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/07/24 13:12:39.452
  I1207 13:12:39.452076 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename subpath @ 12/07/24 13:12:39.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:12:39.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:12:39.474
  STEP: Setting up data @ 12/07/24 13:12:39.477
  STEP: Creating pod pod-subpath-test-secret-4l9l @ 12/07/24 13:12:39.487
  STEP: Creating a pod to test atomic-volume-subpath @ 12/07/24 13:12:39.487
  E1207 13:12:40.155056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:41.155460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:42.155608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:43.155793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:44.156545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:45.156781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:46.156829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:47.157568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:48.158443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:49.158524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:50.158722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:51.158854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:52.159859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:53.160779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:54.160897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:55.161093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:56.161462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:57.161959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:58.162759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:12:59.163644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:00.164187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:01.164637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:02.165621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:03.166110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:13:03.565
  I1207 13:13:03.569494 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-subpath-test-secret-4l9l container test-container-subpath-secret-4l9l: <nil>
  STEP: delete the pod @ 12/07/24 13:13:03.581
  STEP: Deleting pod pod-subpath-test-secret-4l9l @ 12/07/24 13:13:03.601
  I1207 13:13:03.601558 20 delete.go:62] Deleting pod "pod-subpath-test-secret-4l9l" in namespace "subpath-704"
  I1207 13:13:03.605143 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-704" for this suite. @ 12/07/24 13:13:03.609
• [24.166 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/07/24 13:13:03.617
  I1207 13:13:03.617989 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename limitrange @ 12/07/24 13:13:03.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:03.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:03.645
  STEP: Creating a LimitRange @ 12/07/24 13:13:03.647
  STEP: Setting up watch @ 12/07/24 13:13:03.647
  STEP: Submitting a LimitRange @ 12/07/24 13:13:03.75
  STEP: Verifying LimitRange creation was observed @ 12/07/24 13:13:03.757
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/07/24 13:13:03.757
  I1207 13:13:03.761324 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1207 13:13:03.761370 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/07/24 13:13:03.761
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/07/24 13:13:03.768
  I1207 13:13:03.771912 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1207 13:13:03.771934 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/07/24 13:13:03.771
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/07/24 13:13:03.779
  I1207 13:13:03.783975 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1207 13:13:03.784003 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/07/24 13:13:03.784
  STEP: Failing to create a Pod with more than max resources @ 12/07/24 13:13:03.785
  STEP: Updating a LimitRange @ 12/07/24 13:13:03.787
  STEP: Verifying LimitRange updating is effective @ 12/07/24 13:13:03.794
  E1207 13:13:04.166587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:05.167502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 12/07/24 13:13:05.799
  STEP: Failing to create a Pod with more than max resources @ 12/07/24 13:13:05.806
  STEP: Deleting a LimitRange @ 12/07/24 13:13:05.807
  STEP: Verifying the LimitRange was deleted @ 12/07/24 13:13:05.82
  E1207 13:13:06.167622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:07.167707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:08.167756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:09.168007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:10.168575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:10.824457 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/07/24 13:13:10.824
  I1207 13:13:10.834015 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5727" for this suite. @ 12/07/24 13:13:10.837
• [7.229 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 12/07/24 13:13:10.846
  I1207 13:13:10.846839 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pv @ 12/07/24 13:13:10.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:10.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:10.87
  STEP: Creating initial PV and PVC @ 12/07/24 13:13:10.872
  I1207 13:13:10.872680 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5063" @ 12/07/24 13:13:10.888
  STEP: Listing PVCs in namespace "pv-5063" @ 12/07/24 13:13:10.894
  STEP: Patching the PV "pv-5063-9mpdl" @ 12/07/24 13:13:10.897
  STEP: Patching the PVC "pvc-lxgl7" @ 12/07/24 13:13:10.912
  STEP: Getting PV "pv-5063-9mpdl" @ 12/07/24 13:13:10.928
  STEP: Getting PVC "pvc-lxgl7" @ 12/07/24 13:13:10.932
  STEP: Deleting PVC "pvc-lxgl7" @ 12/07/24 13:13:10.935
  STEP: Confirm deletion of PVC "pvc-lxgl7" @ 12/07/24 13:13:10.944
  E1207 13:13:11.169128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:12.169209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5063-9mpdl" @ 12/07/24 13:13:12.953
  STEP: Confirm deletion of PV "pv-5063-9mpdl" @ 12/07/24 13:13:12.96
  E1207 13:13:13.170179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:14.170273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 12/07/24 13:13:14.969
  I1207 13:13:14.969382 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5063-rrvlr" @ 12/07/24 13:13:14.982
  STEP: Updating the PVC "pvc-sk5dn" @ 12/07/24 13:13:14.99
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-sk5dn=updated" @ 12/07/24 13:13:14.998
  STEP: Deleting PVC "pvc-sk5dn" via DeleteCollection @ 12/07/24 13:13:15.004
  STEP: Confirm deletion of PVC "pvc-sk5dn" @ 12/07/24 13:13:15.016
  E1207 13:13:15.172645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:16.172795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5063-rrvlr" via DeleteCollection @ 12/07/24 13:13:17.028
  STEP: Confirm deletion of PV "pv-5063-rrvlr" @ 12/07/24 13:13:17.037
  E1207 13:13:17.173097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:18.173455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:19.046612 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1207 13:13:19.046642 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-sk5dn"
  I1207 13:13:19.050751 20 pv.go:193] Deleting PersistentVolume "pv-5063-rrvlr"
  I1207 13:13:19.054253 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5063" for this suite. @ 12/07/24 13:13:19.058
• [8.222 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/07/24 13:13:19.068
  I1207 13:13:19.068509 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename endpointslice @ 12/07/24 13:13:19.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:19.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:19.092
  E1207 13:13:19.174143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:20.174571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:21.174760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:22.175587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:23.156026 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9542" for this suite. @ 12/07/24 13:13:23.16
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 12/07/24 13:13:23.169
  I1207 13:13:23.169622 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename disruption @ 12/07/24 13:13:23.17
  E1207 13:13:23.176491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:23.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:23.194
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:13:23.202
  E1207 13:13:24.177570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:25.178539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 12/07/24 13:13:25.208
  STEP: Waiting for all pods to be running @ 12/07/24 13:13:25.216
  I1207 13:13:25.219698 20 disruption.go:691] running pods: 0 < 1
  E1207 13:13:26.179580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:27.180551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/07/24 13:13:27.222
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:13:27.236
  STEP: Patching PodDisruptionBudget status @ 12/07/24 13:13:27.245
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:13:27.254
  I1207 13:13:27.258380 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3259" for this suite. @ 12/07/24 13:13:27.261
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/07/24 13:13:27.269
  I1207 13:13:27.269660 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename watch @ 12/07/24 13:13:27.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:27.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:27.29
  STEP: getting a starting resourceVersion @ 12/07/24 13:13:27.293
  STEP: starting a background goroutine to produce watch events @ 12/07/24 13:13:27.296
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/07/24 13:13:27.296
  E1207 13:13:28.180872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:29.181130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:30.079159 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9764" for this suite. @ 12/07/24 13:13:30.125
• [2.911 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 12/07/24 13:13:30.181
  I1207 13:13:30.181092 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:13:30.181193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:13:30.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:30.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:30.205
  STEP: creating Agnhost RC @ 12/07/24 13:13:30.207
  I1207 13:13:30.207701 20 kubectl.go:1537] namespace kubectl-3042
  I1207 13:13:30.207746 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-3042 create -f -'
  I1207 13:13:30.295222 20 builder.go:146] stderr: ""
  I1207 13:13:30.295257 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/07/24 13:13:30.295
  E1207 13:13:31.182315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:31.300710 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 13:13:31.300740 20 framework.go:733] Found 0 / 1
  E1207 13:13:32.182591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:32.300125 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 13:13:32.300160 20 framework.go:733] Found 1 / 1
  I1207 13:13:32.300174 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1207 13:13:32.304204 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1207 13:13:32.304225 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1207 13:13:32.304232 20 kubectl.go:1544] wait on agnhost-primary startup in kubectl-3042 
  I1207 13:13:32.304279 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-3042 logs agnhost-primary-vj4v6 agnhost-primary'
  I1207 13:13:32.366510 20 builder.go:146] stderr: ""
  I1207 13:13:32.366544 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/07/24 13:13:32.366
  I1207 13:13:32.366637 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-3042 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1207 13:13:32.424650 20 builder.go:146] stderr: ""
  I1207 13:13:32.424690 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I1207 13:13:32.429578 20 utils.go:1203] Service rm2 in namespace kubectl-3042 found.
  E1207 13:13:33.183487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:34.183590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 12/07/24 13:13:34.438
  I1207 13:13:34.438360 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-3042 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1207 13:13:34.498485 20 builder.go:146] stderr: ""
  I1207 13:13:34.498528 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I1207 13:13:34.503155 20 utils.go:1203] Service rm3 in namespace kubectl-3042 found.
  E1207 13:13:35.183683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:36.183783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:36.513509 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3042" for this suite. @ 12/07/24 13:13:36.517
• [6.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 12/07/24 13:13:36.528
  I1207 13:13:36.528674 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 13:13:36.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:36.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:36.552
  STEP: Creating a job @ 12/07/24 13:13:36.554
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/07/24 13:13:36.56
  E1207 13:13:37.184296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:38.185075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/07/24 13:13:38.565
  STEP: updating /status @ 12/07/24 13:13:38.573
  STEP: get /status @ 12/07/24 13:13:38.58
  I1207 13:13:38.584896 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9045" for this suite. @ 12/07/24 13:13:38.588
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/07/24 13:13:38.598
  I1207 13:13:38.598646 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 13:13:38.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:38.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:38.619
  STEP: Creating ServiceAccount "e2e-sa-j78hb"  @ 12/07/24 13:13:38.621
  I1207 13:13:38.625781 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-j78hb"  @ 12/07/24 13:13:38.625
  I1207 13:13:38.633904 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I1207 13:13:38.633981 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3403" for this suite. @ 12/07/24 13:13:38.637
• [0.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/07/24 13:13:38.646
  I1207 13:13:38.646625 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 13:13:38.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:38.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:38.666
  STEP: Creating secret with name secret-test-df900043-942d-45fe-9aca-7176b335326c @ 12/07/24 13:13:38.668
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:13:38.673
  E1207 13:13:39.185980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:40.186610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:13:40.69
  I1207 13:13:40.695058 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-secrets-4eb532d4-ab5d-4cf7-bcb6-95e0bdbbd651 container secret-env-test: <nil>
  STEP: delete the pod @ 12/07/24 13:13:40.701
  I1207 13:13:40.722404 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4451" for this suite. @ 12/07/24 13:13:40.726
• [2.087 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/07/24 13:13:40.733
  I1207 13:13:40.733485 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename endpointslice @ 12/07/24 13:13:40.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:40.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:40.756
  E1207 13:13:41.187620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:42.188014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 12/07/24 13:13:42.824
  STEP: referencing matching pods with named port @ 12/07/24 13:13:42.831
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/07/24 13:13:42.838
  STEP: recreating EndpointSlices after they've been deleted @ 12/07/24 13:13:42.846
  I1207 13:13:42.868382 20 endpointslice.go:938] EndpointSlice for Service endpointslice-3525/example-named-port not found
  E1207 13:13:43.188068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:44.188270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:44.873937 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3525" for this suite. @ 12/07/24 13:13:44.878
• [4.151 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/07/24 13:13:44.884
  I1207 13:13:44.884985 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 13:13:44.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:44.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:44.905
  E1207 13:13:45.188733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:46.188851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:46.924998 20 delete.go:62] Deleting pod "var-expansion-e43e2c83-5eda-4fae-97ce-71924fd9804a" in namespace "var-expansion-282"
  I1207 13:13:46.933783 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-e43e2c83-5eda-4fae-97ce-71924fd9804a" to be fully deleted
  E1207 13:13:47.189260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:48.189927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:48.941716 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-282" for this suite. @ 12/07/24 13:13:48.945
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 12/07/24 13:13:48.954
  I1207 13:13:48.954906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubelet-test @ 12/07/24 13:13:48.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:48.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:48.976
  E1207 13:13:49.190315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:50.190499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:51.011748 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5583" for this suite. @ 12/07/24 13:13:51.015
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/07/24 13:13:51.022
  I1207 13:13:51.022962 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/07/24 13:13:51.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:51.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:51.05
  I1207 13:13:51.052696 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:13:51.191099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:52.191639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:53.192266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:54.192329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:55.193323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:56.193441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:57.194110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:13:57.281039 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9346" for this suite. @ 12/07/24 13:13:57.285
• [6.270 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/07/24 13:13:57.293
  I1207 13:13:57.293157 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/07/24 13:13:57.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:13:57.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:13:57.314
  I1207 13:13:57.316868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:13:58.194570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:13:59.195543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:00.196257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:00.398585 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9192" for this suite. @ 12/07/24 13:14:00.402
• [3.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 12/07/24 13:14:00.41
  I1207 13:14:00.410565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 13:14:00.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:00.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:00.432
  E1207 13:14:01.196378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:02.196587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:03.197481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:04.197604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:05.197715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:06.197865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:07.198041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:08.198164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:09.198282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:10.198779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:11.199070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:12.199275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:13.199413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:14.199570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:15.199665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:16.199802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:17.199816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/07/24 13:14:17.44
  E1207 13:14:18.200109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:19.200502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:20.200712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:21.200799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:22.200905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/07/24 13:14:22.444
  STEP: Ensuring resource quota status is calculated @ 12/07/24 13:14:22.45
  E1207 13:14:23.201963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:24.202087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/07/24 13:14:24.455
  STEP: Ensuring resource quota status captures configMap creation @ 12/07/24 13:14:24.467
  E1207 13:14:25.202208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:26.202274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/07/24 13:14:26.472
  STEP: Ensuring resource quota status released usage @ 12/07/24 13:14:26.479
  E1207 13:14:27.202596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:28.203004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:28.485649 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-946" for this suite. @ 12/07/24 13:14:28.489
• [28.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 12/07/24 13:14:28.497
  I1207 13:14:28.497685 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubelet-test @ 12/07/24 13:14:28.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:28.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:28.524
  I1207 13:14:28.559241 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7537" for this suite. @ 12/07/24 13:14:28.565
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/07/24 13:14:28.573
  I1207 13:14:28.573631 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 13:14:28.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:28.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:28.598
  STEP: set up a multi version CRD @ 12/07/24 13:14:28.6
  I1207 13:14:28.601172 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:14:29.203239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:30.203298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:31.203576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 12/07/24 13:14:31.633
  STEP: check the unserved version gets removed @ 12/07/24 13:14:31.65
  E1207 13:14:32.203864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 12/07/24 13:14:32.36
  E1207 13:14:33.203996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:34.204595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:34.776566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6262" for this suite. @ 12/07/24 13:14:34.783
• [6.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 12/07/24 13:14:34.791
  I1207 13:14:34.791667 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-pred @ 12/07/24 13:14:34.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:34.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:34.812
  I1207 13:14:34.814112 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1207 13:14:34.824165 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1207 13:14:34.827898 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-155 before test
  I1207 13:14:34.833031 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-jw5cc from ingress-nginx-kubernetes-worker started at 2024-12-07 11:54:23 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.833048 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:14:34.833055 20 predicates.go:957] calico-node-gdvcw from kube-system started at 2024-12-07 12:10:53 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.833060 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:14:34.833065 20 predicates.go:957] coredns-5b4857d7c8-wxhzr from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.833070 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1207 13:14:34.833076 20 predicates.go:957] kube-state-metrics-5d7bdccd49-jvjgd from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.833080 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1207 13:14:34.833086 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-s5vnh from kube-system started at 2024-12-07 11:55:18 +0000 UTC (2 container statuses recorded)
  I1207 13:14:34.833091 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1207 13:14:34.833095 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1207 13:14:34.833100 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-dqcg9 from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.833104 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1207 13:14:34.833110 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-kpwtp from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.833114 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 2
  I1207 13:14:34.833120 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-kfczm from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:14:34.833128 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:14:34.833132 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 13:14:34.833137 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-64-144 before test
  I1207 13:14:34.837769 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-t2j8z from ingress-nginx-kubernetes-worker started at 2024-12-07 12:06:13 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.837784 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:14:34.837791 20 predicates.go:957] calico-node-sdkxp from kube-system started at 2024-12-07 12:11:14 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.837796 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:14:34.837802 20 predicates.go:957] sonobuoy-e2e-job-684450c905e04fbe from sonobuoy started at 2024-12-07 12:13:32 +0000 UTC (2 container statuses recorded)
  I1207 13:14:34.837807 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1207 13:14:34.837811 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:14:34.837817 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-jzt9d from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:14:34.837821 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:14:34.837826 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 13:14:34.837832 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-19 before test
  I1207 13:14:34.842791 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-42sn8 from ingress-nginx-kubernetes-worker started at 2024-12-07 12:56:34 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.842805 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:14:34.842812 20 predicates.go:957] calico-node-gdhw7 from kube-system started at 2024-12-07 12:10:43 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.842818 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:14:34.842824 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-07 12:13:30 +0000 UTC (1 container statuses recorded)
  I1207 13:14:34.842829 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1207 13:14:34.842834 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-zt4zf from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:14:34.842839 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:14:34.842892 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/07/24 13:14:34.842
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.180ee758bae653f3], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 12/07/24 13:14:34.875
  E1207 13:14:35.204748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:35.867151 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4665" for this suite. @ 12/07/24 13:14:35.871
• [1.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/07/24 13:14:35.879
  I1207 13:14:35.879229 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 13:14:35.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:35.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:35.9
  STEP: creating a Deployment @ 12/07/24 13:14:35.906
  STEP: waiting for Deployment to be created @ 12/07/24 13:14:35.912
  STEP: waiting for all Replicas to be Ready @ 12/07/24 13:14:35.914
  I1207 13:14:35.915061 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.915079 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.926016 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.926040 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.947389 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.947413 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.963326 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1207 13:14:35.963362 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1207 13:14:36.204763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:36.516058 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1207 13:14:36.516092 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1207 13:14:37.119608 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/07/24 13:14:37.119
  I1207 13:14:37.127007 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/07/24 13:14:37.127
  I1207 13:14:37.128442 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128457 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128466 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128472 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128480 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128489 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128549 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128555 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 0
  I1207 13:14:37.128568 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:37.128577 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:37.128643 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.128650 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.128656 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.128661 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.140552 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.140576 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.161756 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.161775 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:37.170292 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:37.170309 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:37.186638 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:37.186658 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  E1207 13:14:37.205729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:38.208126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:38.530285 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:38.530323 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:38.563055 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  STEP: listing Deployments @ 12/07/24 13:14:38.563
  I1207 13:14:38.567412 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/07/24 13:14:38.567
  I1207 13:14:38.578026 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/07/24 13:14:38.578
  I1207 13:14:38.584688 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:38.591388 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:38.622622 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:38.639610 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:38.649574 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1207 13:14:39.208774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:40.148945 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:40.169879 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:40.181676 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:40.197280 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1207 13:14:40.205496 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1207 13:14:40.208638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:41.208811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:14:41.538234 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/07/24 13:14:41.567
  STEP: fetching the DeploymentStatus @ 12/07/24 13:14:41.577
  I1207 13:14:41.582111 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:41.582134 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:41.582144 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:41.582217 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:41.582226 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 1
  I1207 13:14:41.582297 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:41.582316 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:41.582488 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:41.582505 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:41.582513 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 2
  I1207 13:14:41.582633 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-421 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/07/24 13:14:41.582
  I1207 13:14:41.593988 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594011 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594019 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594118 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594131 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594198 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594209 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594329 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594343 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594368 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594423 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594432 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594441 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.594478 20 deployment.go:475] observed event type MODIFIED
  I1207 13:14:41.598012 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1207 13:14:41.601067 20 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73d49919-6e70-43b8-9e46-b90b1406d3aa",
      ResourceVersion: (string) (len=5) "33631",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6dddcf97-7b41-4f1f-ade8-30299415c29e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 64 64 64  63 66 39 37 2d 37 62 34  |":\"6dddcf97-7b4|
              00000130  31 2d 34 66 31 66 2d 61  64 65 38 2d 33 30 32 39  |1-4f1f-ade8-3029|
              00000140  39 34 31 35 63 32 39 65  5c 22 7d 22 3a 7b 7d 7d  |9415c29e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1207 13:14:41.608867 20 deployment.go:669] pod: "test-deployment-6c86c7f765-jcjrr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-jcjrr",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bce08ea-17b7-4938-bb89-956d3a803167",
      ResourceVersion: (string) (len=5) "33630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "73d49919-6e70-43b8-9e46-b90b1406d3aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 33 64 34 39 39 31 39  |uid\":\"73d49919|
              000000a0  2d 36 65 37 30 2d 34 33  62 38 2d 39 65 34 36 2d  |-6e70-43b8-9e46-|
              000000b0  62 39 30 62 31 34 30 36  64 33 61 61 5c 22 7d 22  |b90b1406d3aa\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 36 32 5c 22 7d  |2.168.114.162\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gr8wp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gr8wp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869174080,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://19fa24b0446b0da3b1d3fca328c6ef654968162ecfa514d7e84637e077f00a2c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gr8wp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1207 13:14:41.610250 20 deployment.go:669] pod: "test-deployment-6c86c7f765-m9rr5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-m9rr5",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4328a0a6-6b7f-4b8f-81b2-bb938d2f3bcf",
      ResourceVersion: (string) (len=5) "33585",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "73d49919-6e70-43b8-9e46-b90b1406d3aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 33 64 34 39 39 31 39  |uid\":\"73d49919|
              000000a0  2d 36 65 37 30 2d 34 33  62 38 2d 39 65 34 36 2d  |-6e70-43b8-9e46-|
              000000b0  62 39 30 62 31 34 30 36  64 33 61 61 5c 22 7d 22  |b90b1406d3aa\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  2e 35 36 5c 22 7d 22 3a  |2.168.16.56\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sf76h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sf76h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869174079,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4befa8c42c5bdff384e5c23e1e452c31e4e7c816b2d7ba4541e038f61a2614a1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sf76h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1207 13:14:41.611555 20 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7016643-13f6-4902-9a1e-6bfe4212f137",
      ResourceVersion: (string) (len=5) "33639",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6dddcf97-7b41-4f1f-ade8-30299415c29e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 64 64 64  63 66 39 37 2d 37 62 34  |":\"6dddcf97-7b4|
              00000130  31 2d 34 66 31 66 2d 61  64 65 38 2d 33 30 32 39  |1-4f1f-ade8-3029|
              00000140  39 34 31 35 63 32 39 65  5c 22 7d 22 3a 7b 7d 7d  |9415c29e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1207 13:14:41.616313 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-9hrf9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-9hrf9",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b925899-839d-41e3-9ded-3f832edbc298",
      ResourceVersion: (string) (len=5) "33635",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "a7016643-13f6-4902-9a1e-6bfe4212f137",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 37 30 31 36 36 34 33  |uid\":\"a7016643|
              000000a0  2d 31 33 66 36 2d 34 39  30 32 2d 39 61 31 65 2d  |-13f6-4902-9a1e-|
              000000b0  36 62 66 65 34 32 31 32  66 31 33 37 5c 22 7d 22  |6bfe4212f137\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  34 2e 31 36 34 5c 22 7d  |2.168.114.164\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jzlhl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jzlhl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-9-19",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.9.19",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.9.19"
        }
      },
      PodIP: (string) (len=15) "192.168.114.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.114.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869174077,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://f7c6fceeac369cedb6a0c55c7c51449517ffb0e0a48e8acbb533333b1bf89ea9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jzlhl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1207 13:14:41.617727 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-bvb4c":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-bvb4c",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2931f228-8078-4348-8ef7-1842c2d25ae3",
      ResourceVersion: (string) (len=5) "33629",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "a7016643-13f6-4902-9a1e-6bfe4212f137",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 37 30 31 36 36 34 33  |uid\":\"a7016643|
              000000a0  2d 31 33 66 36 2d 34 39  30 32 2d 39 61 31 65 2d  |-13f6-4902-9a1e-|
              000000b0  36 62 66 65 34 32 31 32  66 31 33 37 5c 22 7d 22  |6bfe4212f137\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 39 32 2e 31 36 38 2e  |"ip\":\"192.168.|
              00000290  31 36 2e 35 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |16.54\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sqz5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sqz5w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869174079,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869174081,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://dd55c7fb79fc4c3175daf16af449746d1ecc1a5a5789b43ae59f71d5745da59b"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://dd55c7fb79fc4c3175daf16af449746d1ecc1a5a5789b43ae59f71d5745da59b",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sqz5w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1207 13:14:41.619858 20 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-421",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9a4eb13-123f-46a7-bfe8-bec7cbbe4923",
      ResourceVersion: (string) (len=5) "33532",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174075,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6dddcf97-7b41-4f1f-ade8-30299415c29e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 64 64 64  63 66 39 37 2d 37 62 34  |":\"6dddcf97-7b4|
              00000130  31 2d 34 66 31 66 2d 61  64 65 38 2d 33 30 32 39  |1-4f1f-ade8-3029|
              00000140  39 34 31 35 63 32 39 65  5c 22 7d 22 3a 7b 7d 7d  |9415c29e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1207 13:14:41.626672 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-421" for this suite. @ 12/07/24 13:14:41.629
• [5.758 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/07/24 13:14:41.637
  I1207 13:14:41.637073 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:14:41.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:41.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:41.66
  STEP: Creating configMap with name projected-configmap-test-volume-cf8bf199-8077-4593-b9c7-ea5331413e8d @ 12/07/24 13:14:41.663
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:14:41.668
  E1207 13:14:42.209035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:43.209201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:14:43.687
  I1207 13:14:43.691629 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-configmaps-7e8929b7-28a1-461d-a66b-21528038ddd9 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:14:43.698
  I1207 13:14:43.718190 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2754" for this suite. @ 12/07/24 13:14:43.722
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 12/07/24 13:14:43.729
  I1207 13:14:43.729856 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 13:14:43.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:43.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:43.756
  I1207 13:14:43.758612 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:14:44.209543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:45.210574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:46.210764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1207 13:14:46.292145      20 warnings.go:70] unknown field "alpha"
  W1207 13:14:46.292161      20 warnings.go:70] unknown field "beta"
  W1207 13:14:46.292165      20 warnings.go:70] unknown field "delta"
  W1207 13:14:46.292168      20 warnings.go:70] unknown field "epsilon"
  W1207 13:14:46.292171      20 warnings.go:70] unknown field "gamma"
  I1207 13:14:46.838536 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5797" for this suite. @ 12/07/24 13:14:46.842
• [3.124 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/07/24 13:14:46.854
  I1207 13:14:46.854124 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:14:46.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:46.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:46.878
  STEP: Creating configMap configmap-408/configmap-test-59b03329-a562-4ae0-8b7d-b19eb962a736 @ 12/07/24 13:14:46.88
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:14:46.884
  E1207 13:14:47.210902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:48.211334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:14:48.903
  I1207 13:14:48.906841 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-bdedae8d-6312-4507-9db5-80f153f5add9 container env-test: <nil>
  STEP: delete the pod @ 12/07/24 13:14:48.915
  I1207 13:14:48.934054 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-408" for this suite. @ 12/07/24 13:14:48.938
• [2.090 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 12/07/24 13:14:48.944
  I1207 13:14:48.944509 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption @ 12/07/24 13:14:48.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:14:48.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:14:48.965
  I1207 13:14:48.985858 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1207 13:14:49.211877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:50.212078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:51.212913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:52.213547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:53.214006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:54.214594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:55.215551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:56.215738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:57.216558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:58.217531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:14:59.218428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:00.218734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:01.219482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:02.220538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:03.220648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:04.221243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:05.221847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:06.222036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:07.222577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:08.222672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:09.223231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:10.223339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:11.223793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:12.224543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:13.225586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:14.225683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:15.226743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:16.226848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:17.227544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:18.227661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:19.227696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:20.227881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:21.228949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:22.229132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:23.230132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:24.230259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:25.230467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:26.230743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:27.231573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:28.231686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:29.231908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:30.231906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:31.232165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:32.232382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:33.233156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:34.233534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:35.233907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:36.234546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:37.235333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:38.235429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:39.236457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:40.236681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:41.236944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:42.237141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:43.237963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:44.238125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:45.238236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:46.238464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:47.239415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:48.240225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:15:48.990962 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/07/24 13:15:48.994
  I1207 13:15:48.994581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/07/24 13:15:48.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:15:49.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:15:49.021
  I1207 13:15:49.041519 20 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1207 13:15:49.045469 20 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1207 13:15:49.115932 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6213" for this suite. @ 12/07/24 13:15:49.12
  I1207 13:15:49.127059 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9598" for this suite. @ 12/07/24 13:15:49.13
• [60.193 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 12/07/24 13:15:49.137
  I1207 13:15:49.137192 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 13:15:49.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:15:49.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:15:49.161
  STEP: Counting existing ResourceQuota @ 12/07/24 13:15:49.163
  E1207 13:15:49.240864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:50.241989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:51.242318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:52.243106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:53.244003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/07/24 13:15:54.167
  STEP: Ensuring resource quota status is calculated @ 12/07/24 13:15:54.174
  E1207 13:15:54.244625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:55.245666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 12/07/24 13:15:56.18
  STEP: Ensuring resource quota status captures replication controller creation @ 12/07/24 13:15:56.194
  E1207 13:15:56.245943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:57.246144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 12/07/24 13:15:58.2
  STEP: Ensuring resource quota status released usage @ 12/07/24 13:15:58.208
  E1207 13:15:58.246335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:15:59.247043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:00.213938 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3212" for this suite. @ 12/07/24 13:16:00.218
• [11.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/07/24 13:16:00.225
  I1207 13:16:00.225946 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename tables @ 12/07/24 13:16:00.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:00.245
  E1207 13:16:00.247565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:00.247
  I1207 13:16:00.251821 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-526" for this suite. @ 12/07/24 13:16:00.256
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/07/24 13:16:00.263
  I1207 13:16:00.263584 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename aggregator @ 12/07/24 13:16:00.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:00.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:00.286
  I1207 13:16:00.289079 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Registering the sample API server. @ 12/07/24 13:16:00.289
  I1207 13:16:00.527470 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1207 13:16:00.559829 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1207 13:16:01.248243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:02.248495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:02.608212 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:03.249008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:04.249379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:04.613816 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:05.249504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:06.250576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:06.614113 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:07.250796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:08.250822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:08.614138 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:09.250876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:10.251792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:10.613689 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:11.252262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:12.252507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:12.614203 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:13.253079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:14.253703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:14.615158 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:15.254569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:16.254725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:16.613866 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:17.255488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:18.256496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:18.614427 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:19.257090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:20.257192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:20.613554 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:21.257304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:22.257504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:22.613988 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:23.258483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:24.258655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:24.613781 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1207 13:16:25.259340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:26.259539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:26.735053 20 aggregator.go:755] Waited 114.859597ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/07/24 13:16:26.767
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/07/24 13:16:26.771
  STEP: List APIServices @ 12/07/24 13:16:26.78
  I1207 13:16:26.785241 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/07/24 13:16:26.785
  I1207 13:16:26.797758 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/07/24 13:16:26.797
  I1207 13:16:26.813748 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 7, 13, 16, 26, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/07/24 13:16:26.813
  I1207 13:16:26.820501 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-07 13:16:26 +0000 UTC Passed all checks passed}
  I1207 13:16:26.820524 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:16:26.820536 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/07/24 13:16:26.82
  I1207 13:16:26.832516 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-80544638" @ 12/07/24 13:16:26.832
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/07/24 13:16:26.842
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/07/24 13:16:26.861
  STEP: Patch APIService Status @ 12/07/24 13:16:26.865
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/07/24 13:16:26.874
  I1207 13:16:26.878194 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-07 13:16:26 +0000 UTC Passed all checks passed}
  I1207 13:16:26.878220 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:16:26.878235 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1207 13:16:26.878248 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/07/24 13:16:26.878
  STEP: Confirm that the generated APIService has been deleted @ 12/07/24 13:16:26.888
  I1207 13:16:26.888385 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1207 13:16:26.892076 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1207 13:16:26.892093 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1207 13:16:27.002873 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6394" for this suite. @ 12/07/24 13:16:27.006
• [26.751 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/07/24 13:16:27.015
  I1207 13:16:27.015025 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svc-latency @ 12/07/24 13:16:27.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:27.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:27.037
  I1207 13:16:27.039723 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-5779 @ 12/07/24 13:16:27.04
  I1207 13:16:27.045787      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5779, replica count: 1
  E1207 13:16:27.259653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:28.096639      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1207 13:16:28.259978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:29.096876      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:16:29.211455 20 service_latency.go:356] Created: latency-svc-hqr8h
  I1207 13:16:29.219957 20 service_latency.go:363] Got endpoints: latency-svc-hqr8h [22.939847ms]
  I1207 13:16:29.232757 20 service_latency.go:356] Created: latency-svc-hdk2t
  I1207 13:16:29.241030 20 service_latency.go:356] Created: latency-svc-4zrvx
  I1207 13:16:29.241400 20 service_latency.go:363] Got endpoints: latency-svc-hdk2t [21.36794ms]
  I1207 13:16:29.248613 20 service_latency.go:363] Got endpoints: latency-svc-4zrvx [28.443756ms]
  I1207 13:16:29.251055 20 service_latency.go:356] Created: latency-svc-6vrgl
  I1207 13:16:29.259001 20 service_latency.go:356] Created: latency-svc-kj2w8
  E1207 13:16:29.260064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:29.260547 20 service_latency.go:363] Got endpoints: latency-svc-6vrgl [40.29818ms]
  I1207 13:16:29.264986 20 service_latency.go:356] Created: latency-svc-9pw77
  I1207 13:16:29.268447 20 service_latency.go:363] Got endpoints: latency-svc-kj2w8 [48.233891ms]
  I1207 13:16:29.272945 20 service_latency.go:363] Got endpoints: latency-svc-9pw77 [52.821597ms]
  I1207 13:16:29.278118 20 service_latency.go:356] Created: latency-svc-s6n6c
  I1207 13:16:29.286147 20 service_latency.go:356] Created: latency-svc-d9sgx
  I1207 13:16:29.286363 20 service_latency.go:363] Got endpoints: latency-svc-s6n6c [66.080869ms]
  I1207 13:16:29.294509 20 service_latency.go:363] Got endpoints: latency-svc-d9sgx [74.197434ms]
  I1207 13:16:29.296574 20 service_latency.go:356] Created: latency-svc-lvtwl
  I1207 13:16:29.303160 20 service_latency.go:356] Created: latency-svc-zqg7p
  I1207 13:16:29.304109 20 service_latency.go:363] Got endpoints: latency-svc-lvtwl [83.774333ms]
  I1207 13:16:29.310399 20 service_latency.go:363] Got endpoints: latency-svc-zqg7p [89.988948ms]
  I1207 13:16:29.310734 20 service_latency.go:356] Created: latency-svc-f8lm4
  I1207 13:16:29.316590 20 service_latency.go:363] Got endpoints: latency-svc-f8lm4 [96.170225ms]
  I1207 13:16:29.319941 20 service_latency.go:356] Created: latency-svc-52nbj
  I1207 13:16:29.328091 20 service_latency.go:363] Got endpoints: latency-svc-52nbj [107.645577ms]
  I1207 13:16:29.329818 20 service_latency.go:356] Created: latency-svc-98mmv
  I1207 13:16:29.335827 20 service_latency.go:356] Created: latency-svc-ggwhj
  I1207 13:16:29.337085 20 service_latency.go:363] Got endpoints: latency-svc-98mmv [116.613204ms]
  I1207 13:16:29.344182 20 service_latency.go:356] Created: latency-svc-cb2v5
  I1207 13:16:29.344373 20 service_latency.go:363] Got endpoints: latency-svc-ggwhj [123.845711ms]
  I1207 13:16:29.353414 20 service_latency.go:363] Got endpoints: latency-svc-cb2v5 [132.85807ms]
  I1207 13:16:29.353715 20 service_latency.go:356] Created: latency-svc-tpfks
  I1207 13:16:29.359771 20 service_latency.go:356] Created: latency-svc-hlxsz
  I1207 13:16:29.360058 20 service_latency.go:363] Got endpoints: latency-svc-tpfks [139.531291ms]
  I1207 13:16:29.367131 20 service_latency.go:356] Created: latency-svc-ghv9f
  I1207 13:16:29.367777 20 service_latency.go:363] Got endpoints: latency-svc-hlxsz [126.352082ms]
  I1207 13:16:29.376929 20 service_latency.go:363] Got endpoints: latency-svc-ghv9f [128.292029ms]
  I1207 13:16:29.378647 20 service_latency.go:356] Created: latency-svc-67p9k
  I1207 13:16:29.386253 20 service_latency.go:356] Created: latency-svc-2lwhw
  I1207 13:16:29.389738 20 service_latency.go:363] Got endpoints: latency-svc-67p9k [129.170707ms]
  I1207 13:16:29.393914 20 service_latency.go:356] Created: latency-svc-zfzqc
  I1207 13:16:29.396203 20 service_latency.go:363] Got endpoints: latency-svc-2lwhw [127.730157ms]
  I1207 13:16:29.404957 20 service_latency.go:356] Created: latency-svc-jpdwj
  I1207 13:16:29.406804 20 service_latency.go:363] Got endpoints: latency-svc-zfzqc [133.838099ms]
  I1207 13:16:29.416820 20 service_latency.go:363] Got endpoints: latency-svc-jpdwj [130.422668ms]
  I1207 13:16:29.417391 20 service_latency.go:356] Created: latency-svc-5zr9j
  I1207 13:16:29.423005 20 service_latency.go:356] Created: latency-svc-cww7n
  I1207 13:16:29.427733 20 service_latency.go:363] Got endpoints: latency-svc-5zr9j [133.195834ms]
  I1207 13:16:29.429337 20 service_latency.go:363] Got endpoints: latency-svc-cww7n [125.204901ms]
  I1207 13:16:29.437944 20 service_latency.go:356] Created: latency-svc-jl9r4
  I1207 13:16:29.441547 20 service_latency.go:356] Created: latency-svc-cmt9f
  I1207 13:16:29.442585 20 service_latency.go:363] Got endpoints: latency-svc-jl9r4 [132.154837ms]
  I1207 13:16:29.449840 20 service_latency.go:363] Got endpoints: latency-svc-cmt9f [133.220693ms]
  I1207 13:16:29.453146 20 service_latency.go:356] Created: latency-svc-lxltp
  I1207 13:16:29.461127 20 service_latency.go:363] Got endpoints: latency-svc-lxltp [133.007175ms]
  I1207 13:16:29.461946 20 service_latency.go:356] Created: latency-svc-ltkg8
  I1207 13:16:29.468328 20 service_latency.go:356] Created: latency-svc-v9nxw
  I1207 13:16:29.468963 20 service_latency.go:363] Got endpoints: latency-svc-ltkg8 [131.852364ms]
  I1207 13:16:29.474592 20 service_latency.go:363] Got endpoints: latency-svc-v9nxw [130.197972ms]
  I1207 13:16:29.476970 20 service_latency.go:356] Created: latency-svc-7rjlm
  I1207 13:16:29.484917 20 service_latency.go:363] Got endpoints: latency-svc-7rjlm [131.478583ms]
  I1207 13:16:29.486814 20 service_latency.go:356] Created: latency-svc-plxtz
  I1207 13:16:29.490664 20 service_latency.go:356] Created: latency-svc-fzg6s
  I1207 13:16:29.496645 20 service_latency.go:363] Got endpoints: latency-svc-plxtz [136.566551ms]
  I1207 13:16:29.502592 20 service_latency.go:356] Created: latency-svc-8nz4l
  I1207 13:16:29.512139 20 service_latency.go:363] Got endpoints: latency-svc-fzg6s [144.335203ms]
  I1207 13:16:29.513922 20 service_latency.go:356] Created: latency-svc-q9fdq
  I1207 13:16:29.515595 20 service_latency.go:363] Got endpoints: latency-svc-8nz4l [138.645351ms]
  I1207 13:16:29.517568 20 service_latency.go:356] Created: latency-svc-86j66
  I1207 13:16:29.525806 20 service_latency.go:363] Got endpoints: latency-svc-q9fdq [136.043817ms]
  I1207 13:16:29.526551 20 service_latency.go:363] Got endpoints: latency-svc-86j66 [130.322886ms]
  I1207 13:16:29.529132 20 service_latency.go:356] Created: latency-svc-f57s2
  I1207 13:16:29.536967 20 service_latency.go:363] Got endpoints: latency-svc-f57s2 [130.141022ms]
  I1207 13:16:29.541308 20 service_latency.go:356] Created: latency-svc-ddhjr
  I1207 13:16:29.547067 20 service_latency.go:356] Created: latency-svc-qq55p
  I1207 13:16:29.553222 20 service_latency.go:356] Created: latency-svc-kxdbq
  I1207 13:16:29.561139 20 service_latency.go:356] Created: latency-svc-l2j75
  I1207 13:16:29.566215 20 service_latency.go:356] Created: latency-svc-lc4qz
  I1207 13:16:29.568664 20 service_latency.go:363] Got endpoints: latency-svc-ddhjr [151.814168ms]
  I1207 13:16:29.574240 20 service_latency.go:356] Created: latency-svc-99n9m
  I1207 13:16:29.582408 20 service_latency.go:356] Created: latency-svc-dxbqv
  I1207 13:16:29.587494 20 service_latency.go:356] Created: latency-svc-mt6pc
  I1207 13:16:29.595510 20 service_latency.go:356] Created: latency-svc-fxr72
  I1207 13:16:29.602429 20 service_latency.go:356] Created: latency-svc-cnjp4
  I1207 13:16:29.608231 20 service_latency.go:356] Created: latency-svc-tmsmh
  I1207 13:16:29.614286 20 service_latency.go:356] Created: latency-svc-rs25s
  I1207 13:16:29.619275 20 service_latency.go:363] Got endpoints: latency-svc-qq55p [191.522206ms]
  I1207 13:16:29.623925 20 service_latency.go:356] Created: latency-svc-j6dcm
  I1207 13:16:29.629034 20 service_latency.go:356] Created: latency-svc-5q9pp
  I1207 13:16:29.641039 20 service_latency.go:356] Created: latency-svc-bpkk6
  I1207 13:16:29.649084 20 service_latency.go:356] Created: latency-svc-5sfg5
  I1207 13:16:29.653853 20 service_latency.go:356] Created: latency-svc-z6lrm
  I1207 13:16:29.670558 20 service_latency.go:363] Got endpoints: latency-svc-kxdbq [241.176985ms]
  I1207 13:16:29.682428 20 service_latency.go:356] Created: latency-svc-n87mg
  I1207 13:16:29.719888 20 service_latency.go:363] Got endpoints: latency-svc-l2j75 [277.061073ms]
  I1207 13:16:29.731328 20 service_latency.go:356] Created: latency-svc-pcxkt
  I1207 13:16:29.767805 20 service_latency.go:363] Got endpoints: latency-svc-lc4qz [317.936731ms]
  I1207 13:16:29.779366 20 service_latency.go:356] Created: latency-svc-dkrs8
  I1207 13:16:29.818871 20 service_latency.go:363] Got endpoints: latency-svc-99n9m [357.720222ms]
  I1207 13:16:29.831243 20 service_latency.go:356] Created: latency-svc-8xl5b
  I1207 13:16:29.872168 20 service_latency.go:363] Got endpoints: latency-svc-dxbqv [403.181883ms]
  I1207 13:16:29.885334 20 service_latency.go:356] Created: latency-svc-glnvn
  I1207 13:16:29.919640 20 service_latency.go:363] Got endpoints: latency-svc-mt6pc [445.024855ms]
  I1207 13:16:29.930105 20 service_latency.go:356] Created: latency-svc-kt2tn
  I1207 13:16:29.969833 20 service_latency.go:363] Got endpoints: latency-svc-fxr72 [484.88676ms]
  I1207 13:16:29.982284 20 service_latency.go:356] Created: latency-svc-mhjtf
  I1207 13:16:30.019596 20 service_latency.go:363] Got endpoints: latency-svc-cnjp4 [522.895212ms]
  I1207 13:16:30.033769 20 service_latency.go:356] Created: latency-svc-ljwwg
  I1207 13:16:30.067839 20 service_latency.go:363] Got endpoints: latency-svc-tmsmh [554.342148ms]
  I1207 13:16:30.080052 20 service_latency.go:356] Created: latency-svc-b4v6p
  I1207 13:16:30.118259 20 service_latency.go:363] Got endpoints: latency-svc-rs25s [602.631878ms]
  I1207 13:16:30.129800 20 service_latency.go:356] Created: latency-svc-4nvnh
  I1207 13:16:30.169653 20 service_latency.go:363] Got endpoints: latency-svc-j6dcm [643.806178ms]
  I1207 13:16:30.183918 20 service_latency.go:356] Created: latency-svc-wqhn9
  I1207 13:16:30.220059 20 service_latency.go:363] Got endpoints: latency-svc-5q9pp [693.481001ms]
  I1207 13:16:30.231462 20 service_latency.go:356] Created: latency-svc-mq9rg
  E1207 13:16:30.260961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:30.271002 20 service_latency.go:363] Got endpoints: latency-svc-bpkk6 [734.008704ms]
  I1207 13:16:30.284231 20 service_latency.go:356] Created: latency-svc-ff87p
  I1207 13:16:30.318558 20 service_latency.go:363] Got endpoints: latency-svc-5sfg5 [749.868135ms]
  I1207 13:16:30.333605 20 service_latency.go:356] Created: latency-svc-5jjv7
  I1207 13:16:30.368508 20 service_latency.go:363] Got endpoints: latency-svc-z6lrm [749.211145ms]
  I1207 13:16:30.378362 20 service_latency.go:356] Created: latency-svc-5vgvk
  I1207 13:16:30.421110 20 service_latency.go:363] Got endpoints: latency-svc-n87mg [750.529872ms]
  I1207 13:16:30.432471 20 service_latency.go:356] Created: latency-svc-wfjmv
  I1207 13:16:30.469812 20 service_latency.go:363] Got endpoints: latency-svc-pcxkt [749.871562ms]
  I1207 13:16:30.482417 20 service_latency.go:356] Created: latency-svc-ldwvf
  I1207 13:16:30.520044 20 service_latency.go:363] Got endpoints: latency-svc-dkrs8 [752.214875ms]
  I1207 13:16:30.531372 20 service_latency.go:356] Created: latency-svc-br5dw
  I1207 13:16:30.568965 20 service_latency.go:363] Got endpoints: latency-svc-8xl5b [750.067983ms]
  I1207 13:16:30.580709 20 service_latency.go:356] Created: latency-svc-cckd7
  I1207 13:16:30.621413 20 service_latency.go:363] Got endpoints: latency-svc-glnvn [749.21236ms]
  I1207 13:16:30.634477 20 service_latency.go:356] Created: latency-svc-xj6s7
  I1207 13:16:30.669471 20 service_latency.go:363] Got endpoints: latency-svc-kt2tn [749.794703ms]
  I1207 13:16:30.681213 20 service_latency.go:356] Created: latency-svc-bj9xv
  I1207 13:16:30.719723 20 service_latency.go:363] Got endpoints: latency-svc-mhjtf [749.859549ms]
  I1207 13:16:30.732791 20 service_latency.go:356] Created: latency-svc-h65z7
  I1207 13:16:30.768406 20 service_latency.go:363] Got endpoints: latency-svc-ljwwg [748.780747ms]
  I1207 13:16:30.781009 20 service_latency.go:356] Created: latency-svc-qxknm
  I1207 13:16:30.820500 20 service_latency.go:363] Got endpoints: latency-svc-b4v6p [752.633867ms]
  I1207 13:16:30.830887 20 service_latency.go:356] Created: latency-svc-ztmjv
  I1207 13:16:30.870795 20 service_latency.go:363] Got endpoints: latency-svc-4nvnh [752.504177ms]
  I1207 13:16:30.882424 20 service_latency.go:356] Created: latency-svc-f44ml
  I1207 13:16:30.920126 20 service_latency.go:363] Got endpoints: latency-svc-wqhn9 [750.44201ms]
  I1207 13:16:30.932987 20 service_latency.go:356] Created: latency-svc-rzftq
  I1207 13:16:30.968664 20 service_latency.go:363] Got endpoints: latency-svc-mq9rg [748.57095ms]
  I1207 13:16:30.980417 20 service_latency.go:356] Created: latency-svc-fmg6q
  I1207 13:16:31.019038 20 service_latency.go:363] Got endpoints: latency-svc-ff87p [748.008403ms]
  I1207 13:16:31.029936 20 service_latency.go:356] Created: latency-svc-c84dg
  I1207 13:16:31.070259 20 service_latency.go:363] Got endpoints: latency-svc-5jjv7 [751.66925ms]
  I1207 13:16:31.086272 20 service_latency.go:356] Created: latency-svc-2sckp
  I1207 13:16:31.120338 20 service_latency.go:363] Got endpoints: latency-svc-5vgvk [751.805344ms]
  I1207 13:16:31.130405 20 service_latency.go:356] Created: latency-svc-swzdq
  I1207 13:16:31.169114 20 service_latency.go:363] Got endpoints: latency-svc-wfjmv [747.9701ms]
  I1207 13:16:31.180941 20 service_latency.go:356] Created: latency-svc-m92v8
  I1207 13:16:31.218747 20 service_latency.go:363] Got endpoints: latency-svc-ldwvf [748.900352ms]
  I1207 13:16:31.231739 20 service_latency.go:356] Created: latency-svc-mr4jh
  E1207 13:16:31.261888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:31.269286 20 service_latency.go:363] Got endpoints: latency-svc-br5dw [749.215401ms]
  I1207 13:16:31.281612 20 service_latency.go:356] Created: latency-svc-tjq5z
  I1207 13:16:31.320516 20 service_latency.go:363] Got endpoints: latency-svc-cckd7 [751.518828ms]
  I1207 13:16:31.332919 20 service_latency.go:356] Created: latency-svc-vxpms
  I1207 13:16:31.369922 20 service_latency.go:363] Got endpoints: latency-svc-xj6s7 [748.4795ms]
  I1207 13:16:31.382662 20 service_latency.go:356] Created: latency-svc-pwcp9
  I1207 13:16:31.418386 20 service_latency.go:363] Got endpoints: latency-svc-bj9xv [748.874082ms]
  I1207 13:16:31.429966 20 service_latency.go:356] Created: latency-svc-qg7zg
  I1207 13:16:31.469071 20 service_latency.go:363] Got endpoints: latency-svc-h65z7 [749.316606ms]
  I1207 13:16:31.479848 20 service_latency.go:356] Created: latency-svc-zzggz
  I1207 13:16:31.519840 20 service_latency.go:363] Got endpoints: latency-svc-qxknm [751.399403ms]
  I1207 13:16:31.533402 20 service_latency.go:356] Created: latency-svc-bhtbj
  I1207 13:16:31.570023 20 service_latency.go:363] Got endpoints: latency-svc-ztmjv [749.482321ms]
  I1207 13:16:31.581593 20 service_latency.go:356] Created: latency-svc-tz6tf
  I1207 13:16:31.619751 20 service_latency.go:363] Got endpoints: latency-svc-f44ml [748.921751ms]
  I1207 13:16:31.633055 20 service_latency.go:356] Created: latency-svc-lmzd7
  I1207 13:16:31.668395 20 service_latency.go:363] Got endpoints: latency-svc-rzftq [748.230274ms]
  I1207 13:16:31.685914 20 service_latency.go:356] Created: latency-svc-4tn7x
  I1207 13:16:31.717654 20 service_latency.go:363] Got endpoints: latency-svc-fmg6q [748.948067ms]
  I1207 13:16:31.727950 20 service_latency.go:356] Created: latency-svc-xq585
  I1207 13:16:31.771415 20 service_latency.go:363] Got endpoints: latency-svc-c84dg [752.345337ms]
  I1207 13:16:31.782710 20 service_latency.go:356] Created: latency-svc-mdn5t
  I1207 13:16:31.819064 20 service_latency.go:363] Got endpoints: latency-svc-2sckp [748.779152ms]
  I1207 13:16:31.830849 20 service_latency.go:356] Created: latency-svc-hm5tc
  I1207 13:16:31.867889 20 service_latency.go:363] Got endpoints: latency-svc-swzdq [747.498117ms]
  I1207 13:16:31.879464 20 service_latency.go:356] Created: latency-svc-7c57m
  I1207 13:16:31.918775 20 service_latency.go:363] Got endpoints: latency-svc-m92v8 [749.628739ms]
  I1207 13:16:31.930426 20 service_latency.go:356] Created: latency-svc-2nrmv
  I1207 13:16:31.969909 20 service_latency.go:363] Got endpoints: latency-svc-mr4jh [751.135314ms]
  I1207 13:16:31.982421 20 service_latency.go:356] Created: latency-svc-6kt4w
  I1207 13:16:32.019854 20 service_latency.go:363] Got endpoints: latency-svc-tjq5z [750.537071ms]
  I1207 13:16:32.031990 20 service_latency.go:356] Created: latency-svc-62rth
  I1207 13:16:32.070276 20 service_latency.go:363] Got endpoints: latency-svc-vxpms [749.727219ms]
  I1207 13:16:32.084644 20 service_latency.go:356] Created: latency-svc-44m6q
  I1207 13:16:32.117500 20 service_latency.go:363] Got endpoints: latency-svc-pwcp9 [747.529832ms]
  I1207 13:16:32.129049 20 service_latency.go:356] Created: latency-svc-w4pxw
  I1207 13:16:32.170168 20 service_latency.go:363] Got endpoints: latency-svc-qg7zg [751.75654ms]
  I1207 13:16:32.180197 20 service_latency.go:356] Created: latency-svc-5jpr5
  I1207 13:16:32.218165 20 service_latency.go:363] Got endpoints: latency-svc-zzggz [749.029201ms]
  I1207 13:16:32.228854 20 service_latency.go:356] Created: latency-svc-9976j
  E1207 13:16:32.262176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:32.270479 20 service_latency.go:363] Got endpoints: latency-svc-bhtbj [750.610062ms]
  I1207 13:16:32.282083 20 service_latency.go:356] Created: latency-svc-2jsf6
  I1207 13:16:32.319911 20 service_latency.go:363] Got endpoints: latency-svc-tz6tf [749.833527ms]
  I1207 13:16:32.330735 20 service_latency.go:356] Created: latency-svc-g4x9q
  I1207 13:16:32.369126 20 service_latency.go:363] Got endpoints: latency-svc-lmzd7 [749.338661ms]
  I1207 13:16:32.379411 20 service_latency.go:356] Created: latency-svc-qbvzq
  I1207 13:16:32.418591 20 service_latency.go:363] Got endpoints: latency-svc-4tn7x [750.170562ms]
  I1207 13:16:32.430223 20 service_latency.go:356] Created: latency-svc-k5jkq
  I1207 13:16:32.470334 20 service_latency.go:363] Got endpoints: latency-svc-xq585 [752.653874ms]
  I1207 13:16:32.481038 20 service_latency.go:356] Created: latency-svc-jm78r
  I1207 13:16:32.519752 20 service_latency.go:363] Got endpoints: latency-svc-mdn5t [748.305001ms]
  I1207 13:16:32.531410 20 service_latency.go:356] Created: latency-svc-nqmb2
  I1207 13:16:32.567919 20 service_latency.go:363] Got endpoints: latency-svc-hm5tc [748.807572ms]
  I1207 13:16:32.581858 20 service_latency.go:356] Created: latency-svc-9c9sm
  I1207 13:16:32.617710 20 service_latency.go:363] Got endpoints: latency-svc-7c57m [749.78612ms]
  I1207 13:16:32.629280 20 service_latency.go:356] Created: latency-svc-b6xtt
  I1207 13:16:32.670216 20 service_latency.go:363] Got endpoints: latency-svc-2nrmv [751.408308ms]
  I1207 13:16:32.682017 20 service_latency.go:356] Created: latency-svc-92mt7
  I1207 13:16:32.720697 20 service_latency.go:363] Got endpoints: latency-svc-6kt4w [750.757824ms]
  I1207 13:16:32.733285 20 service_latency.go:356] Created: latency-svc-gnt98
  I1207 13:16:32.770171 20 service_latency.go:363] Got endpoints: latency-svc-62rth [750.285442ms]
  I1207 13:16:32.782557 20 service_latency.go:356] Created: latency-svc-t292g
  I1207 13:16:32.817409 20 service_latency.go:363] Got endpoints: latency-svc-44m6q [747.083618ms]
  I1207 13:16:32.829817 20 service_latency.go:356] Created: latency-svc-v7c4d
  I1207 13:16:32.868726 20 service_latency.go:363] Got endpoints: latency-svc-w4pxw [751.189105ms]
  I1207 13:16:32.881155 20 service_latency.go:356] Created: latency-svc-vdk4r
  I1207 13:16:32.920105 20 service_latency.go:363] Got endpoints: latency-svc-5jpr5 [749.90325ms]
  I1207 13:16:32.933161 20 service_latency.go:356] Created: latency-svc-n8bh9
  I1207 13:16:32.970281 20 service_latency.go:363] Got endpoints: latency-svc-9976j [751.972652ms]
  I1207 13:16:32.983369 20 service_latency.go:356] Created: latency-svc-h2pk2
  I1207 13:16:33.020022 20 service_latency.go:363] Got endpoints: latency-svc-2jsf6 [749.518646ms]
  I1207 13:16:33.032634 20 service_latency.go:356] Created: latency-svc-l2zwl
  I1207 13:16:33.068363 20 service_latency.go:363] Got endpoints: latency-svc-g4x9q [748.411127ms]
  I1207 13:16:33.079018 20 service_latency.go:356] Created: latency-svc-r7zhb
  I1207 13:16:33.121285 20 service_latency.go:363] Got endpoints: latency-svc-qbvzq [752.036014ms]
  I1207 13:16:33.133545 20 service_latency.go:356] Created: latency-svc-nml2l
  I1207 13:16:33.170388 20 service_latency.go:363] Got endpoints: latency-svc-k5jkq [751.76556ms]
  I1207 13:16:33.181854 20 service_latency.go:356] Created: latency-svc-sckdc
  I1207 13:16:33.220269 20 service_latency.go:363] Got endpoints: latency-svc-jm78r [749.884587ms]
  I1207 13:16:33.231578 20 service_latency.go:356] Created: latency-svc-7zjx4
  E1207 13:16:33.262925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:33.268869 20 service_latency.go:363] Got endpoints: latency-svc-nqmb2 [749.090331ms]
  I1207 13:16:33.281620 20 service_latency.go:356] Created: latency-svc-h8nhr
  I1207 13:16:33.317870 20 service_latency.go:363] Got endpoints: latency-svc-9c9sm [749.922812ms]
  I1207 13:16:33.330130 20 service_latency.go:356] Created: latency-svc-7hhn8
  I1207 13:16:33.367202 20 service_latency.go:363] Got endpoints: latency-svc-b6xtt [749.459578ms]
  I1207 13:16:33.377566 20 service_latency.go:356] Created: latency-svc-2blms
  I1207 13:16:33.420191 20 service_latency.go:363] Got endpoints: latency-svc-92mt7 [749.941732ms]
  I1207 13:16:33.431995 20 service_latency.go:356] Created: latency-svc-hjw2s
  I1207 13:16:33.469585 20 service_latency.go:363] Got endpoints: latency-svc-gnt98 [748.852843ms]
  I1207 13:16:33.481767 20 service_latency.go:356] Created: latency-svc-fqc8v
  I1207 13:16:33.519530 20 service_latency.go:363] Got endpoints: latency-svc-t292g [749.323803ms]
  I1207 13:16:33.530068 20 service_latency.go:356] Created: latency-svc-zcqr2
  I1207 13:16:33.569239 20 service_latency.go:363] Got endpoints: latency-svc-v7c4d [751.79931ms]
  I1207 13:16:33.581952 20 service_latency.go:356] Created: latency-svc-24pxj
  I1207 13:16:33.618855 20 service_latency.go:363] Got endpoints: latency-svc-vdk4r [750.09959ms]
  I1207 13:16:33.632233 20 service_latency.go:356] Created: latency-svc-qlkzv
  I1207 13:16:33.670795 20 service_latency.go:363] Got endpoints: latency-svc-n8bh9 [750.657713ms]
  I1207 13:16:33.683679 20 service_latency.go:356] Created: latency-svc-7n8v6
  I1207 13:16:33.719722 20 service_latency.go:363] Got endpoints: latency-svc-h2pk2 [749.41233ms]
  I1207 13:16:33.730554 20 service_latency.go:356] Created: latency-svc-hxlw9
  I1207 13:16:33.767955 20 service_latency.go:363] Got endpoints: latency-svc-l2zwl [747.897193ms]
  I1207 13:16:33.782323 20 service_latency.go:356] Created: latency-svc-xmrdd
  I1207 13:16:33.818483 20 service_latency.go:363] Got endpoints: latency-svc-r7zhb [750.093427ms]
  I1207 13:16:33.829386 20 service_latency.go:356] Created: latency-svc-bz4v4
  I1207 13:16:33.870745 20 service_latency.go:363] Got endpoints: latency-svc-nml2l [749.431683ms]
  I1207 13:16:33.882212 20 service_latency.go:356] Created: latency-svc-g69bk
  I1207 13:16:33.919994 20 service_latency.go:363] Got endpoints: latency-svc-sckdc [749.57151ms]
  I1207 13:16:33.931778 20 service_latency.go:356] Created: latency-svc-mtw82
  I1207 13:16:33.970513 20 service_latency.go:363] Got endpoints: latency-svc-7zjx4 [750.20264ms]
  I1207 13:16:33.982323 20 service_latency.go:356] Created: latency-svc-jhdc4
  I1207 13:16:34.018423 20 service_latency.go:363] Got endpoints: latency-svc-h8nhr [749.524654ms]
  I1207 13:16:34.030731 20 service_latency.go:356] Created: latency-svc-s57cj
  I1207 13:16:34.069009 20 service_latency.go:363] Got endpoints: latency-svc-7hhn8 [751.106255ms]
  I1207 13:16:34.081655 20 service_latency.go:356] Created: latency-svc-dr6xl
  I1207 13:16:34.118621 20 service_latency.go:363] Got endpoints: latency-svc-2blms [751.394718ms]
  I1207 13:16:34.130016 20 service_latency.go:356] Created: latency-svc-xlpbp
  I1207 13:16:34.170481 20 service_latency.go:363] Got endpoints: latency-svc-hjw2s [750.26704ms]
  I1207 13:16:34.182944 20 service_latency.go:356] Created: latency-svc-vqm8f
  I1207 13:16:34.220458 20 service_latency.go:363] Got endpoints: latency-svc-fqc8v [750.842992ms]
  I1207 13:16:34.233866 20 service_latency.go:356] Created: latency-svc-7xdtf
  E1207 13:16:34.263986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:34.268278 20 service_latency.go:363] Got endpoints: latency-svc-zcqr2 [748.713217ms]
  I1207 13:16:34.278617 20 service_latency.go:356] Created: latency-svc-qjnsq
  I1207 13:16:34.321154 20 service_latency.go:363] Got endpoints: latency-svc-24pxj [751.881267ms]
  I1207 13:16:34.331385 20 service_latency.go:356] Created: latency-svc-6gv9h
  I1207 13:16:34.369914 20 service_latency.go:363] Got endpoints: latency-svc-qlkzv [751.027761ms]
  I1207 13:16:34.382609 20 service_latency.go:356] Created: latency-svc-2kx6p
  I1207 13:16:34.419033 20 service_latency.go:363] Got endpoints: latency-svc-7n8v6 [748.201662ms]
  I1207 13:16:34.430503 20 service_latency.go:356] Created: latency-svc-6bq8k
  I1207 13:16:34.470301 20 service_latency.go:363] Got endpoints: latency-svc-hxlw9 [750.548909ms]
  I1207 13:16:34.483478 20 service_latency.go:356] Created: latency-svc-rz8cl
  I1207 13:16:34.519964 20 service_latency.go:363] Got endpoints: latency-svc-xmrdd [751.983854ms]
  I1207 13:16:34.533516 20 service_latency.go:356] Created: latency-svc-zh2jz
  I1207 13:16:34.567916 20 service_latency.go:363] Got endpoints: latency-svc-bz4v4 [749.407819ms]
  I1207 13:16:34.578425 20 service_latency.go:356] Created: latency-svc-2fkfr
  I1207 13:16:34.623372 20 service_latency.go:363] Got endpoints: latency-svc-g69bk [752.602938ms]
  I1207 13:16:34.633922 20 service_latency.go:356] Created: latency-svc-j6gkx
  I1207 13:16:34.669973 20 service_latency.go:363] Got endpoints: latency-svc-mtw82 [749.954322ms]
  I1207 13:16:34.683113 20 service_latency.go:356] Created: latency-svc-xhznp
  I1207 13:16:34.720818 20 service_latency.go:363] Got endpoints: latency-svc-jhdc4 [750.277467ms]
  I1207 13:16:34.732630 20 service_latency.go:356] Created: latency-svc-vnv25
  I1207 13:16:34.768778 20 service_latency.go:363] Got endpoints: latency-svc-s57cj [750.321339ms]
  I1207 13:16:34.781177 20 service_latency.go:356] Created: latency-svc-tvk2z
  I1207 13:16:34.818014 20 service_latency.go:363] Got endpoints: latency-svc-dr6xl [748.980111ms]
  I1207 13:16:34.830413 20 service_latency.go:356] Created: latency-svc-jvzb2
  I1207 13:16:34.869250 20 service_latency.go:363] Got endpoints: latency-svc-xlpbp [750.602781ms]
  I1207 13:16:34.881796 20 service_latency.go:356] Created: latency-svc-sm8ff
  I1207 13:16:34.921714 20 service_latency.go:363] Got endpoints: latency-svc-vqm8f [751.20277ms]
  I1207 13:16:34.933470 20 service_latency.go:356] Created: latency-svc-mcndn
  I1207 13:16:34.967821 20 service_latency.go:363] Got endpoints: latency-svc-7xdtf [747.32818ms]
  I1207 13:16:34.981309 20 service_latency.go:356] Created: latency-svc-shvqd
  I1207 13:16:35.019796 20 service_latency.go:363] Got endpoints: latency-svc-qjnsq [751.487088ms]
  I1207 13:16:35.029604 20 service_latency.go:356] Created: latency-svc-sz482
  I1207 13:16:35.071088 20 service_latency.go:363] Got endpoints: latency-svc-6gv9h [749.897098ms]
  I1207 13:16:35.083029 20 service_latency.go:356] Created: latency-svc-5nz7g
  I1207 13:16:35.120457 20 service_latency.go:363] Got endpoints: latency-svc-2kx6p [750.505194ms]
  I1207 13:16:35.133632 20 service_latency.go:356] Created: latency-svc-zwjc2
  I1207 13:16:35.170297 20 service_latency.go:363] Got endpoints: latency-svc-6bq8k [751.22504ms]
  I1207 13:16:35.181947 20 service_latency.go:356] Created: latency-svc-h9qkz
  I1207 13:16:35.219091 20 service_latency.go:363] Got endpoints: latency-svc-rz8cl [748.760277ms]
  I1207 13:16:35.231904 20 service_latency.go:356] Created: latency-svc-8pzkt
  E1207 13:16:35.264136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:35.268146 20 service_latency.go:363] Got endpoints: latency-svc-zh2jz [748.148579ms]
  I1207 13:16:35.280457 20 service_latency.go:356] Created: latency-svc-5rjbw
  I1207 13:16:35.321062 20 service_latency.go:363] Got endpoints: latency-svc-2fkfr [753.12012ms]
  I1207 13:16:35.331501 20 service_latency.go:356] Created: latency-svc-fz8gg
  I1207 13:16:35.370039 20 service_latency.go:363] Got endpoints: latency-svc-j6gkx [746.641478ms]
  I1207 13:16:35.380796 20 service_latency.go:356] Created: latency-svc-bcrfd
  I1207 13:16:35.418654 20 service_latency.go:363] Got endpoints: latency-svc-xhznp [748.647606ms]
  I1207 13:16:35.431446 20 service_latency.go:356] Created: latency-svc-9g5gp
  I1207 13:16:35.468499 20 service_latency.go:363] Got endpoints: latency-svc-vnv25 [747.652039ms]
  I1207 13:16:35.480095 20 service_latency.go:356] Created: latency-svc-t2nb6
  I1207 13:16:35.518647 20 service_latency.go:363] Got endpoints: latency-svc-tvk2z [749.832577ms]
  I1207 13:16:35.529635 20 service_latency.go:356] Created: latency-svc-764rr
  I1207 13:16:35.569583 20 service_latency.go:363] Got endpoints: latency-svc-jvzb2 [751.533814ms]
  I1207 13:16:35.582284 20 service_latency.go:356] Created: latency-svc-drk6d
  I1207 13:16:35.620113 20 service_latency.go:363] Got endpoints: latency-svc-sm8ff [750.820332ms]
  I1207 13:16:35.629621 20 service_latency.go:356] Created: latency-svc-k4tdn
  I1207 13:16:35.668392 20 service_latency.go:363] Got endpoints: latency-svc-mcndn [746.643514ms]
  I1207 13:16:35.680610 20 service_latency.go:356] Created: latency-svc-zjh4r
  I1207 13:16:35.718452 20 service_latency.go:363] Got endpoints: latency-svc-shvqd [750.601472ms]
  I1207 13:16:35.730317 20 service_latency.go:356] Created: latency-svc-4q7f5
  I1207 13:16:35.769825 20 service_latency.go:363] Got endpoints: latency-svc-sz482 [749.994534ms]
  I1207 13:16:35.780809 20 service_latency.go:356] Created: latency-svc-9ml4c
  I1207 13:16:35.820139 20 service_latency.go:363] Got endpoints: latency-svc-5nz7g [749.015003ms]
  I1207 13:16:35.831609 20 service_latency.go:356] Created: latency-svc-vhcsp
  I1207 13:16:35.868479 20 service_latency.go:363] Got endpoints: latency-svc-zwjc2 [747.984837ms]
  I1207 13:16:35.882646 20 service_latency.go:356] Created: latency-svc-g6pms
  I1207 13:16:35.920474 20 service_latency.go:363] Got endpoints: latency-svc-h9qkz [750.144541ms]
  I1207 13:16:35.930315 20 service_latency.go:356] Created: latency-svc-c494d
  I1207 13:16:35.972618 20 service_latency.go:363] Got endpoints: latency-svc-8pzkt [753.495392ms]
  I1207 13:16:35.985946 20 service_latency.go:356] Created: latency-svc-9vgpc
  I1207 13:16:36.018325 20 service_latency.go:363] Got endpoints: latency-svc-5rjbw [750.148168ms]
  I1207 13:16:36.030731 20 service_latency.go:356] Created: latency-svc-f7xpm
  I1207 13:16:36.069810 20 service_latency.go:363] Got endpoints: latency-svc-fz8gg [748.697046ms]
  I1207 13:16:36.080225 20 service_latency.go:356] Created: latency-svc-sxmxr
  I1207 13:16:36.118910 20 service_latency.go:363] Got endpoints: latency-svc-bcrfd [748.841185ms]
  I1207 13:16:36.131158 20 service_latency.go:356] Created: latency-svc-99r6z
  I1207 13:16:36.168288 20 service_latency.go:363] Got endpoints: latency-svc-9g5gp [749.602016ms]
  I1207 13:16:36.182543 20 service_latency.go:356] Created: latency-svc-ljm5t
  I1207 13:16:36.219695 20 service_latency.go:363] Got endpoints: latency-svc-t2nb6 [751.169972ms]
  I1207 13:16:36.235433 20 service_latency.go:356] Created: latency-svc-8nswl
  E1207 13:16:36.264435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:36.270330 20 service_latency.go:363] Got endpoints: latency-svc-764rr [751.650189ms]
  I1207 13:16:36.283069 20 service_latency.go:356] Created: latency-svc-sktwk
  I1207 13:16:36.319426 20 service_latency.go:363] Got endpoints: latency-svc-drk6d [749.806016ms]
  I1207 13:16:36.332381 20 service_latency.go:356] Created: latency-svc-s26q4
  I1207 13:16:36.368598 20 service_latency.go:363] Got endpoints: latency-svc-k4tdn [748.453428ms]
  I1207 13:16:36.379998 20 service_latency.go:356] Created: latency-svc-rrbn4
  I1207 13:16:36.419264 20 service_latency.go:363] Got endpoints: latency-svc-zjh4r [750.820567ms]
  I1207 13:16:36.430287 20 service_latency.go:356] Created: latency-svc-zhng8
  I1207 13:16:36.469632 20 service_latency.go:363] Got endpoints: latency-svc-4q7f5 [751.151079ms]
  I1207 13:16:36.481500 20 service_latency.go:356] Created: latency-svc-4m8g6
  I1207 13:16:36.520511 20 service_latency.go:363] Got endpoints: latency-svc-9ml4c [750.656533ms]
  I1207 13:16:36.530968 20 service_latency.go:356] Created: latency-svc-7cprf
  I1207 13:16:36.569743 20 service_latency.go:363] Got endpoints: latency-svc-vhcsp [749.575256ms]
  I1207 13:16:36.582330 20 service_latency.go:356] Created: latency-svc-krslq
  I1207 13:16:36.618147 20 service_latency.go:363] Got endpoints: latency-svc-g6pms [749.634399ms]
  I1207 13:16:36.630402 20 service_latency.go:356] Created: latency-svc-49vlk
  I1207 13:16:36.671148 20 service_latency.go:363] Got endpoints: latency-svc-c494d [750.643285ms]
  I1207 13:16:36.681670 20 service_latency.go:356] Created: latency-svc-ptv9f
  I1207 13:16:36.719859 20 service_latency.go:363] Got endpoints: latency-svc-9vgpc [747.188043ms]
  I1207 13:16:36.732303 20 service_latency.go:356] Created: latency-svc-2xwg8
  I1207 13:16:36.768874 20 service_latency.go:363] Got endpoints: latency-svc-f7xpm [750.497358ms]
  I1207 13:16:36.783207 20 service_latency.go:356] Created: latency-svc-dzss4
  I1207 13:16:36.818376 20 service_latency.go:363] Got endpoints: latency-svc-sxmxr [748.536676ms]
  I1207 13:16:36.828517 20 service_latency.go:356] Created: latency-svc-g2dg6
  I1207 13:16:36.870483 20 service_latency.go:363] Got endpoints: latency-svc-99r6z [751.54512ms]
  I1207 13:16:36.882843 20 service_latency.go:356] Created: latency-svc-jjl2r
  I1207 13:16:36.919928 20 service_latency.go:363] Got endpoints: latency-svc-ljm5t [751.606922ms]
  I1207 13:16:36.931982 20 service_latency.go:356] Created: latency-svc-6rlhc
  I1207 13:16:36.969834 20 service_latency.go:363] Got endpoints: latency-svc-8nswl [750.103224ms]
  I1207 13:16:36.981644 20 service_latency.go:356] Created: latency-svc-rqwcr
  I1207 13:16:37.020867 20 service_latency.go:363] Got endpoints: latency-svc-sktwk [750.48835ms]
  I1207 13:16:37.031790 20 service_latency.go:356] Created: latency-svc-hv4vd
  I1207 13:16:37.068128 20 service_latency.go:363] Got endpoints: latency-svc-s26q4 [748.659359ms]
  I1207 13:16:37.120422 20 service_latency.go:363] Got endpoints: latency-svc-rrbn4 [751.793845ms]
  I1207 13:16:37.168620 20 service_latency.go:363] Got endpoints: latency-svc-zhng8 [749.328708ms]
  I1207 13:16:37.221040 20 service_latency.go:363] Got endpoints: latency-svc-4m8g6 [751.377599ms]
  E1207 13:16:37.265279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:37.269136 20 service_latency.go:363] Got endpoints: latency-svc-7cprf [748.549795ms]
  I1207 13:16:37.320694 20 service_latency.go:363] Got endpoints: latency-svc-krslq [750.925563ms]
  I1207 13:16:37.367968 20 service_latency.go:363] Got endpoints: latency-svc-49vlk [749.782465ms]
  I1207 13:16:37.421314 20 service_latency.go:363] Got endpoints: latency-svc-ptv9f [750.134739ms]
  I1207 13:16:37.469065 20 service_latency.go:363] Got endpoints: latency-svc-2xwg8 [749.171377ms]
  I1207 13:16:37.521366 20 service_latency.go:363] Got endpoints: latency-svc-dzss4 [752.435319ms]
  I1207 13:16:37.568789 20 service_latency.go:363] Got endpoints: latency-svc-g2dg6 [750.383506ms]
  I1207 13:16:37.621107 20 service_latency.go:363] Got endpoints: latency-svc-jjl2r [750.598646ms]
  I1207 13:16:37.667845 20 service_latency.go:363] Got endpoints: latency-svc-6rlhc [747.892334ms]
  I1207 13:16:37.720843 20 service_latency.go:363] Got endpoints: latency-svc-rqwcr [750.980172ms]
  I1207 13:16:37.768950 20 service_latency.go:363] Got endpoints: latency-svc-hv4vd [748.054252ms]
  I1207 13:16:37.769034 20 service_latency.go:114] Latencies: [21.36794ms 28.443756ms 40.29818ms 48.233891ms 52.821597ms 66.080869ms 74.197434ms 83.774333ms 89.988948ms 96.170225ms 107.645577ms 116.613204ms 123.845711ms 125.204901ms 126.352082ms 127.730157ms 128.292029ms 129.170707ms 130.141022ms 130.197972ms 130.322886ms 130.422668ms 131.478583ms 131.852364ms 132.154837ms 132.85807ms 133.007175ms 133.195834ms 133.220693ms 133.838099ms 136.043817ms 136.566551ms 138.645351ms 139.531291ms 144.335203ms 151.814168ms 191.522206ms 241.176985ms 277.061073ms 317.936731ms 357.720222ms 403.181883ms 445.024855ms 484.88676ms 522.895212ms 554.342148ms 602.631878ms 643.806178ms 693.481001ms 734.008704ms 746.641478ms 746.643514ms 747.083618ms 747.188043ms 747.32818ms 747.498117ms 747.529832ms 747.652039ms 747.892334ms 747.897193ms 747.9701ms 747.984837ms 748.008403ms 748.054252ms 748.148579ms 748.201662ms 748.230274ms 748.305001ms 748.411127ms 748.453428ms 748.4795ms 748.536676ms 748.549795ms 748.57095ms 748.647606ms 748.659359ms 748.697046ms 748.713217ms 748.760277ms 748.779152ms 748.780747ms 748.807572ms 748.841185ms 748.852843ms 748.874082ms 748.900352ms 748.921751ms 748.948067ms 748.980111ms 749.015003ms 749.029201ms 749.090331ms 749.171377ms 749.211145ms 749.21236ms 749.215401ms 749.316606ms 749.323803ms 749.328708ms 749.338661ms 749.407819ms 749.41233ms 749.431683ms 749.459578ms 749.482321ms 749.518646ms 749.524654ms 749.57151ms 749.575256ms 749.602016ms 749.628739ms 749.634399ms 749.727219ms 749.782465ms 749.78612ms 749.794703ms 749.806016ms 749.832577ms 749.833527ms 749.859549ms 749.868135ms 749.871562ms 749.884587ms 749.897098ms 749.90325ms 749.922812ms 749.941732ms 749.954322ms 749.994534ms 750.067983ms 750.093427ms 750.09959ms 750.103224ms 750.134739ms 750.144541ms 750.148168ms 750.170562ms 750.20264ms 750.26704ms 750.277467ms 750.285442ms 750.321339ms 750.383506ms 750.44201ms 750.48835ms 750.497358ms 750.505194ms 750.529872ms 750.537071ms 750.548909ms 750.598646ms 750.601472ms 750.602781ms 750.610062ms 750.643285ms 750.656533ms 750.657713ms 750.757824ms 750.820332ms 750.820567ms 750.842992ms 750.925563ms 750.980172ms 751.027761ms 751.106255ms 751.135314ms 751.151079ms 751.169972ms 751.189105ms 751.20277ms 751.22504ms 751.377599ms 751.394718ms 751.399403ms 751.408308ms 751.487088ms 751.518828ms 751.533814ms 751.54512ms 751.606922ms 751.650189ms 751.66925ms 751.75654ms 751.76556ms 751.793845ms 751.79931ms 751.805344ms 751.881267ms 751.972652ms 751.983854ms 752.036014ms 752.214875ms 752.345337ms 752.435319ms 752.504177ms 752.602938ms 752.633867ms 752.653874ms 753.12012ms 753.495392ms]
  I1207 13:16:37.769048 20 service_latency.go:118] 50 %ile: 749.407819ms
  I1207 13:16:37.769055 20 service_latency.go:119] 90 %ile: 751.650189ms
  I1207 13:16:37.769060 20 service_latency.go:120] 99 %ile: 753.12012ms
  I1207 13:16:37.769131 20 service_latency.go:121] Total sample count: 200
  I1207 13:16:37.769281 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5779" for this suite. @ 12/07/24 13:16:37.775
• [10.769 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 12/07/24 13:16:37.783
  I1207 13:16:37.784012 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:16:37.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:37.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:37.806
  STEP: Setting up server cert @ 12/07/24 13:16:37.834
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:16:38.02
  STEP: Deploying the webhook pod @ 12/07/24 13:16:38.028
  STEP: Wait for the deployment to be ready @ 12/07/24 13:16:38.047
  I1207 13:16:38.055374 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1207 13:16:38.265796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:39.265907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:16:40.067
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:16:40.081
  E1207 13:16:40.266111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:41.082863 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/07/24 13:16:41.092
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/07/24 13:16:41.11
  STEP: Creating a configMap that should not be mutated @ 12/07/24 13:16:41.117
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/07/24 13:16:41.134
  STEP: Creating a configMap that should be mutated @ 12/07/24 13:16:41.142
  I1207 13:16:41.208274 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4218" for this suite. @ 12/07/24 13:16:41.211
  STEP: Destroying namespace "webhook-markers-8104" for this suite. @ 12/07/24 13:16:41.221
• [3.444 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/07/24 13:16:41.227
  I1207 13:16:41.227958 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename secrets @ 12/07/24 13:16:41.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:41.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:41.249
  E1207 13:16:41.266387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:41.294827 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7197" for this suite. @ 12/07/24 13:16:41.298
• [0.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/07/24 13:16:41.305
  I1207 13:16:41.305569 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:16:41.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:41.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:41.328
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:16:41.33
  E1207 13:16:42.266517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:43.266885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:44.266988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:45.267094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:16:45.355
  I1207 13:16:45.360727 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-e05641dc-db08-4690-b633-d8fcd11e5f3a container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:16:45.37
  I1207 13:16:45.394705 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5067" for this suite. @ 12/07/24 13:16:45.398
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 12/07/24 13:16:45.406
  I1207 13:16:45.406490 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:16:45.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:16:45.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:16:45.424
  STEP: Setting up server cert @ 12/07/24 13:16:45.504
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:16:45.757
  STEP: Deploying the webhook pod @ 12/07/24 13:16:45.762
  STEP: Wait for the deployment to be ready @ 12/07/24 13:16:45.776
  I1207 13:16:45.782755 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1207 13:16:46.267378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:16:47.267581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:16:47.797
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:16:47.813
  E1207 13:16:48.268570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:48.814763 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:48.819608 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:49.269199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:49.814462 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:49.820256 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:50.270034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:50.814450 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:50.818680 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:51.270244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:51.814444 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:51.818750 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:52.270393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:52.814042 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:52.818982 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:53.270602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:53.814059 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:53.818395 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:54.270727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:54.814064 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:54.819183 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:55.271562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:55.814065 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:55.818377 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:56.271697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:56.814340 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:56.818836 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1207 13:16:57.272483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:16:57.814135 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:16:57.824022 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:16:58.272994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2007-crds.webhook.example.com via the AdmissionRegistration API @ 12/07/24 13:16:58.335
  STEP: Creating a custom resource while v1 is storage version @ 12/07/24 13:16:58.351
  E1207 13:16:59.273444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:00.273881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/07/24 13:17:00.377
  STEP: Patching the custom resource while v2 is storage version @ 12/07/24 13:17:00.392
  I1207 13:17:01.015202 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3850" for this suite. @ 12/07/24 13:17:01.02
  STEP: Destroying namespace "webhook-markers-8984" for this suite. @ 12/07/24 13:17:01.028
• [15.631 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 12/07/24 13:17:01.037
  I1207 13:17:01.037252 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 13:17:01.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:17:01.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:17:01.059
  I1207 13:17:01.061140 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:17:01.274185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:02.274313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:03.274470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:17:04.139877 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3060" for this suite. @ 12/07/24 13:17:04.144
• [3.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/07/24 13:17:04.152
  I1207 13:17:04.152908 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 13:17:04.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:17:04.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:17:04.188
  STEP: Creating service test in namespace statefulset-4229 @ 12/07/24 13:17:04.19
  STEP: Creating a new StatefulSet @ 12/07/24 13:17:04.196
  I1207 13:17:04.208452 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E1207 13:17:04.274721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:05.275015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:06.275886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:07.276569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:08.277333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:09.277472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:10.277569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:11.277753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:12.277954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:13.279009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:17:14.209846 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:17:14.209877 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:17:14.209885 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/07/24 13:17:14.219
  I1207 13:17:14.230899 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/07/24 13:17:14.23
  E1207 13:17:14.279470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:15.279728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:16.279857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:17.280074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:18.280188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:19.280286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:20.280485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:21.280745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:22.281544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:23.281953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/07/24 13:17:24.24
  STEP: Performing a canary update @ 12/07/24 13:17:24.24
  I1207 13:17:24.251533 20 statefulset.go:2507] Updating stateful set ss2
  I1207 13:17:24.258926 20 wait.go:74] Waiting for Pod statefulset-4229/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1207 13:17:24.282019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:25.282215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:26.283116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:27.283875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:28.283899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:29.284026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:30.284117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:31.284188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:32.284275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:33.284483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/07/24 13:17:34.26
  E1207 13:17:34.284500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:17:34.310851 20 wait.go:40] Found 2 stateful pods, waiting for 3
  E1207 13:17:35.285565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:36.285687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:37.286573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:38.286866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:39.287134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:40.287475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:41.287658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:42.288574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:43.288878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:44.289809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:17:44.312738 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:17:44.312765 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:17:44.312773 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/07/24 13:17:44.32
  I1207 13:17:44.332956 20 statefulset.go:2507] Updating stateful set ss2
  I1207 13:17:44.344594 20 wait.go:74] Waiting for Pod statefulset-4229/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1207 13:17:45.290512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:46.290785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:47.290874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:48.291027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:49.291304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:50.291531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:51.291736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:52.291935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:53.292840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:54.293693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:17:54.353598 20 statefulset.go:2507] Updating stateful set ss2
  I1207 13:17:54.364628 20 wait.go:56] Waiting for StatefulSet statefulset-4229/ss2 to complete update
  I1207 13:17:54.364662 20 wait.go:63] Waiting for Pod statefulset-4229/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1207 13:17:55.294515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:56.294584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:57.294714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:58.295537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:17:59.296581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:00.296671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:01.296869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:02.297056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:03.297954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:04.298564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:18:04.361851 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4229
  I1207 13:18:04.365496 20 rest.go:150] Scaling statefulset ss2 to 0
  E1207 13:18:05.298872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:06.299664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:07.299767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:08.300644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:09.300845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:10.301032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:11.301159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:12.301416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:13.301537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:14.301653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:18:14.381005 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 13:18:14.384622 20 rest.go:88] Deleting statefulset ss2
  I1207 13:18:14.398794 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4229" for this suite. @ 12/07/24 13:18:14.401
• [70.257 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/07/24 13:18:14.409
  I1207 13:18:14.409966 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 13:18:14.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:18:14.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:18:14.435
  STEP: creating the pod @ 12/07/24 13:18:14.437
  STEP: setting up watch @ 12/07/24 13:18:14.437
  STEP: submitting the pod to kubernetes @ 12/07/24 13:18:14.541
  STEP: verifying the pod is in kubernetes @ 12/07/24 13:18:14.554
  STEP: verifying pod creation was observed @ 12/07/24 13:18:14.557
  E1207 13:18:15.302571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:16.302687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/07/24 13:18:16.572
  STEP: verifying pod deletion was observed @ 12/07/24 13:18:16.582
  E1207 13:18:17.302755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:18:17.894831 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2091" for this suite. @ 12/07/24 13:18:17.898
• [3.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/07/24 13:18:17.907
  I1207 13:18:17.907522 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename init-container @ 12/07/24 13:18:17.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:18:17.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:18:17.929
  STEP: creating the pod @ 12/07/24 13:18:17.931
  I1207 13:18:17.931528 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1207 13:18:18.303669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:19.304569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:20.305552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:18:21.025464 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1327" for this suite. @ 12/07/24 13:18:21.029
• [3.130 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/07/24 13:18:21.037
  I1207 13:18:21.037269 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:18:21.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:18:21.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:18:21.057
  E1207 13:18:21.305674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:22.306120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:23.306577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:24.306775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:25.307150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:26.307788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:27.308666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:28.309306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:29.309976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:30.310136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:31.310473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:32.310656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:33.311238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:34.311941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:35.312285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:36.312763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:37.313242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:38.313932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:39.314529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:40.315417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:41.316138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:42.316548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:43.317534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:44.318142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:45.318554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:46.319406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:47.319484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:48.320460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:49.320590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:50.320956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:51.321478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:52.321574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:53.321659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:54.321765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:55.322078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:56.322528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:57.323451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:58.323820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:18:59.324452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:00.325538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:01.326191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:02.327243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:03.328009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:04.328845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:05.329461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:06.329484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:07.329757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:08.330823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:09.331189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:10.331631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:11.332654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:12.332776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:13.332826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:14.333506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:15.333603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:16.333695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:17.333785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:18.334547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:19.334643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:20.334748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:21.077369 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2449" for this suite. @ 12/07/24 13:19:21.082
• [60.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/07/24 13:19:21.091
  I1207 13:19:21.091399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename runtimeclass @ 12/07/24 13:19:21.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:21.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:21.113
  STEP: getting /apis @ 12/07/24 13:19:21.116
  STEP: getting /apis/node.k8s.io @ 12/07/24 13:19:21.118
  STEP: getting /apis/node.k8s.io/v1 @ 12/07/24 13:19:21.121
  STEP: creating @ 12/07/24 13:19:21.124
  STEP: watching @ 12/07/24 13:19:21.141
  I1207 13:19:21.141128 20 runtimeclass.go:275] starting watch
  STEP: getting @ 12/07/24 13:19:21.146
  STEP: listing @ 12/07/24 13:19:21.149
  STEP: patching @ 12/07/24 13:19:21.153
  STEP: updating @ 12/07/24 13:19:21.158
  I1207 13:19:21.163893 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/07/24 13:19:21.163
  STEP: deleting a collection @ 12/07/24 13:19:21.178
  I1207 13:19:21.197216 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1316" for this suite. @ 12/07/24 13:19:21.2
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/07/24 13:19:21.207
  I1207 13:19:21.207983 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:19:21.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:21.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:21.23
  STEP: Creating projection with secret that has name projected-secret-test-86a875e5-4bb7-4530-8c13-47686f6c4ea1 @ 12/07/24 13:19:21.232
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:19:21.239
  E1207 13:19:21.335044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:22.335563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:19:23.256
  I1207 13:19:23.260846 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-secrets-ceed3fa6-91f1-4e95-9d39-72effabfe6bc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:19:23.278
  I1207 13:19:23.298425 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1116" for this suite. @ 12/07/24 13:19:23.302
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/07/24 13:19:23.31
  I1207 13:19:23.310624 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/07/24 13:19:23.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:23.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:23.333
  E1207 13:19:23.335969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:23.337660 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-726" for this suite. @ 12/07/24 13:19:23.342
• [0.040 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/07/24 13:19:23.35
  I1207 13:19:23.350962 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/07/24 13:19:23.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:23.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:23.371
  STEP: getting /apis @ 12/07/24 13:19:23.379
  STEP: getting /apis/admissionregistration.k8s.io @ 12/07/24 13:19:23.381
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/07/24 13:19:23.382
  STEP: creating @ 12/07/24 13:19:23.383
  STEP: getting @ 12/07/24 13:19:23.399
  STEP: listing @ 12/07/24 13:19:23.403
  STEP: watching @ 12/07/24 13:19:23.406
  I1207 13:19:23.406655 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/07/24 13:19:23.407
  STEP: updating @ 12/07/24 13:19:23.412
  I1207 13:19:23.421481 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/07/24 13:19:23.421
  STEP: deleting a collection @ 12/07/24 13:19:23.435
  I1207 13:19:23.457273 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2146" for this suite. @ 12/07/24 13:19:23.46
• [0.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/07/24 13:19:23.468
  I1207 13:19:23.468145 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename deployment @ 12/07/24 13:19:23.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:23.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:23.493
  I1207 13:19:23.505561 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E1207 13:19:24.336507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:25.336805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:26.336940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:27.337163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:28.337491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:28.510023 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/07/24 13:19:28.51
  I1207 13:19:28.510089 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/07/24 13:19:28.519
  I1207 13:19:28.527992 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5525",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "596af396-50ca-4ad7-b910-27dfaaa0e2e8",
      ResourceVersion: (string) (len=5) "36992",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1207 13:19:28.534710 20 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1207 13:19:28.534731 20 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1207 13:19:28.534976 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5525",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8de0ba83-0697-4f56-a790-07b98b2011d4",
      ResourceVersion: (string) (len=5) "36993",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174363,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "596af396-50ca-4ad7-b910-27dfaaa0e2e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 39 36 61 66 33 39  |"uid\":\"596af39|
              00000040  36 2d 35 30 63 61 2d 34  61 64 37 2d 62 39 31 30  |6-50ca-4ad7-b910|
              00000050  2d 32 37 64 66 61 61 61  30 65 32 65 38 5c 22 7d  |-27dfaaa0e2e8\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1207 13:19:28.541407 20 deployment.go:67] Pod "test-cleanup-controller-jlmkh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-jlmkh",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5525",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd723f2d-b658-4a7d-b731-e7fe9398adda",
      ResourceVersion: (string) (len=5) "36950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174363,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "8de0ba83-0697-4f56-a790-07b98b2011d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  38 64 65 30 62 61 38 33  |uid\":\"8de0ba83|
              00000080  2d 30 36 39 37 2d 34 66  35 36 2d 61 37 39 30 2d  |-0697-4f56-a790-|
              00000090  30 37 62 39 38 62 32 30  31 31 64 34 5c 22 7d 22  |07b98b2011d4\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  2e 31 33 5c 22 7d 22 3a  |2.168.16.13\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lkttx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lkttx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-144",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869174363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.144",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.144"
        }
      },
      PodIP: (string) (len=13) "192.168.16.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.16.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869174363,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869174364,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f00dbca907e9a092b424c289f544943cb21bbc13764a812636aae31410cd8095",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lkttx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1207 13:19:28.542638 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5525" for this suite. @ 12/07/24 13:19:28.55
• [5.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 12/07/24 13:19:28.564
  I1207 13:19:28.564257 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:19:28.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:28.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:28.591
  STEP: Setting up server cert @ 12/07/24 13:19:28.62
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:19:28.766
  STEP: Deploying the webhook pod @ 12/07/24 13:19:28.777
  STEP: Wait for the deployment to be ready @ 12/07/24 13:19:28.791
  I1207 13:19:28.801363 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:19:29.337816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:30.338033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:19:30.813
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:19:30.824
  E1207 13:19:31.338979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:31.825459 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/07/24 13:19:31.834
  STEP: create a pod that should be updated by the webhook @ 12/07/24 13:19:31.848
  I1207 13:19:31.914205 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7918" for this suite. @ 12/07/24 13:19:31.919
  STEP: Destroying namespace "webhook-markers-7503" for this suite. @ 12/07/24 13:19:31.927
• [3.371 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 12/07/24 13:19:31.935
  I1207 13:19:31.935135 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 13:19:31.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:31.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:31.955
  STEP: Creating a job @ 12/07/24 13:19:31.957
  STEP: Ensuring active pods == parallelism @ 12/07/24 13:19:31.964
  E1207 13:19:32.339328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:33.339649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 12/07/24 13:19:33.969
  E1207 13:19:34.340268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:34.489545 20 pod_client.go:173] Successfully updated pod "adopt-release-5hbsz"
  STEP: Checking that the Job readopts the Pod @ 12/07/24 13:19:34.489
  E1207 13:19:35.340518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:36.340741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 12/07/24 13:19:36.497
  I1207 13:19:37.010773 20 pod_client.go:173] Successfully updated pod "adopt-release-5hbsz"
  STEP: Checking that the Job releases the Pod @ 12/07/24 13:19:37.01
  E1207 13:19:37.340849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:38.341800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:39.019298 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7092" for this suite. @ 12/07/24 13:19:39.023
• [7.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/07/24 13:19:39.035
  I1207 13:19:39.035384 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:19:39.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:39.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:39.056
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/07/24 13:19:39.059
  E1207 13:19:39.342770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:40.342862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:41.343584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:42.344538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:19:43.082
  I1207 13:19:43.086815 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-4f899b6d-6750-49dd-8a5f-544857d0a696 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:19:43.106
  I1207 13:19:43.126409 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7735" for this suite. @ 12/07/24 13:19:43.129
• [4.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/07/24 13:19:43.138
  I1207 13:19:43.138060 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/07/24 13:19:43.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:43.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:43.16
  I1207 13:19:43.162153 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:19:43.345039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:44.345122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:45.345547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:46.218075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7766" for this suite. @ 12/07/24 13:19:46.222
• [3.094 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/07/24 13:19:46.231
  I1207 13:19:46.231773 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 13:19:46.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:19:46.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:19:46.253
  STEP: Creating service test in namespace statefulset-6225 @ 12/07/24 13:19:46.256
  STEP: Creating statefulset ss in namespace statefulset-6225 @ 12/07/24 13:19:46.266
  I1207 13:19:46.276266 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1207 13:19:46.346505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:47.347413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:48.347535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:49.347725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:50.347892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:51.348892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:52.349611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:53.349899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:54.350197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:55.350314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:19:56.277915 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/07/24 13:19:56.285
  STEP: Getting /status @ 12/07/24 13:19:56.292
  I1207 13:19:56.296553 20 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/07/24 13:19:56.296
  I1207 13:19:56.308935 20 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/07/24 13:19:56.308
  I1207 13:19:56.310463 20 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1207 13:19:56.310489 20 statefulset.go:1111] Found Statefulset ss in namespace statefulset-6225 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:19:56.310499 20 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/07/24 13:19:56.31
  I1207 13:19:56.310522 20 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1207 13:19:56.316487 20 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/07/24 13:19:56.316
  I1207 13:19:56.317895 20 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1207 13:19:56.317919 20 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-6225 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1207 13:19:56.317988 20 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1207 13:19:56.318035 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6225
  I1207 13:19:56.321689 20 rest.go:150] Scaling statefulset ss to 0
  E1207 13:19:56.350516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:57.350919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:58.351452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:19:59.351662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:00.351875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:01.352065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:02.352313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:03.352472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:04.352656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:05.352818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:06.338307 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 13:20:06.342142 20 rest.go:88] Deleting statefulset ss
  E1207 13:20:06.353749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:06.357176 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6225" for this suite. @ 12/07/24 13:20:06.361
• [20.137 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/07/24 13:20:06.368
  I1207 13:20:06.368509 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:20:06.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:06.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:06.389
  STEP: Creating configMap with name projected-configmap-test-volume-map-58123622-2ff6-4450-983e-b0f88fa12e15 @ 12/07/24 13:20:06.391
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:20:06.398
  E1207 13:20:07.353909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:08.354245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:20:08.414
  I1207 13:20:08.419024 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-configmaps-9b259702-54fc-4348-a36b-eea1df6cc59f container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 13:20:08.426
  I1207 13:20:08.446917 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7040" for this suite. @ 12/07/24 13:20:08.45
• [2.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 12/07/24 13:20:08.457
  I1207 13:20:08.457682 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:20:08.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:08.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:08.479
  STEP: Setting up server cert @ 12/07/24 13:20:08.508
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:20:08.705
  STEP: Deploying the webhook pod @ 12/07/24 13:20:08.714
  STEP: Wait for the deployment to be ready @ 12/07/24 13:20:08.728
  I1207 13:20:08.737233 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:20:09.354640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:10.354758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:20:10.751
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:20:10.762
  E1207 13:20:11.355729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:11.762957 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:20:11.772887 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/07/24 13:20:12.283
  STEP: Creating a custom resource that should be denied by the webhook @ 12/07/24 13:20:12.297
  E1207 13:20:12.356359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:13.356686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/07/24 13:20:14.312
  STEP: Updating the custom resource with disallowed data should be denied @ 12/07/24 13:20:14.32
  STEP: Deleting the custom resource should be denied @ 12/07/24 13:20:14.329
  STEP: Remove the offending key and value from the custom resource data @ 12/07/24 13:20:14.338
  STEP: Deleting the updated custom resource should be successful @ 12/07/24 13:20:14.349
  E1207 13:20:14.356922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:14.925034 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2832" for this suite. @ 12/07/24 13:20:14.928
  STEP: Destroying namespace "webhook-markers-5854" for this suite. @ 12/07/24 13:20:14.936
• [6.487 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 12/07/24 13:20:14.945
  I1207 13:20:14.945226 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:20:14.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:14.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:14.968
  STEP: Setting up server cert @ 12/07/24 13:20:14.996
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:20:15.14
  STEP: Deploying the webhook pod @ 12/07/24 13:20:15.146
  STEP: Wait for the deployment to be ready @ 12/07/24 13:20:15.161
  I1207 13:20:15.170137 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:20:15.357559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:16.357702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:20:17.184
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:20:17.197
  E1207 13:20:17.358489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:18.197280 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:20:18.205186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:20:18.358893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3907-crds.webhook.example.com via the AdmissionRegistration API @ 12/07/24 13:20:18.716
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/07/24 13:20:18.73
  E1207 13:20:19.358934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:20.359168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:21.359244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:21.363868 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1439" for this suite. @ 12/07/24 13:20:21.368
  STEP: Destroying namespace "webhook-markers-8251" for this suite. @ 12/07/24 13:20:21.377
• [6.440 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 12/07/24 13:20:21.385
  I1207 13:20:21.385682 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:20:21.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:21.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:21.407
  STEP: Setting up server cert @ 12/07/24 13:20:21.435
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:20:21.665
  STEP: Deploying the webhook pod @ 12/07/24 13:20:21.672
  STEP: Wait for the deployment to be ready @ 12/07/24 13:20:21.686
  I1207 13:20:21.699596 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:20:22.359374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:23.359699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:20:23.713
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:20:23.726
  E1207 13:20:24.359836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:24.727047 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/07/24 13:20:24.736
  STEP: verifying the mutating webhook match conditions @ 12/07/24 13:20:24.744
  STEP: updating the mutating webhook match conditions @ 12/07/24 13:20:24.747
  STEP: verifying the mutating webhook match conditions @ 12/07/24 13:20:24.756
  I1207 13:20:24.805299 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-657" for this suite. @ 12/07/24 13:20:24.809
  STEP: Destroying namespace "webhook-markers-3830" for this suite. @ 12/07/24 13:20:24.818
• [3.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/07/24 13:20:24.828
  I1207 13:20:24.828202 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:20:24.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:24.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:24.848
  STEP: Creating configMap with name projected-configmap-test-volume-ae5d3d6c-9ef6-4841-92e7-be5f83f1e1c9 @ 12/07/24 13:20:24.85
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:20:24.856
  E1207 13:20:25.360733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:26.360836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:27.361075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:28.361213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:20:28.88
  I1207 13:20:28.884568 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-projected-configmaps-df755131-b056-4890-9cca-c6dad845e990 container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 13:20:28.891
  I1207 13:20:28.912951 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4872" for this suite. @ 12/07/24 13:20:28.916
• [4.097 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/07/24 13:20:28.925
  I1207 13:20:28.925250 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename gc @ 12/07/24 13:20:28.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:28.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:28.946
  STEP: create the rc @ 12/07/24 13:20:28.953
  W1207 13:20:28.957484      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1207 13:20:29.362073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:30.362263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:31.362695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:32.364141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:33.365153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:34.365649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/07/24 13:20:34.963
  STEP: wait for the rc to be deleted @ 12/07/24 13:20:34.97
  E1207 13:20:35.366060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:35.984654 20 garbage_collector.go:670] 80 pods remaining
  I1207 13:20:35.984703 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1207 13:20:35.984709 20 garbage_collector.go:678] 
  E1207 13:20:36.366178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:36.987736 20 garbage_collector.go:670] 71 pods remaining
  I1207 13:20:36.987765 20 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1207 13:20:36.987771 20 garbage_collector.go:678] 
  E1207 13:20:37.367309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:37.983769 20 garbage_collector.go:670] 60 pods remaining
  I1207 13:20:37.983799 20 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1207 13:20:37.983805 20 garbage_collector.go:678] 
  E1207 13:20:38.367589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:38.991672 20 garbage_collector.go:670] 40 pods remaining
  I1207 13:20:38.991708 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1207 13:20:38.991716 20 garbage_collector.go:678] 
  E1207 13:20:39.367769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:39.981574 20 garbage_collector.go:670] 31 pods remaining
  I1207 13:20:39.981706 20 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I1207 13:20:39.981714 20 garbage_collector.go:678] 
  E1207 13:20:40.368783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:40.978463 20 garbage_collector.go:670] 20 pods remaining
  I1207 13:20:40.978488 20 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1207 13:20:40.978492 20 garbage_collector.go:678] 
  E1207 13:20:41.369617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/07/24 13:20:41.976
  W1207 13:20:41.985735      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1207 13:20:41.985877 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1207 13:20:41.986395 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2802" for this suite. @ 12/07/24 13:20:41.99
• [13.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/07/24 13:20:42.001
  I1207 13:20:42.001429 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 13:20:42.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:42.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:42.025
  STEP: creating a ServiceAccount @ 12/07/24 13:20:42.028
  STEP: watching for the ServiceAccount to be added @ 12/07/24 13:20:42.038
  STEP: patching the ServiceAccount @ 12/07/24 13:20:42.04
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/07/24 13:20:42.048
  STEP: deleting the ServiceAccount @ 12/07/24 13:20:42.052
  I1207 13:20:42.069572 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8982" for this suite. @ 12/07/24 13:20:42.075
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/07/24 13:20:42.083
  I1207 13:20:42.083298 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:20:42.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:42.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:42.117
  STEP: Creating configMap with name configmap-test-volume-8686c300-2951-4af4-8fac-b2333213a5dd @ 12/07/24 13:20:42.122
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:20:42.127
  E1207 13:20:42.369710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:43.369919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:20:44.149
  I1207 13:20:44.154172 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-5c31f1cc-a1ed-445c-ad28-037cec44b16a container agnhost-container: <nil>
  STEP: delete the pod @ 12/07/24 13:20:44.16
  I1207 13:20:44.181157 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5283" for this suite. @ 12/07/24 13:20:44.185
• [2.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 12/07/24 13:20:44.192
  I1207 13:20:44.192554 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename dns @ 12/07/24 13:20:44.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:44.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:44.214
  STEP: Creating a test headless service @ 12/07/24 13:20:44.217
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2014.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2014.svc.cluster.local;sleep 1; done
   @ 12/07/24 13:20:44.225
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2014.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2014.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2014.svc.cluster.local;sleep 1; done
   @ 12/07/24 13:20:44.225
  STEP: creating a pod to probe DNS @ 12/07/24 13:20:44.225
  STEP: submitting the pod to kubernetes @ 12/07/24 13:20:44.225
  E1207 13:20:44.370115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:45.370217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/07/24 13:20:46.243
  STEP: looking for the results for each expected name from probers @ 12/07/24 13:20:46.247
  I1207 13:20:46.253195 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.258083 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.262436 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.265889 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.270414 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.275610 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.279285 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.283780 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2014.svc.cluster.local from pod dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1: the server could not find the requested resource (get pods dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1)
  I1207 13:20:46.283802 20 dns_common.go:489] Lookups using dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2014.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2014.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2014.svc.cluster.local jessie_udp@dns-test-service-2.dns-2014.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2014.svc.cluster.local]

  I1207 13:20:46.291884 20 dns_common.go:495] Pod client logs for webserver: 
  I1207 13:20:46.299123 20 dns_common.go:495] Pod client logs for querier: 
  I1207 13:20:46.306517 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1207 13:20:46.370777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:47.370929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:48.371096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:49.371208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:50.371386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:20:51.283726 20 dns_common.go:527] DNS probes using dns-2014/dns-test-3e55221a-6823-478c-98fb-72e2e290b9f1 succeeded

  STEP: deleting the pod @ 12/07/24 13:20:51.283
  STEP: deleting the test headless service @ 12/07/24 13:20:51.299
  I1207 13:20:51.315600 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2014" for this suite. @ 12/07/24 13:20:51.319
• [7.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/07/24 13:20:51.326
  I1207 13:20:51.326517 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 13:20:51.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:20:51.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:20:51.348
  STEP: Creating service test in namespace statefulset-5968 @ 12/07/24 13:20:51.354
  STEP: Creating stateful set ss in namespace statefulset-5968 @ 12/07/24 13:20:51.359
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5968 @ 12/07/24 13:20:51.367
  I1207 13:20:51.370804 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1207 13:20:51.371860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:52.372113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:53.372286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:54.372717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:55.373639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:56.373735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:57.373810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:58.374042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:20:59.374546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:00.375539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:01.373317 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/07/24 13:21:01.373
  E1207 13:21:01.376494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:01.377331 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 13:21:01.468641 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 13:21:01.468680 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 13:21:01.468694 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 13:21:01.474215 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1207 13:21:02.376702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:03.377679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:04.377809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:05.377930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:06.378022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:07.378201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:08.378722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:09.379055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:10.379132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:11.379335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:11.475009 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1207 13:21:11.475050 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1207 13:21:11.495012 20 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I1207 13:21:11.495058 20 resource.go:175] ss-0  ip-172-31-9-19  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:20:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:20:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:20:51 +0000 UTC  }]
  I1207 13:21:11.495065 20 resource.go:178] 
  I1207 13:21:11.495071 20 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E1207 13:21:12.380012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:12.499850 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996861849s
  E1207 13:21:13.380646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:13.504262 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.992183794s
  E1207 13:21:14.381123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:14.509553 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.987692756s
  E1207 13:21:15.381428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:15.514952 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.982411067s
  E1207 13:21:16.381623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:16.519678 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.976184297s
  E1207 13:21:17.382576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:17.525243 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.972187496s
  E1207 13:21:18.383333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:18.530507 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.966454657s
  E1207 13:21:19.384180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:19.536105 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.960628945s
  E1207 13:21:20.384493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:20.541736 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 955.246166ms
  E1207 13:21:21.385565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5968 @ 12/07/24 13:21:21.541
  I1207 13:21:21.547544 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 13:21:21.622981 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1207 13:21:21.623012 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 13:21:21.623021 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 13:21:21.623057 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 13:21:21.710443 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1207 13:21:21.710483 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 13:21:21.710493 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 13:21:21.710543 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1207 13:21:21.793209 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1207 13:21:21.793238 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1207 13:21:21.793246 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1207 13:21:21.797850 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:21:21.797874 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1207 13:21:21.797882 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/07/24 13:21:21.797
  I1207 13:21:21.802126 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 13:21:21.883430 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 13:21:21.883457 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 13:21:21.883466 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 13:21:21.883510 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 13:21:21.956534 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 13:21:21.956570 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 13:21:21.956584 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 13:21:21.956617 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=statefulset-5968 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1207 13:21:22.037789 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1207 13:21:22.037820 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1207 13:21:22.037828 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1207 13:21:22.037850 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1207 13:21:22.041796 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1207 13:21:22.386308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:23.386582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:24.386700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:25.386877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:26.386974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:27.387190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:28.387439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:29.387482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:30.387631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:31.387748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:32.047425 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1207 13:21:32.047453 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1207 13:21:32.047459 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1207 13:21:32.064874 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1207 13:21:32.064917 20 resource.go:175] ss-0  ip-172-31-9-19    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:20:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:20:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:20:51 +0000 UTC  }]
  I1207 13:21:32.064936 20 resource.go:175] ss-1  ip-172-31-22-155  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:11 +0000 UTC  }]
  I1207 13:21:32.064958 20 resource.go:175] ss-2  ip-172-31-64-144  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:11 +0000 UTC  }]
  I1207 13:21:32.064963 20 resource.go:178] 
  I1207 13:21:32.064969 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1207 13:21:32.388382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:33.069695 20 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I1207 13:21:33.069753 20 resource.go:175] ss-1  ip-172-31-22-155  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:11 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:22 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-07 13:21:11 +0000 UTC  }]
  I1207 13:21:33.069759 20 resource.go:178] 
  I1207 13:21:33.069765 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  E1207 13:21:33.389180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:34.074672 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.989698226s
  E1207 13:21:34.390192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:35.080165 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.984790097s
  E1207 13:21:35.390688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:36.084626 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.979117477s
  E1207 13:21:36.391073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:37.090132 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.97411897s
  E1207 13:21:37.391560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:38.095658 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.969376332s
  E1207 13:21:38.392202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:39.100312 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.963577002s
  E1207 13:21:39.392812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:40.105068 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.959023595s
  E1207 13:21:40.393566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:41.110618 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 954.297429ms
  E1207 13:21:41.394178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5968 @ 12/07/24 13:21:42.11
  I1207 13:21:42.115337 20 rest.go:150] Scaling statefulset ss to 0
  I1207 13:21:42.122359 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 13:21:42.126598 20 statefulset.go:138] Deleting all statefulset in ns statefulset-5968
  I1207 13:21:42.129966 20 rest.go:150] Scaling statefulset ss to 0
  I1207 13:21:42.137647 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 13:21:42.141615 20 rest.go:88] Deleting statefulset ss
  I1207 13:21:42.156530 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5968" for this suite. @ 12/07/24 13:21:42.16
• [50.843 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/07/24 13:21:42.169
  I1207 13:21:42.169433 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/07/24 13:21:42.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:21:42.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:21:42.191
  I1207 13:21:42.193675 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:21:42.394545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:42.735826 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2987" for this suite. @ 12/07/24 13:21:42.742
• [0.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 12/07/24 13:21:42.751
  I1207 13:21:42.751485 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:21:42.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:21:42.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:21:42.775
  STEP: Setting up server cert @ 12/07/24 13:21:42.8
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:21:43.011
  STEP: Deploying the webhook pod @ 12/07/24 13:21:43.021
  STEP: Wait for the deployment to be ready @ 12/07/24 13:21:43.034
  I1207 13:21:43.042713 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:21:43.395167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:44.395717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:21:45.06
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:21:45.07
  E1207 13:21:45.396474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:46.071316 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/07/24 13:21:46.078
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/07/24 13:21:46.091
  STEP: Creating a dummy validating-webhook-configuration object @ 12/07/24 13:21:46.104
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/07/24 13:21:46.114
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/07/24 13:21:46.121
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/07/24 13:21:46.131
  I1207 13:21:46.203946 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5494" for this suite. @ 12/07/24 13:21:46.207
  STEP: Destroying namespace "webhook-markers-6090" for this suite. @ 12/07/24 13:21:46.215
• [3.472 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/07/24 13:21:46.223
  I1207 13:21:46.223439 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replication-controller @ 12/07/24 13:21:46.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:21:46.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:21:46.245
  STEP: Creating replication controller my-hostname-basic-d40b24a0-14d6-47d3-898f-60fbac61717f @ 12/07/24 13:21:46.248
  I1207 13:21:46.259698 20 resource.go:87] Pod name my-hostname-basic-d40b24a0-14d6-47d3-898f-60fbac61717f: Found 0 pods out of 1
  E1207 13:21:46.396942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:47.397186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:48.398075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:49.398218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:50.398558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:51.263475 20 resource.go:87] Pod name my-hostname-basic-d40b24a0-14d6-47d3-898f-60fbac61717f: Found 1 pods out of 1
  I1207 13:21:51.263507 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-d40b24a0-14d6-47d3-898f-60fbac61717f" are running
  I1207 13:21:51.266982 20 rc.go:523] Pod "my-hostname-basic-d40b24a0-14d6-47d3-898f-60fbac61717f-d8dgj" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 13:21:46 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 13:21:46 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 13:21:46 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 13:21:46 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-07 13:21:46 +0000 UTC Reason: Message:}])
  I1207 13:21:51.267004 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/07/24 13:21:51.267
  I1207 13:21:51.280520 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6305" for this suite. @ 12/07/24 13:21:51.284
• [5.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/07/24 13:21:51.291
  I1207 13:21:51.291729 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/07/24 13:21:51.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:21:51.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:21:51.312
  STEP: getting /apis @ 12/07/24 13:21:51.321
  STEP: getting /apis/admissionregistration.k8s.io @ 12/07/24 13:21:51.324
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/07/24 13:21:51.325
  STEP: creating @ 12/07/24 13:21:51.326
  STEP: getting @ 12/07/24 13:21:51.346
  STEP: listing @ 12/07/24 13:21:51.349
  STEP: watching @ 12/07/24 13:21:51.353
  I1207 13:21:51.353501 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/07/24 13:21:51.354
  STEP: updating @ 12/07/24 13:21:51.36
  I1207 13:21:51.391247 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 12/07/24 13:21:51.391
  STEP: patching /status @ 12/07/24 13:21:51.394
  E1207 13:21:51.399026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating /status @ 12/07/24 13:21:51.4
  STEP: deleting @ 12/07/24 13:21:51.409
  STEP: deleting a collection @ 12/07/24 13:21:51.424
  I1207 13:21:51.443887 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5118" for this suite. @ 12/07/24 13:21:51.447
• [0.164 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 12/07/24 13:21:51.455
  I1207 13:21:51.455924 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:21:51.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:21:51.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:21:51.481
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/07/24 13:21:51.483
  I1207 13:21:51.483429 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9912 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1207 13:21:51.537218 20 builder.go:146] stderr: ""
  I1207 13:21:51.537239 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/07/24 13:21:51.537
  I1207 13:21:51.537293 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9912 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1207 13:21:51.582185 20 builder.go:146] stderr: ""
  I1207 13:21:51.582207 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/07/24 13:21:51.582
  I1207 13:21:51.586216 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-9912 delete pods e2e-test-httpd-pod'
  E1207 13:21:52.399201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:53.007246 20 builder.go:146] stderr: ""
  I1207 13:21:53.007287 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1207 13:21:53.007418 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9912" for this suite. @ 12/07/24 13:21:53.012
• [1.566 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 12/07/24 13:21:53.021
  I1207 13:21:53.021910 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:21:53.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:21:53.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:21:53.043
  STEP: creating service in namespace services-6645 @ 12/07/24 13:21:53.045
  STEP: creating service affinity-nodeport-transition in namespace services-6645 @ 12/07/24 13:21:53.045
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6645 @ 12/07/24 13:21:53.063
  I1207 13:21:53.069940      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-6645, replica count: 3
  E1207 13:21:53.400007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:54.400240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:55.400376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:56.121240      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:21:56.133301 20 resource.go:361] Creating new exec pod
  E1207 13:21:56.401077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:57.401341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:21:58.402256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:59.156571 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6645 exec execpod-affinitys669h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1207 13:21:59.231394 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1207 13:21:59.231435 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:21:59.231501 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6645 exec execpod-affinitys669h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 80'
  I1207 13:21:59.309522 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 80\nConnection to 10.152.183.64 80 port [tcp/http] succeeded!\n"
  I1207 13:21:59.309558 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:21:59.309621 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6645 exec execpod-affinitys669h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.64.144 30592'
  I1207 13:21:59.390456 20 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.64.144 30592\nConnection to 172.31.64.144 30592 port [tcp/*] succeeded!\n"
  I1207 13:21:59.390502 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:21:59.390570 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6645 exec execpod-affinitys669h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 30592'
  E1207 13:21:59.403366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:21:59.469493 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 30592\nConnection to 172.31.22.155 30592 port [tcp/*] succeeded!\n"
  I1207 13:21:59.469530 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:21:59.480314 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6645 exec execpod-affinitys669h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.155:30592/ ; done'
  I1207 13:21:59.622664 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n"
  I1207 13:21:59.622712 20 builder.go:147] stdout: "\naffinity-nodeport-transition-v4sdv\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-v4sdv\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-v4sdv\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-v4sdv\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-v4sdv\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-v4sdv\naffinity-nodeport-transition-hk2kb\naffinity-nodeport-transition-v4sdv"
  I1207 13:21:59.622723 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.622732 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622775 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622782 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.622792 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622798 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.622808 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622813 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.622819 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.622840 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622846 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.622852 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.622898 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622904 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.622910 20 service.go:242] Received response from host: affinity-nodeport-transition-hk2kb
  I1207 13:21:59.622916 20 service.go:242] Received response from host: affinity-nodeport-transition-v4sdv
  I1207 13:21:59.631501 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6645 exec execpod-affinitys669h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.155:30592/ ; done'
  I1207 13:21:59.781032 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.155:30592/\n"
  I1207 13:21:59.781083 20 builder.go:147] stdout: "\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf\naffinity-nodeport-transition-xllkf"
  I1207 13:21:59.781094 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781103 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781109 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781117 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781124 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781130 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781136 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781143 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781150 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781155 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781160 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781234 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781244 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781250 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781287 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781295 20 service.go:242] Received response from host: affinity-nodeport-transition-xllkf
  I1207 13:21:59.781418 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6645, will wait for the garbage collector to delete the pods @ 12/07/24 13:21:59.799
  I1207 13:21:59.861005 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 7.916041ms
  I1207 13:21:59.961409 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.400038ms
  E1207 13:22:00.403712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:01.404122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:02.404221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:22:03.195413 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6645" for this suite. @ 12/07/24 13:22:03.199
• [10.184 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 12/07/24 13:22:03.205
  I1207 13:22:03.206010 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-pred @ 12/07/24 13:22:03.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:22:03.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:22:03.224
  I1207 13:22:03.227095 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1207 13:22:03.234174 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1207 13:22:03.237337 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-155 before test
  I1207 13:22:03.241952 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-jw5cc from ingress-nginx-kubernetes-worker started at 2024-12-07 11:54:23 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.241967 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:22:03.241974 20 predicates.go:957] calico-node-gdvcw from kube-system started at 2024-12-07 12:10:53 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.241979 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:22:03.241985 20 predicates.go:957] coredns-5b4857d7c8-wxhzr from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.242007 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1207 13:22:03.242014 20 predicates.go:957] kube-state-metrics-5d7bdccd49-jvjgd from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.242019 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1207 13:22:03.242026 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-s5vnh from kube-system started at 2024-12-07 11:55:18 +0000 UTC (2 container statuses recorded)
  I1207 13:22:03.242030 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1207 13:22:03.242035 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1207 13:22:03.242051 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-dqcg9 from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.242124 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1207 13:22:03.242141 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-kpwtp from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.242147 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 2
  I1207 13:22:03.242153 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-kfczm from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:22:03.242158 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:22:03.242163 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 13:22:03.242169 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-64-144 before test
  I1207 13:22:03.247115 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-t2j8z from ingress-nginx-kubernetes-worker started at 2024-12-07 12:06:13 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.247131 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:22:03.247138 20 predicates.go:957] calico-node-sdkxp from kube-system started at 2024-12-07 12:11:14 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.247144 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:22:03.247151 20 predicates.go:957] sonobuoy-e2e-job-684450c905e04fbe from sonobuoy started at 2024-12-07 12:13:32 +0000 UTC (2 container statuses recorded)
  I1207 13:22:03.247155 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1207 13:22:03.247160 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:22:03.247166 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-jzt9d from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:22:03.247171 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:22:03.247215 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 13:22:03.247222 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-19 before test
  I1207 13:22:03.252618 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-42sn8 from ingress-nginx-kubernetes-worker started at 2024-12-07 12:56:34 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.252636 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:22:03.252643 20 predicates.go:957] calico-node-gdhw7 from kube-system started at 2024-12-07 12:10:43 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.252662 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:22:03.252669 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-07 12:13:30 +0000 UTC (1 container statuses recorded)
  I1207 13:22:03.252677 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1207 13:22:03.252683 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-zt4zf from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:22:03.252700 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:22:03.252706 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/07/24 13:22:03.252
  E1207 13:22:03.405234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:04.405708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/07/24 13:22:05.273
  STEP: Trying to apply a random label on the found node. @ 12/07/24 13:22:05.293
  STEP: verifying the node has the label kubernetes.io/e2e-ff53fbbb-105c-4d24-98a4-ce513f898717 95 @ 12/07/24 13:22:05.301
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/07/24 13:22:05.304
  E1207 13:22:05.405812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:06.405941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.9.19 on the node which pod4 resides and expect not scheduled @ 12/07/24 13:22:07.319
  E1207 13:22:07.406795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:08.406951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:09.407988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:10.408641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:11.409567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:12.409791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:13.410624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:14.410774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:15.411231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:16.411483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:17.411492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:18.411585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:19.411687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:20.411921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:21.412952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:22.413245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:23.413838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:24.414564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:25.415440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:26.415571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:27.415818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:28.415961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:29.416085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:30.416260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:31.417172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:32.417387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:33.417698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:34.417812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:35.417988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:36.418131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:37.418747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:38.419823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:39.419925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:40.420493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:41.420904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:42.421056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:43.421791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:44.421918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:45.422127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:46.422609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:47.423668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:48.424088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:49.424181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:50.424283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:51.424394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:52.424618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:53.425553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:54.425662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:55.425758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:56.425868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:57.425986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:58.426126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:22:59.426333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:00.426469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:01.426720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:02.426822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:03.427540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:04.427694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:05.427930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:06.428113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:07.428230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:08.429259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:09.429503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:10.429635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:11.429762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:12.429932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:13.430198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:14.430402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:15.430766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:16.431471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:17.431557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:18.432517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:19.433193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:20.433277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:21.433399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:22.433510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:23.434570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:24.434668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:25.434780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:26.435487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:27.435600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:28.435648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:29.436047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:30.436255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:31.436400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:32.436513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:33.436763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:34.436900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:35.437122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:36.437305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:37.437525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:38.437615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:39.437806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:40.437906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:41.438048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:42.438234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:43.438583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:44.438783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:45.438898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:46.439018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:47.439119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:48.439145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:49.439385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:50.440402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:51.440533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:52.440738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:53.441578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:54.441655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:55.441850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:56.442543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:57.442639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:58.443459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:23:59.443510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:00.443614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:01.443704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:02.443813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:03.444147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:04.444579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:05.445576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:06.446502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:07.446710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:08.447079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:09.447173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:10.447409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:11.447511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:12.447711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:13.448748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:14.448896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:15.449557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:16.449749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:17.449951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:18.450025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:19.450574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:20.450662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:21.451029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:22.451337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:23.452003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:24.452074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:25.452209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:26.453031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:27.453612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:28.454068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:29.454152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:30.454475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:31.454570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:32.455547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:33.456541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:34.456643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:35.457550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:36.457674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:37.457750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:38.458775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:39.458899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:40.459488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:41.459569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:42.460576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:43.460674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:44.460772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:45.461102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:46.461521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:47.461714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:48.462068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:49.462252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:50.463203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:51.463319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:52.464136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:53.464477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:54.465547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:55.466553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:56.466994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:57.467267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:58.467400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:24:59.467583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:00.468301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:01.468570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:02.468959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:03.469301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:04.469443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:05.469551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:06.470007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:07.470141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:08.470580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:09.470790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:10.471741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:11.472037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:12.472172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:13.473177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:14.473469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:15.473565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:16.473654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:17.474556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:18.475148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:19.475728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:20.476392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:21.476610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:22.476908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:23.477250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:24.477388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:25.477600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:26.477736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:27.477858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:28.477960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:29.478160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:30.479000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:31.479246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:32.479395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:33.479660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:34.479793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:35.479935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:36.480535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:37.480722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:38.481407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:39.481497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:40.481752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:41.481938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:42.482449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:43.482518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:44.482629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:45.482807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:46.483875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:47.483907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:48.484533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:49.484605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:50.484694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:51.485535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:52.485638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:53.485881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:54.486119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:55.486646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:56.487243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:57.487727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:58.487833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:25:59.488051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:00.488564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:01.488697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:02.488880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:03.488997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:04.489405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:05.489511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:06.490564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:07.490702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:08.490736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:09.490920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:10.491896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:11.492058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:12.492748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:13.493549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:14.494189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:15.494544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:16.495193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:17.495316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:18.496384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:19.496576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:20.496726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:21.496981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:22.497276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:23.498215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:24.499126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:25.499248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:26.500201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:27.500405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:28.500798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:29.500977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:30.501497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:31.501656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:32.501708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:33.501964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:34.502159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:35.502431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:36.503232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:37.503413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:38.503859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:39.504540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:40.505561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:41.505662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:42.505762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:43.506014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:44.506541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:45.506647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:46.507211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:47.507452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:48.507573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:49.507764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:50.507878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:51.508884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:52.509162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:53.509469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:54.509630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:55.509828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:56.509945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:57.510139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:58.511289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:26:59.511472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:00.512031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:01.512150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:02.512227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:03.512876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:04.513678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:05.513958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:06.514541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-ff53fbbb-105c-4d24-98a4-ce513f898717 off the node ip-172-31-9-19 @ 12/07/24 13:27:07.325
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-ff53fbbb-105c-4d24-98a4-ce513f898717 @ 12/07/24 13:27:07.339
  I1207 13:27:07.342321 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6539" for this suite. @ 12/07/24 13:27:07.346
• [304.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 12/07/24 13:27:07.354
  I1207 13:27:07.354379 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:27:07.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:07.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:07.377
  STEP: Setting up server cert @ 12/07/24 13:27:07.402
  E1207 13:27:07.515166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:27:07.571
  STEP: Deploying the webhook pod @ 12/07/24 13:27:07.583
  STEP: Wait for the deployment to be ready @ 12/07/24 13:27:07.597
  I1207 13:27:07.604802 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1207 13:27:08.516180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:09.516417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:27:09.618
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:27:09.629
  E1207 13:27:10.516510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:27:10.629873 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1207 13:27:10.637923 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6396-crds.webhook.example.com via the AdmissionRegistration API @ 12/07/24 13:27:11.148
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/07/24 13:27:11.162
  E1207 13:27:11.517119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:12.517573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:13.518059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:27:13.751932 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4353" for this suite. @ 12/07/24 13:27:13.756
  STEP: Destroying namespace "webhook-markers-227" for this suite. @ 12/07/24 13:27:13.763
• [6.417 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/07/24 13:27:13.771
  I1207 13:27:13.771565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:27:13.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:13.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:13.795
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/07/24 13:27:13.797
  E1207 13:27:14.518296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:15.518436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:27:15.815
  I1207 13:27:15.818757 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-c3613da1-0ca1-4d9c-8518-7f994504a2e5 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:27:15.835
  I1207 13:27:15.858341 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7932" for this suite. @ 12/07/24 13:27:15.862
• [2.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/07/24 13:27:15.869
  I1207 13:27:15.869726 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replicaset @ 12/07/24 13:27:15.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:15.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:15.89
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/07/24 13:27:15.892
  I1207 13:27:15.901669 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1207 13:27:16.519499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:17.519742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:18.520079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:19.520208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:20.520300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:27:20.906976 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/07/24 13:27:20.907
  STEP: getting scale subresource @ 12/07/24 13:27:20.907
  STEP: updating a scale subresource @ 12/07/24 13:27:20.91
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/07/24 13:27:20.918
  STEP: Patch a scale subresource @ 12/07/24 13:27:20.924
  I1207 13:27:20.943133 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-36" for this suite. @ 12/07/24 13:27:20.949
• [5.093 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/07/24 13:27:20.962
  I1207 13:27:20.962807 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:27:20.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:20.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:20.993
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/07/24 13:27:20.995
  E1207 13:27:21.520452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:22.520481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:23.520762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:24.520860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:27:25.023
  I1207 13:27:25.029078 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-9a72f6fe-e899-460f-a709-758fe66a89a4 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:27:25.037
  I1207 13:27:25.057858 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3476" for this suite. @ 12/07/24 13:27:25.061
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/07/24 13:27:25.07
  I1207 13:27:25.070622 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/07/24 13:27:25.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:25.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:25.096
  STEP: Setting up the test @ 12/07/24 13:27:25.099
  STEP: Creating hostNetwork=false pod @ 12/07/24 13:27:25.099
  E1207 13:27:25.521075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:26.521546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 12/07/24 13:27:27.125
  E1207 13:27:27.522229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:28.523010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 12/07/24 13:27:29.147
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/07/24 13:27:29.147
  I1207 13:27:29.147830 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.147848 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.148305 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.148362 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1207 13:27:29.188449 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.188481 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.188490 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.188885 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.188921 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1207 13:27:29.230982 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.231028 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.231036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.231485 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.231543 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1207 13:27:29.271897 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.271934 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.271943 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.272337 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.272399 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1207 13:27:29.306156 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/07/24 13:27:29.306
  I1207 13:27:29.306231 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.306241 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.306654 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.306691 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1207 13:27:29.336188 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.336218 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.336227 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.336611 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.336694 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1207 13:27:29.373133 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/07/24 13:27:29.373
  I1207 13:27:29.373187 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.373195 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.373541 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.373583 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1207 13:27:29.416666 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.416695 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.416703 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.417123 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.417161 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1207 13:27:29.452076 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.452133 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.452253 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.452639 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.452669 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1207 13:27:29.483440 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.483467 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5864 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1207 13:27:29.483475 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  I1207 13:27:29.483895 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1207 13:27:29.483931 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5864/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1207 13:27:29.517902 20 exec_util.go:111] Exec stderr: ""
  I1207 13:27:29.518040 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1207 13:27:29.523062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5864" for this suite. @ 12/07/24 13:27:29.523
• [4.461 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 12/07/24 13:27:29.531
  I1207 13:27:29.531363 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 13:27:29.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:29.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:29.553
  STEP: Discovering how many secrets are in namespace by default @ 12/07/24 13:27:29.556
  E1207 13:27:30.523640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:31.523739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:32.523832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:33.524557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:34.524677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/07/24 13:27:34.564
  E1207 13:27:35.524763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:36.524873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:37.524963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:38.525535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:39.525681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/07/24 13:27:39.57
  STEP: Ensuring resource quota status is calculated @ 12/07/24 13:27:39.577
  E1207 13:27:40.526242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:41.527099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 12/07/24 13:27:41.582
  STEP: Ensuring resource quota status captures secret creation @ 12/07/24 13:27:41.595
  E1207 13:27:42.527524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:43.528571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 12/07/24 13:27:43.601
  STEP: Ensuring resource quota status released usage @ 12/07/24 13:27:43.609
  E1207 13:27:44.529552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:45.529634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:27:45.615001 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4873" for this suite. @ 12/07/24 13:27:45.619
• [16.097 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/07/24 13:27:45.628
  I1207 13:27:45.628581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:27:45.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:45.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:45.651
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:27:45.653
  E1207 13:27:46.529754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:47.529975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:48.530652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:49.530752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:27:49.677
  I1207 13:27:49.681726 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-d6b6b0c8-e2bd-489b-8538-f56056de3475 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:27:49.689
  I1207 13:27:49.710341 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5703" for this suite. @ 12/07/24 13:27:49.713
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/07/24 13:27:49.723
  I1207 13:27:49.723049 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename downward-api @ 12/07/24 13:27:49.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:49.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:49.75
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:27:49.752
  E1207 13:27:50.530843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:51.531095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:27:51.768
  I1207 13:27:51.772439 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-7ecea147-2f94-47e0-95cf-a4863af3e364 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:27:51.779
  I1207 13:27:51.799162 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6434" for this suite. @ 12/07/24 13:27:51.803
• [2.088 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/07/24 13:27:51.81
  I1207 13:27:51.810780 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename pods @ 12/07/24 13:27:51.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:51.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:51.831
  STEP: creating the pod @ 12/07/24 13:27:51.834
  STEP: submitting the pod to kubernetes @ 12/07/24 13:27:51.834
  W1207 13:27:51.845555      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1207 13:27:52.531508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:53.531844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/07/24 13:27:53.858
  STEP: updating the pod @ 12/07/24 13:27:53.863
  I1207 13:27:54.377053 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-9251d7da-64c9-4a89-bd80-8d60a7190375"
  E1207 13:27:54.532421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:55.532512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:56.533365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:57.533523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:27:58.392403 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2973" for this suite. @ 12/07/24 13:27:58.396
• [6.594 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/07/24 13:27:58.404
  I1207 13:27:58.404614 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename namespaces @ 12/07/24 13:27:58.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:58.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:27:58.426
  STEP: Creating a test namespace @ 12/07/24 13:27:58.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:27:58.45
  STEP: Creating a pod in the namespace @ 12/07/24 13:27:58.452
  STEP: Waiting for the pod to have running status @ 12/07/24 13:27:58.461
  E1207 13:27:58.533566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:27:59.534317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 12/07/24 13:28:00.47
  STEP: Waiting for the namespace to be removed. @ 12/07/24 13:28:00.479
  E1207 13:28:00.534427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:01.534963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:02.535193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:03.535504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:04.535688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:05.536708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:06.536795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:07.537630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:08.537761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:09.538557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:10.539619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/07/24 13:28:11.484
  STEP: Verifying there are no pods in the namespace @ 12/07/24 13:28:11.507
  I1207 13:28:11.510752 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-719" for this suite. @ 12/07/24 13:28:11.514
  STEP: Destroying namespace "nsdeletetest-7891" for this suite. @ 12/07/24 13:28:11.523
  I1207 13:28:11.526737 20 framework.go:370] Namespace nsdeletetest-7891 was already deleted
  STEP: Destroying namespace "nsdeletetest-2201" for this suite. @ 12/07/24 13:28:11.526
• [13.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/07/24 13:28:11.536
  I1207 13:28:11.536042 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename podtemplate @ 12/07/24 13:28:11.536
  E1207 13:28:11.539735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:11.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:11.556
  I1207 13:28:11.592582 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4312" for this suite. @ 12/07/24 13:28:11.596
• [0.069 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/07/24 13:28:11.604
  I1207 13:28:11.604700 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:28:11.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:11.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:11.627
  STEP: Creating pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82 @ 12/07/24 13:28:11.629
  E1207 13:28:12.540043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:13.540119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 13:28:13.649
  I1207 13:28:13.652476 20 container_probe.go:1749] Initial restart count of pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea is 0
  I1207 13:28:13.656166 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:14.541112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:15.541586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:15.661969 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:16.542565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:17.542650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:17.667126 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:18.542773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:19.543742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:19.673316 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:20.543813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:21.544572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:21.679445 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:22.544880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:23.545564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:23.684054 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:24.545631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:25.545812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:25.690721 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:26.546582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:27.546764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:27.695407 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:28.546973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:29.547150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:29.701303 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:30.547251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:31.547475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:31.705907 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  E1207 13:28:32.547635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:33.548556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:33.712432 20 container_probe.go:1759] Get pod liveness-6adaa150-f271-4357-83c9-5f125aac8fea in namespace container-probe-82
  I1207 13:28:33.712470 20 container_probe.go:1763] Restart count of pod container-probe-82/liveness-6adaa150-f271-4357-83c9-5f125aac8fea is now 1 (20.059967871s elapsed)
  STEP: deleting the pod @ 12/07/24 13:28:33.712
  I1207 13:28:33.729511 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-82" for this suite. @ 12/07/24 13:28:33.732
• [22.137 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/07/24 13:28:33.741
  I1207 13:28:33.741698 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/07/24 13:28:33.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:33.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:33.764
  STEP: Creating two CSIDrivers @ 12/07/24 13:28:33.766
  STEP: Getting "inline-driver-cff418d2-d65e-409e-9255-60adffbc99cd" & "inline-driver-d1a38be8-ecdd-47ec-9ab6-a85cb1306a6c" @ 12/07/24 13:28:33.784
  STEP: Patching the CSIDriver "inline-driver-d1a38be8-ecdd-47ec-9ab6-a85cb1306a6c" @ 12/07/24 13:28:33.79
  STEP: Updating the CSIDriver "inline-driver-d1a38be8-ecdd-47ec-9ab6-a85cb1306a6c" @ 12/07/24 13:28:33.8
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9478" @ 12/07/24 13:28:33.808
  STEP: Deleting CSIDriver "inline-driver-cff418d2-d65e-409e-9255-60adffbc99cd" @ 12/07/24 13:28:33.811
  STEP: Confirm deletion of CSIDriver "inline-driver-cff418d2-d65e-409e-9255-60adffbc99cd" @ 12/07/24 13:28:33.818
  STEP: Deleting CSIDriver "inline-driver-d1a38be8-ecdd-47ec-9ab6-a85cb1306a6c" via DeleteCollection @ 12/07/24 13:28:33.822
  STEP: Confirm deletion of CSIDriver "inline-driver-d1a38be8-ecdd-47ec-9ab6-a85cb1306a6c" @ 12/07/24 13:28:33.832
  I1207 13:28:33.835944 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9478" for this suite. @ 12/07/24 13:28:33.842
• [0.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 12/07/24 13:28:33.848
  I1207 13:28:33.848562 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:28:33.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:33.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:33.869
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/07/24 13:28:33.871
  I1207 13:28:33.871972 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2387 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1207 13:28:33.925662 20 builder.go:146] stderr: ""
  I1207 13:28:33.925683 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/07/24 13:28:33.925
  I1207 13:28:33.929956 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-2387 delete pods e2e-test-httpd-pod'
  E1207 13:28:34.549548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:35.549743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:35.660939 20 builder.go:146] stderr: ""
  I1207 13:28:35.660979 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1207 13:28:35.661094 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2387" for this suite. @ 12/07/24 13:28:35.666
• [1.825 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/07/24 13:28:35.673
  I1207 13:28:35.673431 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replication-controller @ 12/07/24 13:28:35.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:35.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:35.699
  STEP: Creating ReplicationController "e2e-rc-9g2fs" @ 12/07/24 13:28:35.701
  I1207 13:28:35.710216 20 rc.go:792] Get Replication Controller "e2e-rc-9g2fs" to confirm replicas
  E1207 13:28:36.549909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:36.711219 20 rc.go:792] Get Replication Controller "e2e-rc-9g2fs" to confirm replicas
  I1207 13:28:36.715551 20 rc.go:801] Found 1 replicas for "e2e-rc-9g2fs" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-9g2fs" @ 12/07/24 13:28:36.715
  STEP: Updating a scale subresource @ 12/07/24 13:28:36.719
  STEP: Verifying replicas where modified for replication controller "e2e-rc-9g2fs" @ 12/07/24 13:28:36.725
  I1207 13:28:36.725538 20 rc.go:792] Get Replication Controller "e2e-rc-9g2fs" to confirm replicas
  E1207 13:28:37.550247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:37.725712 20 rc.go:792] Get Replication Controller "e2e-rc-9g2fs" to confirm replicas
  I1207 13:28:37.729796 20 rc.go:801] Found 2 replicas for "e2e-rc-9g2fs" replication controller
  I1207 13:28:37.729995 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-169" for this suite. @ 12/07/24 13:28:37.733
• [2.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/07/24 13:28:37.743
  I1207 13:28:37.743687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 13:28:37.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:37.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:37.765
  STEP: Creating a pod to test substitution in container's command @ 12/07/24 13:28:37.768
  E1207 13:28:38.550288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:39.550409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:28:39.784
  I1207 13:28:39.787814 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod var-expansion-037809f0-3f6e-4c6c-9bba-229f04613b59 container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 13:28:39.794
  I1207 13:28:39.814747 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6161" for this suite. @ 12/07/24 13:28:39.818
• [2.082 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 12/07/24 13:28:39.825
  I1207 13:28:39.825758 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename field-validation @ 12/07/24 13:28:39.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:39.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:39.848
  STEP: apply creating a deployment @ 12/07/24 13:28:39.851
  I1207 13:28:39.864875 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8273" for this suite. @ 12/07/24 13:28:39.868
• [0.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 12/07/24 13:28:39.874
  I1207 13:28:39.874230 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:28:39.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:39.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:39.896
  STEP: creating service in namespace services-7818 @ 12/07/24 13:28:39.898
  STEP: creating service affinity-clusterip-transition in namespace services-7818 @ 12/07/24 13:28:39.898
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7818 @ 12/07/24 13:28:39.909
  I1207 13:28:39.916650      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7818, replica count: 3
  E1207 13:28:40.550858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:41.551558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:42.551720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:42.967957      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:28:42.976828 20 resource.go:361] Creating new exec pod
  E1207 13:28:43.551932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:44.552160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:45.552561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:45.995307 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7818 exec execpod-affinity2blc5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1207 13:28:46.073093 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1207 13:28:46.073132 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:28:46.073202 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7818 exec execpod-affinity2blc5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.49 80'
  I1207 13:28:46.147437 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.49 80\nConnection to 10.152.183.49 80 port [tcp/http] succeeded!\n"
  I1207 13:28:46.147480 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:28:46.158309 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7818 exec execpod-affinity2blc5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.49:80/ ; done'
  I1207 13:28:46.301333 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n"
  I1207 13:28:46.301398 20 builder.go:147] stdout: "\naffinity-clusterip-transition-vzhhh\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-vzhhh\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-vzhhh\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-sfb87\naffinity-clusterip-transition-sfb87\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-vzhhh\naffinity-clusterip-transition-vzhhh\naffinity-clusterip-transition-vzhhh\naffinity-clusterip-transition-sfb87\naffinity-clusterip-transition-sfb87\naffinity-clusterip-transition-sfb87"
  I1207 13:28:46.301410 20 service.go:242] Received response from host: affinity-clusterip-transition-vzhhh
  I1207 13:28:46.301433 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.301440 20 service.go:242] Received response from host: affinity-clusterip-transition-vzhhh
  I1207 13:28:46.301447 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.301454 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.301459 20 service.go:242] Received response from host: affinity-clusterip-transition-vzhhh
  I1207 13:28:46.301465 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.301472 20 service.go:242] Received response from host: affinity-clusterip-transition-sfb87
  I1207 13:28:46.301484 20 service.go:242] Received response from host: affinity-clusterip-transition-sfb87
  I1207 13:28:46.301515 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.301566 20 service.go:242] Received response from host: affinity-clusterip-transition-vzhhh
  I1207 13:28:46.301574 20 service.go:242] Received response from host: affinity-clusterip-transition-vzhhh
  I1207 13:28:46.301710 20 service.go:242] Received response from host: affinity-clusterip-transition-vzhhh
  I1207 13:28:46.301719 20 service.go:242] Received response from host: affinity-clusterip-transition-sfb87
  I1207 13:28:46.301726 20 service.go:242] Received response from host: affinity-clusterip-transition-sfb87
  I1207 13:28:46.301733 20 service.go:242] Received response from host: affinity-clusterip-transition-sfb87
  I1207 13:28:46.312773 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-7818 exec execpod-affinity2blc5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.49:80/ ; done'
  I1207 13:28:46.443308 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.49:80/\n"
  I1207 13:28:46.443382 20 builder.go:147] stdout: "\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2\naffinity-clusterip-transition-j5jb2"
  I1207 13:28:46.443394 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443403 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443411 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443417 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443478 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443489 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443497 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443503 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443509 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443516 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443523 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443541 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443547 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443554 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443561 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443570 20 service.go:242] Received response from host: affinity-clusterip-transition-j5jb2
  I1207 13:28:46.443641 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7818, will wait for the garbage collector to delete the pods @ 12/07/24 13:28:46.464
  I1207 13:28:46.528066 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 8.13995ms
  E1207 13:28:46.552971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:46.629222 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.137636ms
  E1207 13:28:47.553989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:48.554271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:49.555294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:49.852629 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7818" for this suite. @ 12/07/24 13:28:49.856
• [9.989 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 12/07/24 13:28:49.863
  I1207 13:28:49.863918 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:28:49.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:49.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:49.887
  STEP: Setting up server cert @ 12/07/24 13:28:49.918
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:28:50.07
  STEP: Deploying the webhook pod @ 12/07/24 13:28:50.08
  STEP: Wait for the deployment to be ready @ 12/07/24 13:28:50.096
  I1207 13:28:50.104237 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1207 13:28:50.555513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:51.556577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:28:52.116
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:28:52.131
  E1207 13:28:52.556703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:28:53.132368 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/07/24 13:28:53.14
  STEP: verifying the validating webhook match conditions @ 12/07/24 13:28:53.148
  STEP: updating the validating webhook match conditions @ 12/07/24 13:28:53.152
  STEP: verifying the validating webhook match conditions @ 12/07/24 13:28:53.16
  I1207 13:28:53.211857 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4247" for this suite. @ 12/07/24 13:28:53.215
  STEP: Destroying namespace "webhook-markers-1637" for this suite. @ 12/07/24 13:28:53.222
• [3.368 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/07/24 13:28:53.232
  I1207 13:28:53.232541 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename apf @ 12/07/24 13:28:53.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:53.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:53.254
  STEP: getting /apis @ 12/07/24 13:28:53.256
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/07/24 13:28:53.262
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/07/24 13:28:53.263
  STEP: creating @ 12/07/24 13:28:53.264
  STEP: getting @ 12/07/24 13:28:53.286
  STEP: listing @ 12/07/24 13:28:53.29
  STEP: watching @ 12/07/24 13:28:53.298
  I1207 13:28:53.298588 20 flowcontrol.go:394] starting watch
  STEP: patching @ 12/07/24 13:28:53.299
  STEP: updating @ 12/07/24 13:28:53.309
  I1207 13:28:53.325679 20 flowcontrol.go:422] waiting for watch events with expected annotations
  I1207 13:28:53.325706 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/07/24 13:28:53.325
  STEP: patching /status @ 12/07/24 13:28:53.332
  STEP: updating /status @ 12/07/24 13:28:53.339
  STEP: deleting @ 12/07/24 13:28:53.372
  STEP: deleting a collection @ 12/07/24 13:28:53.386
  I1207 13:28:53.408881 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6080" for this suite. @ 12/07/24 13:28:53.412
• [0.187 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/07/24 13:28:53.419
  I1207 13:28:53.419975 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:28:53.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:53.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:53.446
  STEP: Creating configMap configmap-7849/configmap-test-877f2c77-4a71-4416-ab2d-abd4d82a10b4 @ 12/07/24 13:28:53.449
  STEP: Creating a pod to test consume configMaps @ 12/07/24 13:28:53.455
  E1207 13:28:53.557521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:54.557729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:55.558243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:56.558376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:28:57.476
  I1207 13:28:57.480219 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-configmaps-789794ea-e0da-4ae7-a5f2-0b315c376eff container env-test: <nil>
  STEP: delete the pod @ 12/07/24 13:28:57.487
  I1207 13:28:57.506988 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7849" for this suite. @ 12/07/24 13:28:57.51
• [4.100 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/07/24 13:28:57.52
  I1207 13:28:57.520061 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 13:28:57.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:28:57.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:28:57.542
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/07/24 13:28:57.544
  I1207 13:28:57.544482 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:28:57.558934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:58.559492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:28:59.560064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:00.583008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:01.583117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/07/24 13:29:02.438
  I1207 13:29:02.439255 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:29:02.583735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:03.602890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:03.753342 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:29:04.603865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:05.604555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:06.605035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:07.605312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:08.605444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:08.731087 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4355" for this suite. @ 12/07/24 13:29:08.738
• [11.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/07/24 13:29:08.748
  I1207 13:29:08.748386 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:29:08.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:08.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:08.771
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/07/24 13:29:08.773
  E1207 13:29:09.605658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:10.606585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:11.606758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:12.606938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:29:12.796
  I1207 13:29:12.800007 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-5327e067-0074-44bc-bc73-d825b6a5d0c9 container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:29:12.807
  I1207 13:29:12.827845 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7473" for this suite. @ 12/07/24 13:29:12.832
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 12/07/24 13:29:12.844
  I1207 13:29:12.844960 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:29:12.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:12.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:12.866
  STEP: creating service nodeport-test with type=NodePort in namespace services-6498 @ 12/07/24 13:29:12.868
  STEP: creating replication controller nodeport-test in namespace services-6498 @ 12/07/24 13:29:12.886
  I1207 13:29:12.892527      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-6498, replica count: 2
  E1207 13:29:13.607985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:14.608178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:15.608414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:15.943783      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:29:15.943815 20 resource.go:361] Creating new exec pod
  E1207 13:29:16.609441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:17.609679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:18.609729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:18.969321 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1207 13:29:19.054715 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1207 13:29:19.054752 20 builder.go:147] stdout: "nodeport-test-9rdqp"
  I1207 13:29:19.054823 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.46 80'
  I1207 13:29:19.133213 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.46 80\nConnection to 10.152.183.46 80 port [tcp/http] succeeded!\n"
  I1207 13:29:19.133256 20 builder.go:147] stdout: ""
  E1207 13:29:19.609837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:20.055512 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.46 80'
  I1207 13:29:20.135204 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.46 80\nConnection to 10.152.183.46 80 port [tcp/http] succeeded!\n"
  I1207 13:29:20.135245 20 builder.go:147] stdout: "nodeport-test-9rdqp"
  I1207 13:29:20.135610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 32654'
  I1207 13:29:20.211695 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 32654\nConnection to 172.31.22.155 32654 port [tcp/*] succeeded!\n"
  I1207 13:29:20.211732 20 builder.go:147] stdout: ""
  E1207 13:29:20.610107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:21.135465 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 32654'
  I1207 13:29:21.214240 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 32654\nConnection to 172.31.22.155 32654 port [tcp/*] succeeded!\n"
  I1207 13:29:21.214280 20 builder.go:147] stdout: ""
  E1207 13:29:21.610824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:22.135505 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.155 32654'
  I1207 13:29:22.213336 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.155 32654\nConnection to 172.31.22.155 32654 port [tcp/*] succeeded!\n"
  I1207 13:29:22.213397 20 builder.go:147] stdout: "nodeport-test-9rdqp"
  I1207 13:29:22.213522 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-6498 exec execpodhptv2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.19 32654'
  I1207 13:29:22.289171 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.9.19 32654\nConnection to 172.31.9.19 32654 port [tcp/*] succeeded!\n"
  I1207 13:29:22.289205 20 builder.go:147] stdout: "nodeport-test-9rdqp"
  I1207 13:29:22.289378 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6498" for this suite. @ 12/07/24 13:29:22.294
• [9.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/07/24 13:29:22.303
  I1207 13:29:22.303565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename podtemplate @ 12/07/24 13:29:22.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:22.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:22.327
  STEP: Create set of pod templates @ 12/07/24 13:29:22.329
  I1207 13:29:22.334940 20 podtemplates.go:143] created test-podtemplate-1
  I1207 13:29:22.341653 20 podtemplates.go:143] created test-podtemplate-2
  I1207 13:29:22.347659 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/07/24 13:29:22.347
  STEP: delete collection of pod templates @ 12/07/24 13:29:22.351
  I1207 13:29:22.351674 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/07/24 13:29:22.371
  I1207 13:29:22.371778 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1207 13:29:22.375307 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4684" for this suite. @ 12/07/24 13:29:22.38
• [0.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/07/24 13:29:22.388
  I1207 13:29:22.388640 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename configmap @ 12/07/24 13:29:22.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:22.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:22.411
  STEP: creating a ConfigMap @ 12/07/24 13:29:22.413
  STEP: fetching the ConfigMap @ 12/07/24 13:29:22.418
  STEP: patching the ConfigMap @ 12/07/24 13:29:22.422
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/07/24 13:29:22.428
  STEP: deleting the ConfigMap by collection with a label selector @ 12/07/24 13:29:22.431
  STEP: listing all ConfigMaps in test namespace @ 12/07/24 13:29:22.44
  I1207 13:29:22.444700 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8851" for this suite. @ 12/07/24 13:29:22.448
• [0.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/07/24 13:29:22.455
  I1207 13:29:22.455324 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/07/24 13:29:22.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:22.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:22.479
  STEP: creating @ 12/07/24 13:29:22.481
  STEP: getting @ 12/07/24 13:29:22.5
  STEP: listing in namespace @ 12/07/24 13:29:22.504
  STEP: patching @ 12/07/24 13:29:22.508
  STEP: deleting @ 12/07/24 13:29:22.516
  I1207 13:29:22.537635 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2775" for this suite. @ 12/07/24 13:29:22.541
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 12/07/24 13:29:22.55
  I1207 13:29:22.550319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sched-pred @ 12/07/24 13:29:22.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:22.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:22.573
  I1207 13:29:22.576243 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1207 13:29:22.582933 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1207 13:29:22.586794 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-155 before test
  I1207 13:29:22.591675 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-jw5cc from ingress-nginx-kubernetes-worker started at 2024-12-07 11:54:23 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.591692 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:29:22.591700 20 predicates.go:957] calico-node-gdvcw from kube-system started at 2024-12-07 12:10:53 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.591706 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:29:22.591711 20 predicates.go:957] coredns-5b4857d7c8-wxhzr from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.591716 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1207 13:29:22.591722 20 predicates.go:957] kube-state-metrics-5d7bdccd49-jvjgd from kube-system started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.591732 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1207 13:29:22.591737 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-s5vnh from kube-system started at 2024-12-07 11:55:18 +0000 UTC (2 container statuses recorded)
  I1207 13:29:22.591742 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1207 13:29:22.591747 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1207 13:29:22.591754 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-dqcg9 from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.591759 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1207 13:29:22.591765 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-kpwtp from kubernetes-dashboard started at 2024-12-07 11:55:18 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.591790 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 2
  I1207 13:29:22.591795 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-kfczm from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:29:22.591800 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:29:22.591805 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 13:29:22.591812 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-64-144 before test
  I1207 13:29:22.596909 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-t2j8z from ingress-nginx-kubernetes-worker started at 2024-12-07 12:06:13 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.596925 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:29:22.596932 20 predicates.go:957] calico-node-sdkxp from kube-system started at 2024-12-07 12:11:14 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.596937 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:29:22.596942 20 predicates.go:957] nodeport-test-9rdqp from services-6498 started at 2024-12-07 13:29:12 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.596946 20 predicates.go:959] 	Container nodeport-test ready: true, restart count 0
  I1207 13:29:22.596953 20 predicates.go:957] sonobuoy-e2e-job-684450c905e04fbe from sonobuoy started at 2024-12-07 12:13:32 +0000 UTC (2 container statuses recorded)
  I1207 13:29:22.596957 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1207 13:29:22.596963 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:29:22.596969 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-jzt9d from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:29:22.596977 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:29:22.596982 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1207 13:29:22.596988 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-19 before test
  I1207 13:29:22.602264 20 predicates.go:957] pod-csi-inline-volumes from csiinlinevolumes-2775 started at 2024-12-07 13:29:22 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.602283 20 predicates.go:959] 	Container pod-csi-inline-volumes ready: false, restart count 0
  I1207 13:29:22.602290 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-42sn8 from ingress-nginx-kubernetes-worker started at 2024-12-07 12:56:34 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.602306 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1207 13:29:22.602312 20 predicates.go:957] calico-node-gdhw7 from kube-system started at 2024-12-07 12:10:43 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.602318 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1207 13:29:22.602324 20 predicates.go:957] execpodhptv2 from services-6498 started at 2024-12-07 13:29:15 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.602334 20 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I1207 13:29:22.602340 20 predicates.go:957] nodeport-test-c4lfg from services-6498 started at 2024-12-07 13:29:12 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.602372 20 predicates.go:959] 	Container nodeport-test ready: true, restart count 0
  I1207 13:29:22.602378 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-07 12:13:30 +0000 UTC (1 container statuses recorded)
  I1207 13:29:22.602382 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1207 13:29:22.602413 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-zt4zf from sonobuoy started at 2024-12-07 12:13:33 +0000 UTC (2 container statuses recorded)
  I1207 13:29:22.602419 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1207 13:29:22.602442 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  E1207 13:29:22.610820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the node has the label node ip-172-31-22-155 @ 12/07/24 13:29:22.616
  STEP: verifying the node has the label node ip-172-31-64-144 @ 12/07/24 13:29:22.629
  STEP: verifying the node has the label node ip-172-31-9-19 @ 12/07/24 13:29:22.643
  I1207 13:29:22.656245 20 predicates.go:372] Pod pod-csi-inline-volumes requesting resource cpu=0m on Node ip-172-31-9-19
  I1207 13:29:22.656479 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-42sn8 requesting resource cpu=0m on Node ip-172-31-9-19
  I1207 13:29:22.656707 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-jw5cc requesting resource cpu=0m on Node ip-172-31-22-155
  I1207 13:29:22.656717 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-t2j8z requesting resource cpu=0m on Node ip-172-31-64-144
  I1207 13:29:22.656725 20 predicates.go:372] Pod calico-node-gdhw7 requesting resource cpu=250m on Node ip-172-31-9-19
  I1207 13:29:22.656732 20 predicates.go:372] Pod calico-node-gdvcw requesting resource cpu=250m on Node ip-172-31-22-155
  I1207 13:29:22.656740 20 predicates.go:372] Pod calico-node-sdkxp requesting resource cpu=250m on Node ip-172-31-64-144
  I1207 13:29:22.656746 20 predicates.go:372] Pod coredns-5b4857d7c8-wxhzr requesting resource cpu=100m on Node ip-172-31-22-155
  I1207 13:29:22.656752 20 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-jvjgd requesting resource cpu=0m on Node ip-172-31-22-155
  I1207 13:29:22.657063 20 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-s5vnh requesting resource cpu=5m on Node ip-172-31-22-155
  I1207 13:29:22.657071 20 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-dqcg9 requesting resource cpu=0m on Node ip-172-31-22-155
  I1207 13:29:22.657077 20 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-kpwtp requesting resource cpu=0m on Node ip-172-31-22-155
  I1207 13:29:22.657083 20 predicates.go:372] Pod execpodhptv2 requesting resource cpu=0m on Node ip-172-31-9-19
  I1207 13:29:22.657089 20 predicates.go:372] Pod nodeport-test-9rdqp requesting resource cpu=0m on Node ip-172-31-64-144
  I1207 13:29:22.657154 20 predicates.go:372] Pod nodeport-test-c4lfg requesting resource cpu=0m on Node ip-172-31-9-19
  I1207 13:29:22.657161 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-9-19
  I1207 13:29:22.657231 20 predicates.go:372] Pod sonobuoy-e2e-job-684450c905e04fbe requesting resource cpu=0m on Node ip-172-31-64-144
  I1207 13:29:22.657238 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-jzt9d requesting resource cpu=0m on Node ip-172-31-64-144
  I1207 13:29:22.657244 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-kfczm requesting resource cpu=0m on Node ip-172-31-22-155
  I1207 13:29:22.657449 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b95bacffe0cc482c-zt4zf requesting resource cpu=0m on Node ip-172-31-9-19
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/07/24 13:29:22.657
  I1207 13:29:22.657479 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-64-144
  I1207 13:29:22.668427 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-9-19
  I1207 13:29:22.672780 20 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-22-155
  E1207 13:29:23.610974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:24.611166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/07/24 13:29:24.699
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f.180ee82770cf88ce], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5823/filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f to ip-172-31-64-144] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f.180ee8278d856d66], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f.180ee8278ea90d8d], Reason = [Created], Message = [Created container filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f.180ee8279130db56], Reason = [Started], Message = [Started container filler-pod-94eebde4-b729-4262-bd15-45c3c5f4879f] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217.180ee82770cf88b0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5823/filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217 to ip-172-31-9-19] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217.180ee8278e2ffdce], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217.180ee8278f5aeb54], Reason = [Created], Message = [Created container filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217.180ee82791b5f889], Reason = [Started], Message = [Started container filler-pod-97cc7d0d-e55b-4824-ba43-5d4505cce217] @ 12/07/24 13:29:24.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4.180ee82771a43cb5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5823/filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4 to ip-172-31-22-155] @ 12/07/24 13:29:24.704
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4.180ee8278ec0535b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/07/24 13:29:24.704
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4.180ee8278fefb965], Reason = [Created], Message = [Created container filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4] @ 12/07/24 13:29:24.704
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4.180ee827921f4d80], Reason = [Started], Message = [Started container filler-pod-dee6f2be-85a3-4c7c-859c-5db4e6df78f4] @ 12/07/24 13:29:24.704
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.180ee827ea247326], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 12/07/24 13:29:24.721
  E1207 13:29:25.611701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-22-155 @ 12/07/24 13:29:25.717
  STEP: verifying the node doesn't have the label node @ 12/07/24 13:29:25.73
  STEP: removing the label node off the node ip-172-31-64-144 @ 12/07/24 13:29:25.732
  STEP: verifying the node doesn't have the label node @ 12/07/24 13:29:25.749
  STEP: removing the label node off the node ip-172-31-9-19 @ 12/07/24 13:29:25.753
  STEP: verifying the node doesn't have the label node @ 12/07/24 13:29:25.768
  I1207 13:29:25.771975 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5823" for this suite. @ 12/07/24 13:29:25.777
• [3.237 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 12/07/24 13:29:25.787
  I1207 13:29:25.787013 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename job @ 12/07/24 13:29:25.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:25.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:25.816
  STEP: Creating a suspended job @ 12/07/24 13:29:25.821
  STEP: Patching the Job @ 12/07/24 13:29:25.827
  STEP: Watching for Job to be patched @ 12/07/24 13:29:25.843
  I1207 13:29:25.845369 20 job.go:1330] Event ADDED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x] and annotations: map[]
  I1207 13:29:25.845407 20 job.go:1330] Event MODIFIED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x] and annotations: map[]
  I1207 13:29:25.845420 20 job.go:1333] Event MODIFIED found for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[]
  STEP: Updating the job @ 12/07/24 13:29:25.845
  STEP: Watching for Job to be updated @ 12/07/24 13:29:25.854
  I1207 13:29:25.856092 20 job.go:1333] Event MODIFIED found for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  I1207 13:29:25.856129 20 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/07/24 13:29:25.856
  I1207 13:29:25.861589 20 job.go:1233] Job: e2e-wns4x as labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched]
  STEP: Waiting for job to complete @ 12/07/24 13:29:25.861
  E1207 13:29:26.611941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:27.612135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:28.612243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:29.612365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:30.612711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:31.613200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:32.613552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:33.613957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:34.614744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:35.615307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 12/07/24 13:29:35.872
  STEP: Watching for Job to be deleted @ 12/07/24 13:29:35.882
  I1207 13:29:35.883513 20 job.go:1330] Event MODIFIED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  I1207 13:29:35.883539 20 job.go:1330] Event MODIFIED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  I1207 13:29:35.883550 20 job.go:1330] Event MODIFIED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  I1207 13:29:35.883689 20 job.go:1330] Event MODIFIED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  I1207 13:29:35.883706 20 job.go:1330] Event MODIFIED observed for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  I1207 13:29:35.883716 20 job.go:1333] Event DELETED found for Job e2e-wns4x in namespace job-6567 with labels: map[e2e-job-label:e2e-wns4x e2e-wns4x:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/07/24 13:29:35.883
  I1207 13:29:35.887738 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6567" for this suite. @ 12/07/24 13:29:35.891
• [10.120 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 12/07/24 13:29:35.906
  I1207 13:29:35.907001 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename disruption @ 12/07/24 13:29:35.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:35.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:35.933
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/07/24 13:29:35.937
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:29:35.946
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/07/24 13:29:35.961
  STEP: Waiting for all pods to be running @ 12/07/24 13:29:35.961
  I1207 13:29:35.966303 20 disruption.go:680] pods: 0 < 3
  E1207 13:29:36.616269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:37.616717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/07/24 13:29:37.966
  STEP: Updating the pdb to allow a pod to be evicted @ 12/07/24 13:29:37.978
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:29:37.987
  E1207 13:29:38.616807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:39.616853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/07/24 13:29:39.993
  STEP: Waiting for all pods to be running @ 12/07/24 13:29:39.993
  STEP: Waiting for the pdb to observed all healthy pods @ 12/07/24 13:29:39.997
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/07/24 13:29:40.026
  STEP: Waiting for the pdb to be processed @ 12/07/24 13:29:40.055
  E1207 13:29:40.616963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:41.617153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/07/24 13:29:42.06
  STEP: locating a running pod @ 12/07/24 13:29:42.064
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/07/24 13:29:42.074
  STEP: Waiting for the pdb to be deleted @ 12/07/24 13:29:42.081
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/07/24 13:29:42.085
  STEP: Waiting for all pods to be running @ 12/07/24 13:29:42.085
  I1207 13:29:42.108250 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5325" for this suite. @ 12/07/24 13:29:42.112
• [6.217 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/07/24 13:29:42.124
  I1207 13:29:42.124188 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename runtimeclass @ 12/07/24 13:29:42.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:42.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:42.149
  E1207 13:29:42.617258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:43.617395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:29:44.189968 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2644" for this suite. @ 12/07/24 13:29:44.194
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/07/24 13:29:44.201
  I1207 13:29:44.201596 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-runtime @ 12/07/24 13:29:44.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:44.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:44.224
  STEP: create the container @ 12/07/24 13:29:44.227
  W1207 13:29:44.237159      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/07/24 13:29:44.237
  E1207 13:29:44.617507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:45.618579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/07/24 13:29:46.251
  STEP: the container should be terminated @ 12/07/24 13:29:46.254
  STEP: the termination message should be set @ 12/07/24 13:29:46.254
  I1207 13:29:46.254720 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/07/24 13:29:46.254
  I1207 13:29:46.277925 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6437" for this suite. @ 12/07/24 13:29:46.281
• [2.088 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/07/24 13:29:46.29
  I1207 13:29:46.290037 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 13:29:46.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:29:46.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:29:46.312
  STEP: creating the pod with failed condition @ 12/07/24 13:29:46.315
  E1207 13:29:46.619572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:47.619775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:48.620574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:49.620695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:50.621494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:51.622074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:52.622133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:53.622503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:54.623358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:55.623504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:56.624477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:57.624570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:58.625488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:29:59.625531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:00.626587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:01.626770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:02.627236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:03.628320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:04.628431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:05.628650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:06.629404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:07.629613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:08.630391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:09.630504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:10.631575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:11.631783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:12.631951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:13.632030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:14.632140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:15.632233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:16.632766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:17.632878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:18.633841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:19.633926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:20.634568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:21.634662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:22.635491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:23.636546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:24.637089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:25.638128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:26.638935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:27.639101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:28.639806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:29.639908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:30.640032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:31.640121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:32.640842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:33.641113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:34.642156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:35.642266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:36.642661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:37.642759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:38.643166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:39.643797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:40.644568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:41.644665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:42.645269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:43.645388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:44.645861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:45.646575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:46.646730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:47.646820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:48.646934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:49.647212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:50.647499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:51.647658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:52.648373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:53.648729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:54.649367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:55.649569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:56.650507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:57.650719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:58.651194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:30:59.651433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:00.651471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:01.651684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:02.652339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:03.652459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:04.653127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:05.653217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:06.653649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:07.653730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:08.654126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:09.654394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:10.654601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:11.655624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:12.656195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:13.656338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:14.656792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:15.657002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:16.657769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:17.658016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:18.658840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:19.659076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:20.659952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:21.660106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:22.661051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:23.661176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:24.661851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:25.661952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:26.662907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:27.663002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:28.664054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:29.664147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:30.664881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:31.665014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:32.665256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:33.665464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:34.665875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:35.666046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:36.666467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:37.667550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:38.667845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:39.667970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:40.668806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:41.669045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:42.669962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:43.670076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:44.670314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:45.670473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 12/07/24 13:31:46.325
  E1207 13:31:46.671084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:31:46.840739 20 pod_client.go:173] Successfully updated pod "var-expansion-7d59f730-1579-4389-845e-218d4e407763"
  STEP: waiting for pod running @ 12/07/24 13:31:46.84
  E1207 13:31:47.671500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:48.672541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/07/24 13:31:48.85
  I1207 13:31:48.850383 20 delete.go:62] Deleting pod "var-expansion-7d59f730-1579-4389-845e-218d4e407763" in namespace "var-expansion-8642"
  I1207 13:31:48.859990 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-7d59f730-1579-4389-845e-218d4e407763" to be fully deleted
  E1207 13:31:49.672659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:50.672752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:51.672849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:52.673250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:53.673477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:54.673593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:55.673698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:56.673783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:57.674816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:58.674896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:31:59.675509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:00.675614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:01.675935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:02.676138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:03.676519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:04.677571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:05.677675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:06.677783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:07.677882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:08.677950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:09.678062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:10.678174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:11.678781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:12.678985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:13.679508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:14.679963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:15.680969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:16.681561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:17.681701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:18.681839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:19.682720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:20.682824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:32:20.952860 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8642" for this suite. @ 12/07/24 13:32:20.957
• [154.677 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/07/24 13:32:20.967
  I1207 13:32:20.967854 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/07/24 13:32:20.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:20.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:20.992
  I1207 13:32:20.994525 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:32:21.683755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/07/24 13:32:22.3
  I1207 13:32:22.300542 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-8900 --namespace=crd-publish-openapi-8900 create -f -'
  E1207 13:32:22.684323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:23.684728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:32:24.366910 20 builder.go:146] stderr: ""
  I1207 13:32:24.366949 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-837-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1207 13:32:24.367001 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-8900 --namespace=crd-publish-openapi-8900 delete e2e-test-crd-publish-openapi-837-crds test-cr'
  I1207 13:32:24.426676 20 builder.go:146] stderr: ""
  I1207 13:32:24.426712 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-837-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1207 13:32:24.426752 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-8900 --namespace=crd-publish-openapi-8900 apply -f -'
  I1207 13:32:24.483592 20 builder.go:146] stderr: ""
  I1207 13:32:24.483633 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-837-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1207 13:32:24.483775 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-8900 --namespace=crd-publish-openapi-8900 delete e2e-test-crd-publish-openapi-837-crds test-cr'
  I1207 13:32:24.535723 20 builder.go:146] stderr: ""
  I1207 13:32:24.535759 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-837-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/07/24 13:32:24.535
  I1207 13:32:24.535856 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=crd-publish-openapi-8900 explain e2e-test-crd-publish-openapi-837-crds'
  I1207 13:32:24.578521 20 builder.go:146] stderr: ""
  I1207 13:32:24.578569 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-837-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1207 13:32:24.685221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:25.685642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:32:25.837334 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8900" for this suite. @ 12/07/24 13:32:25.844
• [4.886 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 12/07/24 13:32:25.854
  I1207 13:32:25.854115 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename resourcequota @ 12/07/24 13:32:25.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:25.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:25.878
  STEP: Counting existing ResourceQuota @ 12/07/24 13:32:25.88
  E1207 13:32:26.686283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:27.686505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:28.687419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:29.687526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:30.687677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/07/24 13:32:30.884
  STEP: Ensuring resource quota status is calculated @ 12/07/24 13:32:30.89
  E1207 13:32:31.687752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:32.687973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:32:32.895201 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-170" for this suite. @ 12/07/24 13:32:32.899
• [7.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/07/24 13:32:32.908
  I1207 13:32:32.908498 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename emptydir @ 12/07/24 13:32:32.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:32.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:32.933
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/07/24 13:32:32.935
  E1207 13:32:33.688095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:34.688327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:35.688455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:36.688658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:32:36.961
  I1207 13:32:36.964553 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-93b881fc-a058-4d66-bcc5-ccb47cc2019e container test-container: <nil>
  STEP: delete the pod @ 12/07/24 13:32:36.981
  I1207 13:32:37.002045 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4962" for this suite. @ 12/07/24 13:32:37.006
• [4.106 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/07/24 13:32:37.014
  I1207 13:32:37.014991 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/07/24 13:32:37.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:37.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:37.038
  I1207 13:32:37.043110 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8549" for this suite. @ 12/07/24 13:32:37.046
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/07/24 13:32:37.054
  I1207 13:32:37.054280 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename namespaces @ 12/07/24 13:32:37.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:37.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:37.077
  STEP: Creating a test namespace @ 12/07/24 13:32:37.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:37.096
  STEP: Creating a service in the namespace @ 12/07/24 13:32:37.099
  STEP: Deleting the namespace @ 12/07/24 13:32:37.11
  STEP: Waiting for the namespace to be removed. @ 12/07/24 13:32:37.12
  E1207 13:32:37.688757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:38.688862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:39.688976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:40.689052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:41.690081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:42.690206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/07/24 13:32:43.126
  STEP: Verifying there is no service in the namespace @ 12/07/24 13:32:43.143
  I1207 13:32:43.146837 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5308" for this suite. @ 12/07/24 13:32:43.153
  STEP: Destroying namespace "nsdeletetest-2316" for this suite. @ 12/07/24 13:32:43.16
  I1207 13:32:43.163419 20 framework.go:370] Namespace nsdeletetest-2316 was already deleted
  STEP: Destroying namespace "nsdeletetest-6715" for this suite. @ 12/07/24 13:32:43.163
• [6.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 12/07/24 13:32:43.17
  I1207 13:32:43.170979 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename crd-webhook @ 12/07/24 13:32:43.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:43.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:43.192
  STEP: Setting up server cert @ 12/07/24 13:32:43.194
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/07/24 13:32:43.425
  STEP: Deploying the custom resource conversion webhook pod @ 12/07/24 13:32:43.435
  STEP: Wait for the deployment to be ready @ 12/07/24 13:32:43.449
  I1207 13:32:43.458845 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1207 13:32:43.691232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:44.691427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:32:45.471
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:32:45.484
  E1207 13:32:45.692001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:32:46.484598 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1207 13:32:46.492382 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  E1207 13:32:46.693065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:47.694052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:48.694471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/07/24 13:32:49.045
  STEP: Create a v2 custom resource @ 12/07/24 13:32:49.064
  STEP: List CRs in v1 @ 12/07/24 13:32:49.087
  STEP: List CRs in v2 @ 12/07/24 13:32:49.091
  I1207 13:32:49.677747 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9664" for this suite. @ 12/07/24 13:32:49.681
• [6.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/07/24 13:32:49.691
  I1207 13:32:49.691887 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/07/24 13:32:49.692
  E1207 13:32:49.694786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:49.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:49.714
  STEP: getting /apis @ 12/07/24 13:32:49.716
  STEP: getting /apis/storage.k8s.io @ 12/07/24 13:32:49.719
  STEP: getting /apis/storage.k8s.io/v1 @ 12/07/24 13:32:49.72
  STEP: creating @ 12/07/24 13:32:49.721
  STEP: watching @ 12/07/24 13:32:49.736
  I1207 13:32:49.736508 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/07/24 13:32:49.744
  STEP: listing in namespace @ 12/07/24 13:32:49.747
  STEP: listing across namespaces @ 12/07/24 13:32:49.751
  STEP: patching @ 12/07/24 13:32:49.754
  STEP: updating @ 12/07/24 13:32:49.759
  I1207 13:32:49.763222 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1207 13:32:49.763283 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/07/24 13:32:49.763
  STEP: deleting a collection @ 12/07/24 13:32:49.777
  I1207 13:32:49.795022 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2420" for this suite. @ 12/07/24 13:32:49.799
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 12/07/24 13:32:49.809
  I1207 13:32:49.809307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:32:49.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:32:49.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:32:49.83
  STEP: Setting up server cert @ 12/07/24 13:32:49.854
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:32:49.983
  STEP: Deploying the webhook pod @ 12/07/24 13:32:49.991
  STEP: Wait for the deployment to be ready @ 12/07/24 13:32:50.003
  I1207 13:32:50.011279 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:32:50.694972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:51.695575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:32:52.024
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:32:52.035
  E1207 13:32:52.696223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:32:53.035898 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/07/24 13:32:53.043
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/07/24 13:32:53.043
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/07/24 13:32:53.057
  E1207 13:32:53.697277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/07/24 13:32:54.069
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/07/24 13:32:54.069
  E1207 13:32:54.697589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/07/24 13:32:55.103
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/07/24 13:32:55.104
  E1207 13:32:55.698570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:56.699163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:57.699414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:58.699832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:32:59.700004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/07/24 13:33:00.138
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/07/24 13:33:00.138
  E1207 13:33:00.700572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:01.700720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:02.700777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:03.700911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:04.701563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:05.229818 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7299" for this suite. @ 12/07/24 13:33:05.235
  STEP: Destroying namespace "webhook-markers-6088" for this suite. @ 12/07/24 13:33:05.242
• [15.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/07/24 13:33:05.25
  I1207 13:33:05.250679 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename runtimeclass @ 12/07/24 13:33:05.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:05.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:05.27
  E1207 13:33:05.701673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:06.701766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:07.303883 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8018" for this suite. @ 12/07/24 13:33:07.307
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 12/07/24 13:33:07.317
  I1207 13:33:07.317813 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:33:07.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:07.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:07.341
  STEP: Setting up server cert @ 12/07/24 13:33:07.369
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:33:07.651
  STEP: Deploying the webhook pod @ 12/07/24 13:33:07.659
  STEP: Wait for the deployment to be ready @ 12/07/24 13:33:07.673
  I1207 13:33:07.682223 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1207 13:33:07.702387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:08.702693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:33:09.696
  E1207 13:33:09.702681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:33:09.709
  E1207 13:33:10.702810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:10.710001 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/07/24 13:33:10.79
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/07/24 13:33:10.819
  STEP: Deleting the collection of validation webhooks @ 12/07/24 13:33:10.846
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/07/24 13:33:10.912
  I1207 13:33:10.965591 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4329" for this suite. @ 12/07/24 13:33:10.969
  STEP: Destroying namespace "webhook-markers-2091" for this suite. @ 12/07/24 13:33:10.979
• [3.667 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/07/24 13:33:10.985
  I1207 13:33:10.985498 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 13:33:10.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:11.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:11.009
  E1207 13:33:11.702921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:12.703196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 12/07/24 13:33:13.033
  I1207 13:33:13.033682 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9738 pod-service-account-391d2802-a954-4582-8481-02e971d56400 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/07/24 13:33:13.119
  I1207 13:33:13.119877 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9738 pod-service-account-391d2802-a954-4582-8481-02e971d56400 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/07/24 13:33:13.192
  I1207 13:33:13.192856 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9738 pod-service-account-391d2802-a954-4582-8481-02e971d56400 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1207 13:33:13.273126 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-9738"
  I1207 13:33:13.274878 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9738" for this suite. @ 12/07/24 13:33:13.279
• [2.301 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 12/07/24 13:33:13.286
  I1207 13:33:13.286810 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:33:13.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:13.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:13.31
  STEP: creating a replication controller @ 12/07/24 13:33:13.312
  I1207 13:33:13.312546 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 create -f -'
  I1207 13:33:13.393876 20 builder.go:146] stderr: ""
  I1207 13:33:13.393908 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/07/24 13:33:13.393
  I1207 13:33:13.393980 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1207 13:33:13.438780 20 builder.go:146] stderr: ""
  I1207 13:33:13.438812 20 builder.go:147] stdout: "update-demo-nautilus-8fqm4 update-demo-nautilus-sl7tf "
  I1207 13:33:13.438855 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 13:33:13.480388 20 builder.go:146] stderr: ""
  I1207 13:33:13.480419 20 builder.go:147] stdout: ""
  I1207 13:33:13.480430 20 kubectl.go:2502] update-demo-nautilus-8fqm4 is created but not running
  E1207 13:33:13.703861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:14.703964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:15.704040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:16.704143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:17.704567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:18.480650 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1207 13:33:18.524046 20 builder.go:146] stderr: ""
  I1207 13:33:18.524090 20 builder.go:147] stdout: "update-demo-nautilus-8fqm4 update-demo-nautilus-sl7tf "
  I1207 13:33:18.524125 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 13:33:18.568222 20 builder.go:146] stderr: ""
  I1207 13:33:18.568260 20 builder.go:147] stdout: "true"
  I1207 13:33:18.568290 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1207 13:33:18.617876 20 builder.go:146] stderr: ""
  I1207 13:33:18.617911 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 13:33:18.617922 20 kubectl.go:2393] validating pod update-demo-nautilus-8fqm4
  I1207 13:33:18.622572 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 13:33:18.622617 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 13:33:18.622627 20 kubectl.go:2520] update-demo-nautilus-8fqm4 is verified up and running
  I1207 13:33:18.622658 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-sl7tf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 13:33:18.664667 20 builder.go:146] stderr: ""
  I1207 13:33:18.664696 20 builder.go:147] stdout: "true"
  I1207 13:33:18.664996 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-sl7tf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1207 13:33:18.705308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:18.711084 20 builder.go:146] stderr: ""
  I1207 13:33:18.711113 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 13:33:18.711124 20 kubectl.go:2393] validating pod update-demo-nautilus-sl7tf
  I1207 13:33:18.718257 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 13:33:18.718296 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 13:33:18.718307 20 kubectl.go:2520] update-demo-nautilus-sl7tf is verified up and running
  STEP: scaling down the replication controller @ 12/07/24 13:33:18.718
  I1207 13:33:18.719090 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1207 13:33:18.719115 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1207 13:33:19.705515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:19.782435 20 builder.go:146] stderr: ""
  I1207 13:33:19.782465 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/07/24 13:33:19.782
  I1207 13:33:19.782541 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1207 13:33:19.826600 20 builder.go:146] stderr: ""
  I1207 13:33:19.826636 20 builder.go:147] stdout: "update-demo-nautilus-8fqm4 "
  I1207 13:33:19.826673 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 13:33:19.869223 20 builder.go:146] stderr: ""
  I1207 13:33:19.869248 20 builder.go:147] stdout: "true"
  I1207 13:33:19.869284 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1207 13:33:19.910939 20 builder.go:146] stderr: ""
  I1207 13:33:19.910971 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 13:33:19.910989 20 kubectl.go:2393] validating pod update-demo-nautilus-8fqm4
  I1207 13:33:19.915688 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 13:33:19.915728 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 13:33:19.915740 20 kubectl.go:2520] update-demo-nautilus-8fqm4 is verified up and running
  STEP: scaling up the replication controller @ 12/07/24 13:33:19.915
  I1207 13:33:19.916505 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1207 13:33:19.916530 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1207 13:33:20.705556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:20.989072 20 builder.go:146] stderr: ""
  I1207 13:33:20.989108 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/07/24 13:33:20.989
  I1207 13:33:20.989186 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1207 13:33:21.034009 20 builder.go:146] stderr: ""
  I1207 13:33:21.034048 20 builder.go:147] stdout: "update-demo-nautilus-8fqm4 update-demo-nautilus-plf6x "
  I1207 13:33:21.034101 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 13:33:21.076493 20 builder.go:146] stderr: ""
  I1207 13:33:21.076528 20 builder.go:147] stdout: "true"
  I1207 13:33:21.076566 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-8fqm4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1207 13:33:21.118443 20 builder.go:146] stderr: ""
  I1207 13:33:21.118476 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 13:33:21.118487 20 kubectl.go:2393] validating pod update-demo-nautilus-8fqm4
  I1207 13:33:21.123574 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 13:33:21.123615 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 13:33:21.123626 20 kubectl.go:2520] update-demo-nautilus-8fqm4 is verified up and running
  I1207 13:33:21.123655 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-plf6x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1207 13:33:21.166512 20 builder.go:146] stderr: ""
  I1207 13:33:21.166891 20 builder.go:147] stdout: "true"
  I1207 13:33:21.167052 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods update-demo-nautilus-plf6x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1207 13:33:21.211456 20 builder.go:146] stderr: ""
  I1207 13:33:21.211483 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1207 13:33:21.211493 20 kubectl.go:2393] validating pod update-demo-nautilus-plf6x
  I1207 13:33:21.216772 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1207 13:33:21.216806 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1207 13:33:21.216818 20 kubectl.go:2520] update-demo-nautilus-plf6x is verified up and running
  STEP: using delete to clean up resources @ 12/07/24 13:33:21.216
  I1207 13:33:21.216881 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 delete --grace-period=0 --force -f -'
  I1207 13:33:21.266277 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1207 13:33:21.266307 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1207 13:33:21.266364 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get rc,svc -l name=update-demo --no-headers'
  I1207 13:33:21.326060 20 builder.go:146] stderr: "No resources found in kubectl-6504 namespace.\n"
  I1207 13:33:21.326100 20 builder.go:147] stdout: ""
  I1207 13:33:21.326142 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6504 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1207 13:33:21.397474 20 builder.go:146] stderr: ""
  I1207 13:33:21.397517 20 builder.go:147] stdout: ""
  I1207 13:33:21.397781 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6504" for this suite. @ 12/07/24 13:33:21.401
• [8.123 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/07/24 13:33:21.41
  I1207 13:33:21.410101 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename svcaccounts @ 12/07/24 13:33:21.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:21.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:21.439
  I1207 13:33:21.461101 20 service_accounts.go:618] created pod
  E1207 13:33:21.705656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:22.705733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:33:23.471
  E1207 13:33:23.706381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:24.706510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:25.706643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:26.706794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:27.706888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:28.706983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:29.707341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:30.707569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:31.708558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:32.708743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:33.709006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:34.709185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:35.709382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:36.709560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:37.709734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:38.710194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:39.710420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:40.710511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:41.710692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:42.710875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:43.711218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:44.711438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:45.711625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:46.712591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:47.712670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:48.712869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:49.713059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:50.713178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:51.713774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:52.713872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:53.471867 20 service_accounts.go:624] polling logs
  I1207 13:33:53.480639 20 service_accounts.go:634] Pod logs: 
  I1207 13:33:22.017704       1 log.go:245] OK: Got token
  I1207 13:33:22.017759       1 log.go:245] validating with in-cluster discovery
  I1207 13:33:22.017961       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1207 13:33:22.018173       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-174:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012870), NotBefore:(*jwt.NumericDate)(0xc000012990), IssuedAt:(*jwt.NumericDate)(0xc000012880), ID:"b55b7002-8440-42da-9c54-454c105ac4dc"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-174", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ead48142-40a6-4507-abed-f9dad2212ab6"}}}
  I1207 13:33:22.025565       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1207 13:33:22.029311       1 log.go:245] OK: Validated signature on JWT
  I1207 13:33:22.029388       1 log.go:245] OK: Got valid claims from token!
  I1207 13:33:22.029428       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-174:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002a7120), NotBefore:(*jwt.NumericDate)(0xc0002a7148), IssuedAt:(*jwt.NumericDate)(0xc0002a7128), ID:"b55b7002-8440-42da-9c54-454c105ac4dc"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-174", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ead48142-40a6-4507-abed-f9dad2212ab6"}}}

  I1207 13:33:53.480687 20 service_accounts.go:638] completed pod
  I1207 13:33:53.489150 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-174" for this suite. @ 12/07/24 13:33:53.493
• [32.092 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/07/24 13:33:53.502
  I1207 13:33:53.502542 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename discovery @ 12/07/24 13:33:53.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:53.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:53.524
  STEP: Setting up server cert @ 12/07/24 13:33:53.527
  E1207 13:33:53.714463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:53.887043 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1207 13:33:53.888139 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1207 13:33:53.888161 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1207 13:33:53.888166 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1207 13:33:53.888172 20 discovery.go:139] Checking APIGroup: apps
  I1207 13:33:53.889279 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1207 13:33:53.889299 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I1207 13:33:53.889305 20 discovery.go:154] apps/v1 matches apps/v1
  I1207 13:33:53.889311 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I1207 13:33:53.890238 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1207 13:33:53.890252 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1207 13:33:53.890258 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1207 13:33:53.890263 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1207 13:33:53.891124 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1207 13:33:53.891135 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1207 13:33:53.891141 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1207 13:33:53.891147 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1207 13:33:53.892003 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1207 13:33:53.892013 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1207 13:33:53.892018 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1207 13:33:53.892024 20 discovery.go:139] Checking APIGroup: autoscaling
  I1207 13:33:53.892805 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1207 13:33:53.892815 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1207 13:33:53.892820 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1207 13:33:53.892827 20 discovery.go:139] Checking APIGroup: batch
  I1207 13:33:53.893663 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1207 13:33:53.893673 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I1207 13:33:53.893678 20 discovery.go:154] batch/v1 matches batch/v1
  I1207 13:33:53.893683 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1207 13:33:53.894656 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1207 13:33:53.894679 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1207 13:33:53.894686 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1207 13:33:53.894692 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1207 13:33:53.895776 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1207 13:33:53.895796 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1207 13:33:53.895802 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1207 13:33:53.895807 20 discovery.go:139] Checking APIGroup: policy
  I1207 13:33:53.896718 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1207 13:33:53.896730 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I1207 13:33:53.896736 20 discovery.go:154] policy/v1 matches policy/v1
  I1207 13:33:53.896742 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1207 13:33:53.897782 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1207 13:33:53.897801 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1207 13:33:53.897807 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1207 13:33:53.897812 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1207 13:33:53.898856 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1207 13:33:53.898877 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1207 13:33:53.898883 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1207 13:33:53.898889 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1207 13:33:53.899999 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1207 13:33:53.900018 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1207 13:33:53.900024 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1207 13:33:53.900030 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1207 13:33:53.900904 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1207 13:33:53.900915 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1207 13:33:53.900922 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1207 13:33:53.900928 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1207 13:33:53.901822 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1207 13:33:53.901835 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1207 13:33:53.901841 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1207 13:33:53.901847 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1207 13:33:53.902652 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1207 13:33:53.902662 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1207 13:33:53.902667 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1207 13:33:53.902674 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I1207 13:33:53.903767 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1207 13:33:53.903797 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1207 13:33:53.903802 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1207 13:33:53.903808 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1207 13:33:53.904881 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1207 13:33:53.904901 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1207 13:33:53.904907 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1207 13:33:53.904913 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1207 13:33:53.905763 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1207 13:33:53.905775 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1207 13:33:53.905781 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1207 13:33:53.905786 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1207 13:33:53.906789 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1207 13:33:53.906814 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1207 13:33:53.906820 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1207 13:33:53.906979 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2371" for this suite. @ 12/07/24 13:33:53.911
• [0.416 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/07/24 13:33:53.918
  I1207 13:33:53.918577 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:33:53.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:33:53.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:33:53.941
  STEP: Creating pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439 @ 12/07/24 13:33:53.943
  E1207 13:33:54.714590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:55.714913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 13:33:55.963
  I1207 13:33:55.967656 20 container_probe.go:1749] Initial restart count of pod busybox-785f6275-5423-4387-80e8-05dea798c923 is 0
  I1207 13:33:55.970688 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:33:56.715509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:57.715614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:57.975600 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:33:58.716570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:33:59.716791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:33:59.981446 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:00.717016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:01.717119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:01.987237 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:02.718104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:03.718247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:03.992487 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:04.718364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:05.718484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:05.997987 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:06.718615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:07.718740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:08.002697 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:08.719480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:09.719775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:10.008723 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:10.720501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:11.720600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:12.013222 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:12.720725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:13.720844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:14.019500 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:14.720967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:15.721094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:16.025729 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:16.721506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:17.721656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:18.029949 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:18.722739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:19.723634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:20.034790 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:20.724571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:21.724702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:22.040186 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:22.725709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:23.726560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:24.045504 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:24.727033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:25.727281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:26.050058 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:26.727792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:27.727998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:28.055820 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:28.728144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:29.728228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:30.061545 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:30.728305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:31.728508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:32.067156 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:32.728857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:33.729018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:34.072089 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:34.730027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:35.730257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:36.079149 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:36.730377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:37.730687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:38.085876 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:38.730739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:39.731657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:40.090476 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:40.731730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:41.731941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:42.096525 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:42.732240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:43.732547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:44.102489 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:44.733177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:45.733273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:46.108248 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:46.733470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:47.734532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:48.114158 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:48.734654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:49.735538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:50.119339 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:50.735643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:51.736548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:52.125082 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:52.736721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:53.736997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:54.129893 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:54.737111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:55.737312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:56.135521 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:56.738296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:57.738503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:34:58.141493 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:34:58.738582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:34:59.738767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:00.146792 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:00.738882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:01.739123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:02.152652 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:02.739244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:03.739389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:04.159114 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:04.739481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:05.739662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:06.163966 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:06.740634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:07.740737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:08.169591 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:08.740832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:09.741068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:10.176030 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:10.741653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:11.741856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:12.181954 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:12.742668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:13.743724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:14.187599 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:14.743813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:15.744534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:16.192848 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:16.745533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:17.745717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:18.198479 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:18.745809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:19.746002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:20.204370 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:20.747033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:21.747322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:22.209169 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:22.747859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:23.748112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:24.214965 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:24.748467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:25.748562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:26.220734 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:26.749419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:27.749601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:28.225695 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:28.750296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:29.750437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:30.230818 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:30.751483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:31.751578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:32.235384 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:32.751778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:33.751935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:34.241160 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:34.752841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:35.752954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:36.246903 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:36.753040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:37.753174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:38.251320 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:38.753897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:39.753991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:40.256852 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:40.754446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:41.754488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:42.262467 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:42.754588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:43.755609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:44.268087 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:44.756569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:45.756672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:46.273572 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:46.757159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:47.757343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:48.279497 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:48.758167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:49.758321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:50.284613 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:50.759162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:51.759284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:52.290143 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:52.759496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:53.759834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:54.295443 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:54.759971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:55.760156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:56.300845 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:56.760237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:57.760446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:35:58.305469 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:35:58.761054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:35:59.761153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:00.311919 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:00.761295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:01.761534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:02.317398 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:02.761845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:03.762096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:04.322276 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:04.762713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:05.762760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:06.327687 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:06.762835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:07.762933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:08.333117 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:08.763693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:09.764574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:10.337366 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:10.765534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:11.766591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:12.343753 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:12.767332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:13.767480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:14.348734 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:14.768292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:15.768653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:16.353177 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:16.768706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:17.769776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:18.358314 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:18.769851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:19.770098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:20.362940 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:20.770249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:21.770415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:22.368395 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:22.770914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:23.771117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:24.374224 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:24.771823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:25.772054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:26.379019 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:26.772452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:27.772630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:28.384508 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:28.772864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:29.772964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:30.390239 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:30.773726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:31.773823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:32.395808 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:32.774264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:33.774422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:34.400887 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:34.775407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:35.775607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:36.405713 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:36.776224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:37.776337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:38.411038 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:38.776625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:39.776837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:40.417149 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:40.777866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:41.777979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:42.422113 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:42.778583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:43.778989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:44.426243 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:44.779482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:45.779710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:46.431569 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:46.780002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:47.780232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:48.436258 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:48.780491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:49.780785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:50.441915 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:50.781445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:51.781643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:52.447520 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:52.781930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:53.782317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:54.453273 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:54.782622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:55.782797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:56.458009 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:56.783418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:57.783480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:36:58.463103 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:36:58.784542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:36:59.785549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:00.469012 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:00.786480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:01.786564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:02.473834 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:02.787302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:03.787932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:04.480493 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:04.788958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:05.789078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:06.486175 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:06.789776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:07.789866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:08.491202 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:08.790552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:09.790739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:10.496403 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:10.791768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:11.791897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:12.501118 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:12.792526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:13.792659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:14.506830 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:14.793182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:15.793276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:16.512700 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:16.794139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:17.794231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:18.517992 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:18.794324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:19.794497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:20.523363 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:20.794588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:21.795538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:22.528948 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:22.796088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:23.796188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:24.533980 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:24.796445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:25.796698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:26.539259 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:26.797572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:27.797669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:28.544696 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:28.798077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:29.798199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:30.549726 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:30.799060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:31.799186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:32.555494 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:32.799982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:33.800484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:34.560959 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:34.801462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:35.801669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:36.567081 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:36.802420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:37.802522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:38.573367 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:38.802598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:39.802678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:40.578841 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:40.803197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:41.803296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:42.584405 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:42.803663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:43.803760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:44.591279 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:44.804539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:45.804636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:46.596307 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:46.805530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:47.806547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:48.602817 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:48.807142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:49.807264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:50.608638 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:50.808049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:51.808265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:52.614224 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:52.808519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:53.809559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:37:54.620112 20 container_probe.go:1759] Get pod busybox-785f6275-5423-4387-80e8-05dea798c923 in namespace container-probe-9439
  E1207 13:37:54.810428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:55.810632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/07/24 13:37:56.62
  I1207 13:37:56.637475 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9439" for this suite. @ 12/07/24 13:37:56.642
• [242.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/07/24 13:37:56.652
  I1207 13:37:56.652818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename subjectreview @ 12/07/24 13:37:56.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:37:56.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:37:56.674
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2534" @ 12/07/24 13:37:56.678
  I1207 13:37:56.684631 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-2534:e2e"
  I1207 13:37:56.684658 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2534"}
  I1207 13:37:56.684665 20 subjectreviews.go:71] saUID: "f8a00bc1-e8db-4268-b84e-744c60c4ca43"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2534:e2e" @ 12/07/24 13:37:56.684
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2534:e2e" @ 12/07/24 13:37:56.684
  I1207 13:37:56.686282 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2534:e2e" api 'list' configmaps in "subjectreview-2534" namespace @ 12/07/24 13:37:56.686
  I1207 13:37:56.687423 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2534:e2e" @ 12/07/24 13:37:56.687
  I1207 13:37:56.688926 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1207 13:37:56.688938 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1207 13:37:56.689025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2534" for this suite. @ 12/07/24 13:37:56.692
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/07/24 13:37:56.698
  I1207 13:37:56.698999 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 13:37:56.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:37:56.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:37:56.723
  STEP: Creating a pod to test substitution in volume subpath @ 12/07/24 13:37:56.726
  E1207 13:37:56.811273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:37:57.811398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:37:58.744
  I1207 13:37:58.747935 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod var-expansion-aed6cb24-0768-4fa7-9133-37ff896d2d03 container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 13:37:58.775
  I1207 13:37:58.795410 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6383" for this suite. @ 12/07/24 13:37:58.799
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/07/24 13:37:58.807
  I1207 13:37:58.807623 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename init-container @ 12/07/24 13:37:58.808
  E1207 13:37:58.811557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:37:58.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:37:58.831
  STEP: creating the pod @ 12/07/24 13:37:58.833
  I1207 13:37:58.833390 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1207 13:37:59.812595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:00.813362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:01.814201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:02.713462 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1964" for this suite. @ 12/07/24 13:38:02.718
• [3.918 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/07/24 13:38:02.725
  I1207 13:38:02.725556 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename subpath @ 12/07/24 13:38:02.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:38:02.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:38:02.747
  STEP: Setting up data @ 12/07/24 13:38:02.749
  STEP: Creating pod pod-subpath-test-projected-xsvn @ 12/07/24 13:38:02.76
  STEP: Creating a pod to test atomic-volume-subpath @ 12/07/24 13:38:02.76
  E1207 13:38:02.815102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:03.815471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:04.815689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:05.815912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:06.816122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:07.816244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:08.816822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:09.816997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:10.817201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:11.817429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:12.818059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:13.818397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:14.818430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:15.818816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:16.819443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:17.819656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:18.820516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:19.820742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:20.821043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:21.821969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:22.822782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:23.823153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:24.823337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:38:24.83
  I1207 13:38:24.834950 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod pod-subpath-test-projected-xsvn container test-container-subpath-projected-xsvn: <nil>
  STEP: delete the pod @ 12/07/24 13:38:24.843
  STEP: Deleting pod pod-subpath-test-projected-xsvn @ 12/07/24 13:38:24.862
  I1207 13:38:24.862772 20 delete.go:62] Deleting pod "pod-subpath-test-projected-xsvn" in namespace "subpath-3380"
  I1207 13:38:24.866757 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3380" for this suite. @ 12/07/24 13:38:24.871
• [22.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/07/24 13:38:24.879
  I1207 13:38:24.879295 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:38:24.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:38:24.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:38:24.907
  STEP: Creating a pod to test downward API volume plugin @ 12/07/24 13:38:24.909
  E1207 13:38:25.823515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:26.823597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:38:26.928
  I1207 13:38:26.931716 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod downwardapi-volume-67d15793-70c4-4f2d-b2c8-2b19f29a32f3 container client-container: <nil>
  STEP: delete the pod @ 12/07/24 13:38:26.937
  I1207 13:38:26.958974 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4617" for this suite. @ 12/07/24 13:38:26.963
• [2.093 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 12/07/24 13:38:26.971
  I1207 13:38:26.972005 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:38:26.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:38:26.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:38:26.995
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/07/24 13:38:26.998
  I1207 13:38:26.998062 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6315 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1207 13:38:27.048021 20 builder.go:146] stderr: ""
  I1207 13:38:27.048049 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/07/24 13:38:27.048
  E1207 13:38:27.824042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:28.824374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:29.824618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:30.824712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:31.824801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/07/24 13:38:32.099
  I1207 13:38:32.099228 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6315 get pod e2e-test-httpd-pod -o json'
  I1207 13:38:32.140898 20 builder.go:146] stderr: ""
  I1207 13:38:32.140983 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-07T13:38:27Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6315\",\n        \"resourceVersion\": \"45446\",\n        \"uid\": \"e7b0b666-2e4f-4ac4-9e26-b5c985598686\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-4fwt8\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-9-19\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-4fwt8\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-07T13:38:27Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-07T13:38:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-07T13:38:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-07T13:38:27Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-07T13:38:27Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://49a6712693e04ca20a80bfd0c5d59b69c9f35093d786b64672496c481fc22f1b\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-07T13:38:27Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-4fwt8\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.9.19\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.9.19\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.114.144\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.114.144\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-07T13:38:27Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/07/24 13:38:32.141
  I1207 13:38:32.141062 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6315 replace -f -'
  I1207 13:38:32.224488 20 builder.go:146] stderr: ""
  I1207 13:38:32.224522 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/07/24 13:38:32.224
  I1207 13:38:32.228532 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-6315 delete pods e2e-test-httpd-pod'
  E1207 13:38:32.825540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:33.653119 20 builder.go:146] stderr: ""
  I1207 13:38:33.653154 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1207 13:38:33.653263 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6315" for this suite. @ 12/07/24 13:38:33.658
• [6.696 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/07/24 13:38:33.667
  I1207 13:38:33.667679 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:38:33.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:38:33.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:38:33.691
  STEP: Creating pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183 @ 12/07/24 13:38:33.693
  E1207 13:38:33.825859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:34.826130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 13:38:35.71
  I1207 13:38:35.714840 20 container_probe.go:1749] Initial restart count of pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 is 0
  I1207 13:38:35.718288 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:35.826645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:36.826821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:37.723584 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:37.827817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:38.827911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:39.728640 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:39.828846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:40.828996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:41.732973 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:41.829118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:42.829325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:43.738511 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:43.829648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:44.829548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:45.744218 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:45.830394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:46.830489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:47.748915 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:47.831061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:48.831196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:49.754167 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:49.831293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:50.831506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:51.758889 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:51.832040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:52.832164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:53.764101 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:53.832182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:54.832397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:55.768938 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:55.833067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:56.833178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:57.774792 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:57.833899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:38:58.834006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:38:59.780296 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:38:59.834406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:00.834482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:01.785282 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:01.835448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:02.835555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:03.791169 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:03.836259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:04.836453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:05.796820 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:05.836908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:06.837038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:07.801449 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:07.837687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:08.837882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:09.807258 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:09.838377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:10.838614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:11.812310 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:11.839413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:12.839622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:13.817843 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:13.839954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:14.840115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:15.824233 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:15.840330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:16.840529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:17.828086 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:17.841169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:18.841455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:19.833967 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:19.842064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:20.842213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:21.839974 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:21.843028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:22.843164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:23.843582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:23.844760 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:24.844543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:25.844717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:25.850942 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:26.844818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:27.845634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:27.856384 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:28.846502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:29.846683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:29.861903 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:30.846836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:31.847015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:31.866413 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:32.847462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:33.847567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:33.871778 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:34.847687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:35.847774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:35.877833 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:36.847859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:37.848672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:37.883047 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:38.849182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:39.849403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:39.888281 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:40.849523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:41.849633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:41.894156 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:42.849753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:43.849913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:43.899448 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:44.850458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:45.850646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:45.904809 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:46.850930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:47.851127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:47.910977 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:48.851378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:49.852440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:49.916104 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:50.852505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:51.852687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:51.922209 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:52.853176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:53.853293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:53.927046 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:54.853504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:55.854570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:55.932404 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:56.854665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:57.855566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:57.938415 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:39:58.855674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:39:59.855771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:39:59.943394 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:00.856342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:01.856621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:01.948538 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:02.857522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:03.857857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:03.954425 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:04.857996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:05.858227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:05.960153 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:06.858334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:07.858531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:07.965635 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:08.858752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:09.858875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:09.971535 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:10.859504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:11.859646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:11.976435 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:12.859735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:13.860003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:13.982270 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:14.860209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:15.860317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:15.987606 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:16.860586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:17.860751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:17.993541 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:18.861494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:19.861710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:19.999119 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:20.862050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:21.862111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:22.004033 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:22.862908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:23.863013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:24.009306 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:24.863697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:25.863786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:26.015328 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:26.863885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:27.863974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:28.020819 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:28.864506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:29.865537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:30.027286 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:30.865675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:31.865770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:32.032176 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:32.866074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:33.866216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:34.037249 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:34.866588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:35.866790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:36.043564 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:36.867441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:37.867504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:38.048409 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:38.867665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:39.867863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:40.054320 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:40.867965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:41.868085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:42.060709 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:42.868557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:43.868989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:44.065533 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:44.869565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:45.869755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:46.071104 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:46.869913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:47.870120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:48.077200 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:48.871086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:49.871327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:50.082199 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:50.871735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:51.871883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:52.088591 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:52.872334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:53.872643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:54.093679 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:54.873543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:55.874650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:56.099046 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:56.874734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:57.875533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:40:58.104461 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:40:58.876438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:40:59.876633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:00.109367 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:00.877141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:01.877419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:02.114769 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:02.877516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:03.878549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:04.120194 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:04.878798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:05.878951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:06.125107 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:06.880013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:07.880101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:08.129937 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:08.880222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:09.880435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:10.136173 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:10.880487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:11.881550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:12.141892 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:12.882540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:13.882628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:14.147332 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:14.882727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:15.882869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:16.152917 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:16.883593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:17.884565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:18.158195 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:18.885547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:19.886614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:20.163992 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:20.886832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:21.886956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:22.169042 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:22.887561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:23.887868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:24.174448 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:24.888308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:25.888507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:26.180701 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:26.889552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:27.889666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:28.185918 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:28.890733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:29.890857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:30.191062 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:30.891869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:31.892535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:32.196377 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:32.892747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:33.893700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:34.202461 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:34.893775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:35.894538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:36.208463 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:36.894706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:37.895540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:38.213876 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:38.896543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:39.897568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:40.219507 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:40.898237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:41.898456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:42.224268 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:42.898669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:43.898977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:44.229937 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:44.899090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:45.899273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:46.235651 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:46.899452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:47.899632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:48.241260 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:48.899982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:49.900169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:50.246590 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:50.900330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:51.900553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:52.252145 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:52.900908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:53.901193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:54.257915 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:54.901639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:55.901836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:56.262740 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:56.901879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:57.902081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:41:58.268785 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:41:58.902389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:41:59.902490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:00.274397 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:00.902658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:01.902823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:02.279881 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:02.903625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:03.904542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:04.284909 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:04.905603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:05.905784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:06.290783 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:06.905886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:07.906084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:08.296706 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:08.906218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:09.906575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:10.302338 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:10.906979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:11.907163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:12.307544 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:12.907365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:13.907782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:14.313610 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:14.908446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:15.908640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:16.320012 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:16.909703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:17.909824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:18.324316 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:18.909916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:19.910201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:20.329405 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:20.911272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:21.911484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:22.335557 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:22.912197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:23.912473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:24.340616 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:24.913271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:25.913378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:26.346331 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:26.913693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:27.914542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:28.352670 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:28.915338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:29.915474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:30.357176 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:30.915747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:31.915937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:32.361552 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:32.916189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:33.917273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:42:34.366757 20 container_probe.go:1759] Get pod test-webserver-6e44f322-e11d-4f38-8b5c-8ea06d3017c3 in namespace container-probe-6183
  E1207 13:42:34.917320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:35.917544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/07/24 13:42:36.367
  I1207 13:42:36.401933 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6183" for this suite. @ 12/07/24 13:42:36.409
• [242.750 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/07/24 13:42:36.417
  I1207 13:42:36.417857 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename apf @ 12/07/24 13:42:36.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:42:36.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:42:36.44
  STEP: getting /apis @ 12/07/24 13:42:36.443
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/07/24 13:42:36.445
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/07/24 13:42:36.446
  STEP: creating @ 12/07/24 13:42:36.448
  STEP: getting @ 12/07/24 13:42:36.463
  STEP: listing @ 12/07/24 13:42:36.466
  STEP: watching @ 12/07/24 13:42:36.47
  I1207 13:42:36.470223 20 flowcontrol.go:620] starting watch
  STEP: patching @ 12/07/24 13:42:36.471
  STEP: updating @ 12/07/24 13:42:36.476
  I1207 13:42:36.485368 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/07/24 13:42:36.485
  STEP: patching /status @ 12/07/24 13:42:36.488
  STEP: updating /status @ 12/07/24 13:42:36.494
  STEP: deleting @ 12/07/24 13:42:36.503
  STEP: deleting a collection @ 12/07/24 13:42:36.517
  I1207 13:42:36.540044 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6763" for this suite. @ 12/07/24 13:42:36.544
• [0.132 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 12/07/24 13:42:36.55
  I1207 13:42:36.550279 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:42:36.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:42:36.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:42:36.575
  STEP: validating cluster-info @ 12/07/24 13:42:36.577
  I1207 13:42:36.577443 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-7430 cluster-info'
  I1207 13:42:36.619857 20 builder.go:146] stderr: ""
  I1207 13:42:36.619882 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1207 13:42:36.619961 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7430" for this suite. @ 12/07/24 13:42:36.623
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/07/24 13:42:36.63
  I1207 13:42:36.630931 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename kubectl @ 12/07/24 13:42:36.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:42:36.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:42:36.651
  STEP: Starting the proxy @ 12/07/24 13:42:36.654
  I1207 13:42:36.654400 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=kubectl-605 proxy --unix-socket=/tmp/kubectl-proxy-unix1767539966/test'
  STEP: retrieving proxy /api/ output @ 12/07/24 13:42:36.685
  I1207 13:42:36.685705 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-605" for this suite. @ 12/07/24 13:42:36.69
• [0.068 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/07/24 13:42:36.698
  I1207 13:42:36.698617 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename cronjob @ 12/07/24 13:42:36.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:42:36.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:42:36.721
  STEP: Creating a ForbidConcurrent cronjob @ 12/07/24 13:42:36.723
  STEP: Ensuring a job is scheduled @ 12/07/24 13:42:36.728
  E1207 13:42:36.917970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:37.918049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:38.918473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:39.918567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:40.918741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:41.918906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:42.919390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:43.919703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:44.920165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:45.920242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:46.921056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:47.921292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:48.922324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:49.922486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:50.923539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:51.923634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:52.924462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:53.924486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:54.924576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:55.925615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:56.926471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:57.926570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:58.927526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:42:59.927648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/07/24 13:43:00.734
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/07/24 13:43:00.738
  STEP: Ensuring no more jobs are scheduled @ 12/07/24 13:43:00.742
  STEP: Removing cronjob @ 12/07/24 13:43:00.747
  I1207 13:43:00.755245 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8732" for this suite. @ 12/07/24 13:43:00.758
• [24.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/07/24 13:43:00.767
  I1207 13:43:00.767465 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename volumeattachment @ 12/07/24 13:43:00.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:43:00.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:43:00.799
  STEP: Create VolumeAttachment "va-e2e-4s6l4" on node "ip-172-31-22-155" @ 12/07/24 13:43:00.805
  STEP: Get VolumeAttachment "va-e2e-4s6l4" on node "ip-172-31-22-155" @ 12/07/24 13:43:00.81
  STEP: Patch VolumeAttachment "va-e2e-4s6l4" on node "ip-172-31-22-155" @ 12/07/24 13:43:00.813
  STEP: List VolumeAttachments with "va-e2e-4s6l4=patched" label @ 12/07/24 13:43:00.818
  STEP: Delete VolumeAttachment "va-e2e-4s6l4" on node "ip-172-31-22-155" @ 12/07/24 13:43:00.821
  STEP: Confirm deletion of VolumeAttachment "va-e2e-4s6l4" on node "ip-172-31-22-155" @ 12/07/24 13:43:00.829
  STEP: Create VolumeAttachment "va-e2e-mnh2c" on node "ip-172-31-9-19" @ 12/07/24 13:43:00.836
  STEP: Update the VolumeAttachment "va-e2e-mnh2c" on node "ip-172-31-9-19" with label "va-e2e=updated" @ 12/07/24 13:43:00.841
  STEP: Create VolumeAttachment "va-e2e-lhzxm" on node "ip-172-31-64-144" @ 12/07/24 13:43:00.852
  STEP: Update the VolumeAttachment "va-e2e-lhzxm" on node "ip-172-31-64-144" with label "va-e2e=updated" @ 12/07/24 13:43:00.859
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/07/24 13:43:00.867
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/07/24 13:43:00.883
  I1207 13:43:00.887032 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7504" for this suite. @ 12/07/24 13:43:00.891
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 12/07/24 13:43:00.899
  I1207 13:43:00.899739 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename webhook @ 12/07/24 13:43:00.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:43:00.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:43:00.923
  E1207 13:43:00.927669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 12/07/24 13:43:00.952
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/07/24 13:43:01.049
  STEP: Deploying the webhook pod @ 12/07/24 13:43:01.059
  STEP: Wait for the deployment to be ready @ 12/07/24 13:43:01.072
  I1207 13:43:01.079678 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1207 13:43:01.927895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:02.928279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/07/24 13:43:03.094
  STEP: Verifying the service has paired with the endpoint @ 12/07/24 13:43:03.109
  E1207 13:43:03.928512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:04.109896 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/07/24 13:43:04.118
  STEP: create a namespace for the webhook @ 12/07/24 13:43:04.131
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/07/24 13:43:04.155
  I1207 13:43:04.207838 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4428" for this suite. @ 12/07/24 13:43:04.215
  STEP: Destroying namespace "webhook-markers-9542" for this suite. @ 12/07/24 13:43:04.223
  STEP: Destroying namespace "fail-closed-namespace-9814" for this suite. @ 12/07/24 13:43:04.229
• [3.338 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/07/24 13:43:04.238
  I1207 13:43:04.238284 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename container-probe @ 12/07/24 13:43:04.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:43:04.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:43:04.264
  STEP: Creating pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617 @ 12/07/24 13:43:04.267
  E1207 13:43:04.928692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:05.928997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/07/24 13:43:06.285
  I1207 13:43:06.289280 20 container_probe.go:1749] Initial restart count of pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 is 0
  I1207 13:43:06.293388 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:06.929122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:07.929249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:08.298730 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:08.929438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:09.929546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:10.303873 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:10.929581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:11.929808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:12.309165 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:12.930564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:13.930713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:14.314471 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:14.931149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:15.931385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:16.320116 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:16.931794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:17.931965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:18.324633 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:18.932065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:19.932187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:20.330508 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:20.932591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:21.932702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:22.335173 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:22.933706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:23.933815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:24.339981 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:24.934556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:25.935562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:26.344384 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  I1207 13:43:26.344419 20 container_probe.go:1763] Restart count of pod container-probe-3617/liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 is now 1 (20.055115616s elapsed)
  E1207 13:43:26.935981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:27.936188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:28.349770 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:28.936439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:29.936518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:30.355318 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:30.937045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:31.937311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:32.361049 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:32.937651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:33.937770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:34.366201 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:34.937850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:35.937972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:36.370521 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:36.938081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:37.938155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:38.376043 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:38.938310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:39.938449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:40.381079 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:40.938686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:41.938784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:42.386211 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:42.938853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:43.939621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:44.392767 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:44.940478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:45.940668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:46.398276 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  I1207 13:43:46.398315 20 container_probe.go:1763] Restart count of pod container-probe-3617/liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 is now 2 (40.109010996s elapsed)
  E1207 13:43:46.940943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:47.941046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:48.404012 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:48.941634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:49.942567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:50.409458 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:50.942695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:51.943317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:52.414028 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:52.943506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:53.943587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:54.419426 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:54.943700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:55.944568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:56.425517 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:56.945049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:57.945694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:43:58.430705 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:43:58.946406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:43:59.946663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:00.436414 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:00.946772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:01.946886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:02.442061 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:02.947578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:03.947849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:04.446051 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:04.948745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:05.948956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:06.451771 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  I1207 13:44:06.451809 20 container_probe.go:1763] Restart count of pod container-probe-3617/liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 is now 3 (1m0.162505019s elapsed)
  E1207 13:44:06.949147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:07.949271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:08.456367 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:08.949884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:09.950002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:10.461172 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:10.950566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:11.950765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:12.466179 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:12.951782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:13.952068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:14.471578 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:14.952134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:15.952382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:16.477425 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:16.953025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:17.953115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:18.482177 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:18.953725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:19.953825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:20.487635 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:20.953911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:21.953982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:22.492996 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:22.954111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:23.954476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:24.498126 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:24.954594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:25.954672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:26.502692 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  I1207 13:44:26.502731 20 container_probe.go:1763] Restart count of pod container-probe-3617/liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 is now 4 (1m20.21342712s elapsed)
  E1207 13:44:26.955228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:27.955441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:28.507891 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:28.956494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:29.956655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:30.513162 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:30.956696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:31.957018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:32.518484 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:32.958051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:33.958183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:34.523545 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:34.959124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:35.959341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:36.528667 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:36.960252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:37.960492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:38.534077 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:38.960717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:39.960914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:40.538850 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:40.961329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:41.961469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:42.544143 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:42.961575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:43.961874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:44.549926 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:44.962462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:45.962538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:46.555122 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:46.963582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:47.963680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:48.561085 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:48.964554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:49.964688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:50.567009 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:50.965465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:51.965701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:52.572760 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:52.966285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:53.966690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:54.577878 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:54.967362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:55.967490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:56.583287 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:56.967752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:57.967957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:44:58.589101 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:44:58.968565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:44:59.968764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:00.594167 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:00.969628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:01.969724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:02.599559 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:02.969863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:03.970228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:04.605529 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:04.971056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:05.971240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:06.610935 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:06.971430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:07.971698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:08.616748 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:08.972234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:09.972375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:10.622626 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:10.973098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:11.973189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:12.629100 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:12.973470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:13.973563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:14.634472 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:14.973667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:15.974542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:16.639888 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:16.975145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:17.975239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:18.645430 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:18.975528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:19.975713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:20.652035 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:20.976469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:21.977541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:22.656790 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:22.978201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:23.978518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:24.662283 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:24.979529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:25.979711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:26.668481 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  E1207 13:45:26.980540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:27.980790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:28.674660 20 container_probe.go:1759] Get pod liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 in namespace container-probe-3617
  I1207 13:45:28.674698 20 container_probe.go:1763] Restart count of pod container-probe-3617/liveness-8bd6d593-16cb-448b-8f31-e25b609368e9 is now 5 (2m22.385394417s elapsed)
  STEP: deleting the pod @ 12/07/24 13:45:28.674
  I1207 13:45:28.691849 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3617" for this suite. @ 12/07/24 13:45:28.696
• [144.468 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 12/07/24 13:45:28.706
  I1207 13:45:28.706438 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename services @ 12/07/24 13:45:28.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:45:28.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:45:28.728
  STEP: creating service in namespace services-320 @ 12/07/24 13:45:28.73
  STEP: creating service affinity-clusterip in namespace services-320 @ 12/07/24 13:45:28.73
  STEP: creating replication controller affinity-clusterip in namespace services-320 @ 12/07/24 13:45:28.741
  I1207 13:45:28.746242      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-320, replica count: 3
  E1207 13:45:28.981759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:29.982812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:30.983696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:31.796733      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:45:31.806391 20 resource.go:361] Creating new exec pod
  E1207 13:45:31.984014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:32.984102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:33.984569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:34.827651 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-320 exec execpod-affinitypwfbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1207 13:45:34.917113 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1207 13:45:34.917156 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:45:34.917240 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-320 exec execpod-affinitypwfbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  E1207 13:45:34.985557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:34.993935 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n"
  I1207 13:45:34.993964 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1207 13:45:34.994072 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1894602078 --namespace=services-320 exec execpod-affinitypwfbw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.180:80/ ; done'
  I1207 13:45:35.171977 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n"
  I1207 13:45:35.172023 20 builder.go:147] stdout: "\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2\naffinity-clusterip-8mld2"
  I1207 13:45:35.172036 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172044 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172050 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172056 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172062 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172067 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172073 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172079 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172085 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172096 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172101 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172106 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172116 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172123 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172129 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172134 20 service.go:242] Received response from host: affinity-clusterip-8mld2
  I1207 13:45:35.172257 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-320, will wait for the garbage collector to delete the pods @ 12/07/24 13:45:35.189
  I1207 13:45:35.257228 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 8.689995ms
  I1207 13:45:35.358078 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.845343ms
  E1207 13:45:35.986373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:36.986416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:37.986637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:45:38.377194 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-320" for this suite. @ 12/07/24 13:45:38.381
• [9.683 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/07/24 13:45:38.389
  I1207 13:45:38.389112 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename chunking @ 12/07/24 13:45:38.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:45:38.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:45:38.409
  STEP: creating a large number of resources @ 12/07/24 13:45:38.411
  E1207 13:45:38.986725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:39.987764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:40.987864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:41.988249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:42.988748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:43.988821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:44.989157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:45.989474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:46.989784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:47.990397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:48.990894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:49.990947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:50.991316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:51.992322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:52.992742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:53.993644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:54.994164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:55.994891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 12/07/24 13:45:56.097
  I1207 13:45:56.145326 20 chunking.go:163] Retrieved 40/40 results with rv 47188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/07/24 13:45:56.145
  E1207 13:45:56.995045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:57.995307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:58.995492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:45:59.995750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:00.995899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:01.996007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:02.996792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:03.996917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:04.997019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:05.997379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:06.997485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:07.997896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:08.998141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:09.998544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:10.998726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:11.999547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:13.000061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:14.000183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:15.000583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:16.000693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:46:16.151683 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:46:17.001521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:18.001595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:19.001770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:20.001898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:21.002756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:22.002929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:23.003284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:24.003424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:25.003715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:26.003656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:27.004537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:28.004594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:29.005562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:30.005672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:31.006585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:32.006763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:33.007142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:34.007330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:35.007471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:36.007634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:46:36.150950 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:46:37.007782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:38.008457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:39.008655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:40.008845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:41.009086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:42.009557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:43.010041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:44.010411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:45.010564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:46.010618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:47.010797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:48.011780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:49.011848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:50.012115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:51.012297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:52.012523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:53.012869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:54.013543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:55.014511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:56.014619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:46:56.151935 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:46:57.015689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:58.015757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:46:59.016552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:00.016690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:01.016876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:02.017069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:03.017727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:04.017926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:05.018997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:06.018304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:07.018477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:08.018646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:09.018761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:10.018951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:11.019144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:12.019623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:13.020639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:14.020766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:15.021815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:16.022627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:47:16.151514 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:47:17.023271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:18.023533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:19.024543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:20.025536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:21.026545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:22.026792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:23.027217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:24.027335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:25.027510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:26.028572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:27.028643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:28.028706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:29.028884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:30.029110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:31.029320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:32.029446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:33.029811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:34.029900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:35.030520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:36.031593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:47:36.151331 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:47:37.031927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:38.032304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:39.032960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:40.033849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:41.033919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:42.034014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:43.034302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:44.034483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:45.035726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:46.036557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:47.036669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:48.037334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:49.037534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:50.037658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:51.037834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:52.038561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:53.038908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:54.039116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:55.040877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:56.041075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:47:56.152288 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:47:57.041110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:58.041544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:47:59.041620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:00.042543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:01.042808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:02.043552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:03.043891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:04.043987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:05.044116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:06.044216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:07.044567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:08.044582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:09.044686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:10.044805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:11.044906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:12.044984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:13.045324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:14.045481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:15.046438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:16.046582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:48:16.151026 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:48:17.046720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:18.047368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:19.047597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:20.047834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:21.048568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:22.048724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:23.049305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:24.049535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:25.051221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:26.050998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:27.051147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:28.051758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:29.051975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:30.052160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:31.052236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:32.052302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:33.052712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:34.052810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:35.053571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:36.054535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:48:36.151784 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:48:37.054634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:38.054936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:39.055650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:40.055911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:41.056102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:42.056534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:43.056859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:44.057153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:45.057145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:46.057180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:47.057409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:48.057743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:49.057931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:50.058216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:51.058420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:52.058610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:53.058993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:54.059250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:55.059602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:56.059679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:48:56.150907 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:48:57.059788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:58.060198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:48:59.060454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:00.060509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:01.061542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:02.061742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:03.062778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:04.062839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:05.062895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:06.062981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:07.063087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:08.063318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:09.063488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:10.063586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:11.063704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:12.063784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:13.064319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:14.064476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:15.064586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:16.064694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:49:16.151702 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:49:17.065504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:18.066373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:19.066510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:20.066738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:21.066813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:22.066918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:23.067749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:24.067850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:25.068549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:26.068646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:27.068771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:28.068875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:29.068987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:30.069098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:31.069282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:32.069490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:33.069707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:34.069836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:35.070542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:36.070713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:49:36.151882 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:49:37.070821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:38.071167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:39.071435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:40.071690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:41.071880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:42.072076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:43.072435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:44.072514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:45.073650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:46.074546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:47.074649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:48.074944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:49.075534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:50.076540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:51.076807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:52.077024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:53.077365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:54.077610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:55.077696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:56.077879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:49:56.151399 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:49:57.078268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:58.078317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:49:59.078536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:00.078720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:01.078962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:02.079208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:03.079651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:04.080580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:05.080757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:06.080852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:07.081091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:08.081415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:09.081607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:10.081883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:11.081981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:12.082546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:13.082884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:14.083467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:15.083557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:16.084545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:50:16.151177 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:50:17.085136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:18.085458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:19.085568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:20.086541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:21.087549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:22.087730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:23.088162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:24.088281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:25.088483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:26.088580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:27.088776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:28.089713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:29.089800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:30.089974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:31.090568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:32.091469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:33.091883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:34.092070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:35.092698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:36.092738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:50:36.151438 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:50:37.093731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:38.094160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:39.094539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:40.095541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:41.095732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:42.095935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:43.096401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:44.096771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:45.096931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:46.097134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:47.097332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:48.097567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:49.097754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:50.097845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:51.098091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:52.098324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:53.098685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:54.099488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:55.099736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:56.099939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:50:56.151654 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:50:57.100599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:58.100726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:50:59.100906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:00.101011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:01.101191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:02.101405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:03.101730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:04.101865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:05.102601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:06.102698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:07.103720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:08.103763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:09.104540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:10.104643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:11.104739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:12.105536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:13.105915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:14.106599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:15.106792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:16.106976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:51:16.151918 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:51:17.107479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:18.107781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:19.107875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:20.108060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:21.108258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:22.108500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:23.108758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:24.108876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:25.109073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:26.109539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:27.109762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:28.110092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:29.110374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:30.111260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:31.111454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:32.111492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:33.111909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:34.112705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:35.112867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:36.112976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:51:36.151268 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:51:37.113664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:38.114737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:39.114828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:40.115547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:41.115813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:42.116049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:43.116491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:44.116711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:45.116907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:46.117094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:47.117282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:48.117698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:49.117943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:50.118064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:51.118320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:52.118600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:53.118694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:54.118930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:55.119126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:56.119328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:51:56.150904 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:51:57.119469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:58.119767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:51:59.119875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:00.120142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:01.120325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:02.120535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:03.121533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:04.121663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:05.121862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:06.121962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:07.122161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:08.122841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:09.123012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:10.123126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:11.123606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:12.124537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:13.124827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:14.125545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:15.125713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:16.126545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:52:16.150389 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:52:17.126683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:18.126789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:19.127024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:20.127276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:21.127557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:22.127768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:23.128314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:24.128466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:25.128580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:26.128780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:27.128960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:28.129317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:29.129509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:30.129687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:31.129841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:32.130052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:33.130841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:34.130902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:35.131135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:36.131314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:52:36.151039 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:52:37.131521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:38.131653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:39.132466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:40.132573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:41.133011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:42.133104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:43.133757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:44.134048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:45.134162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:46.134564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:47.135539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:48.135676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:49.135920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:50.136543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:51.136677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:52.136857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:53.137194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:54.137553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:55.137736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:56.137933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:52:56.151721 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:52:57.138081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:58.138458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:52:59.138649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:00.138919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:01.139097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:02.139579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:03.140586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:04.140678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:05.140883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:06.141085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:07.141287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:08.141570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:09.141777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:10.142003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:11.142246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:12.142634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:13.142961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:14.143147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:15.143232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:16.143435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:53:16.150443 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:53:17.143481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:18.143683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:19.144536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:20.145543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:21.146545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:22.146650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:23.147464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:24.148552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:25.148670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:26.148869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:27.149052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:28.149404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:29.149505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:30.149693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:31.149880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:32.150062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:33.150432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:34.150517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:35.150713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:36.151692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:53:36.152159 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:53:37.152568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:38.153548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:39.154549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:40.154719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:41.154833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:42.155023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:43.155342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:44.155533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:45.155729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:46.155910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:47.156094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:48.156469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:49.156672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:50.156930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:51.157123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:52.157324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:53.157417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:54.157602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:55.157783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:53:56.151434 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:53:56.158552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:57.159538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:58.161505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:53:59.161588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:00.161790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:01.162029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:02.163003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:03.163833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:04.164542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:05.164682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:06.165538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:07.165729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:08.166774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:09.166936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:10.167176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:11.167279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:12.167483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:13.167881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:14.168086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:15.169161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:54:16.151847 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:54:16.169878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:17.170543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:18.171000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:19.171534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:20.171707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:21.172557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:22.172653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:23.173530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:24.174548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:25.175541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:26.176552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:27.176654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:28.176710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:29.177544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:30.178564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:31.179554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:32.180542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:33.180982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:34.181176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:35.181536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:54:36.152210 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:54:36.182378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:37.182482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:38.183448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:39.183488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:40.184545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:41.185536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:42.186553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:43.186896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:44.190582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:45.190669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:46.190788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:47.191016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:48.191376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:49.191587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:50.192573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:51.192674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:52.193548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:53.193668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:54.194539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:55.195534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:54:56.150144 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:54:56.196137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:57.196304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:58.196533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:54:59.196755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:00.196910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:01.197029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:02.197129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:03.197582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:04.197826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:05.198025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:06.198224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:07.198478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:08.199306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:09.199507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:10.199693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:11.199899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:12.200166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:13.200640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:14.200831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:15.201061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:55:16.151282 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:55:16.201338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:17.201535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:18.201651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:19.201771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:20.201977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:21.202536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:22.202574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:23.203062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:24.203153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:25.203242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:26.203921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:27.204017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:28.204414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:29.204481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:30.205546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:31.206542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:32.207551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:33.208185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:34.208447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:35.208641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:55:36.151711 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1207 13:55:36.208650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:37.208852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:38.209100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:39.209287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:40.209574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:41.209756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:42.209937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:43.210388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:44.210498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:45.210694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:46.210879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:47.211540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:48.211918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:49.212812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:50.213033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:51.213216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:52.213425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:53.214275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:54.214548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:55.215514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:55:56.150486 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1207 13:55:56.150519 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/07/24 13:55:56.15
  STEP: retrieving all remaining pages @ 12/07/24 13:55:56.155
  I1207 13:55:56.159184 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1207 13:55:56.163329 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1207 13:55:56.168450 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1207 13:55:56.173655 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1207 13:55:56.178159 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1207 13:55:56.182846 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1207 13:55:56.186864 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDgzMjgsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1207 13:55:56.191319 20 chunking.go:221] Retrieved 40/40 results with rv 48328 and continue 
  I1207 13:55:56.191454 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6555" for this suite. @ 12/07/24 13:55:56.195
• [617.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/07/24 13:55:56.204
  I1207 13:55:56.204903 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/07/24 13:55:56.205
  E1207 13:55:56.215579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:55:56.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:55:56.234
  STEP: creating the policy @ 12/07/24 13:55:56.244
  STEP: waiting until the marker is denied @ 12/07/24 13:55:56.255
  STEP: testing a replicated Deployment to be allowed @ 12/07/24 13:55:56.361
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/07/24 13:55:56.376
  I1207 13:55:56.418375 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8843" for this suite. @ 12/07/24 13:55:56.421
• [0.234 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/07/24 13:55:56.438
  I1207 13:55:56.438886 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename security-context-test @ 12/07/24 13:55:56.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:55:56.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:55:56.46
  E1207 13:55:57.215737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:58.216466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:55:59.216616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:00.216743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:00.502970 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4071" for this suite. @ 12/07/24 13:56:00.507
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/07/24 13:56:00.515
  I1207 13:56:00.516002 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename replication-controller @ 12/07/24 13:56:00.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:56:00.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:56:00.538
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/07/24 13:56:00.54
  E1207 13:56:01.216885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:02.217212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 12/07/24 13:56:02.561
  STEP: Then the orphan pod is adopted @ 12/07/24 13:56:02.567
  E1207 13:56:03.217259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:03.575597 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8384" for this suite. @ 12/07/24 13:56:03.58
• [3.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/07/24 13:56:03.588
  I1207 13:56:03.588181 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename proxy @ 12/07/24 13:56:03.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:56:03.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:56:03.611
  STEP: starting an echo server on multiple ports @ 12/07/24 13:56:03.625
  STEP: creating replication controller proxy-service-46vns in namespace proxy-5959 @ 12/07/24 13:56:03.625
  I1207 13:56:03.634263      20 runners.go:193] Created replication controller with name: proxy-service-46vns, namespace: proxy-5959, replica count: 1
  E1207 13:56:04.217630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:04.685227      20 runners.go:193] proxy-service-46vns Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1207 13:56:05.217827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:05.685429      20 runners.go:193] proxy-service-46vns Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1207 13:56:05.691036 20 proxy.go:230] setup took 2.077532323s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/07/24 13:56:05.691
  I1207 13:56:05.696837 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.574158ms)
  I1207 13:56:05.697710 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.299221ms)
  I1207 13:56:05.697738 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.208004ms)
  I1207 13:56:05.698230 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.726155ms)
  I1207 13:56:05.698298 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.906447ms)
  I1207 13:56:05.698542 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 6.995155ms)
  I1207 13:56:05.699786 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 8.312634ms)
  I1207 13:56:05.699808 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 8.489145ms)
  I1207 13:56:05.700264 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.832006ms)
  I1207 13:56:05.700743 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 9.442762ms)
  I1207 13:56:05.700821 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 9.706094ms)
  I1207 13:56:05.700946 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 9.726759ms)
  I1207 13:56:05.702226 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 10.951148ms)
  I1207 13:56:05.702439 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 11.097287ms)
  I1207 13:56:05.702625 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 11.175838ms)
  I1207 13:56:05.702627 20 proxy.go:558] (0) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 11.136667ms)
  I1207 13:56:05.706335 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 3.621857ms)
  I1207 13:56:05.707536 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 4.882667ms)
  I1207 13:56:05.708451 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.56643ms)
  I1207 13:56:05.708451 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.626719ms)
  I1207 13:56:05.709322 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 6.579034ms)
  I1207 13:56:05.709590 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.629936ms)
  I1207 13:56:05.709672 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 6.746732ms)
  I1207 13:56:05.709683 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.669421ms)
  I1207 13:56:05.712880 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 9.90485ms)
  I1207 13:56:05.713054 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 10.061447ms)
  I1207 13:56:05.713057 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 10.279186ms)
  I1207 13:56:05.713231 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 10.389318ms)
  I1207 13:56:05.713231 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 10.331434ms)
  I1207 13:56:05.715396 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 12.531664ms)
  I1207 13:56:05.715963 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 13.158033ms)
  I1207 13:56:05.716037 20 proxy.go:558] (1) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 13.095878ms)
  I1207 13:56:05.719619 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 3.478903ms)
  I1207 13:56:05.721035 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.773692ms)
  I1207 13:56:05.721034 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.847145ms)
  I1207 13:56:05.721075 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.869433ms)
  I1207 13:56:05.721109 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.96875ms)
  I1207 13:56:05.721122 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 4.713867ms)
  I1207 13:56:05.721322 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 5.098819ms)
  I1207 13:56:05.721680 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.289188ms)
  I1207 13:56:05.722410 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.130547ms)
  I1207 13:56:05.722438 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 6.06471ms)
  I1207 13:56:05.722551 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 6.484062ms)
  I1207 13:56:05.723312 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 6.974488ms)
  I1207 13:56:05.723472 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.149008ms)
  I1207 13:56:05.723643 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.349158ms)
  I1207 13:56:05.724006 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 7.763349ms)
  I1207 13:56:05.724908 20 proxy.go:558] (2) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 8.597403ms)
  I1207 13:56:05.728479 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 3.548831ms)
  I1207 13:56:05.728620 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 3.585723ms)
  I1207 13:56:05.729514 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 4.328689ms)
  I1207 13:56:05.729514 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.292052ms)
  I1207 13:56:05.730172 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 5.057986ms)
  I1207 13:56:05.730193 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.959126ms)
  I1207 13:56:05.730206 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.12715ms)
  I1207 13:56:05.731121 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.058434ms)
  I1207 13:56:05.731130 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.026431ms)
  I1207 13:56:05.731136 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 5.970918ms)
  I1207 13:56:05.731359 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.143885ms)
  I1207 13:56:05.731937 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.97159ms)
  I1207 13:56:05.732384 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 7.253452ms)
  I1207 13:56:05.732582 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.432323ms)
  I1207 13:56:05.732956 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 7.961064ms)
  I1207 13:56:05.733702 20 proxy.go:558] (3) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 8.686336ms)
  I1207 13:56:05.738246 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.447812ms)
  I1207 13:56:05.738542 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.594609ms)
  I1207 13:56:05.738563 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 4.839216ms)
  I1207 13:56:05.738574 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.730293ms)
  I1207 13:56:05.738992 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 5.070151ms)
  I1207 13:56:05.739847 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.882798ms)
  I1207 13:56:05.740153 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.329584ms)
  I1207 13:56:05.740230 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.252351ms)
  I1207 13:56:05.740379 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.619615ms)
  I1207 13:56:05.740380 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.554714ms)
  I1207 13:56:05.740409 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.550026ms)
  I1207 13:56:05.741295 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.360401ms)
  I1207 13:56:05.741390 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 7.513058ms)
  I1207 13:56:05.742290 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 8.3839ms)
  I1207 13:56:05.742530 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 8.640481ms)
  I1207 13:56:05.742638 20 proxy.go:558] (4) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 8.646261ms)
  I1207 13:56:05.746000 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 3.328714ms)
  I1207 13:56:05.746330 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 3.621194ms)
  I1207 13:56:05.746688 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 3.930326ms)
  I1207 13:56:05.746769 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 3.930382ms)
  I1207 13:56:05.747773 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.871752ms)
  I1207 13:56:05.747786 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 4.851917ms)
  I1207 13:56:05.747979 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.014836ms)
  I1207 13:56:05.748398 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.512022ms)
  I1207 13:56:05.748413 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.554893ms)
  I1207 13:56:05.748980 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.198108ms)
  I1207 13:56:05.749445 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 6.640901ms)
  I1207 13:56:05.749665 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.930603ms)
  I1207 13:56:05.750070 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 7.150785ms)
  I1207 13:56:05.750205 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.383497ms)
  I1207 13:56:05.750446 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.4996ms)
  I1207 13:56:05.751179 20 proxy.go:558] (5) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.307355ms)
  I1207 13:56:05.754909 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 3.640879ms)
  I1207 13:56:05.755502 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 4.185474ms)
  I1207 13:56:05.755835 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.544714ms)
  I1207 13:56:05.756263 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.766438ms)
  I1207 13:56:05.757144 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.736661ms)
  I1207 13:56:05.757255 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.857391ms)
  I1207 13:56:05.757271 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 5.813577ms)
  I1207 13:56:05.757273 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.730933ms)
  I1207 13:56:05.757829 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 6.318369ms)
  I1207 13:56:05.757831 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.357984ms)
  I1207 13:56:05.758100 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 6.890483ms)
  I1207 13:56:05.758190 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 6.819857ms)
  I1207 13:56:05.758589 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.150801ms)
  I1207 13:56:05.758936 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 7.409862ms)
  I1207 13:56:05.759389 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.050085ms)
  I1207 13:56:05.759698 20 proxy.go:558] (6) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 8.278153ms)
  I1207 13:56:05.763454 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 3.691067ms)
  I1207 13:56:05.765247 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.454021ms)
  I1207 13:56:05.765267 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 5.522272ms)
  I1207 13:56:05.765271 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.250164ms)
  I1207 13:56:05.765280 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 5.438263ms)
  I1207 13:56:05.765671 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 5.665678ms)
  I1207 13:56:05.765702 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.78629ms)
  I1207 13:56:05.765874 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.000409ms)
  I1207 13:56:05.765893 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 5.946446ms)
  I1207 13:56:05.765882 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.950175ms)
  I1207 13:56:05.765906 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 6.009307ms)
  I1207 13:56:05.766361 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 6.533506ms)
  I1207 13:56:05.766877 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 6.901458ms)
  I1207 13:56:05.766889 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.031036ms)
  I1207 13:56:05.767550 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.559867ms)
  I1207 13:56:05.767748 20 proxy.go:558] (7) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 7.787728ms)
  I1207 13:56:05.770987 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 3.176945ms)
  I1207 13:56:05.772085 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.23069ms)
  I1207 13:56:05.773613 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.523801ms)
  I1207 13:56:05.773659 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.755523ms)
  I1207 13:56:05.774032 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.000929ms)
  I1207 13:56:05.774059 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.998545ms)
  I1207 13:56:05.774081 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.133836ms)
  I1207 13:56:05.774580 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 6.53523ms)
  I1207 13:56:05.774776 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.851932ms)
  I1207 13:56:05.775190 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 7.084554ms)
  I1207 13:56:05.775307 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.416543ms)
  I1207 13:56:05.775341 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 7.267719ms)
  I1207 13:56:05.775845 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 7.86563ms)
  I1207 13:56:05.776322 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 8.320139ms)
  I1207 13:56:05.776367 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 8.351886ms)
  I1207 13:56:05.777111 20 proxy.go:558] (8) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 9.147677ms)
  I1207 13:56:05.781896 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.568975ms)
  I1207 13:56:05.781957 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 4.826261ms)
  I1207 13:56:05.781976 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.763527ms)
  I1207 13:56:05.781992 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.684416ms)
  I1207 13:56:05.782054 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 4.857698ms)
  I1207 13:56:05.782224 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 4.808381ms)
  I1207 13:56:05.783765 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.420425ms)
  I1207 13:56:05.783766 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 6.335045ms)
  I1207 13:56:05.783791 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 6.617375ms)
  I1207 13:56:05.785570 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 8.282771ms)
  I1207 13:56:05.785569 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 8.324159ms)
  I1207 13:56:05.785594 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 8.225651ms)
  I1207 13:56:05.785598 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 8.211729ms)
  I1207 13:56:05.786802 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 9.535279ms)
  I1207 13:56:05.786802 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 9.397613ms)
  I1207 13:56:05.788691 20 proxy.go:558] (9) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 11.241569ms)
  I1207 13:56:05.791806 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 3.047068ms)
  I1207 13:56:05.792382 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 3.601083ms)
  I1207 13:56:05.792952 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 4.027813ms)
  I1207 13:56:05.793869 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 5.156502ms)
  I1207 13:56:05.794034 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.036539ms)
  I1207 13:56:05.794166 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.17987ms)
  I1207 13:56:05.794783 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.907116ms)
  I1207 13:56:05.795189 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.325238ms)
  I1207 13:56:05.795187 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 6.234378ms)
  I1207 13:56:05.795468 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.573815ms)
  I1207 13:56:05.795495 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.583701ms)
  I1207 13:56:05.795700 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 6.896012ms)
  I1207 13:56:05.795832 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.985179ms)
  I1207 13:56:05.797240 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 8.272687ms)
  I1207 13:56:05.797437 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.499258ms)
  I1207 13:56:05.798762 20 proxy.go:558] (10) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 9.940566ms)
  I1207 13:56:05.803380 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.590324ms)
  I1207 13:56:05.803647 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 4.770646ms)
  I1207 13:56:05.804806 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.794564ms)
  I1207 13:56:05.804805 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.828936ms)
  I1207 13:56:05.805335 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.497916ms)
  I1207 13:56:05.805368 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 6.385314ms)
  I1207 13:56:05.805415 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 6.341254ms)
  I1207 13:56:05.806204 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.344765ms)
  I1207 13:56:05.806642 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 7.549156ms)
  I1207 13:56:05.806649 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.722379ms)
  I1207 13:56:05.807214 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 8.154782ms)
  I1207 13:56:05.807457 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 8.460899ms)
  I1207 13:56:05.807905 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.993912ms)
  I1207 13:56:05.808288 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 9.34488ms)
  I1207 13:56:05.808609 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 9.582781ms)
  I1207 13:56:05.808782 20 proxy.go:558] (11) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 9.741538ms)
  I1207 13:56:05.812060 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 3.249554ms)
  I1207 13:56:05.813753 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 4.831295ms)
  I1207 13:56:05.814160 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.25429ms)
  I1207 13:56:05.814201 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.313305ms)
  I1207 13:56:05.814214 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.144379ms)
  I1207 13:56:05.814233 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 5.147609ms)
  I1207 13:56:05.814755 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.766572ms)
  I1207 13:56:05.814756 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.718393ms)
  I1207 13:56:05.815068 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 6.064434ms)
  I1207 13:56:05.815274 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.220788ms)
  I1207 13:56:05.815512 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.659426ms)
  I1207 13:56:05.815792 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 6.842879ms)
  I1207 13:56:05.815932 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 7.062469ms)
  I1207 13:56:05.816972 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.953695ms)
  I1207 13:56:05.817336 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.401207ms)
  I1207 13:56:05.818339 20 proxy.go:558] (12) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 9.368816ms)
  I1207 13:56:05.822865 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.452131ms)
  I1207 13:56:05.823187 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.756335ms)
  I1207 13:56:05.823563 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.094911ms)
  I1207 13:56:05.823903 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.531467ms)
  I1207 13:56:05.823911 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 5.359745ms)
  I1207 13:56:05.824981 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.351545ms)
  I1207 13:56:05.824981 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.496388ms)
  I1207 13:56:05.825306 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.73999ms)
  I1207 13:56:05.825503 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.058585ms)
  I1207 13:56:05.825935 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 7.559541ms)
  I1207 13:56:05.826385 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.770526ms)
  I1207 13:56:05.826402 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.888225ms)
  I1207 13:56:05.826581 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 7.998569ms)
  I1207 13:56:05.827061 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 8.461216ms)
  I1207 13:56:05.827072 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 8.573485ms)
  I1207 13:56:05.827867 20 proxy.go:558] (13) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 9.337814ms)
  I1207 13:56:05.831035 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 3.134369ms)
  I1207 13:56:05.831720 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 3.761239ms)
  I1207 13:56:05.832991 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.752846ms)
  I1207 13:56:05.833328 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.119376ms)
  I1207 13:56:05.833328 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.177504ms)
  I1207 13:56:05.833532 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 5.437012ms)
  I1207 13:56:05.833575 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.408161ms)
  I1207 13:56:05.833720 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 5.699329ms)
  I1207 13:56:05.833988 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.802077ms)
  I1207 13:56:05.834246 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.022995ms)
  I1207 13:56:05.834934 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.944319ms)
  I1207 13:56:05.835106 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.044274ms)
  I1207 13:56:05.835301 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 7.258757ms)
  I1207 13:56:05.835462 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.331357ms)
  I1207 13:56:05.836137 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 8.05725ms)
  I1207 13:56:05.836300 20 proxy.go:558] (14) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 8.187074ms)
  I1207 13:56:05.840545 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 4.081823ms)
  I1207 13:56:05.840756 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 4.433276ms)
  I1207 13:56:05.840852 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 4.412523ms)
  I1207 13:56:05.841381 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.820143ms)
  I1207 13:56:05.841457 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.964964ms)
  I1207 13:56:05.842087 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 5.478366ms)
  I1207 13:56:05.842644 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.097453ms)
  I1207 13:56:05.842652 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.124129ms)
  I1207 13:56:05.842803 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.230068ms)
  I1207 13:56:05.842892 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 6.253018ms)
  I1207 13:56:05.842898 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 6.559672ms)
  I1207 13:56:05.843432 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.95486ms)
  I1207 13:56:05.843814 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 7.220038ms)
  I1207 13:56:05.844084 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.575069ms)
  I1207 13:56:05.844398 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.774724ms)
  I1207 13:56:05.845125 20 proxy.go:558] (15) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 8.718702ms)
  I1207 13:56:05.848669 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 3.44326ms)
  I1207 13:56:05.848957 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 3.781432ms)
  I1207 13:56:05.850038 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.644351ms)
  I1207 13:56:05.850038 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.783631ms)
  I1207 13:56:05.850597 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 5.218137ms)
  I1207 13:56:05.850615 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.30135ms)
  I1207 13:56:05.851141 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.811908ms)
  I1207 13:56:05.851619 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.430573ms)
  I1207 13:56:05.851799 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.530384ms)
  I1207 13:56:05.852183 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.763002ms)
  I1207 13:56:05.852273 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 7.032859ms)
  I1207 13:56:05.852282 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 6.832843ms)
  I1207 13:56:05.852720 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.420514ms)
  I1207 13:56:05.853092 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 7.728907ms)
  I1207 13:56:05.853237 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 7.954585ms)
  I1207 13:56:05.854128 20 proxy.go:558] (16) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 8.692844ms)
  I1207 13:56:05.857765 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 3.595658ms)
  I1207 13:56:05.859095 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 4.64543ms)
  I1207 13:56:05.859098 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.78319ms)
  I1207 13:56:05.859159 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.876518ms)
  I1207 13:56:05.859318 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 4.921164ms)
  I1207 13:56:05.859334 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 4.919886ms)
  I1207 13:56:05.859440 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.110779ms)
  I1207 13:56:05.860310 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 6.081636ms)
  I1207 13:56:05.860597 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 6.4028ms)
  I1207 13:56:05.860597 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.298823ms)
  I1207 13:56:05.860610 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 6.179529ms)
  I1207 13:56:05.860721 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 6.456887ms)
  I1207 13:56:05.861341 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.189927ms)
  I1207 13:56:05.861786 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 7.406635ms)
  I1207 13:56:05.861997 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 7.634246ms)
  I1207 13:56:05.862250 20 proxy.go:558] (17) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 8.00322ms)
  I1207 13:56:05.865911 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 3.597463ms)
  I1207 13:56:05.866969 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 4.500595ms)
  I1207 13:56:05.866992 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 4.541473ms)
  I1207 13:56:05.867000 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 4.463723ms)
  I1207 13:56:05.868198 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 5.685002ms)
  I1207 13:56:05.868216 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.735075ms)
  I1207 13:56:05.868222 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 5.88448ms)
  I1207 13:56:05.868503 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 5.89975ms)
  I1207 13:56:05.868587 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 6.178326ms)
  I1207 13:56:05.868915 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.419678ms)
  I1207 13:56:05.869101 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.510769ms)
  I1207 13:56:05.869103 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 6.815293ms)
  I1207 13:56:05.869209 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 6.773808ms)
  I1207 13:56:05.869698 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 7.127877ms)
  I1207 13:56:05.870040 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.487136ms)
  I1207 13:56:05.870489 20 proxy.go:558] (18) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 8.100938ms)
  I1207 13:56:05.874907 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks/proxy/rewriteme">test</a> (200; 4.264627ms)
  I1207 13:56:05.874950 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:160/proxy/: foo (200; 4.276438ms)
  I1207 13:56:05.876502 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:1080/proxy/rewriteme">test<... (200; 5.749781ms)
  I1207 13:56:05.876501 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:443/proxy/tlsrewritem... (200; 5.736821ms)
  I1207 13:56:05.876641 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/: <a href="/api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:1080/proxy/rewriteme">... (200; 5.82921ms)
  I1207 13:56:05.876801 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname1/proxy/: foo (200; 6.283578ms)
  I1207 13:56:05.876805 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/http:proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.0088ms)
  I1207 13:56:05.876818 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:160/proxy/: foo (200; 6.163736ms)
  I1207 13:56:05.876941 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:460/proxy/: tls baz (200; 6.234654ms)
  I1207 13:56:05.876955 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/proxy-service-46vns-d6cks:162/proxy/: bar (200; 6.264215ms)
  I1207 13:56:05.877047 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/pods/https:proxy-service-46vns-d6cks:462/proxy/: tls qux (200; 6.268849ms)
  I1207 13:56:05.877963 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname1/proxy/: foo (200; 7.39436ms)
  I1207 13:56:05.877985 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/services/http:proxy-service-46vns:portname2/proxy/: bar (200; 7.398551ms)
  I1207 13:56:05.878272 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/services/proxy-service-46vns:portname2/proxy/: bar (200; 7.549977ms)
  I1207 13:56:05.879020 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname2/proxy/: tls qux (200; 8.400615ms)
  I1207 13:56:05.879174 20 proxy.go:558] (19) /api/v1/namespaces/proxy-5959/services/https:proxy-service-46vns:tlsportname1/proxy/: tls baz (200; 8.437398ms)
  STEP: deleting ReplicationController proxy-service-46vns in namespace proxy-5959, will wait for the garbage collector to delete the pods @ 12/07/24 13:56:05.879
  I1207 13:56:05.942314 20 resources.go:139] Deleting ReplicationController proxy-service-46vns took: 9.618137ms
  I1207 13:56:06.043004 20 resources.go:163] Terminating ReplicationController proxy-service-46vns pods took: 100.686493ms
  E1207 13:56:06.218495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:07.218801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:08.219094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:08.343585 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5959" for this suite. @ 12/07/24 13:56:08.348
• [4.769 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/07/24 13:56:08.357
  I1207 13:56:08.357449 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename projected @ 12/07/24 13:56:08.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:56:08.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:56:08.38
  STEP: Creating secret with name projected-secret-test-ec05346c-f3b8-4e64-9de9-4a8f398300fd @ 12/07/24 13:56:08.382
  STEP: Creating a pod to test consume secrets @ 12/07/24 13:56:08.387
  E1207 13:56:09.219714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:10.219804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:56:10.404
  I1207 13:56:10.408104 20 output.go:196] Trying to get logs from node ip-172-31-64-144 pod pod-projected-secrets-12be2439-e333-41f8-bb1a-1679aa060095 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/07/24 13:56:10.426
  I1207 13:56:10.446917 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2548" for this suite. @ 12/07/24 13:56:10.45
• [2.101 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/07/24 13:56:10.458
  I1207 13:56:10.458395 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename sysctl @ 12/07/24 13:56:10.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:56:10.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:56:10.481
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/07/24 13:56:10.483
  I1207 13:56:10.488087 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4345" for this suite. @ 12/07/24 13:56:10.492
• [0.043 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/07/24 13:56:10.501
  I1207 13:56:10.501651 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename statefulset @ 12/07/24 13:56:10.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:56:10.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:56:10.524
  STEP: Creating service test in namespace statefulset-8297 @ 12/07/24 13:56:10.526
  STEP: Creating statefulset ss in namespace statefulset-8297 @ 12/07/24 13:56:10.53
  I1207 13:56:10.541211 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1207 13:56:11.219907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:12.220597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:13.221498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:14.221611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:15.221742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:16.221977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:17.222212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:18.222631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:19.223442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:20.223483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:20.541758 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/07/24 13:56:20.55
  STEP: updating a scale subresource @ 12/07/24 13:56:20.553
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/07/24 13:56:20.559
  STEP: Patch a scale subresource @ 12/07/24 13:56:20.563
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/07/24 13:56:20.57
  I1207 13:56:20.576254 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8297
  I1207 13:56:20.579797 20 rest.go:150] Scaling statefulset ss to 0
  E1207 13:56:21.223603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:22.223698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:23.224553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:24.224629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:25.224847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:26.224970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:27.225576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:28.226474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:29.226656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:30.226792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1207 13:56:30.595781 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1207 13:56:30.600097 20 rest.go:88] Deleting statefulset ss
  I1207 13:56:30.614395 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8297" for this suite. @ 12/07/24 13:56:30.617
• [20.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/07/24 13:56:30.626
  I1207 13:56:30.626362 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1894602078
  STEP: Building a namespace api object, basename var-expansion @ 12/07/24 13:56:30.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/07/24 13:56:30.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/07/24 13:56:30.646
  STEP: Creating a pod to test substitution in container's args @ 12/07/24 13:56:30.649
  E1207 13:56:31.226933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:32.227025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:33.227938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1207 13:56:34.228592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/07/24 13:56:34.674
  I1207 13:56:34.678400 20 output.go:196] Trying to get logs from node ip-172-31-9-19 pod var-expansion-965804a1-8bc3-45a9-8e2f-98def619b346 container dapi-container: <nil>
  STEP: delete the pod @ 12/07/24 13:56:34.685
  I1207 13:56:34.705529 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5166" for this suite. @ 12/07/24 13:56:34.71
• [4.094 seconds]
------------------------------
SS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1207 13:56:34.720161 20 suites.go:34] Running AfterSuite actions on node 1
  I1207 13:56:34.720175 20 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.029 seconds]
------------------------------

Ran 404 of 6605 Specs in 6171.517 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h42m52.321533124s
Test Suite Passed
