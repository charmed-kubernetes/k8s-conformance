  I1019 12:05:13.191591      20 e2e.go:109] Starting e2e run "5399414b-5582-40e4-9a58-391ee53a2143" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1729339512 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1019 12:05:13.418475 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:05:13.420521 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1019 12:05:13.459469 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1019 12:05:13.463899 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1019 12:05:13.464092 20 e2e.go:245] e2e test version: v1.31.1
  I1019 12:05:13.464931 20 e2e.go:254] kube-apiserver version: v1.31.1
  I1019 12:05:13.465160 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:05:13.471726 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.053 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 10/19/24 12:05:13.695
  I1019 12:05:13.695724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pod-network-test @ 10/19/24 12:05:13.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:05:13.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:05:13.724
  STEP: Performing setup for networking test in namespace pod-network-test-3217 @ 10/19/24 12:05:13.726
  STEP: creating a selector @ 10/19/24 12:05:13.726
  STEP: Creating the service pods in kubernetes @ 10/19/24 12:05:13.726
  I1019 12:05:13.726363 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/19/24 12:05:35.855
  I1019 12:05:37.880025 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1019 12:05:37.880058 20 networking.go:42] Breadth first check of 192.168.243.134 on host 172.31.22.96...
  I1019 12:05:37.883758 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.73.67:9080/dial?request=hostname&protocol=udp&host=192.168.243.134&port=8081&tries=1'] Namespace:pod-network-test-3217 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:05:37.883786 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:05:37.884258 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:05:37.884307 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3217/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.73.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.243.134%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1019 12:05:37.934862 20 utils.go:356] Waiting for responses: map[]
  I1019 12:05:37.934892 20 utils.go:360] reached 192.168.243.134 after 0/1 tries
  I1019 12:05:37.934900 20 networking.go:42] Breadth first check of 192.168.21.194 on host 172.31.3.204...
  I1019 12:05:37.940249 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.73.67:9080/dial?request=hostname&protocol=udp&host=192.168.21.194&port=8081&tries=1'] Namespace:pod-network-test-3217 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:05:37.940272 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:05:37.940708 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:05:37.940752 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3217/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.73.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.21.194%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1019 12:05:37.978795 20 utils.go:356] Waiting for responses: map[]
  I1019 12:05:37.978867 20 utils.go:360] reached 192.168.21.194 after 0/1 tries
  I1019 12:05:37.978877 20 networking.go:42] Breadth first check of 192.168.73.66 on host 172.31.84.96...
  I1019 12:05:37.983757 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.73.67:9080/dial?request=hostname&protocol=udp&host=192.168.73.66&port=8081&tries=1'] Namespace:pod-network-test-3217 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:05:37.983777 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:05:37.984227 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:05:37.984270 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3217/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.73.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.73.66%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1019 12:05:38.020182 20 utils.go:356] Waiting for responses: map[]
  I1019 12:05:38.020214 20 utils.go:360] reached 192.168.73.66 after 0/1 tries
  I1019 12:05:38.020223 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1019 12:05:38.020317 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3217" for this suite. @ 10/19/24 12:05:38.024
â€¢ [24.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/19/24 12:05:38.032
  I1019 12:05:38.032851 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svc-latency @ 10/19/24 12:05:38.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:05:38.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:05:38.055
  I1019 12:05:38.057549 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4352 @ 10/19/24 12:05:38.058
  I1019 12:05:38.066692      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4352, replica count: 1
  I1019 12:05:39.117218      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:05:40.118167      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:05:40.232579 20 service_latency.go:356] Created: latency-svc-7f2qx
  I1019 12:05:40.240650 20 service_latency.go:363] Got endpoints: latency-svc-7f2qx [22.349878ms]
  I1019 12:05:40.262046 20 service_latency.go:356] Created: latency-svc-7zp72
  I1019 12:05:40.264851 20 service_latency.go:356] Created: latency-svc-gvs5m
  I1019 12:05:40.266535 20 service_latency.go:363] Got endpoints: latency-svc-7zp72 [25.734294ms]
  I1019 12:05:40.272387 20 service_latency.go:363] Got endpoints: latency-svc-gvs5m [31.322849ms]
  I1019 12:05:40.275177 20 service_latency.go:356] Created: latency-svc-f2tpv
  I1019 12:05:40.282261 20 service_latency.go:356] Created: latency-svc-4j4tg
  I1019 12:05:40.282568 20 service_latency.go:363] Got endpoints: latency-svc-f2tpv [41.445387ms]
  I1019 12:05:40.290534 20 service_latency.go:363] Got endpoints: latency-svc-4j4tg [49.544514ms]
  I1019 12:05:40.291616 20 service_latency.go:356] Created: latency-svc-75xnd
  I1019 12:05:40.296260 20 service_latency.go:363] Got endpoints: latency-svc-75xnd [54.857416ms]
  I1019 12:05:40.299581 20 service_latency.go:356] Created: latency-svc-wd7xw
  I1019 12:05:40.304759 20 service_latency.go:356] Created: latency-svc-b9rcf
  I1019 12:05:40.305053 20 service_latency.go:363] Got endpoints: latency-svc-wd7xw [63.526971ms]
  I1019 12:05:40.312718 20 service_latency.go:363] Got endpoints: latency-svc-b9rcf [71.102285ms]
  I1019 12:05:40.315476 20 service_latency.go:356] Created: latency-svc-ks4fb
  I1019 12:05:40.319367 20 service_latency.go:363] Got endpoints: latency-svc-ks4fb [77.581472ms]
  I1019 12:05:40.324878 20 service_latency.go:356] Created: latency-svc-rjwsc
  I1019 12:05:40.329313 20 service_latency.go:363] Got endpoints: latency-svc-rjwsc [87.373386ms]
  I1019 12:05:40.331230 20 service_latency.go:356] Created: latency-svc-9cw9v
  I1019 12:05:40.339768 20 service_latency.go:356] Created: latency-svc-wzrlp
  I1019 12:05:40.340092 20 service_latency.go:363] Got endpoints: latency-svc-9cw9v [98.392774ms]
  I1019 12:05:40.346973 20 service_latency.go:363] Got endpoints: latency-svc-wzrlp [105.10098ms]
  I1019 12:05:40.348792 20 service_latency.go:356] Created: latency-svc-6wddq
  I1019 12:05:40.356802 20 service_latency.go:363] Got endpoints: latency-svc-6wddq [114.650096ms]
  I1019 12:05:40.359102 20 service_latency.go:356] Created: latency-svc-8mh44
  I1019 12:05:40.364731 20 service_latency.go:363] Got endpoints: latency-svc-8mh44 [122.47489ms]
  I1019 12:05:40.369665 20 service_latency.go:356] Created: latency-svc-vfnhf
  I1019 12:05:40.374714 20 service_latency.go:363] Got endpoints: latency-svc-vfnhf [132.477565ms]
  I1019 12:05:40.377633 20 service_latency.go:356] Created: latency-svc-n6x66
  I1019 12:05:40.385796 20 service_latency.go:356] Created: latency-svc-6s682
  I1019 12:05:40.388619 20 service_latency.go:363] Got endpoints: latency-svc-n6x66 [146.600261ms]
  I1019 12:05:40.392896 20 service_latency.go:363] Got endpoints: latency-svc-6s682 [126.33358ms]
  I1019 12:05:40.396468 20 service_latency.go:356] Created: latency-svc-nx9w4
  I1019 12:05:40.401396 20 service_latency.go:363] Got endpoints: latency-svc-nx9w4 [128.965223ms]
  I1019 12:05:40.501241 20 service_latency.go:356] Created: latency-svc-44rqw
  I1019 12:05:40.502751 20 service_latency.go:356] Created: latency-svc-g5fgz
  I1019 12:05:40.507347 20 service_latency.go:356] Created: latency-svc-vc44b
  I1019 12:05:40.507401 20 service_latency.go:356] Created: latency-svc-2p68h
  I1019 12:05:40.507457 20 service_latency.go:356] Created: latency-svc-cl89h
  I1019 12:05:40.507539 20 service_latency.go:356] Created: latency-svc-tpg4f
  I1019 12:05:40.507564 20 service_latency.go:356] Created: latency-svc-88hgx
  I1019 12:05:40.508233 20 service_latency.go:356] Created: latency-svc-g2678
  I1019 12:05:40.509072 20 service_latency.go:356] Created: latency-svc-mwbfh
  I1019 12:05:40.509597 20 service_latency.go:356] Created: latency-svc-p4ncx
  I1019 12:05:40.509695 20 service_latency.go:356] Created: latency-svc-9xq64
  I1019 12:05:40.509741 20 service_latency.go:356] Created: latency-svc-fdkhk
  I1019 12:05:40.509759 20 service_latency.go:356] Created: latency-svc-jplzp
  I1019 12:05:40.509816 20 service_latency.go:356] Created: latency-svc-lslj5
  I1019 12:05:40.509817 20 service_latency.go:356] Created: latency-svc-n578v
  I1019 12:05:40.519383 20 service_latency.go:363] Got endpoints: latency-svc-44rqw [154.62019ms]
  I1019 12:05:40.520640 20 service_latency.go:363] Got endpoints: latency-svc-lslj5 [131.992965ms]
  I1019 12:05:40.520904 20 service_latency.go:363] Got endpoints: latency-svc-g5fgz [201.516242ms]
  I1019 12:05:40.524254 20 service_latency.go:363] Got endpoints: latency-svc-n578v [241.663057ms]
  I1019 12:05:40.526747 20 service_latency.go:363] Got endpoints: latency-svc-mwbfh [169.904198ms]
  I1019 12:05:40.527973 20 service_latency.go:363] Got endpoints: latency-svc-tpg4f [126.555402ms]
  I1019 12:05:40.529212 20 service_latency.go:363] Got endpoints: latency-svc-p4ncx [224.125424ms]
  I1019 12:05:40.531939 20 service_latency.go:363] Got endpoints: latency-svc-g2678 [157.196698ms]
  I1019 12:05:40.535489 20 service_latency.go:363] Got endpoints: latency-svc-9xq64 [244.92688ms]
  I1019 12:05:40.540081 20 service_latency.go:363] Got endpoints: latency-svc-2p68h [243.797099ms]
  I1019 12:05:40.541796 20 service_latency.go:363] Got endpoints: latency-svc-vc44b [229.048059ms]
  I1019 12:05:40.541912 20 service_latency.go:356] Created: latency-svc-bnrb5
  I1019 12:05:40.546387 20 service_latency.go:363] Got endpoints: latency-svc-fdkhk [217.050462ms]
  I1019 12:05:40.548598 20 service_latency.go:363] Got endpoints: latency-svc-88hgx [201.599413ms]
  I1019 12:05:40.548604 20 service_latency.go:363] Got endpoints: latency-svc-jplzp [155.687672ms]
  I1019 12:05:40.550031 20 service_latency.go:363] Got endpoints: latency-svc-bnrb5 [30.622243ms]
  I1019 12:05:40.553588 20 service_latency.go:363] Got endpoints: latency-svc-cl89h [213.471659ms]
  I1019 12:05:40.647527 20 service_latency.go:356] Created: latency-svc-6f8hd
  I1019 12:05:40.649144 20 service_latency.go:356] Created: latency-svc-fhx66
  I1019 12:05:40.651334 20 service_latency.go:356] Created: latency-svc-kmq7p
  I1019 12:05:40.651984 20 service_latency.go:356] Created: latency-svc-lzmbl
  I1019 12:05:40.651984 20 service_latency.go:356] Created: latency-svc-ggb4c
  I1019 12:05:40.658457 20 service_latency.go:356] Created: latency-svc-lf22b
  I1019 12:05:40.658544 20 service_latency.go:356] Created: latency-svc-tf28g
  I1019 12:05:40.658541 20 service_latency.go:356] Created: latency-svc-bnxsf
  I1019 12:05:40.658696 20 service_latency.go:356] Created: latency-svc-x6nd8
  I1019 12:05:40.659314 20 service_latency.go:356] Created: latency-svc-qtpwp
  I1019 12:05:40.659323 20 service_latency.go:363] Got endpoints: latency-svc-6f8hd [138.658602ms]
  I1019 12:05:40.660234 20 service_latency.go:356] Created: latency-svc-wxxfz
  I1019 12:05:40.660272 20 service_latency.go:356] Created: latency-svc-t52gw
  I1019 12:05:40.660755 20 service_latency.go:356] Created: latency-svc-76rfg
  I1019 12:05:40.660883 20 service_latency.go:356] Created: latency-svc-4mfp6
  I1019 12:05:40.660933 20 service_latency.go:356] Created: latency-svc-zh2pr
  I1019 12:05:40.663032 20 service_latency.go:363] Got endpoints: latency-svc-fhx66 [133.793693ms]
  I1019 12:05:40.672815 20 service_latency.go:363] Got endpoints: latency-svc-kmq7p [148.533657ms]
  I1019 12:05:40.676260 20 service_latency.go:363] Got endpoints: latency-svc-ggb4c [134.437156ms]
  I1019 12:05:40.676561 20 service_latency.go:356] Created: latency-svc-xls2v
  I1019 12:05:40.682538 20 service_latency.go:356] Created: latency-svc-9xvsm
  I1019 12:05:40.686774 20 service_latency.go:363] Got endpoints: latency-svc-lzmbl [158.773515ms]
  I1019 12:05:40.691575 20 service_latency.go:356] Created: latency-svc-wfz4m
  I1019 12:05:40.699884 20 service_latency.go:356] Created: latency-svc-vwdcf
  I1019 12:05:40.706698 20 service_latency.go:356] Created: latency-svc-xdvk8
  I1019 12:05:40.739323 20 service_latency.go:363] Got endpoints: latency-svc-zh2pr [218.394907ms]
  I1019 12:05:40.753060 20 service_latency.go:356] Created: latency-svc-bdvfz
  I1019 12:05:40.789732 20 service_latency.go:363] Got endpoints: latency-svc-76rfg [254.198325ms]
  I1019 12:05:40.804236 20 service_latency.go:356] Created: latency-svc-2rcfx
  I1019 12:05:40.839597 20 service_latency.go:363] Got endpoints: latency-svc-4mfp6 [312.820521ms]
  I1019 12:05:40.851788 20 service_latency.go:356] Created: latency-svc-gxt2q
  I1019 12:05:40.891498 20 service_latency.go:363] Got endpoints: latency-svc-wxxfz [341.434167ms]
  I1019 12:05:40.904173 20 service_latency.go:356] Created: latency-svc-bngkd
  I1019 12:05:40.941503 20 service_latency.go:363] Got endpoints: latency-svc-qtpwp [395.082588ms]
  I1019 12:05:40.954276 20 service_latency.go:356] Created: latency-svc-vprjh
  I1019 12:05:40.989620 20 service_latency.go:363] Got endpoints: latency-svc-bnxsf [440.989374ms]
  I1019 12:05:41.001358 20 service_latency.go:356] Created: latency-svc-tk7cq
  I1019 12:05:41.039601 20 service_latency.go:363] Got endpoints: latency-svc-x6nd8 [499.486198ms]
  I1019 12:05:41.055955 20 service_latency.go:356] Created: latency-svc-4652n
  I1019 12:05:41.088754 20 service_latency.go:363] Got endpoints: latency-svc-lf22b [535.128451ms]
  I1019 12:05:41.103786 20 service_latency.go:356] Created: latency-svc-8wcnc
  I1019 12:05:41.140713 20 service_latency.go:363] Got endpoints: latency-svc-tf28g [592.060374ms]
  I1019 12:05:41.152761 20 service_latency.go:356] Created: latency-svc-sg2zs
  I1019 12:05:41.189222 20 service_latency.go:363] Got endpoints: latency-svc-t52gw [657.252955ms]
  I1019 12:05:41.204029 20 service_latency.go:356] Created: latency-svc-zrcm8
  I1019 12:05:41.237838 20 service_latency.go:363] Got endpoints: latency-svc-xls2v [578.490369ms]
  I1019 12:05:41.253840 20 service_latency.go:356] Created: latency-svc-9gl4m
  I1019 12:05:41.288500 20 service_latency.go:363] Got endpoints: latency-svc-9xvsm [625.438895ms]
  I1019 12:05:41.302984 20 service_latency.go:356] Created: latency-svc-kf2f2
  I1019 12:05:41.339302 20 service_latency.go:363] Got endpoints: latency-svc-wfz4m [666.441837ms]
  I1019 12:05:41.353169 20 service_latency.go:356] Created: latency-svc-zpx7l
  I1019 12:05:41.390670 20 service_latency.go:363] Got endpoints: latency-svc-vwdcf [714.350221ms]
  I1019 12:05:41.404297 20 service_latency.go:356] Created: latency-svc-bpw6c
  I1019 12:05:41.440072 20 service_latency.go:363] Got endpoints: latency-svc-xdvk8 [753.26807ms]
  I1019 12:05:41.451693 20 service_latency.go:356] Created: latency-svc-lhvgq
  I1019 12:05:41.492073 20 service_latency.go:363] Got endpoints: latency-svc-bdvfz [752.704923ms]
  I1019 12:05:41.506017 20 service_latency.go:356] Created: latency-svc-8hvvj
  I1019 12:05:41.538987 20 service_latency.go:363] Got endpoints: latency-svc-2rcfx [749.210292ms]
  I1019 12:05:41.551391 20 service_latency.go:356] Created: latency-svc-vbcb8
  I1019 12:05:41.588056 20 service_latency.go:363] Got endpoints: latency-svc-gxt2q [748.419672ms]
  I1019 12:05:41.600442 20 service_latency.go:356] Created: latency-svc-s7dgt
  I1019 12:05:41.639951 20 service_latency.go:363] Got endpoints: latency-svc-bngkd [748.407205ms]
  I1019 12:05:41.652915 20 service_latency.go:356] Created: latency-svc-gd8pb
  I1019 12:05:41.691560 20 service_latency.go:363] Got endpoints: latency-svc-vprjh [750.006723ms]
  I1019 12:05:41.704941 20 service_latency.go:356] Created: latency-svc-fgwqq
  I1019 12:05:41.738177 20 service_latency.go:363] Got endpoints: latency-svc-tk7cq [748.510395ms]
  I1019 12:05:41.752513 20 service_latency.go:356] Created: latency-svc-q7pc6
  I1019 12:05:41.789496 20 service_latency.go:363] Got endpoints: latency-svc-4652n [749.822608ms]
  I1019 12:05:41.812535 20 service_latency.go:356] Created: latency-svc-hjpnj
  I1019 12:05:41.844473 20 service_latency.go:363] Got endpoints: latency-svc-8wcnc [755.533599ms]
  I1019 12:05:41.858026 20 service_latency.go:356] Created: latency-svc-6gw94
  I1019 12:05:41.891208 20 service_latency.go:363] Got endpoints: latency-svc-sg2zs [750.44562ms]
  I1019 12:05:41.903692 20 service_latency.go:356] Created: latency-svc-65jp4
  I1019 12:05:41.941107 20 service_latency.go:363] Got endpoints: latency-svc-zrcm8 [751.842941ms]
  I1019 12:05:41.955258 20 service_latency.go:356] Created: latency-svc-hfms7
  I1019 12:05:41.989006 20 service_latency.go:363] Got endpoints: latency-svc-9gl4m [751.115144ms]
  I1019 12:05:42.003402 20 service_latency.go:356] Created: latency-svc-9zvxh
  I1019 12:05:42.039190 20 service_latency.go:363] Got endpoints: latency-svc-kf2f2 [750.412979ms]
  I1019 12:05:42.051187 20 service_latency.go:356] Created: latency-svc-jbtp4
  I1019 12:05:42.090571 20 service_latency.go:363] Got endpoints: latency-svc-zpx7l [751.225513ms]
  I1019 12:05:42.103285 20 service_latency.go:356] Created: latency-svc-vbw6d
  I1019 12:05:42.141180 20 service_latency.go:363] Got endpoints: latency-svc-bpw6c [750.454304ms]
  I1019 12:05:42.154941 20 service_latency.go:356] Created: latency-svc-lk8pr
  I1019 12:05:42.188923 20 service_latency.go:363] Got endpoints: latency-svc-lhvgq [748.810855ms]
  I1019 12:05:42.202668 20 service_latency.go:356] Created: latency-svc-xktrh
  I1019 12:05:42.242047 20 service_latency.go:363] Got endpoints: latency-svc-8hvvj [749.532189ms]
  I1019 12:05:42.257301 20 service_latency.go:356] Created: latency-svc-np857
  I1019 12:05:42.289808 20 service_latency.go:363] Got endpoints: latency-svc-vbcb8 [750.771502ms]
  I1019 12:05:42.302106 20 service_latency.go:356] Created: latency-svc-bn58m
  I1019 12:05:42.339754 20 service_latency.go:363] Got endpoints: latency-svc-s7dgt [751.657293ms]
  I1019 12:05:42.351527 20 service_latency.go:356] Created: latency-svc-ptqjr
  I1019 12:05:42.391053 20 service_latency.go:363] Got endpoints: latency-svc-gd8pb [751.063308ms]
  I1019 12:05:42.404025 20 service_latency.go:356] Created: latency-svc-9z2fd
  I1019 12:05:42.438341 20 service_latency.go:363] Got endpoints: latency-svc-fgwqq [746.657031ms]
  I1019 12:05:42.453323 20 service_latency.go:356] Created: latency-svc-8zxwq
  I1019 12:05:42.488918 20 service_latency.go:363] Got endpoints: latency-svc-q7pc6 [750.705975ms]
  I1019 12:05:42.500824 20 service_latency.go:356] Created: latency-svc-29xsc
  I1019 12:05:42.540352 20 service_latency.go:363] Got endpoints: latency-svc-hjpnj [750.807644ms]
  I1019 12:05:42.552836 20 service_latency.go:356] Created: latency-svc-j9m72
  I1019 12:05:42.591212 20 service_latency.go:363] Got endpoints: latency-svc-6gw94 [746.369524ms]
  I1019 12:05:42.604498 20 service_latency.go:356] Created: latency-svc-f4658
  I1019 12:05:42.638150 20 service_latency.go:363] Got endpoints: latency-svc-65jp4 [746.883204ms]
  I1019 12:05:42.654414 20 service_latency.go:356] Created: latency-svc-krnqq
  I1019 12:05:42.689432 20 service_latency.go:363] Got endpoints: latency-svc-hfms7 [748.257524ms]
  I1019 12:05:42.702816 20 service_latency.go:356] Created: latency-svc-7nmf7
  I1019 12:05:42.742473 20 service_latency.go:363] Got endpoints: latency-svc-9zvxh [753.421541ms]
  I1019 12:05:42.754593 20 service_latency.go:356] Created: latency-svc-fpxlw
  I1019 12:05:42.789484 20 service_latency.go:363] Got endpoints: latency-svc-jbtp4 [750.258452ms]
  I1019 12:05:42.802563 20 service_latency.go:356] Created: latency-svc-z94g8
  I1019 12:05:42.838465 20 service_latency.go:363] Got endpoints: latency-svc-vbw6d [747.858432ms]
  I1019 12:05:42.850914 20 service_latency.go:356] Created: latency-svc-c5scr
  I1019 12:05:42.889067 20 service_latency.go:363] Got endpoints: latency-svc-lk8pr [747.849843ms]
  I1019 12:05:42.904061 20 service_latency.go:356] Created: latency-svc-5bkg7
  I1019 12:05:42.938368 20 service_latency.go:363] Got endpoints: latency-svc-xktrh [749.413168ms]
  I1019 12:05:42.949676 20 service_latency.go:356] Created: latency-svc-hb7cf
  I1019 12:05:42.991148 20 service_latency.go:363] Got endpoints: latency-svc-np857 [749.042062ms]
  I1019 12:05:43.003333 20 service_latency.go:356] Created: latency-svc-f4l4t
  I1019 12:05:43.040855 20 service_latency.go:363] Got endpoints: latency-svc-bn58m [751.01177ms]
  I1019 12:05:43.052564 20 service_latency.go:356] Created: latency-svc-x9lcs
  I1019 12:05:43.090395 20 service_latency.go:363] Got endpoints: latency-svc-ptqjr [750.584894ms]
  I1019 12:05:43.102943 20 service_latency.go:356] Created: latency-svc-6cqpn
  I1019 12:05:43.140751 20 service_latency.go:363] Got endpoints: latency-svc-9z2fd [749.586626ms]
  I1019 12:05:43.153098 20 service_latency.go:356] Created: latency-svc-m277v
  I1019 12:05:43.190184 20 service_latency.go:363] Got endpoints: latency-svc-8zxwq [751.804968ms]
  I1019 12:05:43.202705 20 service_latency.go:356] Created: latency-svc-c9rns
  I1019 12:05:43.238169 20 service_latency.go:363] Got endpoints: latency-svc-29xsc [749.209924ms]
  I1019 12:05:43.252313 20 service_latency.go:356] Created: latency-svc-2k22n
  I1019 12:05:43.288274 20 service_latency.go:363] Got endpoints: latency-svc-j9m72 [747.877848ms]
  I1019 12:05:43.302387 20 service_latency.go:356] Created: latency-svc-l269d
  I1019 12:05:43.338541 20 service_latency.go:363] Got endpoints: latency-svc-f4658 [747.278617ms]
  I1019 12:05:43.351736 20 service_latency.go:356] Created: latency-svc-fjtqh
  I1019 12:05:43.390225 20 service_latency.go:363] Got endpoints: latency-svc-krnqq [752.03059ms]
  I1019 12:05:43.402440 20 service_latency.go:356] Created: latency-svc-ndr4t
  I1019 12:05:43.441530 20 service_latency.go:363] Got endpoints: latency-svc-7nmf7 [752.049324ms]
  I1019 12:05:43.453199 20 service_latency.go:356] Created: latency-svc-r4xb9
  I1019 12:05:43.489959 20 service_latency.go:363] Got endpoints: latency-svc-fpxlw [747.300239ms]
  I1019 12:05:43.502368 20 service_latency.go:356] Created: latency-svc-pr7ng
  I1019 12:05:43.538074 20 service_latency.go:363] Got endpoints: latency-svc-z94g8 [748.554522ms]
  I1019 12:05:43.552408 20 service_latency.go:356] Created: latency-svc-8l2sb
  I1019 12:05:43.588820 20 service_latency.go:363] Got endpoints: latency-svc-c5scr [750.31887ms]
  I1019 12:05:43.601476 20 service_latency.go:356] Created: latency-svc-s9hzq
  I1019 12:05:43.640402 20 service_latency.go:363] Got endpoints: latency-svc-5bkg7 [751.272512ms]
  I1019 12:05:43.651580 20 service_latency.go:356] Created: latency-svc-8q2jt
  I1019 12:05:43.690385 20 service_latency.go:363] Got endpoints: latency-svc-hb7cf [751.987303ms]
  I1019 12:05:43.702385 20 service_latency.go:356] Created: latency-svc-zft5t
  I1019 12:05:43.739346 20 service_latency.go:363] Got endpoints: latency-svc-f4l4t [748.144303ms]
  I1019 12:05:43.751936 20 service_latency.go:356] Created: latency-svc-mxghc
  I1019 12:05:43.787232 20 service_latency.go:363] Got endpoints: latency-svc-x9lcs [746.337171ms]
  I1019 12:05:43.799736 20 service_latency.go:356] Created: latency-svc-jzcml
  I1019 12:05:43.840160 20 service_latency.go:363] Got endpoints: latency-svc-6cqpn [749.730159ms]
  I1019 12:05:43.852395 20 service_latency.go:356] Created: latency-svc-j2d9c
  I1019 12:05:43.889529 20 service_latency.go:363] Got endpoints: latency-svc-m277v [748.731122ms]
  I1019 12:05:43.902208 20 service_latency.go:356] Created: latency-svc-8x77q
  I1019 12:05:43.938224 20 service_latency.go:363] Got endpoints: latency-svc-c9rns [748.002868ms]
  I1019 12:05:43.953192 20 service_latency.go:356] Created: latency-svc-x9689
  I1019 12:05:43.987580 20 service_latency.go:363] Got endpoints: latency-svc-2k22n [749.364982ms]
  I1019 12:05:44.005044 20 service_latency.go:356] Created: latency-svc-xtsz8
  I1019 12:05:44.040662 20 service_latency.go:363] Got endpoints: latency-svc-l269d [752.339352ms]
  I1019 12:05:44.051985 20 service_latency.go:356] Created: latency-svc-9z645
  I1019 12:05:44.091461 20 service_latency.go:363] Got endpoints: latency-svc-fjtqh [752.851866ms]
  I1019 12:05:44.105419 20 service_latency.go:356] Created: latency-svc-lzswl
  I1019 12:05:44.138946 20 service_latency.go:363] Got endpoints: latency-svc-ndr4t [748.67458ms]
  I1019 12:05:44.153274 20 service_latency.go:356] Created: latency-svc-sbjd9
  I1019 12:05:44.191703 20 service_latency.go:363] Got endpoints: latency-svc-r4xb9 [750.132515ms]
  I1019 12:05:44.204839 20 service_latency.go:356] Created: latency-svc-7wgr5
  I1019 12:05:44.240723 20 service_latency.go:363] Got endpoints: latency-svc-pr7ng [750.723989ms]
  I1019 12:05:44.254023 20 service_latency.go:356] Created: latency-svc-zcx9l
  I1019 12:05:44.287718 20 service_latency.go:363] Got endpoints: latency-svc-8l2sb [749.595927ms]
  I1019 12:05:44.301895 20 service_latency.go:356] Created: latency-svc-gzlzk
  I1019 12:05:44.339416 20 service_latency.go:363] Got endpoints: latency-svc-s9hzq [750.561306ms]
  I1019 12:05:44.353704 20 service_latency.go:356] Created: latency-svc-pr9xf
  I1019 12:05:44.389041 20 service_latency.go:363] Got endpoints: latency-svc-8q2jt [748.592412ms]
  I1019 12:05:44.401892 20 service_latency.go:356] Created: latency-svc-jlf8j
  I1019 12:05:44.440506 20 service_latency.go:363] Got endpoints: latency-svc-zft5t [750.073187ms]
  I1019 12:05:44.452427 20 service_latency.go:356] Created: latency-svc-7rbll
  I1019 12:05:44.492785 20 service_latency.go:363] Got endpoints: latency-svc-mxghc [753.397385ms]
  I1019 12:05:44.506030 20 service_latency.go:356] Created: latency-svc-bnn4l
  I1019 12:05:44.539185 20 service_latency.go:363] Got endpoints: latency-svc-jzcml [751.908316ms]
  I1019 12:05:44.554355 20 service_latency.go:356] Created: latency-svc-7qqzf
  I1019 12:05:44.589334 20 service_latency.go:363] Got endpoints: latency-svc-j2d9c [749.139529ms]
  I1019 12:05:44.604194 20 service_latency.go:356] Created: latency-svc-t4vcn
  I1019 12:05:44.640224 20 service_latency.go:363] Got endpoints: latency-svc-8x77q [750.651511ms]
  I1019 12:05:44.652520 20 service_latency.go:356] Created: latency-svc-fcvr8
  I1019 12:05:44.692005 20 service_latency.go:363] Got endpoints: latency-svc-x9689 [753.726606ms]
  I1019 12:05:44.705795 20 service_latency.go:356] Created: latency-svc-h5scj
  I1019 12:05:44.738508 20 service_latency.go:363] Got endpoints: latency-svc-xtsz8 [750.877918ms]
  I1019 12:05:44.751803 20 service_latency.go:356] Created: latency-svc-kvnmd
  I1019 12:05:44.791195 20 service_latency.go:363] Got endpoints: latency-svc-9z645 [750.472808ms]
  I1019 12:05:44.807944 20 service_latency.go:356] Created: latency-svc-fnc7s
  I1019 12:05:44.840109 20 service_latency.go:363] Got endpoints: latency-svc-lzswl [748.602165ms]
  I1019 12:05:44.854152 20 service_latency.go:356] Created: latency-svc-j2wvp
  I1019 12:05:44.890301 20 service_latency.go:363] Got endpoints: latency-svc-sbjd9 [751.307237ms]
  I1019 12:05:44.903127 20 service_latency.go:356] Created: latency-svc-475qs
  I1019 12:05:44.938654 20 service_latency.go:363] Got endpoints: latency-svc-7wgr5 [746.908556ms]
  I1019 12:05:44.950395 20 service_latency.go:356] Created: latency-svc-fd4st
  I1019 12:05:44.990807 20 service_latency.go:363] Got endpoints: latency-svc-zcx9l [750.031777ms]
  I1019 12:05:45.004052 20 service_latency.go:356] Created: latency-svc-8gj77
  I1019 12:05:45.038426 20 service_latency.go:363] Got endpoints: latency-svc-gzlzk [750.664501ms]
  I1019 12:05:45.052815 20 service_latency.go:356] Created: latency-svc-pcvpk
  I1019 12:05:45.089223 20 service_latency.go:363] Got endpoints: latency-svc-pr9xf [749.753691ms]
  I1019 12:05:45.102525 20 service_latency.go:356] Created: latency-svc-klr7v
  I1019 12:05:45.141320 20 service_latency.go:363] Got endpoints: latency-svc-jlf8j [752.234483ms]
  I1019 12:05:45.154754 20 service_latency.go:356] Created: latency-svc-8gb45
  I1019 12:05:45.189196 20 service_latency.go:363] Got endpoints: latency-svc-7rbll [748.626153ms]
  I1019 12:05:45.203289 20 service_latency.go:356] Created: latency-svc-7645g
  I1019 12:05:45.239887 20 service_latency.go:363] Got endpoints: latency-svc-bnn4l [746.983558ms]
  I1019 12:05:45.254868 20 service_latency.go:356] Created: latency-svc-pdzjw
  I1019 12:05:45.288733 20 service_latency.go:363] Got endpoints: latency-svc-7qqzf [749.493933ms]
  I1019 12:05:45.301496 20 service_latency.go:356] Created: latency-svc-x2fkh
  I1019 12:05:45.340347 20 service_latency.go:363] Got endpoints: latency-svc-t4vcn [750.960992ms]
  I1019 12:05:45.353685 20 service_latency.go:356] Created: latency-svc-vhzbr
  I1019 12:05:45.390053 20 service_latency.go:363] Got endpoints: latency-svc-fcvr8 [749.788434ms]
  I1019 12:05:45.403392 20 service_latency.go:356] Created: latency-svc-f2b5v
  I1019 12:05:45.439252 20 service_latency.go:363] Got endpoints: latency-svc-h5scj [747.202177ms]
  I1019 12:05:45.455447 20 service_latency.go:356] Created: latency-svc-fnz4j
  I1019 12:05:45.488289 20 service_latency.go:363] Got endpoints: latency-svc-kvnmd [749.737594ms]
  I1019 12:05:45.502640 20 service_latency.go:356] Created: latency-svc-6bvth
  I1019 12:05:45.541333 20 service_latency.go:363] Got endpoints: latency-svc-fnc7s [749.898433ms]
  I1019 12:05:45.554209 20 service_latency.go:356] Created: latency-svc-fxn5q
  I1019 12:05:45.590986 20 service_latency.go:363] Got endpoints: latency-svc-j2wvp [750.070666ms]
  I1019 12:05:45.603909 20 service_latency.go:356] Created: latency-svc-g4v6l
  I1019 12:05:45.638399 20 service_latency.go:363] Got endpoints: latency-svc-475qs [747.970138ms]
  I1019 12:05:45.651320 20 service_latency.go:356] Created: latency-svc-ckkm8
  I1019 12:05:45.689371 20 service_latency.go:363] Got endpoints: latency-svc-fd4st [750.673866ms]
  I1019 12:05:45.703060 20 service_latency.go:356] Created: latency-svc-5494r
  I1019 12:05:45.741156 20 service_latency.go:363] Got endpoints: latency-svc-8gj77 [750.304732ms]
  I1019 12:05:45.752768 20 service_latency.go:356] Created: latency-svc-nzjbh
  I1019 12:05:45.788768 20 service_latency.go:363] Got endpoints: latency-svc-pcvpk [750.299123ms]
  I1019 12:05:45.800952 20 service_latency.go:356] Created: latency-svc-t462l
  I1019 12:05:45.841032 20 service_latency.go:363] Got endpoints: latency-svc-klr7v [751.759183ms]
  I1019 12:05:45.854289 20 service_latency.go:356] Created: latency-svc-shrbz
  I1019 12:05:45.890164 20 service_latency.go:363] Got endpoints: latency-svc-8gb45 [748.790287ms]
  I1019 12:05:45.904285 20 service_latency.go:356] Created: latency-svc-q4k5t
  I1019 12:05:45.938461 20 service_latency.go:363] Got endpoints: latency-svc-7645g [749.220672ms]
  I1019 12:05:45.952014 20 service_latency.go:356] Created: latency-svc-8zwg5
  I1019 12:05:45.988991 20 service_latency.go:363] Got endpoints: latency-svc-pdzjw [749.045304ms]
  I1019 12:05:46.004639 20 service_latency.go:356] Created: latency-svc-fbh4b
  I1019 12:05:46.038402 20 service_latency.go:363] Got endpoints: latency-svc-x2fkh [749.623409ms]
  I1019 12:05:46.050850 20 service_latency.go:356] Created: latency-svc-gkqcw
  I1019 12:05:46.091420 20 service_latency.go:363] Got endpoints: latency-svc-vhzbr [751.02671ms]
  I1019 12:05:46.103779 20 service_latency.go:356] Created: latency-svc-26t66
  I1019 12:05:46.141300 20 service_latency.go:363] Got endpoints: latency-svc-f2b5v [751.200478ms]
  I1019 12:05:46.154217 20 service_latency.go:356] Created: latency-svc-gk8fq
  I1019 12:05:46.190486 20 service_latency.go:363] Got endpoints: latency-svc-fnz4j [751.188714ms]
  I1019 12:05:46.204029 20 service_latency.go:356] Created: latency-svc-jlch7
  I1019 12:05:46.238303 20 service_latency.go:363] Got endpoints: latency-svc-6bvth [749.963692ms]
  I1019 12:05:46.252421 20 service_latency.go:356] Created: latency-svc-26zvs
  I1019 12:05:46.289165 20 service_latency.go:363] Got endpoints: latency-svc-fxn5q [747.732124ms]
  I1019 12:05:46.301901 20 service_latency.go:356] Created: latency-svc-5xdn9
  I1019 12:05:46.340628 20 service_latency.go:363] Got endpoints: latency-svc-g4v6l [749.590231ms]
  I1019 12:05:46.353719 20 service_latency.go:356] Created: latency-svc-ld9p5
  I1019 12:05:46.388783 20 service_latency.go:363] Got endpoints: latency-svc-ckkm8 [750.332313ms]
  I1019 12:05:46.401557 20 service_latency.go:356] Created: latency-svc-8w7fq
  I1019 12:05:46.441298 20 service_latency.go:363] Got endpoints: latency-svc-5494r [751.830826ms]
  I1019 12:05:46.454177 20 service_latency.go:356] Created: latency-svc-w6jgd
  I1019 12:05:46.488551 20 service_latency.go:363] Got endpoints: latency-svc-nzjbh [747.350309ms]
  I1019 12:05:46.501541 20 service_latency.go:356] Created: latency-svc-6g58r
  I1019 12:05:46.537684 20 service_latency.go:363] Got endpoints: latency-svc-t462l [748.873294ms]
  I1019 12:05:46.549707 20 service_latency.go:356] Created: latency-svc-vtlg5
  I1019 12:05:46.588294 20 service_latency.go:363] Got endpoints: latency-svc-shrbz [747.2138ms]
  I1019 12:05:46.603674 20 service_latency.go:356] Created: latency-svc-jwx7m
  I1019 12:05:46.640564 20 service_latency.go:363] Got endpoints: latency-svc-q4k5t [750.358511ms]
  I1019 12:05:46.653794 20 service_latency.go:356] Created: latency-svc-q9vck
  I1019 12:05:46.690216 20 service_latency.go:363] Got endpoints: latency-svc-8zwg5 [751.709859ms]
  I1019 12:05:46.704412 20 service_latency.go:356] Created: latency-svc-v4m2p
  I1019 12:05:46.740538 20 service_latency.go:363] Got endpoints: latency-svc-fbh4b [751.306105ms]
  I1019 12:05:46.755153 20 service_latency.go:356] Created: latency-svc-pp6f6
  I1019 12:05:46.787842 20 service_latency.go:363] Got endpoints: latency-svc-gkqcw [749.350857ms]
  I1019 12:05:46.799456 20 service_latency.go:356] Created: latency-svc-9w54m
  I1019 12:05:46.837904 20 service_latency.go:363] Got endpoints: latency-svc-26t66 [746.445154ms]
  I1019 12:05:46.852630 20 service_latency.go:356] Created: latency-svc-cqh65
  I1019 12:05:46.889201 20 service_latency.go:363] Got endpoints: latency-svc-gk8fq [747.829802ms]
  I1019 12:05:46.902527 20 service_latency.go:356] Created: latency-svc-s9fq5
  I1019 12:05:46.940048 20 service_latency.go:363] Got endpoints: latency-svc-jlch7 [749.51369ms]
  I1019 12:05:46.952829 20 service_latency.go:356] Created: latency-svc-z8cjw
  I1019 12:05:46.989369 20 service_latency.go:363] Got endpoints: latency-svc-26zvs [751.021835ms]
  I1019 12:05:47.002608 20 service_latency.go:356] Created: latency-svc-5v458
  I1019 12:05:47.041221 20 service_latency.go:363] Got endpoints: latency-svc-5xdn9 [751.897882ms]
  I1019 12:05:47.054581 20 service_latency.go:356] Created: latency-svc-srcq9
  I1019 12:05:47.088522 20 service_latency.go:363] Got endpoints: latency-svc-ld9p5 [747.844542ms]
  I1019 12:05:47.104468 20 service_latency.go:356] Created: latency-svc-xn86w
  I1019 12:05:47.138535 20 service_latency.go:363] Got endpoints: latency-svc-8w7fq [749.597362ms]
  I1019 12:05:47.158168 20 service_latency.go:356] Created: latency-svc-hfk69
  I1019 12:05:47.190877 20 service_latency.go:363] Got endpoints: latency-svc-w6jgd [749.531893ms]
  I1019 12:05:47.204972 20 service_latency.go:356] Created: latency-svc-z6b2n
  I1019 12:05:47.240459 20 service_latency.go:363] Got endpoints: latency-svc-6g58r [751.858267ms]
  I1019 12:05:47.256982 20 service_latency.go:356] Created: latency-svc-55hr4
  I1019 12:05:47.288710 20 service_latency.go:363] Got endpoints: latency-svc-vtlg5 [750.971581ms]
  I1019 12:05:47.304024 20 service_latency.go:356] Created: latency-svc-9zmt9
  I1019 12:05:47.339279 20 service_latency.go:363] Got endpoints: latency-svc-jwx7m [750.92334ms]
  I1019 12:05:47.352461 20 service_latency.go:356] Created: latency-svc-s589j
  I1019 12:05:47.389547 20 service_latency.go:363] Got endpoints: latency-svc-q9vck [748.925629ms]
  I1019 12:05:47.404011 20 service_latency.go:356] Created: latency-svc-pxctf
  I1019 12:05:47.438196 20 service_latency.go:363] Got endpoints: latency-svc-v4m2p [747.926246ms]
  I1019 12:05:47.455345 20 service_latency.go:356] Created: latency-svc-q6knl
  I1019 12:05:47.491866 20 service_latency.go:363] Got endpoints: latency-svc-pp6f6 [751.276927ms]
  I1019 12:05:47.508482 20 service_latency.go:356] Created: latency-svc-4mvzz
  I1019 12:05:47.538619 20 service_latency.go:363] Got endpoints: latency-svc-9w54m [750.725631ms]
  I1019 12:05:47.554399 20 service_latency.go:356] Created: latency-svc-7bzgd
  I1019 12:05:47.588410 20 service_latency.go:363] Got endpoints: latency-svc-cqh65 [750.450921ms]
  I1019 12:05:47.603576 20 service_latency.go:356] Created: latency-svc-7tb5s
  I1019 12:05:47.639401 20 service_latency.go:363] Got endpoints: latency-svc-s9fq5 [750.154825ms]
  I1019 12:05:47.653557 20 service_latency.go:356] Created: latency-svc-n2sv2
  I1019 12:05:47.690969 20 service_latency.go:363] Got endpoints: latency-svc-z8cjw [750.867445ms]
  I1019 12:05:47.703507 20 service_latency.go:356] Created: latency-svc-6xckh
  I1019 12:05:47.738341 20 service_latency.go:363] Got endpoints: latency-svc-5v458 [748.923134ms]
  I1019 12:05:47.757420 20 service_latency.go:356] Created: latency-svc-9lnf4
  I1019 12:05:47.790182 20 service_latency.go:363] Got endpoints: latency-svc-srcq9 [748.91247ms]
  I1019 12:05:47.802941 20 service_latency.go:356] Created: latency-svc-wr8ms
  I1019 12:05:47.840434 20 service_latency.go:363] Got endpoints: latency-svc-xn86w [751.846358ms]
  I1019 12:05:47.855028 20 service_latency.go:356] Created: latency-svc-4452x
  I1019 12:05:47.887657 20 service_latency.go:363] Got endpoints: latency-svc-hfk69 [749.069823ms]
  I1019 12:05:47.900583 20 service_latency.go:356] Created: latency-svc-29mgd
  I1019 12:05:47.938744 20 service_latency.go:363] Got endpoints: latency-svc-z6b2n [747.795798ms]
  I1019 12:05:47.952891 20 service_latency.go:356] Created: latency-svc-f4jdz
  I1019 12:05:47.988375 20 service_latency.go:363] Got endpoints: latency-svc-55hr4 [747.786719ms]
  I1019 12:05:48.001102 20 service_latency.go:356] Created: latency-svc-2swxl
  I1019 12:05:48.038106 20 service_latency.go:363] Got endpoints: latency-svc-9zmt9 [749.089959ms]
  I1019 12:05:48.049393 20 service_latency.go:356] Created: latency-svc-4jprg
  I1019 12:05:48.090336 20 service_latency.go:363] Got endpoints: latency-svc-s589j [750.954427ms]
  I1019 12:05:48.137897 20 service_latency.go:363] Got endpoints: latency-svc-pxctf [748.302407ms]
  I1019 12:05:48.189828 20 service_latency.go:363] Got endpoints: latency-svc-q6knl [751.581988ms]
  I1019 12:05:48.238806 20 service_latency.go:363] Got endpoints: latency-svc-4mvzz [746.889218ms]
  I1019 12:05:48.288993 20 service_latency.go:363] Got endpoints: latency-svc-7bzgd [750.21259ms]
  I1019 12:05:48.337664 20 service_latency.go:363] Got endpoints: latency-svc-7tb5s [749.199737ms]
  I1019 12:05:48.387814 20 service_latency.go:363] Got endpoints: latency-svc-n2sv2 [748.364235ms]
  I1019 12:05:48.438987 20 service_latency.go:363] Got endpoints: latency-svc-6xckh [747.972719ms]
  I1019 12:05:48.488250 20 service_latency.go:363] Got endpoints: latency-svc-9lnf4 [749.849271ms]
  I1019 12:05:48.537822 20 service_latency.go:363] Got endpoints: latency-svc-wr8ms [747.599066ms]
  I1019 12:05:48.590720 20 service_latency.go:363] Got endpoints: latency-svc-4452x [750.210361ms]
  I1019 12:05:48.638870 20 service_latency.go:363] Got endpoints: latency-svc-29mgd [751.168775ms]
  I1019 12:05:48.690333 20 service_latency.go:363] Got endpoints: latency-svc-f4jdz [751.54775ms]
  I1019 12:05:48.743043 20 service_latency.go:363] Got endpoints: latency-svc-2swxl [754.620453ms]
  I1019 12:05:48.790757 20 service_latency.go:363] Got endpoints: latency-svc-4jprg [752.583063ms]
  I1019 12:05:48.790865 20 service_latency.go:114] Latencies: [25.734294ms 30.622243ms 31.322849ms 41.445387ms 49.544514ms 54.857416ms 63.526971ms 71.102285ms 77.581472ms 87.373386ms 98.392774ms 105.10098ms 114.650096ms 122.47489ms 126.33358ms 126.555402ms 128.965223ms 131.992965ms 132.477565ms 133.793693ms 134.437156ms 138.658602ms 146.600261ms 148.533657ms 154.62019ms 155.687672ms 157.196698ms 158.773515ms 169.904198ms 201.516242ms 201.599413ms 213.471659ms 217.050462ms 218.394907ms 224.125424ms 229.048059ms 241.663057ms 243.797099ms 244.92688ms 254.198325ms 312.820521ms 341.434167ms 395.082588ms 440.989374ms 499.486198ms 535.128451ms 578.490369ms 592.060374ms 625.438895ms 657.252955ms 666.441837ms 714.350221ms 746.337171ms 746.369524ms 746.445154ms 746.657031ms 746.883204ms 746.889218ms 746.908556ms 746.983558ms 747.202177ms 747.2138ms 747.278617ms 747.300239ms 747.350309ms 747.599066ms 747.732124ms 747.786719ms 747.795798ms 747.829802ms 747.844542ms 747.849843ms 747.858432ms 747.877848ms 747.926246ms 747.970138ms 747.972719ms 748.002868ms 748.144303ms 748.257524ms 748.302407ms 748.364235ms 748.407205ms 748.419672ms 748.510395ms 748.554522ms 748.592412ms 748.602165ms 748.626153ms 748.67458ms 748.731122ms 748.790287ms 748.810855ms 748.873294ms 748.91247ms 748.923134ms 748.925629ms 749.042062ms 749.045304ms 749.069823ms 749.089959ms 749.139529ms 749.199737ms 749.209924ms 749.210292ms 749.220672ms 749.350857ms 749.364982ms 749.413168ms 749.493933ms 749.51369ms 749.531893ms 749.532189ms 749.586626ms 749.590231ms 749.595927ms 749.597362ms 749.623409ms 749.730159ms 749.737594ms 749.753691ms 749.788434ms 749.822608ms 749.849271ms 749.898433ms 749.963692ms 750.006723ms 750.031777ms 750.070666ms 750.073187ms 750.132515ms 750.154825ms 750.210361ms 750.21259ms 750.258452ms 750.299123ms 750.304732ms 750.31887ms 750.332313ms 750.358511ms 750.412979ms 750.44562ms 750.450921ms 750.454304ms 750.472808ms 750.561306ms 750.584894ms 750.651511ms 750.664501ms 750.673866ms 750.705975ms 750.723989ms 750.725631ms 750.771502ms 750.807644ms 750.867445ms 750.877918ms 750.92334ms 750.954427ms 750.960992ms 750.971581ms 751.01177ms 751.021835ms 751.02671ms 751.063308ms 751.115144ms 751.168775ms 751.188714ms 751.200478ms 751.225513ms 751.272512ms 751.276927ms 751.306105ms 751.307237ms 751.54775ms 751.581988ms 751.657293ms 751.709859ms 751.759183ms 751.804968ms 751.830826ms 751.842941ms 751.846358ms 751.858267ms 751.897882ms 751.908316ms 751.987303ms 752.03059ms 752.049324ms 752.234483ms 752.339352ms 752.583063ms 752.704923ms 752.851866ms 753.26807ms 753.397385ms 753.421541ms 753.726606ms 754.620453ms 755.533599ms]
  I1019 12:05:48.790884 20 service_latency.go:118] 50 %ile: 749.089959ms
  I1019 12:05:48.790891 20 service_latency.go:119] 90 %ile: 751.830826ms
  I1019 12:05:48.790896 20 service_latency.go:120] 99 %ile: 754.620453ms
  I1019 12:05:48.790902 20 service_latency.go:121] Total sample count: 200
  I1019 12:05:48.791007 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4352" for this suite. @ 10/19/24 12:05:48.796
â€¢ [10.773 seconds]
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 10/19/24 12:05:48.806
  I1019 12:05:48.806077 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:05:48.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:05:48.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:05:48.828
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:05:48.83
  STEP: Saw pod success @ 10/19/24 12:05:52.859
  I1019 12:05:52.862611 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-1bbdbe43-b924-4731-aa29-7382e01f6e86 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:05:52.882
  I1019 12:05:52.905094 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-101" for this suite. @ 10/19/24 12:05:52.909
â€¢ [4.112 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 10/19/24 12:05:52.918
  I1019 12:05:52.918310 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:05:52.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:05:52.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:05:52.938
  STEP: creating a ConfigMap @ 10/19/24 12:05:52.94
  STEP: fetching the ConfigMap @ 10/19/24 12:05:52.946
  STEP: patching the ConfigMap @ 10/19/24 12:05:52.949
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/19/24 12:05:52.954
  STEP: deleting the ConfigMap by collection with a label selector @ 10/19/24 12:05:52.959
  STEP: listing all ConfigMaps in test namespace @ 10/19/24 12:05:52.969
  I1019 12:05:52.972803 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3538" for this suite. @ 10/19/24 12:05:52.977
â€¢ [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 10/19/24 12:05:52.985
  I1019 12:05:52.985953 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename discovery @ 10/19/24 12:05:52.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:05:53.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:05:53.009
  STEP: Setting up server cert @ 10/19/24 12:05:53.011
  I1019 12:05:53.177272 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1019 12:05:53.178072 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1019 12:05:53.178094 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1019 12:05:53.178101 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1019 12:05:53.178108 20 discovery.go:139] Checking APIGroup: apps
  I1019 12:05:53.178829 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1019 12:05:53.178849 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I1019 12:05:53.178857 20 discovery.go:154] apps/v1 matches apps/v1
  I1019 12:05:53.178866 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I1019 12:05:53.179545 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1019 12:05:53.179560 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1019 12:05:53.179599 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1019 12:05:53.179605 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1019 12:05:53.180197 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1019 12:05:53.180208 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1019 12:05:53.180243 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1019 12:05:53.180251 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1019 12:05:53.180872 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1019 12:05:53.180883 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1019 12:05:53.180888 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1019 12:05:53.180894 20 discovery.go:139] Checking APIGroup: autoscaling
  I1019 12:05:53.181457 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1019 12:05:53.181473 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1019 12:05:53.181478 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1019 12:05:53.181484 20 discovery.go:139] Checking APIGroup: batch
  I1019 12:05:53.182009 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1019 12:05:53.182018 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I1019 12:05:53.182024 20 discovery.go:154] batch/v1 matches batch/v1
  I1019 12:05:53.182030 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1019 12:05:53.182628 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1019 12:05:53.182646 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1019 12:05:53.182652 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1019 12:05:53.182658 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1019 12:05:53.183224 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1019 12:05:53.183248 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1019 12:05:53.183253 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1019 12:05:53.183259 20 discovery.go:139] Checking APIGroup: policy
  I1019 12:05:53.183815 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1019 12:05:53.183825 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I1019 12:05:53.183831 20 discovery.go:154] policy/v1 matches policy/v1
  I1019 12:05:53.183836 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1019 12:05:53.184432 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1019 12:05:53.184446 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1019 12:05:53.184450 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1019 12:05:53.184456 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1019 12:05:53.185041 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1019 12:05:53.185052 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1019 12:05:53.185058 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1019 12:05:53.185065 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1019 12:05:53.185623 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1019 12:05:53.185639 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1019 12:05:53.185645 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1019 12:05:53.185650 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1019 12:05:53.186248 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1019 12:05:53.186258 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1019 12:05:53.186263 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1019 12:05:53.186268 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1019 12:05:53.186832 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1019 12:05:53.186847 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1019 12:05:53.186852 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1019 12:05:53.186858 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1019 12:05:53.187438 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1019 12:05:53.187453 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1019 12:05:53.187458 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1019 12:05:53.187464 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I1019 12:05:53.188012 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1019 12:05:53.188023 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1019 12:05:53.188028 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1019 12:05:53.188033 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1019 12:05:53.188559 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1019 12:05:53.188578 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1019 12:05:53.188583 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1019 12:05:53.188588 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1019 12:05:53.189169 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1019 12:05:53.189180 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1019 12:05:53.189186 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1019 12:05:53.189192 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1019 12:05:53.189734 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1019 12:05:53.189743 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1019 12:05:53.189747 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1019 12:05:53.189866 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1074" for this suite. @ 10/19/24 12:05:53.193
â€¢ [0.216 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 10/19/24 12:05:53.202
  I1019 12:05:53.202083 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:05:53.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:05:53.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:05:53.226
  STEP: creating a replication controller @ 10/19/24 12:05:53.228
  I1019 12:05:53.228308 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 create -f -'
  I1019 12:05:53.321597 20 builder.go:146] stderr: ""
  I1019 12:05:53.321699 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/19/24 12:05:53.321
  I1019 12:05:53.321783 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 12:05:53.367560 20 builder.go:146] stderr: ""
  I1019 12:05:53.367602 20 builder.go:147] stdout: "update-demo-nautilus-gdpmd update-demo-nautilus-j6qvn "
  I1019 12:05:53.367662 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-gdpmd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 12:05:53.411880 20 builder.go:146] stderr: ""
  I1019 12:05:53.411936 20 builder.go:147] stdout: ""
  I1019 12:05:53.411945 20 kubectl.go:2502] update-demo-nautilus-gdpmd is created but not running
  I1019 12:05:58.412565 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 12:05:58.492593 20 builder.go:146] stderr: ""
  I1019 12:05:58.492666 20 builder.go:147] stdout: "update-demo-nautilus-gdpmd update-demo-nautilus-j6qvn "
  I1019 12:05:58.492913 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-gdpmd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 12:05:58.564587 20 builder.go:146] stderr: ""
  I1019 12:05:58.564772 20 builder.go:147] stdout: "true"
  I1019 12:05:58.564823 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-gdpmd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 12:05:58.634621 20 builder.go:146] stderr: ""
  I1019 12:05:58.634695 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 12:05:58.634707 20 kubectl.go:2393] validating pod update-demo-nautilus-gdpmd
  I1019 12:05:58.641061 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 12:05:58.641471 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 12:05:58.641501 20 kubectl.go:2520] update-demo-nautilus-gdpmd is verified up and running
  I1019 12:05:58.641654 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-j6qvn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 12:05:58.712753 20 builder.go:146] stderr: ""
  I1019 12:05:58.712817 20 builder.go:147] stdout: "true"
  I1019 12:05:58.712867 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-j6qvn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 12:05:58.784797 20 builder.go:146] stderr: ""
  I1019 12:05:58.784844 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 12:05:58.784857 20 kubectl.go:2393] validating pod update-demo-nautilus-j6qvn
  I1019 12:05:58.790402 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 12:05:58.790455 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 12:05:58.790466 20 kubectl.go:2520] update-demo-nautilus-j6qvn is verified up and running
  STEP: scaling down the replication controller @ 10/19/24 12:05:58.79
  I1019 12:05:58.791581 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1019 12:05:58.791801 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I1019 12:05:59.887577 20 builder.go:146] stderr: ""
  I1019 12:05:59.887616 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/19/24 12:05:59.887
  I1019 12:05:59.887699 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 12:05:59.931922 20 builder.go:146] stderr: ""
  I1019 12:05:59.931962 20 builder.go:147] stdout: "update-demo-nautilus-gdpmd update-demo-nautilus-j6qvn "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/19/24 12:05:59.931
  I1019 12:06:04.932489 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 12:06:04.976058 20 builder.go:146] stderr: ""
  I1019 12:06:04.976109 20 builder.go:147] stdout: "update-demo-nautilus-j6qvn "
  I1019 12:06:04.976172 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-j6qvn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 12:06:05.018680 20 builder.go:146] stderr: ""
  I1019 12:06:05.018726 20 builder.go:147] stdout: "true"
  I1019 12:06:05.018766 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-j6qvn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 12:06:05.060669 20 builder.go:146] stderr: ""
  I1019 12:06:05.060732 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 12:06:05.060744 20 kubectl.go:2393] validating pod update-demo-nautilus-j6qvn
  I1019 12:06:05.066550 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 12:06:05.066592 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 12:06:05.066605 20 kubectl.go:2520] update-demo-nautilus-j6qvn is verified up and running
  STEP: scaling up the replication controller @ 10/19/24 12:06:05.066
  I1019 12:06:05.067249 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1019 12:06:05.067281 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I1019 12:06:06.128342 20 builder.go:146] stderr: ""
  I1019 12:06:06.128380 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/19/24 12:06:06.128
  I1019 12:06:06.128469 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 12:06:06.182720 20 builder.go:146] stderr: ""
  I1019 12:06:06.182759 20 builder.go:147] stdout: "update-demo-nautilus-j6qvn update-demo-nautilus-xgkng "
  I1019 12:06:06.182846 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-j6qvn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 12:06:06.226607 20 builder.go:146] stderr: ""
  I1019 12:06:06.226651 20 builder.go:147] stdout: "true"
  I1019 12:06:06.226696 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-j6qvn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 12:06:06.271716 20 builder.go:146] stderr: ""
  I1019 12:06:06.271755 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 12:06:06.271769 20 kubectl.go:2393] validating pod update-demo-nautilus-j6qvn
  I1019 12:06:06.276973 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 12:06:06.277025 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 12:06:06.277036 20 kubectl.go:2520] update-demo-nautilus-j6qvn is verified up and running
  I1019 12:06:06.277115 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-xgkng -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 12:06:06.321942 20 builder.go:146] stderr: ""
  I1019 12:06:06.321995 20 builder.go:147] stdout: "true"
  I1019 12:06:06.322058 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods update-demo-nautilus-xgkng -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 12:06:06.367807 20 builder.go:146] stderr: ""
  I1019 12:06:06.367844 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 12:06:06.367855 20 kubectl.go:2393] validating pod update-demo-nautilus-xgkng
  I1019 12:06:06.373330 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 12:06:06.373384 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 12:06:06.373395 20 kubectl.go:2520] update-demo-nautilus-xgkng is verified up and running
  STEP: using delete to clean up resources @ 10/19/24 12:06:06.373
  I1019 12:06:06.373467 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 delete --grace-period=0 --force -f -'
  I1019 12:06:06.427077 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 12:06:06.427114 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1019 12:06:06.427181 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get rc,svc -l name=update-demo --no-headers'
  I1019 12:06:06.478604 20 builder.go:146] stderr: "No resources found in kubectl-5976 namespace.\n"
  I1019 12:06:06.478643 20 builder.go:147] stdout: ""
  I1019 12:06:06.478691 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5976 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1019 12:06:06.524956 20 builder.go:146] stderr: ""
  I1019 12:06:06.525010 20 builder.go:147] stdout: ""
  I1019 12:06:06.525126 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5976" for this suite. @ 10/19/24 12:06:06.529
â€¢ [13.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 10/19/24 12:06:06.539
  I1019 12:06:06.539668 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:06:06.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:06.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:06.561
  STEP: starting the proxy server @ 10/19/24 12:06:06.563
  I1019 12:06:06.563283 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-4360 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/19/24 12:06:06.596
  I1019 12:06:06.601727 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1019 12:06:06.602920 20 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:43633

  I1019 12:06:06.602920 20 kubectl.go:2229] kubectl proxy stderr: W1019 12:06:06.596502     139 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4360" for this suite. @ 10/19/24 12:06:06.606
â€¢ [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 10/19/24 12:06:06.617
  I1019 12:06:06.617702 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pv @ 10/19/24 12:06:06.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:06.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:06.64
  STEP: Creating initial PV and PVC @ 10/19/24 12:06:06.642
  I1019 12:06:06.642408 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8732" @ 10/19/24 12:06:06.656
  STEP: Listing PVCs in namespace "pv-8732" @ 10/19/24 12:06:06.661
  STEP: Patching the PV "pv-8732-cmrxh" @ 10/19/24 12:06:06.664
  STEP: Patching the PVC "pvc-zdcpf" @ 10/19/24 12:06:06.674
  STEP: Getting PV "pv-8732-cmrxh" @ 10/19/24 12:06:06.682
  STEP: Getting PVC "pvc-zdcpf" @ 10/19/24 12:06:06.686
  STEP: Deleting PVC "pvc-zdcpf" @ 10/19/24 12:06:06.689
  STEP: Confirm deletion of PVC "pvc-zdcpf" @ 10/19/24 12:06:06.699
  STEP: Deleting PV "pv-8732-cmrxh" @ 10/19/24 12:06:08.708
  STEP: Confirm deletion of PV "pv-8732-cmrxh" @ 10/19/24 12:06:08.719
  STEP: Recreating another PV & PVC @ 10/19/24 12:06:10.728
  I1019 12:06:10.728492 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8732-mfkzn" @ 10/19/24 12:06:10.742
  STEP: Updating the PVC "pvc-djdpw" @ 10/19/24 12:06:10.773
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-djdpw=updated" @ 10/19/24 12:06:10.782
  STEP: Deleting PVC "pvc-djdpw" via DeleteCollection @ 10/19/24 12:06:10.787
  STEP: Confirm deletion of PVC "pvc-djdpw" @ 10/19/24 12:06:10.797
  STEP: Deleting PV "pv-8732-mfkzn" via DeleteCollection @ 10/19/24 12:06:12.806
  STEP: Confirm deletion of PV "pv-8732-mfkzn" @ 10/19/24 12:06:12.816
  I1019 12:06:14.826614 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1019 12:06:14.826647 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-djdpw"
  I1019 12:06:14.830888 20 pv.go:193] Deleting PersistentVolume "pv-8732-mfkzn"
  I1019 12:06:14.834370 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8732" for this suite. @ 10/19/24 12:06:14.839
â€¢ [8.229 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 10/19/24 12:06:14.847
  I1019 12:06:14.847106 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:06:14.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:14.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:14.868
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8881 @ 10/19/24 12:06:14.87
  STEP: changing the ExternalName service to type=NodePort @ 10/19/24 12:06:14.874
  STEP: creating replication controller externalname-service in namespace services-8881 @ 10/19/24 12:06:14.898
  I1019 12:06:14.906117      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8881, replica count: 2
  I1019 12:06:17.957019      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:06:17.957056 20 resource.go:361] Creating new exec pod
  I1019 12:06:20.986798 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-8881 exec execpods5tp4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1019 12:06:21.066427 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1019 12:06:21.066465 20 builder.go:147] stdout: ""
  I1019 12:06:21.987410 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-8881 exec execpods5tp4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1019 12:06:22.068961 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1019 12:06:22.069004 20 builder.go:147] stdout: "externalname-service-cg6dh"
  I1019 12:06:22.069124 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-8881 exec execpods5tp4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I1019 12:06:22.147408 20 builder.go:146] stderr: "+ echo hostName+ nc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n\n"
  I1019 12:06:22.147448 20 builder.go:147] stdout: "externalname-service-cg6dh"
  I1019 12:06:22.147530 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-8881 exec execpods5tp4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.204 31828'
  I1019 12:06:22.227981 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.204 31828\nConnection to 172.31.3.204 31828 port [tcp/*] succeeded!\n"
  I1019 12:06:22.228021 20 builder.go:147] stdout: ""
  I1019 12:06:23.148235 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-8881 exec execpods5tp4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.204 31828'
  I1019 12:06:23.228960 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.204 31828\nConnection to 172.31.3.204 31828 port [tcp/*] succeeded!\n"
  I1019 12:06:23.229010 20 builder.go:147] stdout: "externalname-service-cg6dh"
  I1019 12:06:23.229185 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-8881 exec execpods5tp4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.96 31828'
  I1019 12:06:23.317154 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.96 31828\nConnection to 172.31.22.96 31828 port [tcp/*] succeeded!\n"
  I1019 12:06:23.317197 20 builder.go:147] stdout: "externalname-service-8b2mm"
  I1019 12:06:23.317276 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1019 12:06:23.358317 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8881" for this suite. @ 10/19/24 12:06:23.363
â€¢ [8.524 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 10/19/24 12:06:23.371
  I1019 12:06:23.371501 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 12:06:23.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:23.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:23.394
  STEP: create the rc @ 10/19/24 12:06:23.4
  W1019 12:06:23.407381      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/19/24 12:06:29.415
  STEP: wait for the rc to be deleted @ 10/19/24 12:06:29.421
  I1019 12:06:30.433546 20 garbage_collector.go:670] 80 pods remaining
  I1019 12:06:30.433573 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1019 12:06:30.433578 20 garbage_collector.go:678] 
  I1019 12:06:31.444751 20 garbage_collector.go:670] 71 pods remaining
  I1019 12:06:31.444809 20 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1019 12:06:31.444816 20 garbage_collector.go:678] 
  I1019 12:06:32.439311 20 garbage_collector.go:670] 60 pods remaining
  I1019 12:06:32.439345 20 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1019 12:06:32.439351 20 garbage_collector.go:678] 
  I1019 12:06:33.445677 20 garbage_collector.go:670] 40 pods remaining
  I1019 12:06:33.445714 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1019 12:06:33.445767 20 garbage_collector.go:678] 
  I1019 12:06:34.434970 20 garbage_collector.go:670] 31 pods remaining
  I1019 12:06:34.435121 20 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I1019 12:06:34.435350 20 garbage_collector.go:678] 
  I1019 12:06:35.433000 20 garbage_collector.go:670] 20 pods remaining
  I1019 12:06:35.433022 20 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1019 12:06:35.433028 20 garbage_collector.go:678] 
  STEP: Gathering metrics @ 10/19/24 12:06:36.432
  W1019 12:06:36.450880      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1019 12:06:36.450976 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1019 12:06:36.451635 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3266" for this suite. @ 10/19/24 12:06:36.457
â€¢ [13.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 10/19/24 12:06:36.467
  I1019 12:06:36.467229 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/19/24 12:06:36.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:36.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:36.491
  I1019 12:06:36.494036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:06:37.039114 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9145" for this suite. @ 10/19/24 12:06:37.048
â€¢ [0.590 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 10/19/24 12:06:37.057
  I1019 12:06:37.057268 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:06:37.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:37.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:37.081
  STEP: validating cluster-info @ 10/19/24 12:06:37.083
  I1019 12:06:37.083409 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-2967 cluster-info'
  I1019 12:06:37.126923 20 builder.go:146] stderr: ""
  I1019 12:06:37.126963 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1019 12:06:37.127201 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2967" for this suite. @ 10/19/24 12:06:37.131
â€¢ [0.083 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 10/19/24 12:06:37.14
  I1019 12:06:37.140210 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 12:06:37.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:06:37.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:06:37.161
  STEP: Creating pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281 @ 10/19/24 12:06:37.163
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 12:06:39.184
  I1019 12:06:39.187323 20 container_probe.go:1749] Initial restart count of pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a is 0
  I1019 12:06:39.191329 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:41.196919 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:43.202416 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:45.207776 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:47.212862 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:49.218359 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:51.224528 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:53.229616 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:55.234697 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:57.240928 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:06:59.246172 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:01.251317 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:03.258182 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:05.265546 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:07.270628 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:09.276571 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:11.284852 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:13.291060 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:15.297378 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:17.303320 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:19.309532 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:21.314278 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:23.320712 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:25.326329 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:27.332523 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:29.337707 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:31.343600 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:33.349404 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:35.354361 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:37.360471 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:39.367272 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:41.373688 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:43.380088 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:45.386217 20 container_probe.go:1759] Get pod test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a in namespace container-probe-1281
  I1019 12:07:45.386256 20 container_probe.go:1763] Restart count of pod container-probe-1281/test-grpc-a92a48d4-aaa0-4745-a171-6edfda28f56a is now 1 (1m6.1987892s elapsed)
  STEP: deleting the pod @ 10/19/24 12:07:45.386
  I1019 12:07:45.405430 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1281" for this suite. @ 10/19/24 12:07:45.409
â€¢ [68.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 10/19/24 12:07:45.418
  I1019 12:07:45.418971 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename disruption @ 10/19/24 12:07:45.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:07:45.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:07:45.445
  STEP: Creating a kubernetes client @ 10/19/24 12:07:45.446
  I1019 12:07:45.446777 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename disruption-2 @ 10/19/24 12:07:45.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:07:45.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:07:45.464
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:07:45.473
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:07:47.484
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:07:49.494
  STEP: listing a collection of PDBs across all namespaces @ 10/19/24 12:07:51.5
  STEP: listing a collection of PDBs in namespace disruption-2506 @ 10/19/24 12:07:51.505
  STEP: deleting a collection of PDBs @ 10/19/24 12:07:51.51
  STEP: Waiting for the PDB collection to be deleted @ 10/19/24 12:07:51.526
  I1019 12:07:51.530251 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5791" for this suite. @ 10/19/24 12:07:51.534
  I1019 12:07:51.542216 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2506" for this suite. @ 10/19/24 12:07:51.545
â€¢ [6.134 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 10/19/24 12:07:51.553
  I1019 12:07:51.553303 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/19/24 12:07:51.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:07:51.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:07:51.575
  I1019 12:07:51.577760 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:07:54.636847 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7347" for this suite. @ 10/19/24 12:07:54.642
â€¢ [3.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 10/19/24 12:07:54.652
  I1019 12:07:54.652263 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:07:54.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:07:54.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:07:54.671
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/19/24 12:07:54.673
  STEP: Saw pod success @ 10/19/24 12:07:56.694
  I1019 12:07:56.697579 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-3f811d2a-1038-4785-8498-9a0888c6795c container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:07:56.709
  I1019 12:07:56.724671 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9993" for this suite. @ 10/19/24 12:07:56.728
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 10/19/24 12:07:56.735
  I1019 12:07:56.735180 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:07:56.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:07:56.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:07:56.756
  STEP: creating service in namespace services-1419 @ 10/19/24 12:07:56.757
  STEP: creating service affinity-clusterip in namespace services-1419 @ 10/19/24 12:07:56.757
  STEP: creating replication controller affinity-clusterip in namespace services-1419 @ 10/19/24 12:07:56.77
  I1019 12:07:56.779316      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1419, replica count: 3
  I1019 12:07:59.830566      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:08:02.832252      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:08:02.840924 20 resource.go:361] Creating new exec pod
  I1019 12:08:05.858780 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1419 exec execpod-affinity2snxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1019 12:08:05.942199 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1019 12:08:05.942252 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:08:05.942333 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1419 exec execpod-affinity2snxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.130 80'
  I1019 12:08:06.025975 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.130 80\nConnection to 10.152.183.130 80 port [tcp/http] succeeded!\n"
  I1019 12:08:06.026022 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:08:06.026088 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1419 exec execpod-affinity2snxg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.130:80/ ; done'
  I1019 12:08:06.156926 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n"
  I1019 12:08:06.156976 20 builder.go:147] stdout: "\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr\naffinity-clusterip-jc7kr"
  I1019 12:08:06.156996 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157018 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157025 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157031 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157039 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157045 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157051 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157057 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157075 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157096 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157110 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157117 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157123 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157171 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157187 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157196 20 service.go:242] Received response from host: affinity-clusterip-jc7kr
  I1019 12:08:06.157359 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1419, will wait for the garbage collector to delete the pods @ 10/19/24 12:08:06.171
  I1019 12:08:06.235538 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 8.295452ms
  I1019 12:08:06.336023 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.479519ms
  I1019 12:08:09.558257 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1419" for this suite. @ 10/19/24 12:08:09.562
â€¢ [12.837 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 10/19/24 12:08:09.572
  I1019 12:08:09.572503 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:08:09.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:08:09.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:08:09.594
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/19/24 12:08:09.596
  STEP: Saw pod success @ 10/19/24 12:08:11.617
  I1019 12:08:11.621409 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-65055abb-f8e2-4977-b0bb-658d9cf93be0 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:08:11.63
  I1019 12:08:11.649582 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8420" for this suite. @ 10/19/24 12:08:11.654
â€¢ [2.090 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 10/19/24 12:08:11.662
  I1019 12:08:11.662563 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 12:08:11.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:08:11.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:08:11.686
  STEP: set up a multi version CRD @ 10/19/24 12:08:11.688
  I1019 12:08:11.688597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: rename a version @ 10/19/24 12:08:14.929
  STEP: check the new version name is served @ 10/19/24 12:08:14.942
  STEP: check the old version name is removed @ 10/19/24 12:08:15.638
  STEP: check the other version is not changed @ 10/19/24 12:08:16.241
  I1019 12:08:18.643656 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8036" for this suite. @ 10/19/24 12:08:18.65
â€¢ [6.997 seconds]
------------------------------
SSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/19/24 12:08:18.659
  I1019 12:08:18.659811 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/19/24 12:08:18.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:08:18.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:08:18.679
  STEP: Setting up the test @ 10/19/24 12:08:18.681
  STEP: Creating hostNetwork=false pod @ 10/19/24 12:08:18.681
  STEP: Creating hostNetwork=true pod @ 10/19/24 12:08:20.708
  STEP: Running the test @ 10/19/24 12:08:22.731
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/19/24 12:08:22.731
  I1019 12:08:22.731332 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.731352 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.731804 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.731855 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1019 12:08:22.765859 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:22.765942 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.765953 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.766405 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.766450 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1019 12:08:22.797967 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:22.798006 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.798015 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.798483 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.798531 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1019 12:08:22.834162 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:22.834213 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.834221 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.834662 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.834702 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1019 12:08:22.875170 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/19/24 12:08:22.875
  I1019 12:08:22.875244 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.875252 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.875673 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.875711 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1019 12:08:22.916807 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:22.916874 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.916883 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.917324 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.917374 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1019 12:08:22.946223 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/19/24 12:08:22.946
  I1019 12:08:22.946333 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.946342 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.946720 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.946757 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1019 12:08:22.984290 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:22.984334 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:22.984357 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:22.984734 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:22.984778 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1019 12:08:23.019184 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:23.019229 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:23.019237 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:23.019659 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:23.019702 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1019 12:08:23.053478 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:23.053523 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6835 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:08:23.053530 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:08:23.053954 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:08:23.054020 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6835/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1019 12:08:23.092168 20 exec_util.go:111] Exec stderr: ""
  I1019 12:08:23.092282 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6835" for this suite. @ 10/19/24 12:08:23.097
â€¢ [4.447 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 10/19/24 12:08:23.106
  I1019 12:08:23.106541 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-webhook @ 10/19/24 12:08:23.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:08:23.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:08:23.126
  STEP: Setting up server cert @ 10/19/24 12:08:23.128
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/19/24 12:08:23.353
  STEP: Deploying the custom resource conversion webhook pod @ 10/19/24 12:08:23.364
  STEP: Wait for the deployment to be ready @ 10/19/24 12:08:23.379
  I1019 12:08:23.394890 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:08:25.409
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:08:25.426
  I1019 12:08:26.427224 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1019 12:08:26.437232 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Creating a v1 custom resource @ 10/19/24 12:08:28.996
  STEP: Create a v2 custom resource @ 10/19/24 12:08:29.014
  STEP: List CRs in v1 @ 10/19/24 12:08:29.037
  STEP: List CRs in v2 @ 10/19/24 12:08:29.043
  I1019 12:08:29.608367 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4380" for this suite. @ 10/19/24 12:08:29.612
â€¢ [6.515 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 10/19/24 12:08:29.621
  I1019 12:08:29.621589 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 12:08:29.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:08:29.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:08:29.64
  I1019 12:09:29.665076 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6239" for this suite. @ 10/19/24 12:09:29.669
â€¢ [60.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 10/19/24 12:09:29.677
  I1019 12:09:29.677882 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption @ 10/19/24 12:09:29.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:09:29.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:09:29.697
  I1019 12:09:29.718564 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1019 12:10:29.724363 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/19/24 12:10:29.729
  I1019 12:10:29.750257 20 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1019 12:10:29.758293 20 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1019 12:10:29.779204 20 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1019 12:10:29.789307 20 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1019 12:10:29.811308 20 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1019 12:10:29.821545 20 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/19/24 12:10:29.821
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/19/24 12:10:31.854
  I1019 12:10:35.975455 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8194" for this suite. @ 10/19/24 12:10:35.98
â€¢ [66.313 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 10/19/24 12:10:35.99
  I1019 12:10:35.990942 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:10:35.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:10:36.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:10:36.009
  STEP: Setting up server cert @ 10/19/24 12:10:36.034
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:10:36.34
  STEP: Deploying the webhook pod @ 10/19/24 12:10:36.346
  STEP: Wait for the deployment to be ready @ 10/19/24 12:10:36.358
  I1019 12:10:36.370660 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:10:38.386
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:10:38.4
  I1019 12:10:39.401281 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/19/24 12:10:39.411
  STEP: create a pod that should be updated by the webhook @ 10/19/24 12:10:39.428
  I1019 12:10:39.513115 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6730" for this suite. @ 10/19/24 12:10:39.521
  STEP: Destroying namespace "webhook-markers-700" for this suite. @ 10/19/24 12:10:39.532
â€¢ [3.550 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/19/24 12:10:39.541
  I1019 12:10:39.541351 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 12:10:39.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:10:39.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:10:39.56
  I1019 12:10:39.608067 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1019 12:10:39.619450 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1019 12:10:44.625496 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/19/24 12:10:44.625
  I1019 12:10:44.625565 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1019 12:10:44.634184 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1019 12:10:44.646225 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1019 12:10:46.655786 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1019 12:10:46.660248 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1019 12:10:46.673434 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f7f3ec6-976c-452a-834b-638d121b5eef",
      ResourceVersion: (string) (len=5) "10006",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864936644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1019 12:10:46.681191 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8c0706a-79f4-4315-9e9a-5fdec2aba116",
      ResourceVersion: (string) (len=4) "9994",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864936644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6f7f3ec6-976c-452a-834b-638d121b5eef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 37 66 33 65  63 36 2d 39 37 36 63 2d  |\"6f7f3ec6-976c-|
              00000120  34 35 32 61 2d 38 33 34  62 2d 36 33 38 64 31 32  |452a-834b-638d12|
              00000130  31 62 35 65 65 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1b5eef\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:10:46.681648 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1019 12:10:46.681837 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "337e8d69-19dd-42d1-924a-c65c9e4913d8",
      ResourceVersion: (string) (len=5) "10005",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864936639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6f7f3ec6-976c-452a-834b-638d121b5eef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 66 37 66 33 65 63  |"uid\":\"6f7f3ec|
              000000b0  36 2d 39 37 36 63 2d 34  35 32 61 2d 38 33 34 62  |6-976c-452a-834b|
              000000c0  2d 36 33 38 64 31 32 31  62 35 65 65 66 5c 22 7d  |-638d121b5eef\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:10:46.692315 20 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-sccrc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-sccrc",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-4163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5772cfc2-beb1-4bf5-bf34-8b5821bf08f6",
      ResourceVersion: (string) (len=4) "9993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864936644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "d8c0706a-79f4-4315-9e9a-5fdec2aba116",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 38  63 30 37 30 36 61 2d 37  |d\":\"d8c0706a-7|
              00000090  39 66 34 2d 34 33 31 35  2d 39 65 39 61 2d 35 66  |9f4-4315-9e9a-5f|
              000000a0  64 65 63 32 61 62 61 31  31 36 5c 22 7d 22 3a 7b  |dec2aba116\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 31 31 39 5c 22 7d 22  |2.168.73.119\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lf4nl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lf4nl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864936644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=14) "192.168.73.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.73.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864936644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864936645,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://a9548e83f1d7d16edd41211da89c1781ee55ad3c2547b0aeca326f8421b9354c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lf4nl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:10:46.695505 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4163" for this suite. @ 10/19/24 12:10:46.699
â€¢ [7.169 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 10/19/24 12:10:46.711
  I1019 12:10:46.711207 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:10:46.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:10:46.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:10:46.737
  STEP: Setting up server cert @ 10/19/24 12:10:46.764
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:10:47.027
  STEP: Deploying the webhook pod @ 10/19/24 12:10:47.034
  STEP: Wait for the deployment to be ready @ 10/19/24 12:10:47.045
  I1019 12:10:47.055578 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:10:49.07
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:10:49.082
  I1019 12:10:50.082844 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/19/24 12:10:50.092
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/19/24 12:10:50.093
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/19/24 12:10:50.093
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/19/24 12:10:50.093
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/19/24 12:10:50.094
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/19/24 12:10:50.094
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/19/24 12:10:50.095
  I1019 12:10:50.144733 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6668" for this suite. @ 10/19/24 12:10:50.149
  STEP: Destroying namespace "webhook-markers-6152" for this suite. @ 10/19/24 12:10:50.159
â€¢ [3.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 10/19/24 12:10:50.167
  I1019 12:10:50.167274 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/19/24 12:10:50.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:10:50.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:10:50.186
  STEP: fetching the /apis discovery document @ 10/19/24 12:10:50.189
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/19/24 12:10:50.19
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/19/24 12:10:50.19
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/19/24 12:10:50.19
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/19/24 12:10:50.191
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/19/24 12:10:50.191
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/19/24 12:10:50.192
  I1019 12:10:50.192256 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-383" for this suite. @ 10/19/24 12:10:50.197
â€¢ [0.038 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 10/19/24 12:10:50.205
  I1019 12:10:50.205249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:10:50.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:10:50.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:10:50.224
  STEP: Discovering how many secrets are in namespace by default @ 10/19/24 12:10:50.226
  STEP: Counting existing ResourceQuota @ 10/19/24 12:10:55.23
  STEP: Creating a ResourceQuota @ 10/19/24 12:11:00.235
  STEP: Ensuring resource quota status is calculated @ 10/19/24 12:11:00.242
  STEP: Creating a Secret @ 10/19/24 12:11:02.247
  STEP: Ensuring resource quota status captures secret creation @ 10/19/24 12:11:02.261
  STEP: Deleting a secret @ 10/19/24 12:11:04.267
  STEP: Ensuring resource quota status released usage @ 10/19/24 12:11:04.275
  I1019 12:11:06.281729 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4909" for this suite. @ 10/19/24 12:11:06.286
â€¢ [16.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/19/24 12:11:06.295
  I1019 12:11:06.295949 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 12:11:06.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:11:06.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:11:06.316
  I1019 12:11:06.342032 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/19/24 12:11:06.347
  I1019 12:11:06.352921 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:06.352942 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/19/24 12:11:06.352
  I1019 12:11:06.375902 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:06.375936 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:07.377948 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:07.377980 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:08.378354 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:08.378393 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:09.377437 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:09.377462 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:10.377666 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1019 12:11:10.377701 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/19/24 12:11:10.382
  I1019 12:11:10.399270 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1019 12:11:10.399314 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1019 12:11:11.401708 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:11.401747 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/19/24 12:11:11.401
  I1019 12:11:11.423159 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:11.423187 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:12.421832 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:12.421865 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:13.422704 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:13.422743 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  I1019 12:11:14.422516 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1019 12:11:14.422547 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/19/24 12:11:14.431
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2809, will wait for the garbage collector to delete the pods @ 10/19/24 12:11:14.431
  I1019 12:11:14.494781 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.680263ms
  I1019 12:11:14.595441 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.634751ms
  I1019 12:11:15.801166 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:11:15.801204 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1019 12:11:15.805946 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10271"},"items":null}

  I1019 12:11:15.810362 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10271"},"items":null}

  I1019 12:11:15.836675 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2809" for this suite. @ 10/19/24 12:11:15.843
â€¢ [9.555 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 10/19/24 12:11:15.851
  I1019 12:11:15.851394 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:11:15.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:11:15.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:11:15.871
  STEP: Creating configMap configmap-9613/configmap-test-1480e862-bef2-4378-9ea4-9b619d00dab4 @ 10/19/24 12:11:15.875
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:11:15.881
  STEP: Saw pod success @ 10/19/24 12:11:19.907
  I1019 12:11:19.911651 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-f5daecbe-6e80-48f7-8dd4-53e6793dfd1c container env-test: <nil>
  STEP: delete the pod @ 10/19/24 12:11:19.93
  I1019 12:11:19.949267 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9613" for this suite. @ 10/19/24 12:11:19.953
â€¢ [4.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 10/19/24 12:11:19.962
  I1019 12:11:19.962596 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:11:19.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:11:19.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:11:19.981
  STEP: creating service multi-endpoint-test in namespace services-693 @ 10/19/24 12:11:19.984
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-693 to expose endpoints map[] @ 10/19/24 12:11:19.998
  I1019 12:11:20.014328 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-693 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-693 @ 10/19/24 12:11:20.014
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-693 to expose endpoints map[pod1:[100]] @ 10/19/24 12:11:22.042
  I1019 12:11:22.055828 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-693 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-693 @ 10/19/24 12:11:22.055
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-693 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/19/24 12:11:24.076
  I1019 12:11:24.094763 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-693 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/19/24 12:11:24.094
  I1019 12:11:24.094819 20 resource.go:361] Creating new exec pod
  I1019 12:11:27.112381 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-693 exec execpod5wlnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1019 12:11:27.201264 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1019 12:11:27.201311 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:11:27.201391 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-693 exec execpod5wlnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 80'
  I1019 12:11:27.279397 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.63 80\nConnection to 10.152.183.63 80 port [tcp/http] succeeded!\n"
  I1019 12:11:27.279462 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:11:27.279545 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-693 exec execpod5wlnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1019 12:11:27.357776 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1019 12:11:27.357827 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:11:27.357904 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-693 exec execpod5wlnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 81'
  I1019 12:11:27.437398 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.63 81\nConnection to 10.152.183.63 81 port [tcp/*] succeeded!\n"
  I1019 12:11:27.437438 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-693 @ 10/19/24 12:11:27.437
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-693 to expose endpoints map[pod2:[101]] @ 10/19/24 12:11:27.452
  I1019 12:11:27.467769 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-693 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-693 @ 10/19/24 12:11:27.467
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-693 to expose endpoints map[] @ 10/19/24 12:11:27.485
  I1019 12:11:27.496960 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-693 exposes endpoints map[]
  I1019 12:11:27.517566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-693" for this suite. @ 10/19/24 12:11:27.522
â€¢ [7.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 10/19/24 12:11:27.529
  I1019 12:11:27.529826 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 12:11:27.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:11:27.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:11:27.549
  STEP: Creating pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588 @ 10/19/24 12:11:27.552
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 12:11:29.573
  I1019 12:11:29.578270 20 container_probe.go:1749] Initial restart count of pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd is 0
  I1019 12:11:29.582786 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:31.588219 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:33.594687 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:35.599877 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:37.606808 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:39.611945 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:41.617860 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:43.623859 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:45.629368 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:47.636380 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:49.642354 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:51.648522 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:53.655027 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:55.661615 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:57.666972 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:11:59.672982 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:01.678572 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:03.684298 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:05.690724 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:07.697274 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:09.703151 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:11.708872 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:13.715523 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:15.721627 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:17.728889 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:19.734600 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:21.740512 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:23.746745 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:25.752655 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:27.758734 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:29.765202 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:31.771922 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:33.777582 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:35.784169 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:37.791060 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:39.796782 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:41.802710 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:43.812442 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:45.818187 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:47.824990 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:49.830086 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:51.838758 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:53.845306 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:55.851517 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:57.857388 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:12:59.863324 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:01.869881 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:03.875530 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:05.881026 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:07.886595 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:09.893458 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:11.899899 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:13.904814 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:15.910441 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:17.917173 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:19.923449 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:21.929379 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:23.934594 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:25.941389 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:27.947858 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:29.953551 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:31.959554 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:33.964822 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:35.971156 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:37.977232 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:39.982499 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:41.988679 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:43.994355 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:46.000778 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:48.006941 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:50.012603 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:52.017940 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:54.023474 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:56.029637 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:13:58.035340 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:00.041942 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:02.047548 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:04.052063 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:06.058306 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:08.064323 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:10.069914 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:12.076240 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:14.082439 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:16.088956 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:18.094369 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:20.100181 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:22.106706 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:24.112016 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:26.117198 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:28.122799 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:30.128747 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:32.134745 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:34.141298 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:36.147437 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:38.152160 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:40.158268 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:42.164212 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:44.170395 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:46.177384 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:48.183371 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:50.189864 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:52.195246 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:54.201059 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:56.205893 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:14:58.212080 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:00.218551 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:02.225613 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:04.231458 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:06.237967 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:08.244115 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:10.250608 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:12.255370 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:14.261297 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:16.267898 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:18.274791 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:20.280062 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:22.286944 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:24.292516 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:26.297828 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  I1019 12:15:28.304841 20 container_probe.go:1759] Get pod liveness-6de1cf9c-02b4-41a9-9138-f77e7c10bacd in namespace container-probe-9588
  STEP: deleting the pod @ 10/19/24 12:15:30.305
  I1019 12:15:30.319344 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9588" for this suite. @ 10/19/24 12:15:30.324
â€¢ [242.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 10/19/24 12:15:30.334
  I1019 12:15:30.334450 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/19/24 12:15:30.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:15:30.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:15:30.354
  I1019 12:15:30.359862 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2759" for this suite. @ 10/19/24 12:15:30.364
â€¢ [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/19/24 12:15:30.373
  I1019 12:15:30.373317 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename subpath @ 10/19/24 12:15:30.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:15:30.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:15:30.392
  STEP: Setting up data @ 10/19/24 12:15:30.394
  STEP: Creating pod pod-subpath-test-downwardapi-dzbm @ 10/19/24 12:15:30.407
  STEP: Creating a pod to test atomic-volume-subpath @ 10/19/24 12:15:30.407
  STEP: Saw pod success @ 10/19/24 12:15:52.483
  I1019 12:15:52.487396 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-subpath-test-downwardapi-dzbm container test-container-subpath-downwardapi-dzbm: <nil>
  STEP: delete the pod @ 10/19/24 12:15:52.498
  STEP: Deleting pod pod-subpath-test-downwardapi-dzbm @ 10/19/24 12:15:52.516
  I1019 12:15:52.516869 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-dzbm" in namespace "subpath-4748"
  I1019 12:15:52.520717 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4748" for this suite. @ 10/19/24 12:15:52.525
â€¢ [22.160 seconds]
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 10/19/24 12:15:52.533
  I1019 12:15:52.533450 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename ingressclass @ 10/19/24 12:15:52.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:15:52.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:15:52.555
  STEP: getting /apis @ 10/19/24 12:15:52.558
  STEP: getting /apis/networking.k8s.io @ 10/19/24 12:15:52.56
  STEP: getting /apis/networking.k8s.iov1 @ 10/19/24 12:15:52.562
  STEP: creating @ 10/19/24 12:15:52.562
  STEP: getting @ 10/19/24 12:15:52.577
  STEP: listing @ 10/19/24 12:15:52.581
  STEP: watching @ 10/19/24 12:15:52.585
  I1019 12:15:52.585301 20 ingressclass.go:348] starting watch
  STEP: patching @ 10/19/24 12:15:52.586
  STEP: updating @ 10/19/24 12:15:52.591
  I1019 12:15:52.597228 20 ingressclass.go:364] waiting for watch events with expected annotations
  I1019 12:15:52.597265 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 10/19/24 12:15:52.597
  STEP: deleting a collection @ 10/19/24 12:15:52.612
  I1019 12:15:52.634206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5489" for this suite. @ 10/19/24 12:15:52.638
â€¢ [0.113 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 10/19/24 12:15:52.646
  I1019 12:15:52.646589 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:15:52.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:15:52.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:15:52.665
  STEP: Setting up server cert @ 10/19/24 12:15:52.696
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:15:52.947
  STEP: Deploying the webhook pod @ 10/19/24 12:15:52.958
  STEP: Wait for the deployment to be ready @ 10/19/24 12:15:52.973
  I1019 12:15:52.983477 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:15:54.998
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:15:55.01
  I1019 12:15:56.011422 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/19/24 12:15:56.093
  STEP: Creating a configMap that should be mutated @ 10/19/24 12:15:56.104
  STEP: Deleting the collection of validation webhooks @ 10/19/24 12:15:56.125
  STEP: Creating a configMap that should not be mutated @ 10/19/24 12:15:56.193
  I1019 12:15:56.251956 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8776" for this suite. @ 10/19/24 12:15:56.255
  STEP: Destroying namespace "webhook-markers-1435" for this suite. @ 10/19/24 12:15:56.266
â€¢ [3.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 10/19/24 12:15:56.273
  I1019 12:15:56.273765 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 12:15:56.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:15:56.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:15:56.292
  I1019 12:15:58.315225 20 delete.go:62] Deleting pod "var-expansion-3da37b5b-2190-472a-92cd-4632c26593e5" in namespace "var-expansion-8441"
  I1019 12:15:58.323253 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-3da37b5b-2190-472a-92cd-4632c26593e5" to be fully deleted
  I1019 12:16:00.332706 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8441" for this suite. @ 10/19/24 12:16:00.337
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/19/24 12:16:00.348
  I1019 12:16:00.348391 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:16:00.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:16:00.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:16:00.365
  STEP: Creating projection with secret that has name projected-secret-test-aae33663-125b-41a5-b4d4-cd71b279da54 @ 10/19/24 12:16:00.368
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:16:00.373
  STEP: Saw pod success @ 10/19/24 12:16:04.401
  I1019 12:16:04.405331 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-secrets-53ffd54c-a9a8-4b5b-8de3-38dd098d368d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:16:04.414
  I1019 12:16:04.436314 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1537" for this suite. @ 10/19/24 12:16:04.44
â€¢ [4.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 10/19/24 12:16:04.449
  I1019 12:16:04.449435 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:16:04.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:16:04.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:16:04.467
  STEP: creating an Endpoint @ 10/19/24 12:16:04.474
  STEP: waiting for available Endpoint @ 10/19/24 12:16:04.48
  STEP: listing all Endpoints @ 10/19/24 12:16:04.481
  STEP: updating the Endpoint @ 10/19/24 12:16:04.485
  STEP: fetching the Endpoint @ 10/19/24 12:16:04.492
  STEP: patching the Endpoint @ 10/19/24 12:16:04.496
  STEP: fetching the Endpoint @ 10/19/24 12:16:04.502
  STEP: deleting the Endpoint by Collection @ 10/19/24 12:16:04.506
  STEP: waiting for Endpoint deletion @ 10/19/24 12:16:04.517
  STEP: fetching the Endpoint @ 10/19/24 12:16:04.518
  I1019 12:16:04.521905 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5558" for this suite. @ 10/19/24 12:16:04.526
â€¢ [0.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 10/19/24 12:16:04.535
  I1019 12:16:04.535443 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:16:04.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:16:04.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:16:04.558
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/19/24 12:16:04.56
  STEP: Saw pod success @ 10/19/24 12:16:06.583
  I1019 12:16:06.587354 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-1c9beb15-67f8-49c2-a9ce-40d3e1d3b284 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:16:06.595
  I1019 12:16:06.612566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-636" for this suite. @ 10/19/24 12:16:06.617
â€¢ [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 10/19/24 12:16:06.626
  I1019 12:16:06.626161 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename podtemplate @ 10/19/24 12:16:06.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:16:06.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:16:06.646
  STEP: Create set of pod templates @ 10/19/24 12:16:06.649
  I1019 12:16:06.653764 20 podtemplates.go:143] created test-podtemplate-1
  I1019 12:16:06.659915 20 podtemplates.go:143] created test-podtemplate-2
  I1019 12:16:06.666259 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/19/24 12:16:06.666
  STEP: delete collection of pod templates @ 10/19/24 12:16:06.671
  I1019 12:16:06.671440 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/19/24 12:16:06.693
  I1019 12:16:06.693467 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1019 12:16:06.698399 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1912" for this suite. @ 10/19/24 12:16:06.703
â€¢ [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 10/19/24 12:16:06.712
  I1019 12:16:06.712375 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 12:16:06.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:16:06.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:16:06.73
  STEP: Creating pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982 @ 10/19/24 12:16:06.733
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 12:16:08.753
  I1019 12:16:08.758326 20 container_probe.go:1749] Initial restart count of pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed is 0
  I1019 12:16:08.762006 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:10.768749 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:12.774607 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:14.779893 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:16.786309 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:18.791975 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:20.798088 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:22.803778 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:24.809801 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:26.816667 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:28.822729 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:30.829088 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:32.834403 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:34.840825 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:36.846105 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:38.850843 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:40.856689 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:42.863171 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:44.869177 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:46.874766 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:48.880320 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:50.885782 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:52.892120 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:54.899111 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:56.904401 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:16:58.910446 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:00.917309 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:02.924244 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:04.930638 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:06.937682 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:08.943287 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:10.949751 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:12.956516 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:14.961835 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:16.967435 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:18.973119 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:20.978612 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:22.986507 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:24.993453 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:26.999950 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:29.005005 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:31.010276 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:33.016908 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:35.022422 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:37.028585 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:39.034008 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:41.039787 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:43.045109 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:45.051302 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:47.056787 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:49.062877 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:51.068621 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:53.074566 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:55.081470 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:57.087600 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:17:59.092946 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:01.099264 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:03.104836 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:05.110712 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:07.116560 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:09.122742 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:11.128242 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:13.133873 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:15.139197 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:17.144994 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:19.151235 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:21.156361 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:23.161576 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:25.167960 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:27.173869 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:29.179750 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:31.184878 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:33.190764 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:35.196546 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:37.202421 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:39.207385 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:41.213480 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:43.218898 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:45.224880 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:47.230061 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:49.236414 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:51.242252 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:53.249047 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:55.254757 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:57.260118 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:18:59.266636 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:01.272156 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:03.277968 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:05.284563 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:07.289999 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:09.295489 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:11.301602 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:13.307544 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:15.312808 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:17.317935 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:19.324478 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:21.330317 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:23.336191 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:25.341900 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:27.347023 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:29.352826 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:31.357971 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:33.364042 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:35.369883 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:37.376044 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:39.382110 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:41.389472 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:43.395934 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:45.401745 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:47.407275 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:49.413787 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:51.420927 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:53.426489 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:55.432681 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:57.438604 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:19:59.443689 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:20:01.450110 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:20:03.456120 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:20:05.462516 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  I1019 12:20:07.467435 20 container_probe.go:1759] Get pod busybox-898019a7-35f5-433e-8f4e-9d75cb38baed in namespace container-probe-7982
  STEP: deleting the pod @ 10/19/24 12:20:09.467
  I1019 12:20:09.484554 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7982" for this suite. @ 10/19/24 12:20:09.489
â€¢ [242.785 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 10/19/24 12:20:09.497
  I1019 12:20:09.497438 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:20:09.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:20:09.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:20:09.517
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:20:09.519
  STEP: Saw pod success @ 10/19/24 12:20:13.547
  I1019 12:20:13.551675 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-bad59745-7684-41c1-945b-285aaa655898 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:20:13.569
  I1019 12:20:13.588347 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3477" for this suite. @ 10/19/24 12:20:13.592
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 10/19/24 12:20:13.601
  I1019 12:20:13.601443 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:20:13.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:20:13.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:20:13.62
  STEP: Creating configMap with name configmap-test-volume-map-13f997eb-8abe-4a48-a7c0-298429e389e4 @ 10/19/24 12:20:13.623
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:20:13.628
  STEP: Saw pod success @ 10/19/24 12:20:17.656
  I1019 12:20:17.660211 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-99022e72-ec82-4e9e-afd8-403181fd1bc9 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 12:20:17.668
  I1019 12:20:17.691417 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4739" for this suite. @ 10/19/24 12:20:17.695
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 10/19/24 12:20:17.702
  I1019 12:20:17.702361 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:20:17.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:20:17.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:20:17.72
  STEP: Creating configMap with name configmap-test-volume-47d6ef08-1829-4580-b364-3ec77a60786e @ 10/19/24 12:20:17.723
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:20:17.729
  STEP: Saw pod success @ 10/19/24 12:20:21.758
  I1019 12:20:21.762056 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-021d310d-11dc-44d0-b689-1a768e3e6344 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:20:21.77
  I1019 12:20:21.794709 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2487" for this suite. @ 10/19/24 12:20:21.799
â€¢ [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 10/19/24 12:20:21.808
  I1019 12:20:21.808350 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 12:20:21.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:20:21.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:20:21.833
  STEP: creating the pod @ 10/19/24 12:20:21.839
  STEP: waiting for pod running @ 10/19/24 12:20:21.853
  STEP: creating a file in subpath @ 10/19/24 12:20:23.862
  I1019 12:20:23.866714 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2141 PodName:var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:20:23.866738 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:20:23.867185 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:20:23.867226 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2141/pods/var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/19/24 12:20:23.91
  I1019 12:20:23.914419 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2141 PodName:var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:20:23.914441 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:20:23.914839 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:20:23.914875 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2141/pods/var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/19/24 12:20:23.95
  I1019 12:20:24.464617 20 pod_client.go:173] Successfully updated pod "var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc"
  STEP: waiting for annotated pod running @ 10/19/24 12:20:24.464
  STEP: deleting the pod gracefully @ 10/19/24 12:20:24.469
  I1019 12:20:24.469292 20 delete.go:62] Deleting pod "var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc" in namespace "var-expansion-2141"
  I1019 12:20:24.479231 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-1e190403-4ba8-4fdd-9360-b35a289946bc" to be fully deleted
  I1019 12:20:56.577776 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2141" for this suite. @ 10/19/24 12:20:56.582
â€¢ [34.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 10/19/24 12:20:56.594
  I1019 12:20:56.594488 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sysctl @ 10/19/24 12:20:56.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:20:56.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:20:56.612
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/19/24 12:20:56.617
  STEP: Watching for error events or started pod @ 10/19/24 12:20:56.626
  STEP: Waiting for pod completion @ 10/19/24 12:20:58.633
  STEP: Checking that the pod succeeded @ 10/19/24 12:21:00.649
  STEP: Getting logs from the pod @ 10/19/24 12:21:00.649
  STEP: Checking that the sysctl is actually updated @ 10/19/24 12:21:00.656
  I1019 12:21:00.656920 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5110" for this suite. @ 10/19/24 12:21:00.661
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 10/19/24 12:21:00.671
  I1019 12:21:00.671948 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename disruption @ 10/19/24 12:21:00.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:21:00.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:21:00.689
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:21:00.698
  STEP: Waiting for all pods to be running @ 10/19/24 12:21:02.732
  I1019 12:21:02.740910 20 disruption.go:691] running pods: 0 < 3
  I1019 12:21:04.743304 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9650" for this suite. @ 10/19/24 12:21:04.748
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 10/19/24 12:21:04.757
  I1019 12:21:04.757122 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:21:04.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:21:04.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:21:04.776
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:21:04.779
  STEP: Saw pod success @ 10/19/24 12:21:08.807
  I1019 12:21:08.811580 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod downwardapi-volume-67c35ae8-c498-47e3-821d-8a5b05a1de09 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:21:08.832
  I1019 12:21:08.850832 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1621" for this suite. @ 10/19/24 12:21:08.855
â€¢ [4.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/19/24 12:21:08.863
  I1019 12:21:08.863956 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 12:21:08.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:21:08.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:21:08.882
  STEP: creating pod @ 10/19/24 12:21:08.884
  I1019 12:21:10.914843 20 pods.go:83] Pod pod-hostip-7e0f1102-f9c3-4caa-905e-7fa9ffc9bc61 has hostIP: 172.31.84.96
  I1019 12:21:10.914962 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5791" for this suite. @ 10/19/24 12:21:10.92
â€¢ [2.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 10/19/24 12:21:10.929
  I1019 12:21:10.929438 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename cronjob @ 10/19/24 12:21:10.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:21:10.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:21:10.948
  STEP: Creating a ReplaceConcurrent cronjob @ 10/19/24 12:21:10.95
  STEP: Ensuring a job is scheduled @ 10/19/24 12:21:10.955
  STEP: Ensuring exactly one is scheduled @ 10/19/24 12:22:00.96
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/19/24 12:22:00.964
  STEP: Ensuring the job is replaced with a new one @ 10/19/24 12:22:00.968
  STEP: Removing cronjob @ 10/19/24 12:23:00.973
  I1019 12:23:00.980850 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8820" for this suite. @ 10/19/24 12:23:00.985
â€¢ [110.064 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 10/19/24 12:23:00.993
  I1019 12:23:00.993485 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename endpointslice @ 10/19/24 12:23:00.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:23:01.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:23:01.015
  STEP: referencing a single matching pod @ 10/19/24 12:23:03.099
  STEP: referencing matching pods with named port @ 10/19/24 12:23:03.106
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/19/24 12:23:03.114
  STEP: recreating EndpointSlices after they've been deleted @ 10/19/24 12:23:03.123
  I1019 12:23:03.148262 20 endpointslice.go:938] EndpointSlice for Service endpointslice-2139/example-named-port not found
  I1019 12:23:05.154065 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2139" for this suite. @ 10/19/24 12:23:05.158
â€¢ [4.173 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 10/19/24 12:23:05.166
  I1019 12:23:05.166831 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:23:05.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:23:05.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:23:05.187
  STEP: creating service in namespace services-5105 @ 10/19/24 12:23:05.189
  STEP: creating service affinity-nodeport-transition in namespace services-5105 @ 10/19/24 12:23:05.189
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5105 @ 10/19/24 12:23:05.21
  I1019 12:23:05.219802      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5105, replica count: 3
  I1019 12:23:08.270909      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:23:08.285465 20 resource.go:361] Creating new exec pod
  I1019 12:23:11.311380 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1019 12:23:11.404595 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1019 12:23:11.404641 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:23:11.404719 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.26 80'
  I1019 12:23:11.483924 20 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 10.152.183.26 80\nConnection to 10.152.183.26 80 port [tcp/http] succeeded!\n"
  I1019 12:23:11.483972 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:23:11.484051 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.204 31166'
  I1019 12:23:11.570185 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.204 31166\nConnection to 172.31.3.204 31166 port [tcp/*] succeeded!\n"
  I1019 12:23:11.570227 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:23:11.570353 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.96 31166'
  I1019 12:23:11.648076 20 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.84.96 31166\nConnection to 172.31.84.96 31166 port [tcp/*] succeeded!\n"
  I1019 12:23:11.648122 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:23:11.659218 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.96:31166/ ; done'
  I1019 12:23:11.854866 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n"
  I1019 12:23:11.854943 20 builder.go:147] stdout: "\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d"
  I1019 12:23:11.855192 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855207 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855214 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855221 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855228 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855234 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855240 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855247 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855253 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855259 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855265 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855276 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855282 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855289 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855295 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:11.855301 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:41.856002 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.96:31166/ ; done'
  I1019 12:23:42.012651 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n"
  I1019 12:23:42.012703 20 builder.go:147] stdout: "\naffinity-nodeport-transition-6dqxs\naffinity-nodeport-transition-pbmd9\naffinity-nodeport-transition-pbmd9\naffinity-nodeport-transition-6dqxs\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-6dqxs\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-pbmd9\naffinity-nodeport-transition-6dqxs\naffinity-nodeport-transition-pbmd9\naffinity-nodeport-transition-pbmd9\naffinity-nodeport-transition-6dqxs\naffinity-nodeport-transition-6dqxs\naffinity-nodeport-transition-pbmd9\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d"
  I1019 12:23:42.012718 20 service.go:242] Received response from host: affinity-nodeport-transition-6dqxs
  I1019 12:23:42.012725 20 service.go:242] Received response from host: affinity-nodeport-transition-pbmd9
  I1019 12:23:42.012731 20 service.go:242] Received response from host: affinity-nodeport-transition-pbmd9
  I1019 12:23:42.012737 20 service.go:242] Received response from host: affinity-nodeport-transition-6dqxs
  I1019 12:23:42.012742 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.012748 20 service.go:242] Received response from host: affinity-nodeport-transition-6dqxs
  I1019 12:23:42.012753 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.012759 20 service.go:242] Received response from host: affinity-nodeport-transition-pbmd9
  I1019 12:23:42.012765 20 service.go:242] Received response from host: affinity-nodeport-transition-6dqxs
  I1019 12:23:42.012771 20 service.go:242] Received response from host: affinity-nodeport-transition-pbmd9
  I1019 12:23:42.012782 20 service.go:242] Received response from host: affinity-nodeport-transition-pbmd9
  I1019 12:23:42.012786 20 service.go:242] Received response from host: affinity-nodeport-transition-6dqxs
  I1019 12:23:42.012791 20 service.go:242] Received response from host: affinity-nodeport-transition-6dqxs
  I1019 12:23:42.012797 20 service.go:242] Received response from host: affinity-nodeport-transition-pbmd9
  I1019 12:23:42.012802 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.012807 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.027920 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-5105 exec execpod-affinity678kd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.96:31166/ ; done'
  I1019 12:23:42.188907 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31166/\n"
  I1019 12:23:42.188965 20 builder.go:147] stdout: "\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d\naffinity-nodeport-transition-s422d"
  I1019 12:23:42.188979 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.188987 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189064 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189070 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189077 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189084 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189209 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189217 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189224 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189231 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189239 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189248 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189262 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189269 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189275 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189282 20 service.go:242] Received response from host: affinity-nodeport-transition-s422d
  I1019 12:23:42.189350 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5105, will wait for the garbage collector to delete the pods @ 10/19/24 12:23:42.209
  I1019 12:23:42.272183 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.203511ms
  I1019 12:23:42.373358 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.171195ms
  I1019 12:23:45.108975 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5105" for this suite. @ 10/19/24 12:23:45.113
â€¢ [39.954 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 10/19/24 12:23:45.121
  I1019 12:23:45.121573 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:23:45.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:23:45.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:23:45.141
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:23:45.143
  STEP: Saw pod success @ 10/19/24 12:23:49.171
  I1019 12:23:49.175674 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-b2e9aeb9-ed19-4e10-ac33-b306de7f0d7d container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:23:49.187
  I1019 12:23:49.206359 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6598" for this suite. @ 10/19/24 12:23:49.21
â€¢ [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/19/24 12:23:49.218
  I1019 12:23:49.218095 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 12:23:49.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:23:49.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:23:49.236
  I1019 12:23:49.239090 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1019 12:23:49.244914 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1019 12:23:49.256396 20 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I1019 12:23:51.266387 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1019 12:23:51.269797 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1019 12:23:51.282310 20 deployment.go:313] Updating deployment test-recreate-deployment
  I1019 12:23:51.282337 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1019 12:23:51.364792 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-118",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "223d3e0b-99de-4f07-8a4e-f913895ae4e2",
      ResourceVersion: (string) (len=5) "12955",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864937429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1019 12:23:51.369169 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-118",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a957edb-2eb2-4493-8bbd-e2d334512714",
      ResourceVersion: (string) (len=5) "12954",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864937431,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "223d3e0b-99de-4f07-8a4e-f913895ae4e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 32 33 64 33 65  30 62 2d 39 39 64 65 2d  |\"223d3e0b-99de-|
              00000120  34 66 30 37 2d 38 61 34  65 2d 66 39 31 33 38 39  |4f07-8a4e-f91389|
              00000130  35 61 65 34 65 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5ae4e2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:23:51.369650 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1019 12:23:51.369870 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-118",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d33bf6f1-7b3a-42e2-8b71-666a2276a1c4",
      ResourceVersion: (string) (len=5) "12944",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864937429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "223d3e0b-99de-4f07-8a4e-f913895ae4e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 32 33 64 33 65  30 62 2d 39 39 64 65 2d  |\"223d3e0b-99de-|
              00000120  34 66 30 37 2d 38 61 34  65 2d 66 39 31 33 38 39  |4f07-8a4e-f91389|
              00000130  35 61 65 34 65 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5ae4e2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:23:51.378550 20 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-qg52l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-qg52l",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=14) "deployment-118",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31c0c08a-d815-4111-bd43-3ad70f69d18a",
      ResourceVersion: (string) (len=5) "12949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864937431,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "3a957edb-2eb2-4493-8bbd-e2d334512714",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  39 35 37 65 64 62 2d 32  |d\":\"3a957edb-2|
              00000090  65 62 32 2d 34 34 39 33  2d 38 62 62 64 2d 65 32  |eb2-4493-8bbd-e2|
              000000a0  64 33 33 34 35 31 32 37  31 34 5c 22 7d 22 3a 7b  |d334512714\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8zmrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8zmrx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864937431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:23:51.379237 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-118" for this suite. @ 10/19/24 12:23:51.383
â€¢ [2.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/19/24 12:23:51.393
  I1019 12:23:51.393123 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename events @ 10/19/24 12:23:51.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:23:51.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:23:51.42
  STEP: creating a test event @ 10/19/24 12:23:51.425
  STEP: listing events in all namespaces @ 10/19/24 12:23:51.433
  STEP: listing events in test namespace @ 10/19/24 12:23:51.446
  STEP: listing events with field selection filtering on source @ 10/19/24 12:23:51.449
  STEP: listing events with field selection filtering on reportingController @ 10/19/24 12:23:51.452
  STEP: getting the test event @ 10/19/24 12:23:51.456
  STEP: patching the test event @ 10/19/24 12:23:51.46
  STEP: getting the test event @ 10/19/24 12:23:51.47
  STEP: updating the test event @ 10/19/24 12:23:51.473
  STEP: getting the test event @ 10/19/24 12:23:51.48
  STEP: deleting the test event @ 10/19/24 12:23:51.485
  STEP: listing events in all namespaces @ 10/19/24 12:23:51.494
  STEP: listing events in test namespace @ 10/19/24 12:23:51.505
  I1019 12:23:51.509095 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7683" for this suite. @ 10/19/24 12:23:51.513
â€¢ [0.127 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 10/19/24 12:23:51.52
  I1019 12:23:51.520549 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename aggregator @ 10/19/24 12:23:51.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:23:51.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:23:51.538
  I1019 12:23:51.541084 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Registering the sample API server. @ 10/19/24 12:23:51.541
  I1019 12:23:51.675731 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1019 12:23:51.711672 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1019 12:23:53.765471 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:23:55.771447 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:23:57.772302 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:23:59.771781 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:01.772417 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:03.770700 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:05.772185 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:07.771786 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:09.770867 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:11.772220 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:13.771071 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1019 12:24:15.894746 20 aggregator.go:755] Waited 114.504574ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/19/24 12:24:15.926
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/19/24 12:24:15.931
  STEP: List APIServices @ 10/19/24 12:24:15.94
  I1019 12:24:15.944777 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/19/24 12:24:15.944
  I1019 12:24:15.957879 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/19/24 12:24:15.957
  I1019 12:24:15.969445 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.October, 19, 12, 24, 15, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/19/24 12:24:15.969
  I1019 12:24:15.973202 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-10-19 12:24:15 +0000 UTC Passed all checks passed}
  I1019 12:24:15.973225 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 12:24:15.973235 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/19/24 12:24:15.973
  I1019 12:24:15.984822 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-55708101" @ 10/19/24 12:24:15.984
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/19/24 12:24:15.994
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/19/24 12:24:16
  STEP: Patch APIService Status @ 10/19/24 12:24:16.004
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/19/24 12:24:16.012
  I1019 12:24:16.016404 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-10-19 12:24:15 +0000 UTC Passed all checks passed}
  I1019 12:24:16.016432 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 12:24:16.016445 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1019 12:24:16.016456 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 10/19/24 12:24:16.016
  STEP: Confirm that the generated APIService has been deleted @ 10/19/24 12:24:16.028
  I1019 12:24:16.028685 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1019 12:24:16.033752 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1019 12:24:16.033772 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1019 12:24:16.170036 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-448" for this suite. @ 10/19/24 12:24:16.173
â€¢ [24.661 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 10/19/24 12:24:16.181
  I1019 12:24:16.181787 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename chunking @ 10/19/24 12:24:16.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:16.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:16.201
  STEP: creating a large number of resources @ 10/19/24 12:24:16.203
  STEP: retrieving those results in paged fashion several times @ 10/19/24 12:24:33.889
  I1019 12:24:33.936967 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1019 12:24:33.987726 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1019 12:24:34.038842 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1019 12:24:34.087076 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1019 12:24:34.136694 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1019 12:24:34.188597 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1019 12:24:34.237828 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1019 12:24:34.288221 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1019 12:24:34.337707 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1019 12:24:34.387621 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1019 12:24:34.438147 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1019 12:24:34.488370 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1019 12:24:34.537547 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1019 12:24:34.588476 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1019 12:24:34.639282 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1019 12:24:34.687090 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1019 12:24:34.738168 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1019 12:24:34.787824 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1019 12:24:34.836592 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1019 12:24:34.888332 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1019 12:24:34.937528 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1019 12:24:34.987732 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1019 12:24:35.037149 20 chunking.go:98] Retrieved 17/17 results with rv 13592 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1019 12:24:35.087235 20 chunking.go:98] Retrieved 9/17 results with rv 13592 and continue 
  I1019 12:24:35.137236 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1019 12:24:35.187964 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1019 12:24:35.237770 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1019 12:24:35.288371 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1019 12:24:35.338268 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1019 12:24:35.387981 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1019 12:24:35.437111 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1019 12:24:35.487901 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1019 12:24:35.537788 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1019 12:24:35.587916 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1019 12:24:35.637704 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1019 12:24:35.688629 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1019 12:24:35.737547 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1019 12:24:35.788465 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1019 12:24:35.837833 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1019 12:24:35.887767 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1019 12:24:35.938668 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1019 12:24:35.988464 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1019 12:24:36.036821 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1019 12:24:36.088438 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1019 12:24:36.138485 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1019 12:24:36.187535 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1019 12:24:36.238254 20 chunking.go:98] Retrieved 17/17 results with rv 13596 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1019 12:24:36.287320 20 chunking.go:98] Retrieved 9/17 results with rv 13596 and continue 
  I1019 12:24:36.337478 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1019 12:24:36.388354 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1019 12:24:36.437943 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1019 12:24:36.487317 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1019 12:24:36.538227 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1019 12:24:36.588013 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1019 12:24:36.637358 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1019 12:24:36.687969 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1019 12:24:36.737548 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1019 12:24:36.787380 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1019 12:24:36.838259 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1019 12:24:36.887918 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1019 12:24:36.937114 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1019 12:24:36.987980 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1019 12:24:37.037497 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1019 12:24:37.087316 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1019 12:24:37.138225 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1019 12:24:37.187983 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1019 12:24:37.238023 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1019 12:24:37.288443 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1019 12:24:37.337964 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1019 12:24:37.386609 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1019 12:24:37.437959 20 chunking.go:98] Retrieved 17/17 results with rv 13598 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM1OTgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1019 12:24:37.486707 20 chunking.go:98] Retrieved 9/17 results with rv 13598 and continue 
  STEP: retrieving those results all at once @ 10/19/24 12:24:37.486
  I1019 12:24:37.543798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6593" for this suite. @ 10/19/24 12:24:37.588
â€¢ [21.462 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 10/19/24 12:24:37.644
  I1019 12:24:37.644173 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename server-version @ 10/19/24 12:24:37.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:37.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:37.66
  STEP: Request ServerVersion @ 10/19/24 12:24:37.662
  STEP: Confirm major version @ 10/19/24 12:24:37.663
  I1019 12:24:37.663428 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 10/19/24 12:24:37.663
  I1019 12:24:37.663454 20 server_version.go:58] cleanMinorVersion: 31
  I1019 12:24:37.663463 20 server_version.go:62] Minor version: 31
  I1019 12:24:37.663727 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7882" for this suite. @ 10/19/24 12:24:37.67
â€¢ [0.036 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 10/19/24 12:24:37.679
  I1019 12:24:37.679959 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:24:37.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:37.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:37.698
  STEP: Setting up server cert @ 10/19/24 12:24:37.721
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:24:38.023
  STEP: Deploying the webhook pod @ 10/19/24 12:24:38.034
  STEP: Wait for the deployment to be ready @ 10/19/24 12:24:38.048
  I1019 12:24:38.060470 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:24:40.074
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:24:40.086
  I1019 12:24:41.086288 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1019 12:24:41.096531 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/19/24 12:24:41.606
  STEP: Creating a custom resource that should be denied by the webhook @ 10/19/24 12:24:41.619
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/19/24 12:24:43.633
  STEP: Updating the custom resource with disallowed data should be denied @ 10/19/24 12:24:43.639
  STEP: Deleting the custom resource should be denied @ 10/19/24 12:24:43.649
  STEP: Remove the offending key and value from the custom resource data @ 10/19/24 12:24:43.658
  STEP: Deleting the updated custom resource should be successful @ 10/19/24 12:24:43.667
  I1019 12:24:44.256328 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3910" for this suite. @ 10/19/24 12:24:44.26
  STEP: Destroying namespace "webhook-markers-5713" for this suite. @ 10/19/24 12:24:44.268
â€¢ [6.598 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 10/19/24 12:24:44.277
  I1019 12:24:44.277964 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:24:44.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:44.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:44.297
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:24:44.299
  STEP: Saw pod success @ 10/19/24 12:24:46.324
  I1019 12:24:46.328663 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-e785c79d-a291-458f-bc39-2c0998d8497d container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:24:46.336
  I1019 12:24:46.352934 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4438" for this suite. @ 10/19/24 12:24:46.357
â€¢ [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 10/19/24 12:24:46.366
  I1019 12:24:46.366065 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename security-context-test @ 10/19/24 12:24:46.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:46.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:46.386
  I1019 12:24:48.420298 20 security_context.go:538] Got logs for pod "busybox-privileged-false-3db977eb-9b2a-4602-b5b2-ccb326c74199": "ip: RTNETLINK answers: Operation not permitted\n"
  I1019 12:24:48.420416 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6685" for this suite. @ 10/19/24 12:24:48.425
â€¢ [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 10/19/24 12:24:48.435
  I1019 12:24:48.435904 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:24:48.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:48.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:48.454
  STEP: creating Agnhost RC @ 10/19/24 12:24:48.456
  I1019 12:24:48.456324 20 kubectl.go:1537] namespace kubectl-7571
  I1019 12:24:48.456372 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-7571 create -f -'
  I1019 12:24:48.537305 20 builder.go:146] stderr: ""
  I1019 12:24:48.537339 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/19/24 12:24:48.537
  I1019 12:24:49.542451 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 12:24:49.542487 20 framework.go:733] Found 1 / 1
  I1019 12:24:49.542502 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1019 12:24:49.547048 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 12:24:49.547074 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1019 12:24:49.547081 20 kubectl.go:1544] wait on agnhost-primary startup in kubectl-7571 
  I1019 12:24:49.547124 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-7571 logs agnhost-primary-x5bbp agnhost-primary'
  I1019 12:24:49.598072 20 builder.go:146] stderr: ""
  I1019 12:24:49.598120 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 10/19/24 12:24:49.598
  I1019 12:24:49.598209 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-7571 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1019 12:24:49.657290 20 builder.go:146] stderr: ""
  I1019 12:24:49.657330 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I1019 12:24:49.665772 20 utils.go:1203] Service rm2 in namespace kubectl-7571 found.
  STEP: exposing service @ 10/19/24 12:24:51.675
  I1019 12:24:51.675260 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-7571 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1019 12:24:51.738357 20 builder.go:146] stderr: ""
  I1019 12:24:51.738399 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I1019 12:24:51.746763 20 utils.go:1203] Service rm3 in namespace kubectl-7571 found.
  I1019 12:24:53.755866 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7571" for this suite. @ 10/19/24 12:24:53.759
â€¢ [5.332 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 10/19/24 12:24:53.767
  I1019 12:24:53.767722 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 12:24:53.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:24:53.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:24:53.786
  I1019 12:24:53.809949 20 service_accounts.go:618] created pod
  STEP: Saw pod success @ 10/19/24 12:24:57.827
  I1019 12:25:27.829859 20 service_accounts.go:624] polling logs
  I1019 12:25:27.843261 20 service_accounts.go:634] Pod logs: 
  I1019 12:24:54.347094       1 log.go:245] OK: Got token
  I1019 12:24:54.347154       1 log.go:245] validating with in-cluster discovery
  I1019 12:24:54.347335       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1019 12:24:54.347503       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4556:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00045ef30), NotBefore:(*jwt.NumericDate)(0xc00045f020), IssuedAt:(*jwt.NumericDate)(0xc00045ef40), ID:"60e22719-1ed2-4ecf-9b61-ec4461c133d0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4556", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9722b912-93d3-430c-b14b-53ae0e005606"}}}
  I1019 12:24:54.354320       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1019 12:24:54.357094       1 log.go:245] OK: Validated signature on JWT
  I1019 12:24:54.357159       1 log.go:245] OK: Got valid claims from token!
  I1019 12:24:54.357170       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4556:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000123b0), NotBefore:(*jwt.NumericDate)(0xc0000123d8), IssuedAt:(*jwt.NumericDate)(0xc0000123b8), ID:"60e22719-1ed2-4ecf-9b61-ec4461c133d0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4556", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9722b912-93d3-430c-b14b-53ae0e005606"}}}

  I1019 12:25:27.843302 20 service_accounts.go:638] completed pod
  I1019 12:25:27.851077 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4556" for this suite. @ 10/19/24 12:25:27.854
â€¢ [34.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 10/19/24 12:25:27.864
  I1019 12:25:27.864123 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 12:25:27.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:25:27.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:25:27.881
  STEP: Creating a test headless service @ 10/19/24 12:25:27.883
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8468.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8468.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/19/24 12:25:27.889
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8468.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8468.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/19/24 12:25:27.889
  STEP: creating a pod to probe DNS @ 10/19/24 12:25:27.889
  STEP: submitting the pod to kubernetes @ 10/19/24 12:25:27.889
  STEP: retrieving the pod @ 10/19/24 12:25:33.925
  STEP: looking for the results for each expected name from probers @ 10/19/24 12:25:33.928
  I1019 12:25:33.947602 20 dns_common.go:527] DNS probes using dns-8468/dns-test-0d805f7e-e463-4226-bede-4cc41644d813 succeeded

  STEP: deleting the pod @ 10/19/24 12:25:33.947
  STEP: deleting the test headless service @ 10/19/24 12:25:33.968
  I1019 12:25:33.982164 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8468" for this suite. @ 10/19/24 12:25:33.986
â€¢ [6.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 10/19/24 12:25:33.995
  I1019 12:25:33.995765 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:25:33.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:25:34.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:25:34.014
  STEP: Creating configMap with name configmap-test-upd-a52c98fd-5b17-4814-9d5c-dd6496bdc429 @ 10/19/24 12:25:34.02
  STEP: Creating the pod @ 10/19/24 12:25:34.025
  STEP: Updating configmap configmap-test-upd-a52c98fd-5b17-4814-9d5c-dd6496bdc429 @ 10/19/24 12:25:36.068
  STEP: waiting to observe update in volume @ 10/19/24 12:25:36.073
  I1019 12:26:48.433324 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7812" for this suite. @ 10/19/24 12:26:48.437
â€¢ [74.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 10/19/24 12:26:48.446
  I1019 12:26:48.446818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 12:26:48.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:26:48.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:26:48.467
  STEP: create the deployment @ 10/19/24 12:26:48.469
  W1019 12:26:48.474988      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/19/24 12:26:48.475
  STEP: delete the deployment @ 10/19/24 12:26:48.983
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/19/24 12:26:48.995
  STEP: Gathering metrics @ 10/19/24 12:26:49.516
  W1019 12:26:49.522321      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1019 12:26:49.522349 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1019 12:26:49.522484 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7021" for this suite. @ 10/19/24 12:26:49.527
â€¢ [1.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 10/19/24 12:26:49.535
  I1019 12:26:49.535592 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:26:49.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:26:49.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:26:49.555
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:26:49.557
  STEP: Saw pod success @ 10/19/24 12:26:51.579
  I1019 12:26:51.583433 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-3aeb8c1a-8777-4a89-a7b7-69f50a88e3d8 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:26:51.591
  I1019 12:26:51.613005 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2448" for this suite. @ 10/19/24 12:26:51.617
â€¢ [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 10/19/24 12:26:51.625
  I1019 12:26:51.625038 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 12:26:51.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:26:51.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:26:51.643
  STEP: apply creating a deployment @ 10/19/24 12:26:51.645
  I1019 12:26:51.661979 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6870" for this suite. @ 10/19/24 12:26:51.665
â€¢ [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 10/19/24 12:26:51.675
  I1019 12:26:51.675190 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 12:26:51.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:26:51.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:26:51.69
  I1019 12:26:51.697379 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:26:54.781275 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7516" for this suite. @ 10/19/24 12:26:54.785
â€¢ [3.118 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 10/19/24 12:26:54.792
  I1019 12:26:54.792814 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 12:26:54.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:26:54.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:26:54.813
  I1019 12:26:54.817063 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  W1019 12:26:57.358628      20 warnings.go:70] unknown field "alpha"
  W1019 12:26:57.358648      20 warnings.go:70] unknown field "beta"
  W1019 12:26:57.358651      20 warnings.go:70] unknown field "delta"
  W1019 12:26:57.358654      20 warnings.go:70] unknown field "epsilon"
  W1019 12:26:57.358657      20 warnings.go:70] unknown field "gamma"
  I1019 12:26:57.905652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7346" for this suite. @ 10/19/24 12:26:57.909
â€¢ [3.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/19/24 12:26:57.918
  I1019 12:26:57.918677 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:26:57.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:26:57.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:26:57.934
  STEP: Creating configMap with name configmap-projected-all-test-volume-46fe3b71-3c81-4f62-b08a-2d285b965525 @ 10/19/24 12:26:57.936
  STEP: Creating secret with name secret-projected-all-test-volume-8ca20298-cb40-4f4e-bede-68700cdd2f25 @ 10/19/24 12:26:57.941
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/19/24 12:26:57.947
  STEP: Saw pod success @ 10/19/24 12:27:01.973
  I1019 12:27:01.978778 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod projected-volume-54aed3c4-057d-4867-b55e-dcfdc31dbe30 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:27:01.987
  I1019 12:27:02.007077 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7334" for this suite. @ 10/19/24 12:27:02.012
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 10/19/24 12:27:02.021
  I1019 12:27:02.021023 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:27:02.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:27:02.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:27:02.04
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:27:02.042
  STEP: Saw pod success @ 10/19/24 12:27:06.071
  I1019 12:27:06.075309 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-8af6f087-f0c6-4005-982a-2cf49b19c899 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:27:06.083
  I1019 12:27:06.106316 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8990" for this suite. @ 10/19/24 12:27:06.111
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 10/19/24 12:27:06.12
  I1019 12:27:06.120048 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:27:06.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:27:06.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:27:06.138
  STEP: Creating a pod to test downward api env vars @ 10/19/24 12:27:06.14
  STEP: Saw pod success @ 10/19/24 12:27:10.167
  I1019 12:27:10.172629 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downward-api-8d89e453-0fe3-477b-b09f-5c08bf34181b container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 12:27:10.18
  I1019 12:27:10.199346 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7775" for this suite. @ 10/19/24 12:27:10.204
â€¢ [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/19/24 12:27:10.212
  I1019 12:27:10.212314 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:27:10.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:27:10.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:27:10.23
  STEP: Creating secret with name s-test-opt-del-e7a3b775-c721-43f0-9888-662338bbc8b5 @ 10/19/24 12:27:10.237
  STEP: Creating secret with name s-test-opt-upd-dab03509-8bd9-4e0a-9b03-fa1c6ddc326b @ 10/19/24 12:27:10.243
  STEP: Creating the pod @ 10/19/24 12:27:10.25
  STEP: Deleting secret s-test-opt-del-e7a3b775-c721-43f0-9888-662338bbc8b5 @ 10/19/24 12:27:12.3
  STEP: Updating secret s-test-opt-upd-dab03509-8bd9-4e0a-9b03-fa1c6ddc326b @ 10/19/24 12:27:12.308
  STEP: Creating secret with name s-test-opt-create-e47178bf-b352-40ea-86c8-1783e4709fd9 @ 10/19/24 12:27:12.314
  STEP: waiting to observe update in volume @ 10/19/24 12:27:12.319
  I1019 12:28:26.714635 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9973" for this suite. @ 10/19/24 12:28:26.719
â€¢ [76.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 10/19/24 12:28:26.728
  I1019 12:28:26.728341 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 12:28:26.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:28:26.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:28:26.747
  STEP: Creating a job @ 10/19/24 12:28:26.75
  STEP: Ensuring active pods == parallelism @ 10/19/24 12:28:26.757
  STEP: delete a job @ 10/19/24 12:28:28.762
  STEP: deleting Job.batch foo in namespace job-43, will wait for the garbage collector to delete the pods @ 10/19/24 12:28:28.763
  I1019 12:28:28.827448 20 resources.go:139] Deleting Job.batch foo took: 9.288895ms
  I1019 12:28:28.927987 20 resources.go:163] Terminating Job.batch foo pods took: 100.531408ms
  STEP: Ensuring job was deleted @ 10/19/24 12:28:30.428
  I1019 12:28:30.432965 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-43" for this suite. @ 10/19/24 12:28:30.437
â€¢ [3.719 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 10/19/24 12:28:30.447
  I1019 12:28:30.447452 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 12:28:30.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:28:30.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:28:30.465
  STEP: creating the pod with failed condition @ 10/19/24 12:28:30.468
  STEP: updating the pod @ 10/19/24 12:30:30.476
  I1019 12:30:30.990935 20 pod_client.go:173] Successfully updated pod "var-expansion-81fece4d-1367-442b-8296-f10fc3a67ca9"
  STEP: waiting for pod running @ 10/19/24 12:30:30.99
  STEP: deleting the pod gracefully @ 10/19/24 12:30:33.002
  I1019 12:30:33.002184 20 delete.go:62] Deleting pod "var-expansion-81fece4d-1367-442b-8296-f10fc3a67ca9" in namespace "var-expansion-6899"
  I1019 12:30:33.014214 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-81fece4d-1367-442b-8296-f10fc3a67ca9" to be fully deleted
  I1019 12:31:05.113408 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6899" for this suite. @ 10/19/24 12:31:05.118
â€¢ [154.681 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 10/19/24 12:31:05.129
  I1019 12:31:05.129327 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:31:05.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:31:05.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:31:05.148
  STEP: Starting the proxy @ 10/19/24 12:31:05.15
  I1019 12:31:05.151369 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-4064 proxy --unix-socket=/tmp/kubectl-proxy-unix1493562274/test'
  STEP: retrieving proxy /api/ output @ 10/19/24 12:31:05.182
  I1019 12:31:05.183481 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4064" for this suite. @ 10/19/24 12:31:05.188
â€¢ [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/19/24 12:31:05.198
  I1019 12:31:05.198944 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename watch @ 10/19/24 12:31:05.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:31:05.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:31:05.216
  STEP: getting a starting resourceVersion @ 10/19/24 12:31:05.219
  STEP: starting a background goroutine to produce watch events @ 10/19/24 12:31:05.223
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/19/24 12:31:05.223
  I1019 12:31:08.006749 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3847" for this suite. @ 10/19/24 12:31:08.054
â€¢ [2.910 seconds]
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 10/19/24 12:31:08.108
  I1019 12:31:08.108578 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 12:31:08.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:31:08.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:31:08.128
  STEP: Creating a job @ 10/19/24 12:31:08.131
  STEP: Ensuring job reaches completions @ 10/19/24 12:31:08.139
  I1019 12:31:18.151338 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4934" for this suite. @ 10/19/24 12:31:18.155
â€¢ [10.057 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 10/19/24 12:31:18.165
  I1019 12:31:18.165485 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 12:31:18.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:31:18.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:31:18.184
  STEP: Creating a pod to test substitution in container's command @ 10/19/24 12:31:18.186
  STEP: Saw pod success @ 10/19/24 12:31:20.208
  I1019 12:31:20.213367 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod var-expansion-72d00df9-1a6a-4e01-bbb6-b61ad48b417e container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 12:31:20.231
  I1019 12:31:20.250696 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8965" for this suite. @ 10/19/24 12:31:20.255
â€¢ [2.099 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 10/19/24 12:31:20.264
  I1019 12:31:20.264836 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename taint-single-pod @ 10/19/24 12:31:20.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:31:20.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:31:20.286
  I1019 12:31:20.288371 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1019 12:32:20.289276 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1019 12:32:20.293939 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 10/19/24 12:32:20.293
  I1019 12:32:20.514324 20 taints.go:294] Pod is running on ip-172-31-84-96. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/19/24 12:32:20.514
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/19/24 12:32:20.525
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/19/24 12:32:20.53
  I1019 12:32:20.530594 20 taints.go:313] Pod wasn't evicted. Proceeding
  I1019 12:32:20.530606 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/19/24 12:32:20.543
  STEP: Waiting some time to make sure that toleration time passed. @ 10/19/24 12:32:20.551
  I1019 12:33:35.553176 20 taints.go:329] Pod wasn't evicted. Test successful
  I1019 12:33:35.553354 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1735" for this suite. @ 10/19/24 12:33:35.558
â€¢ [135.302 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/19/24 12:33:35.567
  I1019 12:33:35.567350 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename init-container @ 10/19/24 12:33:35.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:35.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:35.585
  STEP: creating the pod @ 10/19/24 12:33:35.587
  I1019 12:33:35.587960 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1019 12:33:39.020324 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9514" for this suite. @ 10/19/24 12:33:39.025
â€¢ [3.468 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 10/19/24 12:33:39.035
  I1019 12:33:39.035318 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:33:39.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:39.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:39.053
  I1019 12:33:39.061294 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4428" for this suite. @ 10/19/24 12:33:39.065
â€¢ [0.040 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/19/24 12:33:39.075
  I1019 12:33:39.075448 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/19/24 12:33:39.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:39.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:39.093
  STEP: creating @ 10/19/24 12:33:39.095
  STEP: getting @ 10/19/24 12:33:39.117
  STEP: listing in namespace @ 10/19/24 12:33:39.12
  STEP: patching @ 10/19/24 12:33:39.124
  STEP: deleting @ 10/19/24 12:33:39.131
  I1019 12:33:39.155924 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7668" for this suite. @ 10/19/24 12:33:39.159
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 10/19/24 12:33:39.168
  I1019 12:33:39.168630 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:33:39.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:39.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:39.186
  STEP: creating secret secrets-4336/secret-test-652b5dae-f413-497a-96d7-b6c64f1a910f @ 10/19/24 12:33:39.189
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:33:39.194
  STEP: Saw pod success @ 10/19/24 12:33:41.214
  I1019 12:33:41.219240 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-configmaps-479cbf3a-7d78-48c9-bbf4-2c0159f46a69 container env-test: <nil>
  STEP: delete the pod @ 10/19/24 12:33:41.237
  I1019 12:33:41.259520 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4336" for this suite. @ 10/19/24 12:33:41.264
â€¢ [2.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 10/19/24 12:33:41.273
  I1019 12:33:41.273557 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename namespaces @ 10/19/24 12:33:41.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:41.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:41.292
  STEP: Read namespace status @ 10/19/24 12:33:41.294
  I1019 12:33:41.298105 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/19/24 12:33:41.298
  I1019 12:33:41.306853 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/19/24 12:33:41.306
  I1019 12:33:41.317541 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1019 12:33:41.317625 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7957" for this suite. @ 10/19/24 12:33:41.321
â€¢ [0.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 10/19/24 12:33:41.33
  I1019 12:33:41.330033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:33:41.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:41.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:41.348
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/19/24 12:33:41.35
  STEP: Saw pod success @ 10/19/24 12:33:45.377
  I1019 12:33:45.381367 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-5d85572e-05ce-4ef6-a8a7-bac37535b8f0 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:33:45.389
  I1019 12:33:45.410418 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5955" for this suite. @ 10/19/24 12:33:45.415
â€¢ [4.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 10/19/24 12:33:45.425
  I1019 12:33:45.425813 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:33:45.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:45.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:45.442
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:33:45.444
  STEP: Saw pod success @ 10/19/24 12:33:49.471
  I1019 12:33:49.475340 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-8b9f6f8c-aa60-479d-b0cf-f30c6e0b0ffb container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:33:49.484
  I1019 12:33:49.501846 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-60" for this suite. @ 10/19/24 12:33:49.506
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/19/24 12:33:49.513
  I1019 12:33:49.513643 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 12:33:49.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:49.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:49.531
  I1019 12:33:49.534124 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: creating the pod @ 10/19/24 12:33:49.534
  STEP: submitting the pod to kubernetes @ 10/19/24 12:33:49.534
  I1019 12:33:51.572410 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-797" for this suite. @ 10/19/24 12:33:51.577
â€¢ [2.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 10/19/24 12:33:51.584
  I1019 12:33:51.584570 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 12:33:51.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:51.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:51.604
  STEP: apply creating a deployment @ 10/19/24 12:33:51.606
  I1019 12:33:51.622552 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4409" for this suite. @ 10/19/24 12:33:51.626
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 10/19/24 12:33:51.635
  I1019 12:33:51.635722 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/19/24 12:33:51.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:51.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:51.651
  I1019 12:33:51.653214 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:33:54.741050 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2427" for this suite. @ 10/19/24 12:33:54.745
â€¢ [3.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/19/24 12:33:54.753
  I1019 12:33:54.753193 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename certificates @ 10/19/24 12:33:54.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:54.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:54.771
  STEP: getting /apis @ 10/19/24 12:33:55.161
  STEP: getting /apis/certificates.k8s.io @ 10/19/24 12:33:55.164
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/19/24 12:33:55.165
  STEP: creating @ 10/19/24 12:33:55.166
  STEP: getting @ 10/19/24 12:33:55.188
  STEP: listing @ 10/19/24 12:33:55.192
  STEP: watching @ 10/19/24 12:33:55.196
  I1019 12:33:55.196655 20 certificates.go:316] starting watch
  STEP: patching @ 10/19/24 12:33:55.197
  STEP: updating @ 10/19/24 12:33:55.202
  I1019 12:33:55.209831 20 certificates.go:332] waiting for watch events with expected annotations
  I1019 12:33:55.209859 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 10/19/24 12:33:55.209
  STEP: patching /approval @ 10/19/24 12:33:55.214
  STEP: updating /approval @ 10/19/24 12:33:55.219
  STEP: getting /status @ 10/19/24 12:33:55.227
  STEP: patching /status @ 10/19/24 12:33:55.231
  STEP: updating /status @ 10/19/24 12:33:55.238
  STEP: deleting @ 10/19/24 12:33:55.246
  STEP: deleting a collection @ 10/19/24 12:33:55.261
  I1019 12:33:55.281308 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2805" for this suite. @ 10/19/24 12:33:55.286
â€¢ [0.541 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/19/24 12:33:55.294
  I1019 12:33:55.294656 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename containers @ 10/19/24 12:33:55.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:55.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:55.314
  STEP: Creating a pod to test override arguments @ 10/19/24 12:33:55.317
  STEP: Saw pod success @ 10/19/24 12:33:59.343
  I1019 12:33:59.346984 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod client-containers-7c46dd74-f6f7-4c38-9fe7-873726af3da8 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 12:33:59.354
  I1019 12:33:59.371148 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2156" for this suite. @ 10/19/24 12:33:59.376
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 10/19/24 12:33:59.384
  I1019 12:33:59.384433 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:33:59.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:33:59.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:33:59.404
  STEP: Creating a pod to test downward api env vars @ 10/19/24 12:33:59.406
  STEP: Saw pod success @ 10/19/24 12:34:01.427
  I1019 12:34:01.432642 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downward-api-358c6519-030a-4410-9367-56a42c1cb11b container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 12:34:01.442
  I1019 12:34:01.461393 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7739" for this suite. @ 10/19/24 12:34:01.465
â€¢ [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 10/19/24 12:34:01.472
  I1019 12:34:01.472479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl-logs @ 10/19/24 12:34:01.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:01.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:01.49
  STEP: creating a pod @ 10/19/24 12:34:01.493
  I1019 12:34:01.493280 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1019 12:34:01.549095 20 builder.go:146] stderr: ""
  I1019 12:34:01.549144 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/19/24 12:34:01.549
  I1019 12:34:01.549320 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1019 12:34:03.559848 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/19/24 12:34:03.559
  I1019 12:34:03.559948 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 logs logs-generator logs-generator'
  I1019 12:34:03.617428 20 builder.go:146] stderr: ""
  I1019 12:34:03.617480 20 builder.go:147] stdout: "I1019 12:34:02.094837       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/hjqp 212\nI1019 12:34:02.295460       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/xq6 224\nI1019 12:34:02.495760       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/xpg 255\nI1019 12:34:02.694932       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/225h 508\nI1019 12:34:02.895181       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/8942 586\nI1019 12:34:03.095591       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/wvrw 576\nI1019 12:34:03.295890       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/rq2 422\nI1019 12:34:03.495175       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/4wst 566\n"
  STEP: limiting log lines @ 10/19/24 12:34:03.617
  I1019 12:34:03.617572 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 logs logs-generator logs-generator --tail=1'
  I1019 12:34:03.669044 20 builder.go:146] stderr: ""
  I1019 12:34:03.669109 20 builder.go:147] stdout: "I1019 12:34:03.495175       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/4wst 566\n"
  I1019 12:34:03.669121 20 logs.go:180] got output "I1019 12:34:03.495175       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/4wst 566\n"
  STEP: limiting log bytes @ 10/19/24 12:34:03.669
  I1019 12:34:03.669256 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 logs logs-generator logs-generator --limit-bytes=1'
  I1019 12:34:03.720838 20 builder.go:146] stderr: ""
  I1019 12:34:03.720873 20 builder.go:147] stdout: "I"
  I1019 12:34:03.720882 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 10/19/24 12:34:03.72
  I1019 12:34:03.720974 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 logs logs-generator logs-generator --tail=1 --timestamps'
  I1019 12:34:03.771447 20 builder.go:146] stderr: ""
  I1019 12:34:03.771496 20 builder.go:147] stdout: "2024-10-19T12:34:03.695580221Z I1019 12:34:03.695483       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/fv8 239\n"
  I1019 12:34:03.771507 20 logs.go:192] got output "2024-10-19T12:34:03.695580221Z I1019 12:34:03.695483       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/fv8 239\n"
  STEP: restricting to a time range @ 10/19/24 12:34:03.771
  I1019 12:34:06.272883 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 logs logs-generator logs-generator --since=1s'
  I1019 12:34:06.324958 20 builder.go:146] stderr: ""
  I1019 12:34:06.325010 20 builder.go:147] stdout: "I1019 12:34:05.495201       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/88qv 446\nI1019 12:34:05.695465       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/9fw 462\nI1019 12:34:05.895780       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/g7j6 425\nI1019 12:34:06.094929       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/rk77 320\nI1019 12:34:06.295259       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/th2 315\n"
  I1019 12:34:06.325075 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 logs logs-generator logs-generator --since=24h'
  I1019 12:34:06.375619 20 builder.go:146] stderr: ""
  I1019 12:34:06.375680 20 builder.go:147] stdout: "I1019 12:34:02.094837       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/hjqp 212\nI1019 12:34:02.295460       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/xq6 224\nI1019 12:34:02.495760       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/xpg 255\nI1019 12:34:02.694932       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/225h 508\nI1019 12:34:02.895181       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/8942 586\nI1019 12:34:03.095591       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/wvrw 576\nI1019 12:34:03.295890       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/rq2 422\nI1019 12:34:03.495175       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/4wst 566\nI1019 12:34:03.695483       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/fv8 239\nI1019 12:34:03.895821       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/8b4 540\nI1019 12:34:04.095061       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/vgph 585\nI1019 12:34:04.295272       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/qb5 220\nI1019 12:34:04.495572       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/ff85 327\nI1019 12:34:04.695881       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/k7p 366\nI1019 12:34:04.895295       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/c7lx 545\nI1019 12:34:05.095605       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/8l2l 437\nI1019 12:34:05.294849       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/7tp9 267\nI1019 12:34:05.495201       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/88qv 446\nI1019 12:34:05.695465       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/9fw 462\nI1019 12:34:05.895780       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/g7j6 425\nI1019 12:34:06.094929       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/rk77 320\nI1019 12:34:06.295259       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/th2 315\n"
  I1019 12:34:06.375768 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-logs-1021 delete pod logs-generator'
  I1019 12:34:06.941674 20 builder.go:146] stderr: ""
  I1019 12:34:06.941710 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1019 12:34:06.941921 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1021" for this suite. @ 10/19/24 12:34:06.947
â€¢ [5.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 10/19/24 12:34:06.955
  I1019 12:34:06.955622 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:34:06.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:06.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:06.977
  STEP: Creating configMap with name configmap-test-volume-07b42667-490d-4303-b3c8-b72c79580b9d @ 10/19/24 12:34:06.98
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:34:06.985
  STEP: Saw pod success @ 10/19/24 12:34:11.013
  I1019 12:34:11.018343 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-configmaps-97230066-2c99-4bbf-ae73-dc98f97dc815 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 12:34:11.026
  I1019 12:34:11.045250 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2130" for this suite. @ 10/19/24 12:34:11.048
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 10/19/24 12:34:11.058
  I1019 12:34:11.058348 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename controllerrevisions @ 10/19/24 12:34:11.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:11.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:11.077
  STEP: Creating DaemonSet "e2e-r4lct-daemon-set" @ 10/19/24 12:34:11.102
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/19/24 12:34:11.107
  I1019 12:34:11.113946 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:11.113975 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:11.118503 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 0
  I1019 12:34:11.118525 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:12.111916 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:12.111963 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:12.115716 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 1
  I1019 12:34:12.115744 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:13.112944 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:13.112978 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:13.116882 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 2
  I1019 12:34:13.116907 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:14.113738 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:14.113778 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:14.118253 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 2
  I1019 12:34:14.118273 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:15.112627 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:15.112674 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:15.117457 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 2
  I1019 12:34:15.117478 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:16.112691 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:16.112746 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:16.116522 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 2
  I1019 12:34:16.116541 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:17.116154 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:17.116209 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:17.121930 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 2
  I1019 12:34:17.121966 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  I1019 12:34:18.111940 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:18.111980 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:34:18.116198 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 3
  I1019 12:34:18.116221 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-r4lct-daemon-set
  STEP: Confirm DaemonSet "e2e-r4lct-daemon-set" successfully created with "daemonset-name=e2e-r4lct-daemon-set" label @ 10/19/24 12:34:18.119
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-r4lct-daemon-set" @ 10/19/24 12:34:18.127
  I1019 12:34:18.130902 20 controller_revision.go:162] Located ControllerRevision: "e2e-r4lct-daemon-set-6cb574fc7f"
  STEP: Patching ControllerRevision "e2e-r4lct-daemon-set-6cb574fc7f" @ 10/19/24 12:34:18.134
  I1019 12:34:18.140492 20 controller_revision.go:173] e2e-r4lct-daemon-set-6cb574fc7f has been patched
  STEP: Create a new ControllerRevision @ 10/19/24 12:34:18.14
  I1019 12:34:18.145969 20 controller_revision.go:191] Created ControllerRevision: e2e-r4lct-daemon-set-5ffb85846c
  STEP: Confirm that there are two ControllerRevisions @ 10/19/24 12:34:18.145
  I1019 12:34:18.146015 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1019 12:34:18.149670 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-r4lct-daemon-set-6cb574fc7f" @ 10/19/24 12:34:18.149
  STEP: Confirm that there is only one ControllerRevision @ 10/19/24 12:34:18.159
  I1019 12:34:18.159455 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1019 12:34:18.162716 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-r4lct-daemon-set-5ffb85846c" @ 10/19/24 12:34:18.167
  I1019 12:34:18.177587 20 controller_revision.go:220] e2e-r4lct-daemon-set-5ffb85846c has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/19/24 12:34:18.177
  W1019 12:34:18.183861      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/19/24 12:34:18.183
  I1019 12:34:18.183946 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1019 12:34:19.184176 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1019 12:34:19.189660 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-r4lct-daemon-set-5ffb85846c=updated" @ 10/19/24 12:34:19.189
  STEP: Confirm that there is only one ControllerRevision @ 10/19/24 12:34:19.2
  I1019 12:34:19.200333 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1019 12:34:19.203560 20 controller_revision.go:265] Found 1 ControllerRevisions
  I1019 12:34:19.209736 20 controller_revision.go:246] ControllerRevision "e2e-r4lct-daemon-set-55959df69d" has revision 3
  STEP: Deleting DaemonSet "e2e-r4lct-daemon-set" @ 10/19/24 12:34:19.213
  STEP: deleting DaemonSet.extensions e2e-r4lct-daemon-set in namespace controllerrevisions-3706, will wait for the garbage collector to delete the pods @ 10/19/24 12:34:19.213
  I1019 12:34:19.277054 20 resources.go:139] Deleting DaemonSet.extensions e2e-r4lct-daemon-set took: 9.092505ms
  I1019 12:34:19.378220 20 resources.go:163] Terminating DaemonSet.extensions e2e-r4lct-daemon-set pods took: 101.159861ms
  I1019 12:34:25.583055 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-r4lct-daemon-set: 0
  I1019 12:34:25.583090 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-r4lct-daemon-set
  I1019 12:34:25.587549 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16820"},"items":null}

  I1019 12:34:25.591428 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16820"},"items":null}

  I1019 12:34:25.608466 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3706" for this suite. @ 10/19/24 12:34:25.612
â€¢ [14.564 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 10/19/24 12:34:25.622
  I1019 12:34:25.622875 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:34:25.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:25.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:25.639
  STEP: Counting existing ResourceQuota @ 10/19/24 12:34:25.641
  STEP: Creating a ResourceQuota @ 10/19/24 12:34:30.646
  STEP: Ensuring resource quota status is calculated @ 10/19/24 12:34:30.651
  STEP: Creating a ReplicationController @ 10/19/24 12:34:32.657
  STEP: Ensuring resource quota status captures replication controller creation @ 10/19/24 12:34:32.67
  STEP: Deleting a ReplicationController @ 10/19/24 12:34:34.676
  STEP: Ensuring resource quota status released usage @ 10/19/24 12:34:34.684
  I1019 12:34:36.691086 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2958" for this suite. @ 10/19/24 12:34:36.695
â€¢ [11.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 10/19/24 12:34:36.704
  I1019 12:34:36.704339 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename endpointslice @ 10/19/24 12:34:36.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:36.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:36.725
  STEP: getting /apis @ 10/19/24 12:34:36.728
  STEP: getting /apis/discovery.k8s.io @ 10/19/24 12:34:36.731
  STEP: getting /apis/discovery.k8s.iov1 @ 10/19/24 12:34:36.732
  STEP: creating @ 10/19/24 12:34:36.733
  STEP: getting @ 10/19/24 12:34:36.751
  STEP: listing @ 10/19/24 12:34:36.755
  STEP: watching @ 10/19/24 12:34:36.759
  I1019 12:34:36.759467 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 10/19/24 12:34:36.76
  STEP: cluster-wide watching @ 10/19/24 12:34:36.764
  I1019 12:34:36.764167 20 endpointslice.go:459] starting watch
  STEP: patching @ 10/19/24 12:34:36.765
  STEP: updating @ 10/19/24 12:34:36.77
  I1019 12:34:36.779596 20 endpointslice.go:482] waiting for watch events with expected annotations
  I1019 12:34:36.779621 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 10/19/24 12:34:36.779
  STEP: deleting a collection @ 10/19/24 12:34:36.796
  I1019 12:34:36.818799 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-647" for this suite. @ 10/19/24 12:34:36.823
â€¢ [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 10/19/24 12:34:36.831
  I1019 12:34:36.831043 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:34:36.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:36.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:36.849
  STEP: Creating a ResourceQuota @ 10/19/24 12:34:36.852
  STEP: Getting a ResourceQuota @ 10/19/24 12:34:36.857
  STEP: Updating a ResourceQuota @ 10/19/24 12:34:36.862
  STEP: Verifying a ResourceQuota was modified @ 10/19/24 12:34:36.869
  STEP: Deleting a ResourceQuota @ 10/19/24 12:34:36.873
  STEP: Verifying the deleted ResourceQuota @ 10/19/24 12:34:36.882
  I1019 12:34:36.885906 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-872" for this suite. @ 10/19/24 12:34:36.89
â€¢ [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 10/19/24 12:34:36.897
  I1019 12:34:36.897772 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:34:36.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:36.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:36.915
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1852 @ 10/19/24 12:34:36.917
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/19/24 12:34:36.931
  STEP: creating service externalsvc in namespace services-1852 @ 10/19/24 12:34:36.931
  STEP: creating replication controller externalsvc in namespace services-1852 @ 10/19/24 12:34:36.942
  I1019 12:34:36.950396      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1852, replica count: 2
  I1019 12:34:40.001082      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/19/24 12:34:40.006
  I1019 12:34:40.024914 20 resource.go:361] Creating new exec pod
  I1019 12:34:42.044917 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1852 exec execpodspc2b -- /bin/sh -x -c nslookup clusterip-service.services-1852.svc.cluster.local'
  I1019 12:34:42.169578 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-1852.svc.cluster.local\n"
  I1019 12:34:42.169619 20 builder.go:147] stdout: "Server:\t\t10.152.183.178\nAddress:\t10.152.183.178#53\n\nclusterip-service.services-1852.svc.cluster.local\tcanonical name = externalsvc.services-1852.svc.cluster.local.\nName:\texternalsvc.services-1852.svc.cluster.local\nAddress: 10.152.183.55\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1852, will wait for the garbage collector to delete the pods @ 10/19/24 12:34:42.169
  I1019 12:34:42.233708 20 resources.go:139] Deleting ReplicationController externalsvc took: 10.124848ms
  I1019 12:34:42.334709 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.997237ms
  I1019 12:34:45.254219 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1019 12:34:45.267467 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1852" for this suite. @ 10/19/24 12:34:45.271
â€¢ [8.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 10/19/24 12:34:45.281
  I1019 12:34:45.281041 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:34:45.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:45.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:45.298
  STEP: Setting up server cert @ 10/19/24 12:34:45.321
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:34:45.619
  STEP: Deploying the webhook pod @ 10/19/24 12:34:45.63
  STEP: Wait for the deployment to be ready @ 10/19/24 12:34:45.645
  I1019 12:34:45.654790 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:34:47.669
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:34:47.681
  I1019 12:34:48.681690 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/19/24 12:34:48.69
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/19/24 12:34:48.704
  I1019 12:34:48.704757 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:34:48.764541 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5041" for this suite. @ 10/19/24 12:34:48.77
  STEP: Destroying namespace "webhook-markers-8100" for this suite. @ 10/19/24 12:34:48.776
â€¢ [3.504 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 10/19/24 12:34:48.785
  I1019 12:34:48.785541 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 12:34:48.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:48.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:48.805
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/19/24 12:34:48.807
  I1019 12:34:48.807743 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:34:50.030204 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:34:55.165708 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6661" for this suite. @ 10/19/24 12:34:55.172
â€¢ [6.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/19/24 12:34:55.182
  I1019 12:34:55.182098 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename watch @ 10/19/24 12:34:55.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:34:55.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:34:55.2
  STEP: creating a watch on configmaps with a certain label @ 10/19/24 12:34:55.203
  STEP: creating a new configmap @ 10/19/24 12:34:55.204
  STEP: modifying the configmap once @ 10/19/24 12:34:55.209
  STEP: changing the label value of the configmap @ 10/19/24 12:34:55.218
  STEP: Expecting to observe a delete notification for the watched object @ 10/19/24 12:34:55.229
  I1019 12:34:55.229485 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2980  fd21abce-375e-4c49-a17c-df89c9d1663f 17192 0 2024-10-19 12:34:55 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-19 12:34:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:34:55.229596 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2980  fd21abce-375e-4c49-a17c-df89c9d1663f 17193 0 2024-10-19 12:34:55 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-19 12:34:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:34:55.229653 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2980  fd21abce-375e-4c49-a17c-df89c9d1663f 17194 0 2024-10-19 12:34:55 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-19 12:34:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/19/24 12:34:55.229
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/19/24 12:34:55.239
  STEP: changing the label value of the configmap back @ 10/19/24 12:35:05.239
  STEP: modifying the configmap a third time @ 10/19/24 12:35:05.249
  STEP: deleting the configmap @ 10/19/24 12:35:05.259
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/19/24 12:35:05.268
  I1019 12:35:05.268414 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2980  fd21abce-375e-4c49-a17c-df89c9d1663f 17221 0 2024-10-19 12:34:55 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-19 12:35:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:35:05.268617 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2980  fd21abce-375e-4c49-a17c-df89c9d1663f 17222 0 2024-10-19 12:34:55 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-19 12:35:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:35:05.268703 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2980  fd21abce-375e-4c49-a17c-df89c9d1663f 17223 0 2024-10-19 12:34:55 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-19 12:35:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:35:05.268821 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2980" for this suite. @ 10/19/24 12:35:05.273
â€¢ [10.102 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 10/19/24 12:35:05.283
  I1019 12:35:05.283877 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:35:05.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:35:05.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:35:05.3
  STEP: creating service endpoint-test2 in namespace services-7895 @ 10/19/24 12:35:05.303
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7895 to expose endpoints map[] @ 10/19/24 12:35:05.313
  I1019 12:35:05.318176 20 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I1019 12:35:06.328842 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7895 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7895 @ 10/19/24 12:35:06.328
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7895 to expose endpoints map[pod1:[80]] @ 10/19/24 12:35:08.352
  I1019 12:35:08.365626 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7895 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/19/24 12:35:08.365
  I1019 12:35:08.365674 20 resource.go:361] Creating new exec pod
  I1019 12:35:11.380686 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-7895 exec execpodcksg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1019 12:35:11.483536 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1019 12:35:11.483576 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:35:11.483667 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-7895 exec execpodcksg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
  I1019 12:35:11.558783 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.80 80\n+ echo hostName\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
  I1019 12:35:11.558824 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7895 @ 10/19/24 12:35:11.558
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7895 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/19/24 12:35:13.581
  I1019 12:35:13.598787 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7895 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/19/24 12:35:13.598
  I1019 12:35:14.599067 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-7895 exec execpodcksg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1019 12:35:14.677330 20 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1019 12:35:14.677368 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:35:14.677440 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-7895 exec execpodcksg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
  I1019 12:35:14.752920 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
  I1019 12:35:14.753030 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7895 @ 10/19/24 12:35:14.753
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7895 to expose endpoints map[pod2:[80]] @ 10/19/24 12:35:14.775
  I1019 12:35:14.790025 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7895 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/19/24 12:35:14.79
  I1019 12:35:15.790893 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-7895 exec execpodcksg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1019 12:35:15.870195 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1019 12:35:15.870233 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:35:15.870303 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-7895 exec execpodcksg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
  I1019 12:35:15.941553 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
  I1019 12:35:15.941592 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7895 @ 10/19/24 12:35:15.941
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7895 to expose endpoints map[] @ 10/19/24 12:35:15.956
  I1019 12:35:16.977274 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7895 exposes endpoints map[]
  I1019 12:35:16.999296 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7895" for this suite. @ 10/19/24 12:35:17.004
â€¢ [11.729 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 10/19/24 12:35:17.013
  I1019 12:35:17.013040 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/19/24 12:35:17.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:35:17.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:35:17.034
  I1019 12:35:17.037654 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:35:20.096881 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9250" for this suite. @ 10/19/24 12:35:20.102
â€¢ [3.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 10/19/24 12:35:20.11
  I1019 12:35:20.110791 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 12:35:20.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:35:20.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:35:20.13
  STEP: Creating a job @ 10/19/24 12:35:20.133
  STEP: Ensuring active pods == parallelism @ 10/19/24 12:35:20.141
  STEP: Orphaning one of the Job's Pods @ 10/19/24 12:35:22.146
  I1019 12:35:22.664559 20 pod_client.go:173] Successfully updated pod "adopt-release-8mgtk"
  STEP: Checking that the Job readopts the Pod @ 10/19/24 12:35:22.664
  STEP: Removing the labels from the Job's Pod @ 10/19/24 12:35:24.675
  I1019 12:35:25.188734 20 pod_client.go:173] Successfully updated pod "adopt-release-8mgtk"
  STEP: Checking that the Job releases the Pod @ 10/19/24 12:35:25.188
  I1019 12:35:27.198172 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7978" for this suite. @ 10/19/24 12:35:27.201
â€¢ [7.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 10/19/24 12:35:27.211
  I1019 12:35:27.211198 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:35:27.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:35:27.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:35:27.228
  STEP: Setting up server cert @ 10/19/24 12:35:27.251
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:35:27.4
  STEP: Deploying the webhook pod @ 10/19/24 12:35:27.41
  STEP: Wait for the deployment to be ready @ 10/19/24 12:35:27.424
  I1019 12:35:27.436816 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/19/24 12:35:29.451
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:35:29.466
  I1019 12:35:30.466656 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/19/24 12:35:30.476
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/19/24 12:35:30.491
  STEP: Creating a dummy validating-webhook-configuration object @ 10/19/24 12:35:30.503
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/19/24 12:35:30.513
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/19/24 12:35:30.521
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/19/24 12:35:30.531
  I1019 12:35:30.600326 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8546" for this suite. @ 10/19/24 12:35:30.605
  STEP: Destroying namespace "webhook-markers-7019" for this suite. @ 10/19/24 12:35:30.612
â€¢ [3.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 10/19/24 12:35:30.62
  I1019 12:35:30.620660 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:35:30.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:35:30.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:35:30.639
  STEP: Creating configMap with name cm-test-opt-del-65a732f0-cd49-48d5-8dbd-a81fabee090b @ 10/19/24 12:35:30.648
  STEP: Creating configMap with name cm-test-opt-upd-4c343305-1eb4-429d-9964-ae45a7290115 @ 10/19/24 12:35:30.653
  STEP: Creating the pod @ 10/19/24 12:35:30.658
  STEP: Deleting configmap cm-test-opt-del-65a732f0-cd49-48d5-8dbd-a81fabee090b @ 10/19/24 12:35:32.718
  STEP: Updating configmap cm-test-opt-upd-4c343305-1eb4-429d-9964-ae45a7290115 @ 10/19/24 12:35:32.726
  STEP: Creating configMap with name cm-test-opt-create-2350c9c2-db6a-4ece-b2f0-088673a38ff3 @ 10/19/24 12:35:32.731
  STEP: waiting to observe update in volume @ 10/19/24 12:35:32.737
  I1019 12:36:39.096519 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7453" for this suite. @ 10/19/24 12:36:39.101
â€¢ [68.488 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 10/19/24 12:36:39.108
  I1019 12:36:39.108943 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 12:36:39.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:36:39.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:36:39.128
  STEP: Creating a suspended job @ 10/19/24 12:36:39.135
  STEP: Patching the Job @ 10/19/24 12:36:39.143
  STEP: Watching for Job to be patched @ 10/19/24 12:36:39.16
  I1019 12:36:39.161408 20 job.go:1330] Event ADDED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw] and annotations: map[]
  I1019 12:36:39.161447 20 job.go:1330] Event MODIFIED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw] and annotations: map[]
  I1019 12:36:39.161458 20 job.go:1333] Event MODIFIED found for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[]
  STEP: Updating the job @ 10/19/24 12:36:39.161
  STEP: Watching for Job to be updated @ 10/19/24 12:36:39.173
  I1019 12:36:39.174470 20 job.go:1333] Event MODIFIED found for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  I1019 12:36:39.174495 20 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/19/24 12:36:39.174
  I1019 12:36:39.178546 20 job.go:1233] Job: e2e-xhqxw as labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched]
  STEP: Waiting for job to complete @ 10/19/24 12:36:39.178
  STEP: Delete a job collection with a labelselector @ 10/19/24 12:36:49.19
  STEP: Watching for Job to be deleted @ 10/19/24 12:36:49.201
  I1019 12:36:49.202756 20 job.go:1330] Event MODIFIED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  I1019 12:36:49.202782 20 job.go:1330] Event MODIFIED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  I1019 12:36:49.202794 20 job.go:1330] Event MODIFIED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  I1019 12:36:49.202866 20 job.go:1330] Event MODIFIED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  I1019 12:36:49.202882 20 job.go:1330] Event MODIFIED observed for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  I1019 12:36:49.202894 20 job.go:1333] Event DELETED found for Job e2e-xhqxw in namespace job-7232 with labels: map[e2e-job-label:e2e-xhqxw e2e-xhqxw:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/19/24 12:36:49.203
  I1019 12:36:49.207339 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7232" for this suite. @ 10/19/24 12:36:49.211
â€¢ [10.122 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/19/24 12:36:49.23
  I1019 12:36:49.230581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename watch @ 10/19/24 12:36:49.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:36:49.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:36:49.253
  STEP: creating a watch on configmaps @ 10/19/24 12:36:49.255
  STEP: creating a new configmap @ 10/19/24 12:36:49.256
  STEP: modifying the configmap once @ 10/19/24 12:36:49.262
  STEP: closing the watch once it receives two notifications @ 10/19/24 12:36:49.27
  I1019 12:36:49.271011 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3022  959a5542-5e6f-4d42-b97e-9b69ba26bb3b 17875 0 2024-10-19 12:36:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-19 12:36:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:36:49.271108 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3022  959a5542-5e6f-4d42-b97e-9b69ba26bb3b 17876 0 2024-10-19 12:36:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-19 12:36:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/19/24 12:36:49.271
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/19/24 12:36:49.279
  STEP: deleting the configmap @ 10/19/24 12:36:49.281
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/19/24 12:36:49.29
  I1019 12:36:49.290347 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3022  959a5542-5e6f-4d42-b97e-9b69ba26bb3b 17877 0 2024-10-19 12:36:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-19 12:36:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:36:49.290459 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3022  959a5542-5e6f-4d42-b97e-9b69ba26bb3b 17878 0 2024-10-19 12:36:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-19 12:36:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:36:49.290565 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3022" for this suite. @ 10/19/24 12:36:49.294
â€¢ [0.074 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 10/19/24 12:36:49.304
  I1019 12:36:49.304724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/19/24 12:36:49.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:36:49.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:36:49.321
  STEP: creating the policy @ 10/19/24 12:36:49.328
  STEP: waiting until the marker is denied @ 10/19/24 12:36:49.349
  STEP: testing a replicated Deployment to be allowed @ 10/19/24 12:36:49.959
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/19/24 12:36:49.976
  I1019 12:36:50.039450 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6372" for this suite. @ 10/19/24 12:36:50.049
â€¢ [0.753 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 10/19/24 12:36:50.058
  I1019 12:36:50.058463 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replication-controller @ 10/19/24 12:36:50.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:36:50.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:36:50.088
  STEP: creating a ReplicationController @ 10/19/24 12:36:50.102
  STEP: waiting for RC to be added @ 10/19/24 12:36:50.11
  STEP: waiting for available Replicas @ 10/19/24 12:36:50.11
  STEP: patching ReplicationController @ 10/19/24 12:36:51.242
  STEP: waiting for RC to be modified @ 10/19/24 12:36:51.251
  STEP: patching ReplicationController status @ 10/19/24 12:36:51.251
  STEP: waiting for RC to be modified @ 10/19/24 12:36:51.258
  STEP: waiting for available Replicas @ 10/19/24 12:36:51.258
  STEP: fetching ReplicationController status @ 10/19/24 12:36:51.264
  STEP: patching ReplicationController scale @ 10/19/24 12:36:51.27
  STEP: waiting for RC to be modified @ 10/19/24 12:36:51.276
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/19/24 12:36:51.276
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/19/24 12:36:52.371
  STEP: updating ReplicationController status @ 10/19/24 12:36:52.375
  STEP: waiting for RC to be modified @ 10/19/24 12:36:52.381
  STEP: listing all ReplicationControllers @ 10/19/24 12:36:52.382
  STEP: checking that ReplicationController has expected values @ 10/19/24 12:36:52.388
  STEP: deleting ReplicationControllers by collection @ 10/19/24 12:36:52.388
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/19/24 12:36:52.398
  I1019 12:36:52.430368 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1019 12:36:52.430476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8582" for this suite. @ 10/19/24 12:36:52.434
â€¢ [2.383 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 10/19/24 12:36:52.441
  I1019 12:36:52.441800 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:36:52.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:36:52.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:36:52.46
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/19/24 12:36:52.465
  E1019 12:36:53.430710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:36:54.431436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:36:55.432326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:36:56.432448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:36:56.494
  I1019 12:36:56.498380 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-fd4eeaa9-852c-496e-9aaa-785c0d86ad97 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:36:56.514
  I1019 12:36:56.535518 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-964" for this suite. @ 10/19/24 12:36:56.539
â€¢ [4.105 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 10/19/24 12:36:56.547
  I1019 12:36:56.547039 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:36:56.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:36:56.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:36:56.566
  STEP: Setting up server cert @ 10/19/24 12:36:56.59
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:36:57.093
  STEP: Deploying the webhook pod @ 10/19/24 12:36:57.104
  STEP: Wait for the deployment to be ready @ 10/19/24 12:36:57.12
  I1019 12:36:57.130688 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 12:36:57.433092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:36:58.434017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 12:36:59.143
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:36:59.158
  E1019 12:36:59.434795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:00.158623 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/19/24 12:37:00.167
  STEP: create a pod @ 10/19/24 12:37:00.18
  E1019 12:37:00.434846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:01.435478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/19/24 12:37:02.2
  I1019 12:37:02.200228 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=webhook-1835 attach --namespace=webhook-1835 to-be-attached-pod -i -c=container1'
  I1019 12:37:02.256089 20 builder.go:135] rc: 1
  I1019 12:37:02.312398 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1835" for this suite. @ 10/19/24 12:37:02.317
  STEP: Destroying namespace "webhook-markers-3006" for this suite. @ 10/19/24 12:37:02.328
â€¢ [5.790 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/19/24 12:37:02.337
  I1019 12:37:02.337072 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:37:02.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:02.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:02.354
  STEP: Creating projection with secret that has name projected-secret-test-map-98f10129-65ba-4e7c-9498-3bc8d1cb519d @ 10/19/24 12:37:02.357
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:37:02.362
  E1019 12:37:02.436214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:03.436900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:04.436947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:05.437193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:37:06.391
  I1019 12:37:06.395357 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-projected-secrets-2fc7d176-a931-49e2-90a5-3d2af1fde845 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:37:06.403
  I1019 12:37:06.427169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9533" for this suite. @ 10/19/24 12:37:06.431
  E1019 12:37:06.437386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 10/19/24 12:37:06.441
  I1019 12:37:06.441618 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 12:37:06.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:06.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:06.459
  STEP: Creating a test headless service @ 10/19/24 12:37:06.462
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4630.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4630.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4630.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4630.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 41.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.41_udp@PTR;check="$$(dig +tcp +noall +answer +search 41.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.41_tcp@PTR;sleep 1; done
   @ 10/19/24 12:37:06.481
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4630.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4630.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4630.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4630.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4630.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 41.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.41_udp@PTR;check="$$(dig +tcp +noall +answer +search 41.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.41_tcp@PTR;sleep 1; done
   @ 10/19/24 12:37:06.481
  STEP: creating a pod to probe DNS @ 10/19/24 12:37:06.481
  STEP: submitting the pod to kubernetes @ 10/19/24 12:37:06.481
  E1019 12:37:07.438076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:08.438097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:09.438292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:10.438436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:11.438594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:12.438685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 12:37:12.519
  STEP: looking for the results for each expected name from probers @ 10/19/24 12:37:12.522
  I1019 12:37:12.529106 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.533692 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.538339 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.543207 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.565113 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.570085 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.574897 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.578877 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local from pod dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c: the server could not find the requested resource (get pods dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c)
  I1019 12:37:12.597770 20 dns_common.go:489] Lookups using dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c failed for: [wheezy_udp@dns-test-service.dns-4630.svc.cluster.local wheezy_tcp@dns-test-service.dns-4630.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local jessie_udp@dns-test-service.dns-4630.svc.cluster.local jessie_tcp@dns-test-service.dns-4630.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4630.svc.cluster.local]

  I1019 12:37:12.606248 20 dns_common.go:495] Pod client logs for webserver: 
  I1019 12:37:12.613575 20 dns_common.go:495] Pod client logs for querier: 
  I1019 12:37:12.620731 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1019 12:37:13.439719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:14.439951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:15.440192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:16.440393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:17.440611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:17.605697 20 dns_common.go:527] DNS probes using dns-4630/dns-test-22a546c4-3a3a-4ccf-93e0-64adc92fb10c succeeded

  STEP: deleting the pod @ 10/19/24 12:37:17.605
  STEP: deleting the test service @ 10/19/24 12:37:17.624
  STEP: deleting the test headless service @ 10/19/24 12:37:17.658
  I1019 12:37:17.677860 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4630" for this suite. @ 10/19/24 12:37:17.685
â€¢ [11.254 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 10/19/24 12:37:17.696
  I1019 12:37:17.696302 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 12:37:17.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:17.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:17.714
  STEP: Creating a job @ 10/19/24 12:37:17.716
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/19/24 12:37:17.721
  E1019 12:37:18.441199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:19.441298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/19/24 12:37:19.726
  STEP: updating /status @ 10/19/24 12:37:19.737
  STEP: get /status @ 10/19/24 12:37:19.755
  I1019 12:37:19.768728 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9864" for this suite. @ 10/19/24 12:37:19.773
â€¢ [2.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/19/24 12:37:19.787
  I1019 12:37:19.787075 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 12:37:19.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:19.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:19.81
  I1019 12:37:19.813178 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I1019 12:37:19.832574 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1019 12:37:20.442263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:21.442408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 10/19/24 12:37:21.851
  STEP: updating a scale subresource @ 10/19/24 12:37:21.855
  STEP: verifying the deployment Spec.Replicas was modified @ 10/19/24 12:37:21.86
  STEP: Patch a scale subresource @ 10/19/24 12:37:21.867
  I1019 12:37:21.895466 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9244",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70cfbef6-7708-40ef-9c71-377c5d5c33b1",
      ResourceVersion: (string) (len=5) "18520",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1019 12:37:21.900484 20 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9244",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37878726-6b22-4f22-be59-6fe54d25e933",
      ResourceVersion: (string) (len=5) "18525",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "70cfbef6-7708-40ef-9c71-377c5d5c33b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 30 63 66 62 65  66 36 2d 37 37 30 38 2d  |\"70cfbef6-7708-|
              00000120  34 30 65 66 2d 39 63 37  31 2d 33 37 37 63 35 64  |40ef-9c71-377c5d|
              00000130  35 63 33 33 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5c33b1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:37:21.909271 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-kx5cj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-kx5cj",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9244",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7eaf8b1a-7eff-4a36-9d46-5e8ae3f7ffba",
      ResourceVersion: (string) (len=5) "18510",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "37878726-6b22-4f22-be59-6fe54d25e933",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  38 37 38 37 32 36 2d 36  |d\":\"37878726-6|
              00000090  62 32 32 2d 34 66 32 32  2d 62 65 35 39 2d 36 66  |b22-4f22-be59-6f|
              000000a0  65 35 34 64 32 35 65 39  33 33 5c 22 7d 22 3a 7b  |e54d25e933\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 32 31 32 5c 22 7d 22  |2.168.21.212\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ll8m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ll8m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938240,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a4a618ac86c00f41b3dfc37436adfbafeeee4b430876ae255d6d7d71e462ff21",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5ll8m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:37:21.910725 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-qjxsl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-qjxsl",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9244",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2823b33-deb7-4d24-8566-c214fb7a6a72",
      ResourceVersion: (string) (len=5) "18521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "37878726-6b22-4f22-be59-6fe54d25e933",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  38 37 38 37 32 36 2d 36  |d\":\"37878726-6|
              00000090  62 32 32 2d 34 66 32 32  2d 62 65 35 39 2d 36 66  |b22-4f22-be59-6f|
              000000a0  65 35 34 64 32 35 65 39  33 33 5c 22 7d 22 3a 7b  |e54d25e933\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g8lvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g8lvl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:37:21.912238 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9244" for this suite. @ 10/19/24 12:37:21.919
â€¢ [2.149 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 10/19/24 12:37:21.936
  I1019 12:37:21.936194 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename endpointslice @ 10/19/24 12:37:21.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:21.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:21.964
  E1019 12:37:22.442478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:23.442581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:24.022676 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7465" for this suite. @ 10/19/24 12:37:24.026
â€¢ [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 10/19/24 12:37:24.034
  I1019 12:37:24.034934 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename runtimeclass @ 10/19/24 12:37:24.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:24.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:24.054
  STEP: getting /apis @ 10/19/24 12:37:24.056
  STEP: getting /apis/node.k8s.io @ 10/19/24 12:37:24.059
  STEP: getting /apis/node.k8s.io/v1 @ 10/19/24 12:37:24.06
  STEP: creating @ 10/19/24 12:37:24.061
  STEP: watching @ 10/19/24 12:37:24.08
  I1019 12:37:24.080929 20 runtimeclass.go:275] starting watch
  STEP: getting @ 10/19/24 12:37:24.086
  STEP: listing @ 10/19/24 12:37:24.09
  STEP: patching @ 10/19/24 12:37:24.094
  STEP: updating @ 10/19/24 12:37:24.099
  I1019 12:37:24.107928 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 10/19/24 12:37:24.108
  STEP: deleting a collection @ 10/19/24 12:37:24.122
  I1019 12:37:24.143477 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9087" for this suite. @ 10/19/24 12:37:24.148
â€¢ [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 10/19/24 12:37:24.157
  I1019 12:37:24.157613 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/19/24 12:37:24.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:24.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:24.176
  STEP: getting /apis @ 10/19/24 12:37:24.183
  STEP: getting /apis/admissionregistration.k8s.io @ 10/19/24 12:37:24.186
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/19/24 12:37:24.187
  STEP: creating @ 10/19/24 12:37:24.188
  STEP: getting @ 10/19/24 12:37:24.206
  STEP: listing @ 10/19/24 12:37:24.21
  STEP: watching @ 10/19/24 12:37:24.213
  I1019 12:37:24.213983 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 10/19/24 12:37:24.215
  STEP: updating @ 10/19/24 12:37:24.221
  I1019 12:37:24.229889 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 10/19/24 12:37:24.229
  STEP: deleting a collection @ 10/19/24 12:37:24.245
  I1019 12:37:24.269018 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1510" for this suite. @ 10/19/24 12:37:24.272
â€¢ [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 10/19/24 12:37:24.28
  I1019 12:37:24.280988 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename limitrange @ 10/19/24 12:37:24.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:24.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:24.301
  STEP: Creating LimitRange "e2e-limitrange-bs7k2" in namespace "limitrange-7282" @ 10/19/24 12:37:24.303
  STEP: Creating another limitRange in another namespace @ 10/19/24 12:37:24.31
  I1019 12:37:24.323907 20 limit_range.go:299] Namespace "e2e-limitrange-bs7k2-7748" created
  I1019 12:37:24.323929 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-bs7k2" in namespace "e2e-limitrange-bs7k2-7748"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bs7k2" @ 10/19/24 12:37:24.328
  I1019 12:37:24.332610 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bs7k2" in "limitrange-7282" namespace @ 10/19/24 12:37:24.332
  I1019 12:37:24.339550 20 limit_range.go:335] LimitRange "e2e-limitrange-bs7k2" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bs7k2" by Collection with labelSelector: "e2e-limitrange-bs7k2=patched" @ 10/19/24 12:37:24.339
  STEP: Confirm that the limitRange "e2e-limitrange-bs7k2" has been deleted @ 10/19/24 12:37:24.35
  I1019 12:37:24.350382 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1019 12:37:24.353350 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-bs7k2=patched"
  I1019 12:37:24.353373 20 limit_range.go:344] LimitRange "e2e-limitrange-bs7k2" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bs7k2" @ 10/19/24 12:37:24.353
  I1019 12:37:24.357121 20 limit_range.go:350] Found 1 limitRange
  I1019 12:37:24.357241 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7282" for this suite. @ 10/19/24 12:37:24.361
  STEP: Destroying namespace "e2e-limitrange-bs7k2-7748" for this suite. @ 10/19/24 12:37:24.37
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 10/19/24 12:37:24.378
  I1019 12:37:24.378413 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:37:24.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:24.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:24.396
  STEP: Setting up server cert @ 10/19/24 12:37:24.419
  E1019 12:37:24.443114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:37:24.501
  STEP: Deploying the webhook pod @ 10/19/24 12:37:24.507
  STEP: Wait for the deployment to be ready @ 10/19/24 12:37:24.521
  I1019 12:37:24.532673 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 12:37:25.443350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:26.443408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 12:37:26.547
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:37:26.562
  E1019 12:37:27.443495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:27.562756 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1019 12:37:27.572870 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9201-crds.webhook.example.com via the AdmissionRegistration API @ 10/19/24 12:37:28.084
  STEP: Creating a custom resource while v1 is storage version @ 10/19/24 12:37:28.098
  E1019 12:37:28.444167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:29.444350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/19/24 12:37:30.142
  STEP: Patching the custom resource while v2 is storage version @ 10/19/24 12:37:30.157
  E1019 12:37:30.445321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:30.752581 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1235" for this suite. @ 10/19/24 12:37:30.757
  STEP: Destroying namespace "webhook-markers-9423" for this suite. @ 10/19/24 12:37:30.767
â€¢ [6.398 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 10/19/24 12:37:30.776
  I1019 12:37:30.776470 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pod-network-test @ 10/19/24 12:37:30.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:30.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:30.797
  STEP: Performing setup for networking test in namespace pod-network-test-5275 @ 10/19/24 12:37:30.8
  STEP: creating a selector @ 10/19/24 12:37:30.8
  STEP: Creating the service pods in kubernetes @ 10/19/24 12:37:30.8
  I1019 12:37:30.800235 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1019 12:37:31.445460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:32.445641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:33.446170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:34.446380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:35.446459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:36.446583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:37.446638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:38.447006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:39.448088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:40.448291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:41.449071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:42.449353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/19/24 12:37:42.893
  E1019 12:37:43.449743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:44.449900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:44.931238 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1019 12:37:44.931273 20 utils.go:496] Going to poll 192.168.243.174 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1019 12:37:44.934640 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.243.174:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5275 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:37:44.934666 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:37:44.935078 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:37:44.935117 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5275/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.243.174%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1019 12:37:44.972953 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1019 12:37:44.973030 20 utils.go:496] Going to poll 192.168.21.205 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1019 12:37:44.978065 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.21.205:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5275 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:37:44.978085 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:37:44.978490 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:37:44.978528 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5275/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.21.205%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1019 12:37:45.017546 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1019 12:37:45.017578 20 utils.go:496] Going to poll 192.168.73.119 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1019 12:37:45.021565 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.73.119:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5275 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:37:45.021586 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:37:45.021974 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:37:45.022040 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5275/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.73.119%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1019 12:37:45.058865 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1019 12:37:45.058989 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5275" for this suite. @ 10/19/24 12:37:45.064
â€¢ [14.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/19/24 12:37:45.072
  I1019 12:37:45.072772 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-runtime @ 10/19/24 12:37:45.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:45.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:45.092
  STEP: create the container @ 10/19/24 12:37:45.094
  W1019 12:37:45.105693      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/19/24 12:37:45.105
  E1019 12:37:45.449994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:46.450390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:47.450790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/19/24 12:37:48.127
  STEP: the container should be terminated @ 10/19/24 12:37:48.131
  STEP: the termination message should be set @ 10/19/24 12:37:48.131
  I1019 12:37:48.131356 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/19/24 12:37:48.131
  I1019 12:37:48.151256 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6642" for this suite. @ 10/19/24 12:37:48.155
â€¢ [3.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 10/19/24 12:37:48.163
  I1019 12:37:48.163754 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 12:37:48.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:48.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:48.182
  E1019 12:37:48.451036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:49.451308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:50.204901 20 delete.go:62] Deleting pod "var-expansion-29d65689-33f7-4af0-915a-9fd2c146bc0e" in namespace "var-expansion-6796"
  I1019 12:37:50.213393 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-29d65689-33f7-4af0-915a-9fd2c146bc0e" to be fully deleted
  E1019 12:37:50.451424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:51.452347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:37:52.221744 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6796" for this suite. @ 10/19/24 12:37:52.225
â€¢ [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 10/19/24 12:37:52.234
  I1019 12:37:52.234999 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:37:52.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:52.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:52.255
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:37:52.259
  E1019 12:37:52.453115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:53.454161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:54.454606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:55.455415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:37:56.291
  I1019 12:37:56.296864 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-a73fff54-9289-4ac1-94e4-5d520acb2211 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:37:56.304
  I1019 12:37:56.321649 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9285" for this suite. @ 10/19/24 12:37:56.326
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 10/19/24 12:37:56.334
  I1019 12:37:56.334121 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename namespaces @ 10/19/24 12:37:56.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:56.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:56.355
  STEP: Creating namespace "e2e-ns-wrvws" @ 10/19/24 12:37:56.357
  I1019 12:37:56.370459 20 namespace.go:411] Namespace "e2e-ns-wrvws-5195" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wrvws-5195" @ 10/19/24 12:37:56.37
  I1019 12:37:56.381725 20 namespace.go:434] Namespace "e2e-ns-wrvws-5195" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wrvws-5195" @ 10/19/24 12:37:56.381
  I1019 12:37:56.391884 20 namespace.go:463] Namespace "e2e-ns-wrvws-5195" has []v1.FinalizerName{"kubernetes"}
  I1019 12:37:56.391974 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1044" for this suite. @ 10/19/24 12:37:56.396
  STEP: Destroying namespace "e2e-ns-wrvws-5195" for this suite. @ 10/19/24 12:37:56.403
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 10/19/24 12:37:56.411
  I1019 12:37:56.411046 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:37:56.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:37:56.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:37:56.431
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f3585e43-e56e-4434-99c6-c7f2532c1b63 @ 10/19/24 12:37:56.437
  STEP: Creating the pod @ 10/19/24 12:37:56.442
  E1019 12:37:56.456251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:57.456449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:37:58.457344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-f3585e43-e56e-4434-99c6-c7f2532c1b63 @ 10/19/24 12:37:58.479
  STEP: waiting to observe update in volume @ 10/19/24 12:37:58.485
  E1019 12:37:59.457783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:00.457991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:01.459021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:02.459183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:03.459299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:04.459413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:05.459622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:06.459859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:07.460006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:08.460221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:09.460360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:10.460485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:11.460604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:12.460712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:13.461098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:14.461297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:15.462330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:16.462518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:17.462641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:18.463037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:19.463309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:20.464351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:21.464437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:22.465357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:23.465827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:24.465933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:25.466033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:26.466268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:27.466497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:28.466634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:29.466734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:30.466869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:31.467877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:32.468085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:33.468810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:34.469044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:35.469248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:36.469466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:37.469584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:38.469986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:39.470976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:40.471198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:41.471579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:42.471823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:43.471919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:44.472044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:45.472496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:46.472587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:47.472923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:48.473106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:49.473303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:50.474358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:51.474454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:52.475361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:53.475971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:54.476084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:55.476601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:56.476822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:57.476998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:58.477117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:38:59.477537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:00.477751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:01.477868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:02.478215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:03.478904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:04.479158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:05.479475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:06.479675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:07.480464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:08.481351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:09.482352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:10.482570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:11.483065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:12.483170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:39:12.865019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1527" for this suite. @ 10/19/24 12:39:12.869
â€¢ [76.467 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/19/24 12:39:12.878
  I1019 12:39:12.878460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename init-container @ 10/19/24 12:39:12.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:39:12.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:39:12.898
  STEP: creating the pod @ 10/19/24 12:39:12.901
  I1019 12:39:12.901502 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1019 12:39:13.483976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:14.484860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:15.485079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:16.485302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:39:16.613726 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2935" for this suite. @ 10/19/24 12:39:16.618
â€¢ [3.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 10/19/24 12:39:16.626
  I1019 12:39:16.626843 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:39:16.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:39:16.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:39:16.646
  STEP: Setting up server cert @ 10/19/24 12:39:16.672
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:39:17.011
  STEP: Deploying the webhook pod @ 10/19/24 12:39:17.022
  STEP: Wait for the deployment to be ready @ 10/19/24 12:39:17.037
  I1019 12:39:17.051206 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 12:39:17.486394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:18.486496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 12:39:19.064
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:39:19.076
  E1019 12:39:19.486536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:39:20.077230 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1019 12:39:20.086903 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 12:39:20.487363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-792-crds.webhook.example.com via the AdmissionRegistration API @ 10/19/24 12:39:20.597
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/19/24 12:39:20.613
  E1019 12:39:21.487777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:22.487906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:39:23.201481 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2788" for this suite. @ 10/19/24 12:39:23.206
  STEP: Destroying namespace "webhook-markers-9660" for this suite. @ 10/19/24 12:39:23.214
â€¢ [6.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 10/19/24 12:39:23.224
  I1019 12:39:23.224784 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:39:23.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:39:23.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:39:23.242
  STEP: Creating configMap configmap-6242/configmap-test-803e9d77-0c98-453b-9002-026139f729b7 @ 10/19/24 12:39:23.244
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:39:23.25
  E1019 12:39:23.488365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:24.488482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:25.489104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:26.489298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:39:27.276
  I1019 12:39:27.281077 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-35d388fe-a7ab-4eca-94c6-b7d3b9967dcd container env-test: <nil>
  STEP: delete the pod @ 10/19/24 12:39:27.288
  I1019 12:39:27.305634 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6242" for this suite. @ 10/19/24 12:39:27.31
â€¢ [4.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 10/19/24 12:39:27.32
  I1019 12:39:27.320370 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:39:27.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:39:27.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:39:27.34
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/19/24 12:39:27.342
  E1019 12:39:27.489664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:28.489880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:29.490344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:30.490600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:39:31.364
  I1019 12:39:31.369364 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-216822d5-7245-4c7b-928c-0e20d6f8b83e container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:39:31.377
  I1019 12:39:31.399517 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6685" for this suite. @ 10/19/24 12:39:31.404
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 10/19/24 12:39:31.415
  I1019 12:39:31.415630 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:39:31.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:39:31.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:39:31.441
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:39:31.445
  E1019 12:39:31.491245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:32.492348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:33.492490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:34.492642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:39:35.474
  I1019 12:39:35.480027 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-4e5c91c3-9b9b-4aad-b762-d258dd63b59e container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:39:35.489
  E1019 12:39:35.493264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:39:35.505875 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2841" for this suite. @ 10/19/24 12:39:35.51
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 10/19/24 12:39:35.518
  I1019 12:39:35.518481 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pod-network-test @ 10/19/24 12:39:35.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:39:35.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:39:35.537
  STEP: Performing setup for networking test in namespace pod-network-test-628 @ 10/19/24 12:39:35.539
  STEP: creating a selector @ 10/19/24 12:39:35.539
  STEP: Creating the service pods in kubernetes @ 10/19/24 12:39:35.539
  I1019 12:39:35.539854 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1019 12:39:36.494346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:37.494551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:38.494656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:39.495353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:40.496284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:41.496393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:42.496555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:43.496981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:44.497217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:45.497380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:46.497494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:47.497603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:48.498348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:49.498440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:50.499353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:51.499441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:52.500288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:53.501260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:54.501390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:55.501503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:56.501617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:57.501890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/19/24 12:39:57.658
  E1019 12:39:58.502198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:39:59.502289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:39:59.698702 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1019 12:39:59.698734 20 utils.go:496] Going to poll 192.168.243.175 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1019 12:39:59.702320 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.243.175 8081 | grep -v '^\s*$'] Namespace:pod-network-test-628 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:39:59.702340 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:39:59.702763 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:39:59.702802 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-628/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.243.175+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1019 12:40:00.502690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:00.743087 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1019 12:40:00.743186 20 utils.go:496] Going to poll 192.168.21.209 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1019 12:40:00.748539 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.21.209 8081 | grep -v '^\s*$'] Namespace:pod-network-test-628 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:40:00.748559 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:40:00.749021 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:40:00.749097 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-628/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.21.209+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1019 12:40:01.502773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:01.787675 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1019 12:40:01.787719 20 utils.go:496] Going to poll 192.168.73.66 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1019 12:40:01.793717 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.73.66 8081 | grep -v '^\s*$'] Namespace:pod-network-test-628 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:40:01.794935 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:40:01.795618 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:40:01.795810 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-628/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.73.66+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1019 12:40:02.503548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:02.841390 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1019 12:40:02.841540 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-628" for this suite. @ 10/19/24 12:40:02.847
â€¢ [27.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 10/19/24 12:40:02.858
  I1019 12:40:02.858594 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replication-controller @ 10/19/24 12:40:02.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:02.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:02.876
  STEP: Given a ReplicationController is created @ 10/19/24 12:40:02.878
  STEP: When the matched label of one of its pods change @ 10/19/24 12:40:02.883
  I1019 12:40:02.887782 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1019 12:40:03.504393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:04.504490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:05.504559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:06.505616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:07.505773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:07.892297 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/19/24 12:40:07.905
  E1019 12:40:08.506150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:08.914492 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1764" for this suite. @ 10/19/24 12:40:08.918
â€¢ [6.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 10/19/24 12:40:08.927
  I1019 12:40:08.927229 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename namespaces @ 10/19/24 12:40:08.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:08.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:08.945
  STEP: creating a Namespace @ 10/19/24 12:40:08.948
  STEP: patching the Namespace @ 10/19/24 12:40:08.962
  STEP: get the Namespace and ensuring it has the label @ 10/19/24 12:40:08.97
  I1019 12:40:08.974671 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3757" for this suite. @ 10/19/24 12:40:08.978
  STEP: Destroying namespace "nspatchtest-8c1406de-f81d-4d91-a0aa-052e1f4aba02-1916" for this suite. @ 10/19/24 12:40:08.987
â€¢ [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/19/24 12:40:08.994
  I1019 12:40:08.994906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 12:40:08.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:09.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:09.015
  STEP: creating a Deployment @ 10/19/24 12:40:09.021
  STEP: waiting for Deployment to be created @ 10/19/24 12:40:09.027
  STEP: waiting for all Replicas to be Ready @ 10/19/24 12:40:09.028
  I1019 12:40:09.029784 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.029803 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.042014 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.042041 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.057657 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.057683 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.079235 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1019 12:40:09.079258 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1019 12:40:09.506835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:09.762526 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1019 12:40:09.762556 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1019 12:40:10.507372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:10.570364 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/19/24 12:40:10.57
  I1019 12:40:10.578051 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/19/24 12:40:10.578
  I1019 12:40:10.579460 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579474 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579481 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579487 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579495 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579502 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579524 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579532 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 0
  I1019 12:40:10.579599 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:10.579605 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:10.579615 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.579621 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.579630 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.579635 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.592990 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.593010 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.611268 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.611294 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:10.618217 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:10.618235 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:10.633683 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:10.633702 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  E1019 12:40:11.507648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:11.777166 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:11.777203 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:11.798554 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  STEP: listing Deployments @ 10/19/24 12:40:11.798
  I1019 12:40:11.803116 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/19/24 12:40:11.803
  I1019 12:40:11.826503 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/19/24 12:40:11.826
  I1019 12:40:11.839434 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:11.839466 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:11.857963 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:11.872996 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:11.882212 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1019 12:40:12.507758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:12.618902 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:12.776683 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:12.803512 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1019 12:40:12.826765 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1019 12:40:13.508748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:13.586441 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/19/24 12:40:13.607
  STEP: fetching the DeploymentStatus @ 10/19/24 12:40:13.619
  I1019 12:40:13.625526 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:13.625578 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:13.625591 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:13.625681 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:13.625768 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 1
  I1019 12:40:13.625775 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:13.625793 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 3
  I1019 12:40:13.625821 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:13.625840 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 2
  I1019 12:40:13.625876 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8205 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/19/24 12:40:13.625
  I1019 12:40:13.638285 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638389 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638405 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638412 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638441 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638518 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638526 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638533 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638593 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638605 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638613 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638685 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.638696 20 deployment.go:475] observed event type MODIFIED
  I1019 12:40:13.643631 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1019 12:40:13.652870 20 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cddef25-df90-476c-9471-ca742db5b8ed",
      ResourceVersion: (string) (len=5) "19983",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b088b4aa-45a2-4644-9cb6-2d4baa3a8671",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 30 38 38  62 34 61 61 2d 34 35 61  |":\"b088b4aa-45a|
              00000130  32 2d 34 36 34 34 2d 39  63 62 36 2d 32 64 34 62  |2-4644-9cb6-2d4b|
              00000140  61 61 33 61 38 36 37 31  5c 22 7d 22 3a 7b 7d 7d  |aa3a8671\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1019 12:40:13.659824 20 deployment.go:669] pod: "test-deployment-6c86c7f765-gzvbv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-gzvbv",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "611626dc-8522-404c-a484-ca4b7bf4e8ba",
      ResourceVersion: (string) (len=5) "19945",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "9cddef25-df90-476c-9471-ca742db5b8ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 63 64 64 65 66 32 35  |uid\":\"9cddef25|
              000000a0  2d 64 66 39 30 2d 34 37  36 63 2d 39 34 37 31 2d  |-df90-476c-9471-|
              000000b0  63 61 37 34 32 64 62 35  62 38 65 64 5c 22 7d 22  |ca742db5b8ed\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 37 30 5c 22 7d 22 3a  |2.168.73.70\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sr7q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sr7q9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938412,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://af7c41d8ab747ce5ab3317d09ddbfc0e67442b85fd0375047def42302a163bfa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sr7q9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1019 12:40:13.661725 20 deployment.go:669] pod: "test-deployment-6c86c7f765-smwll":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-smwll",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0142d400-d812-4bc4-b972-372b02d7c368",
      ResourceVersion: (string) (len=5) "19981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938412,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "9cddef25-df90-476c-9471-ca742db5b8ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 63 64 64 65 66 32 35  |uid\":\"9cddef25|
              000000a0  2d 64 66 39 30 2d 34 37  36 63 2d 39 34 37 31 2d  |-df90-476c-9471-|
              000000b0  63 61 37 34 32 64 62 35  62 38 65 64 5c 22 7d 22  |ca742db5b8ed\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 32 31 38 5c 22 7d 22  |2.168.21.218\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xzrgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xzrgg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938412,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938413,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1aea10b36e43d3bc6295fa39bb1e337322e9e9ca56332f453bd65f9ed5d18caa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xzrgg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1019 12:40:13.665659 20 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46a54e7d-4e57-4723-9268-6f4e0298223f",
      ResourceVersion: (string) (len=5) "19991",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b088b4aa-45a2-4644-9cb6-2d4baa3a8671",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 30 38 38  62 34 61 61 2d 34 35 61  |":\"b088b4aa-45a|
              00000130  32 2d 34 36 34 34 2d 39  63 62 36 2d 32 64 34 62  |2-4644-9cb6-2d4b|
              00000140  61 61 33 61 38 36 37 31  5c 22 7d 22 3a 7b 7d 7d  |aa3a8671\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1019 12:40:13.670867 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-5tzxt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-5tzxt",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8959f8dd-480d-42a7-98b8-c429cec3cc78",
      ResourceVersion: (string) (len=5) "19986",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "46a54e7d-4e57-4723-9268-6f4e0298223f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 36 61 35 34 65 37 64  |uid\":\"46a54e7d|
              000000a0  2d 34 65 35 37 2d 34 37  32 33 2d 39 32 36 38 2d  |-4e57-4723-9268-|
              000000b0  36 66 34 65 30 32 39 38  32 32 33 66 5c 22 7d 22  |6f4e0298223f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 32 30 31 5c 22 7d 22  |2.168.21.201\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-97qws",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-97qws",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938412,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://451e5d0c1aaf3209ef5abef6dc2259ec350653de7ea4a81573d820e64852ebd9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-97qws",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1019 12:40:13.672438 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-9dpgr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-9dpgr",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71a1f09e-4b1d-464d-8132-e45d3927089f",
      ResourceVersion: (string) (len=5) "19971",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "46a54e7d-4e57-4723-9268-6f4e0298223f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 36 61 35 34 65 37 64  |uid\":\"46a54e7d|
              000000a0  2d 34 65 35 37 2d 34 37  32 33 2d 39 32 36 38 2d  |-4e57-4723-9268-|
              000000b0  36 66 34 65 30 32 39 38  32 32 33 66 5c 22 7d 22  |6f4e0298223f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 39 32 2e 31 36 38 2e  |"ip\":\"192.168.|
              00000290  37 33 2e 36 38 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |73.68\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rtmvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rtmvc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938411,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938412,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://639d5c8628e0044f7b9c5a6f5d212c2ff155fb9a91fe14ec479e56a6c5140e10"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://639d5c8628e0044f7b9c5a6f5d212c2ff155fb9a91fe14ec479e56a6c5140e10",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rtmvc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1019 12:40:13.673755 20 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bafed68-1949-4f6a-a445-4f61f1bb0cad",
      ResourceVersion: (string) (len=5) "19898",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b088b4aa-45a2-4644-9cb6-2d4baa3a8671",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 30 38 38  62 34 61 61 2d 34 35 61  |":\"b088b4aa-45a|
              00000130  32 2d 34 36 34 34 2d 39  63 62 36 2d 32 64 34 62  |2-4644-9cb6-2d4b|
              00000140  61 61 33 61 38 36 37 31  5c 22 7d 22 3a 7b 7d 7d  |aa3a8671\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1019 12:40:13.678556 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8205" for this suite. @ 10/19/24 12:40:13.683
â€¢ [4.697 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/19/24 12:40:13.692
  I1019 12:40:13.692502 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename proxy @ 10/19/24 12:40:13.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:13.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:13.714
  I1019 12:40:13.725424 20 proxy.go:387] Creating pod...
  E1019 12:40:14.509747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:15.509958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:15.747908 20 proxy.go:411] Creating service...
  I1019 12:40:15.759499 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=DELETE
  I1019 12:40:15.765756 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1019 12:40:15.765792 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=OPTIONS
  I1019 12:40:15.769555 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1019 12:40:15.769594 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=PATCH
  I1019 12:40:15.773905 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1019 12:40:15.773927 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=POST
  I1019 12:40:15.778364 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1019 12:40:15.778390 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=PUT
  I1019 12:40:15.781648 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1019 12:40:15.781677 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=DELETE
  I1019 12:40:15.788345 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1019 12:40:15.788370 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1019 12:40:15.795649 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1019 12:40:15.795670 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=PATCH
  I1019 12:40:15.801998 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1019 12:40:15.802026 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=POST
  I1019 12:40:15.808679 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1019 12:40:15.808708 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=PUT
  I1019 12:40:15.816255 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1019 12:40:15.816291 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=GET
  I1019 12:40:15.819767 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1019 12:40:15.819792 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=GET
  I1019 12:40:15.826531 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1019 12:40:15.826554 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/pods/agnhost/proxy?method=HEAD
  I1019 12:40:15.830258 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1019 12:40:15.830293 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6923/services/e2e-proxy-test-service/proxy?method=HEAD
  I1019 12:40:15.835731 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1019 12:40:15.835832 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6923" for this suite. @ 10/19/24 12:40:15.84
â€¢ [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/19/24 12:40:15.848
  I1019 12:40:15.848535 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-runtime @ 10/19/24 12:40:15.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:15.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:15.866
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/19/24 12:40:15.88
  E1019 12:40:16.510308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:17.510347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:18.511220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:19.511402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:20.511443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:21.511628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:22.511777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:23.512799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:24.512925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:25.513968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:26.514353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:27.514669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:28.515686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:29.515804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:30.516321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:31.516441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/19/24 12:40:31.974
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/19/24 12:40:31.979
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/19/24 12:40:31.987
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 10/19/24 12:40:31.987
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/19/24 12:40:32.014
  E1019 12:40:32.517423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:33.517524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/19/24 12:40:34.03
  E1019 12:40:34.518440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/19/24 12:40:35.04
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/19/24 12:40:35.047
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 10/19/24 12:40:35.048
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/19/24 12:40:35.075
  E1019 12:40:35.519386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/19/24 12:40:36.086
  E1019 12:40:36.519491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/19/24 12:40:37.097
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/19/24 12:40:37.106
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 10/19/24 12:40:37.106
  I1019 12:40:37.135488 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9140" for this suite. @ 10/19/24 12:40:37.139
â€¢ [21.302 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 10/19/24 12:40:37.15
  I1019 12:40:37.150590 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:40:37.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:37.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:37.17
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:40:37.172
  E1019 12:40:37.520200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:38.520310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:40:39.194
  I1019 12:40:39.198479 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-7c100f82-055c-4d36-b206-8956db8bf84b container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:40:39.206
  I1019 12:40:39.226869 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4952" for this suite. @ 10/19/24 12:40:39.231
â€¢ [2.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 10/19/24 12:40:39.239
  I1019 12:40:39.239662 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 12:40:39.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:39.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:39.256
  STEP: set up a multi version CRD @ 10/19/24 12:40:39.259
  I1019 12:40:39.259415 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 12:40:39.521123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:40.521233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:41.521530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/19/24 12:40:42.374
  STEP: check the unserved version gets removed @ 10/19/24 12:40:42.389
  E1019 12:40:42.521585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/19/24 12:40:43.08
  E1019 12:40:43.522257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:44.522310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:45.491599 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4463" for this suite. @ 10/19/24 12:40:45.498
â€¢ [6.269 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 10/19/24 12:40:45.508
  I1019 12:40:45.508571 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replicaset @ 10/19/24 12:40:45.509
  E1019 12:40:45.522743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:45.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:45.525
  I1019 12:40:45.541193 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1019 12:40:46.523106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:47.523267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:48.524277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:49.525342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:50.525433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:50.545152 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/19/24 12:40:50.545
  STEP: Scaling up "test-rs" replicaset @ 10/19/24 12:40:50.545
  I1019 12:40:50.555286 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/19/24 12:40:50.555
  I1019 12:40:50.574771 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6666 with ReadyReplicas 1, AvailableReplicas 1
  I1019 12:40:50.596374 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6666 with ReadyReplicas 1, AvailableReplicas 1
  I1019 12:40:50.622893 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6666 with ReadyReplicas 1, AvailableReplicas 1
  I1019 12:40:50.630411 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6666 with ReadyReplicas 1, AvailableReplicas 1
  E1019 12:40:51.526506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:51.649982 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6666 with ReadyReplicas 2, AvailableReplicas 2
  I1019 12:40:52.208794 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6666 with ReadyReplicas 3 found true
  I1019 12:40:52.208924 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6666" for this suite. @ 10/19/24 12:40:52.213
â€¢ [6.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 10/19/24 12:40:52.223
  I1019 12:40:52.223456 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 12:40:52.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:40:52.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:40:52.243
  STEP: Creating pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284 @ 10/19/24 12:40:52.245
  E1019 12:40:52.527507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:53.528484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 12:40:54.264
  I1019 12:40:54.268683 20 container_probe.go:1749] Initial restart count of pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 is 0
  I1019 12:40:54.272909 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:40:54.529432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:55.529526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:56.278720 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:40:56.530211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:57.530532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:40:58.284239 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:40:58.530510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:40:59.530732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:00.290523 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:00.530913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:01.531174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:02.295915 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:02.531275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:03.532273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:04.301653 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:04.532994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:05.533092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:06.307922 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:06.533214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:07.533292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:08.314588 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:08.533913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:09.534356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:10.320576 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:10.535049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:11.535378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:12.327125 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:12.535931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:13.536775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:14.332396 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:14.537808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:15.538247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:16.339231 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:16.538412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:17.539337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:18.345451 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:18.539721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:19.539847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:20.351352 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:20.540739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:21.540866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:22.357274 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:22.541540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:23.541648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:24.362886 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:24.542286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:25.543201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:26.368907 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:26.544262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:27.544356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:28.375184 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:28.545327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:29.546330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:30.381323 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:30.546547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:31.546732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:32.387182 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:32.547328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:33.548371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:34.392182 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:34.549334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:35.549449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:36.397760 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:36.550033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:37.550196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:38.403025 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:38.550292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:39.550571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:40.408573 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:40.550732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:41.550996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:42.414700 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:42.551922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:43.552113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:44.420792 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:44.552998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:45.553705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:46.426761 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:46.553956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:47.554053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:48.432062 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:48.554154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:49.554315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:50.438722 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:50.554929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:51.555526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:52.444402 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:52.555733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:53.555968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:54.450779 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:54.556964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:55.557061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:56.457033 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:56.557229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:57.557427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:41:58.462543 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:41:58.557960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:41:59.558081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:00.467811 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:00.559009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:01.559240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:02.473407 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:02.559603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:03.559766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:04.479315 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:04.560430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:05.560581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:06.484429 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:06.561603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:07.561752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:08.490384 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:08.562574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:09.562682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:10.495944 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:10.563070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:11.563202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:12.502172 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:12.563197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:13.563275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:14.507856 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:14.564041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:15.564170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:16.514045 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:16.565159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:17.565272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:18.519575 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:18.565683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:19.565854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:20.525751 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:20.565908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:21.566368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:22.531567 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:22.566714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:23.566853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:24.536788 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:24.567899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:25.568037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:26.542315 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:26.568635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:27.568939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:28.549052 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:28.569235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:29.569349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:30.554942 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:30.570064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:31.570758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:32.560402 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:32.571558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:33.571680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:34.566381 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:34.572453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:35.572682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:36.571685 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:36.572722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:37.572857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:38.572919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:38.578688 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:39.573262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:40.574329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:40.584416 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:41.575390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:42.575622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:42.589859 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:43.576170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:44.576310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:44.595078 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:45.576582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:46.576669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:46.601611 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:47.576632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:48.576750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:48.607345 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:49.577377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:50.578348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:50.613301 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:51.578508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:52.578629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:52.618695 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:53.579403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:54.579518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:54.624471 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:55.580255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:56.580586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:56.630713 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:57.581321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:42:58.581552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:42:58.637241 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:42:59.581692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:00.581900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:00.643531 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:01.582373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:02.582772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:02.649101 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:03.583591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:04.583684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:04.655535 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:05.584258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:06.584352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:06.662019 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:07.585322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:08.585573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:08.667417 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:09.585690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:10.586304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:10.672785 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:11.586696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:12.586902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:12.677866 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:13.587013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:14.587347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:14.684148 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:15.587455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:16.588333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:16.689528 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:17.589372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:18.589780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:18.695681 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:19.590320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:20.590440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:20.701461 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:21.591463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:22.591648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:22.707889 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:23.591958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:24.592172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:24.714320 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:25.592579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:26.592682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:26.721046 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:27.593573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:28.593891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:28.726325 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:29.594270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:30.595324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:30.731938 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:31.595453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:32.595646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:32.737844 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:33.595750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:34.595934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:34.743294 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:35.596169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:36.596353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:36.748842 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:37.596472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:38.596564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:38.755446 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:39.597479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:40.598325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:40.760557 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:41.598423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:42.598647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:42.766860 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:43.598813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:44.598996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:44.771902 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:45.599995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:46.600117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:46.778111 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:47.600303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:48.600419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:48.783552 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:49.601465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:50.601709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:50.789480 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:51.601906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:52.602673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:52.794792 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:53.602767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:54.602866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:54.800444 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:55.603267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:56.604327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:56.806116 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:57.604429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:43:58.604519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:43:58.812107 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:43:59.604975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:00.605320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:00.818208 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:01.606093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:02.606324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:02.824510 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:03.606416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:04.607341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:04.829382 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:05.608257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:06.608474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:06.835700 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:07.608575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:08.609099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:08.841922 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:09.609285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:10.609471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:10.847522 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:11.610425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:12.610617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:12.853168 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:13.611198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:14.611283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:14.858282 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:15.611594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:16.611828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:16.864688 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:17.612265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:18.612325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:18.871213 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:19.612392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:20.612582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:20.877413 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:21.612676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:22.613347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:22.882476 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:23.614356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:24.615335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:24.888282 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:25.615437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:26.615619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:26.895084 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:27.615984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:28.616263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:28.899929 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:29.616462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:30.616648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:30.905689 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:31.617328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:32.617514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:32.911543 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:33.618324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:34.618510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:34.917471 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:35.619096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:36.619277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:36.923362 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:37.620257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:38.620501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:38.929436 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:39.621236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:40.621268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:40.935071 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:41.621454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:42.622486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:42.940922 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:43.622718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:44.622809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:44.946049 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:45.623100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:46.623412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:46.952895 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:47.624327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:48.625323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:48.959005 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:49.626318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:50.626575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:50.964463 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:51.626680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:52.627743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:52.971069 20 container_probe.go:1759] Get pod test-grpc-f5fd1e79-651a-4a7e-a7b0-07ff53dd3e06 in namespace container-probe-6284
  E1019 12:44:53.627910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:54.628099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/19/24 12:44:54.971
  I1019 12:44:54.991036 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6284" for this suite. @ 10/19/24 12:44:54.995
â€¢ [242.780 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/19/24 12:44:55.004
  I1019 12:44:55.004700 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 12:44:55.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:44:55.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:44:55.023
  I1019 12:44:55.027343 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I1019 12:44:55.032364 20 deployment.go:1200] Waiting for observed generation 1
  E1019 12:44:55.628392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:56.628613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:57.041337 20 deployment.go:1205] Waiting for all required pods to come up
  I1019 12:44:57.045815 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/19/24 12:44:57.045
  I1019 12:44:57.045883 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1019 12:44:57.050112 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:10, UpdatedReplicas:10, ReadyReplicas:9, AvailableReplicas:9, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 44, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 44, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 44, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 44, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"webserver-deployment-64bcfc6446\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1019 12:44:57.628815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:44:58.629237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:44:59.059516 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1019 12:44:59.071356 20 deployment.go:313] Updating deployment webserver-deployment
  I1019 12:44:59.071386 20 deployment.go:1224] Waiting for observed generation 2
  E1019 12:44:59.630752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:00.631619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:45:01.082322 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1019 12:45:01.086289 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1019 12:45:01.090520 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1019 12:45:01.102270 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1019 12:45:01.102295 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1019 12:45:01.106071 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1019 12:45:01.114665 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1019 12:45:01.114684 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1019 12:45:01.124837 20 deployment.go:313] Updating deployment webserver-deployment
  I1019 12:45:01.124862 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1019 12:45:01.133377 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1019 12:45:01.139893 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1019 12:45:01.164876 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69c624da-db29-4f57-80fc-8487251b32e1",
      ResourceVersion: (string) (len=5) "21250",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1019 12:45:01.183946 20 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
      ResourceVersion: (string) (len=5) "21244",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "69c624da-db29-4f57-80fc-8487251b32e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 63 36 32 34  64 61 2d 64 62 32 39 2d  |\"69c624da-db29-|
              00000120  34 66 35 37 2d 38 30 66  63 2d 38 34 38 37 32 35  |4f57-80fc-848725|
              00000130  31 62 33 32 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1b32e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:45:01.184445 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1019 12:45:01.185497 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
      ResourceVersion: (string) (len=5) "21241",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "69c624da-db29-4f57-80fc-8487251b32e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 63 36 32 34  64 61 2d 64 62 32 39 2d  |\"69c624da-db29-|
              00000120  34 66 35 37 2d 38 30 66  63 2d 38 34 38 37 32 35  |4f57-80fc-848725|
              00000130  31 62 33 32 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1b32e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:45:01.208072 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4gzg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4gzg5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11f9b273-c3d3-4c6e-9237-87f72c5dc7a2",
      ResourceVersion: (string) (len=5) "21271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gz2j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gz2j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.209466 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6j6l9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6j6l9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8c13d93-ee87-4feb-b2e9-355ffd7583c1",
      ResourceVersion: (string) (len=5) "21109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  33 2e 31 37 38 5c 22 7d  |2.168.243.178\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hr5qh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hr5qh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-22-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.22.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.22.96"
        }
      },
      PodIP: (string) (len=15) "192.168.243.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.243.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://60473dbfbb56ccc4bd0b5ffb976119c4a0d14300c877d26c87aa8553f4b5dcf3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hr5qh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.210897 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-b29s5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-b29s5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18d5b494-42d7-4e6c-9621-718398af964f",
      ResourceVersion: (string) (len=5) "21262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfnk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfnk6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nfnk6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.212426 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bsdmv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bsdmv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d19be68f-0deb-414a-abbd-e870adf4cffb",
      ResourceVersion: (string) (len=5) "21099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 38 35 5c 22 7d 22 3a  |2.168.73.85\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wctdq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wctdq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://50d3b77215126792615ac4aa9e81406ddec9e7c7640d47fc47edcc67583cd863",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wctdq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.215576 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-g7xrk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-g7xrk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "653a089b-5268-4a5c-a7c5-abf2605ef8ca",
      ResourceVersion: (string) (len=5) "21093",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 32 32 33 5c 22 7d 22  |2.168.21.223\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-swvgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-swvgh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938696,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7599d0f78f4777ae8ee6027bf283c7607692e995259995b7168ba9f0f38ca066",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-swvgh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.217127 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-g8kgl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-g8kgl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4068648-2991-4217-9b64-7d16bffdca9c",
      ResourceVersion: (string) (len=5) "21265",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mzrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mzrk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.218815 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lq57h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lq57h",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1fd69f6-ada3-4469-b5df-c41a37fe86b5",
      ResourceVersion: (string) (len=5) "21105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 39 38 5c 22 7d 22 3a  |2.168.73.98\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2mz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2mz2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65cc934092c8ea538c9b8325ea2429de63aec9e6e4312266287d7eec517ad9e7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p2mz2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.220517 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mwk5h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mwk5h",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c1bddf2-967c-4db1-8d0a-85d672067147",
      ResourceVersion: (string) (len=5) "21116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  33 2e 31 37 37 5c 22 7d  |2.168.243.177\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-49t57",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-49t57",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-22-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.22.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.22.96"
        }
      },
      PodIP: (string) (len=15) "192.168.243.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.243.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://99a017b3aef02a8dc53248cfe9ab9c2e419279c5586dcdf0e24c57f088ad61fe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-49t57",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.223469 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-pmhkc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pmhkc",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a072497b-2f70-4a76-87fc-103050309ba8",
      ResourceVersion: (string) (len=5) "21089",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 32 31 35 5c 22 7d 22  |2.168.21.215\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhwn7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhwn7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.215",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.215"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd886bf141aa284e2ebec8056fd56be162c6a185f102bd2823a90206c69d6c49",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mhwn7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.227528 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qrwnz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qrwnz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0105f22d-70f7-466c-bc20-ac22aed8373a",
      ResourceVersion: (string) (len=5) "21276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f9rxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f9rxj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.229606 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rrls5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rrls5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e45dcae-4c54-4129-918d-57c062921f80",
      ResourceVersion: (string) (len=5) "21102",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 37 39 5c 22 7d 22 3a  |2.168.73.79\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4qcj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4qcj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bd0bbde135a9202f8fff6518f005f496c5d3bcabeb9572e26478b171d62e5b42",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h4qcj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.230787 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-tqwwb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-tqwwb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "922dbc73-a836-40e5-a0d0-14e3274f4a29",
      ResourceVersion: (string) (len=5) "21268",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jzmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jzmc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-22-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.231780 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-w6tlb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w6tlb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1363796-9de0-4d47-a74f-ff4a8912ca60",
      ResourceVersion: (string) (len=5) "21112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  33 2e 31 37 39 5c 22 7d  |2.168.243.179\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jxnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jxnw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-22-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.22.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.22.96"
        }
      },
      PodIP: (string) (len=15) "192.168.243.179",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.243.179"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864938695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fc664bd97e2bc3f10ff058458b216db0ceca9ee1c7e19a79398993c6024c295a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4jxnw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.233790 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xcl9x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xcl9x",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "883f99ca-98ff-458d-9dc3-0a6d3b769214",
      ResourceVersion: (string) (len=5) "21253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8kq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8kq5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.235951 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zvqxx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zvqxx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63194cda-d2a3-4b67-9225-9b3eb0b3f64a",
      ResourceVersion: (string) (len=5) "21277",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6959cc40-c195-410d-9c1e-eec161c2e1cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  35 39 63 63 34 30 2d 63  |d\":\"6959cc40-c|
              00000090  31 39 35 2d 34 31 30 64  2d 39 63 31 65 2d 65 65  |195-410d-9c1e-ee|
              000000a0  63 31 36 31 63 32 65 31  63 62 5c 22 7d 22 3a 7b  |c161c2e1cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l6p8d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l6p8d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l6p8d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.237794 20 deployment.go:67] Pod "webserver-deployment-786f49d774-2w4wd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2w4wd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc09e7ea-5146-4653-8139-53f78493d91e",
      ResourceVersion: (string) (len=5) "21272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94p7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94p7s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.238802 20 deployment.go:67] Pod "webserver-deployment-786f49d774-6w7tr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6w7tr",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d222ca0b-d5db-42d2-b070-50bd8641d0a9",
      ResourceVersion: (string) (len=5) "21254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ff5cx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ff5cx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-22-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.239844 20 deployment.go:67] Pod "webserver-deployment-786f49d774-8875q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8875q",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9889a0d-1d24-402a-be56-92a8c8459603",
      ResourceVersion: (string) (len=5) "21270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2cgp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2cgp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.240794 20 deployment.go:67] Pod "webserver-deployment-786f49d774-8h7kk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8h7kk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28e44d60-1a85-4d5d-83b6-72eec9f9f7b7",
      ResourceVersion: (string) (len=5) "21219",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 2e 32 31  36 5c 22 7d 22 3a 7b 22  |68.21.216\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b47rl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b47rl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b47rl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.242456 20 deployment.go:67] Pod "webserver-deployment-786f49d774-9mblf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9mblf",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52dd5e26-5642-4815-ab6e-261a0f911e4d",
      ResourceVersion: (string) (len=5) "21269",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lclgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lclgc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.243460 20 deployment.go:67] Pod "webserver-deployment-786f49d774-fsk2f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-fsk2f",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2fb49c8-6245-4df4-827a-b222b63dcf9f",
      ResourceVersion: (string) (len=5) "21274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bmxmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bmxmn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.244358 20 deployment.go:67] Pod "webserver-deployment-786f49d774-j66sb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-j66sb",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ab452d3-1098-4266-94a7-eb67d59e1f47",
      ResourceVersion: (string) (len=5) "21228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 37 33 2e 37 34  5c 22 7d 22 3a 7b 22 2e  |68.73.74\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbk6l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbk6l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fbk6l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.247107 20 deployment.go:67] Pod "webserver-deployment-786f49d774-m8hxg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-m8hxg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "737f990f-0703-4f21-aae2-1753a3a003d4",
      ResourceVersion: (string) (len=5) "21231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 37 33 2e 38 30  5c 22 7d 22 3a 7b 22 2e  |68.73.80\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h9tw6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h9tw6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h9tw6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.248463 20 deployment.go:67] Pod "webserver-deployment-786f49d774-n2822" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-n2822",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3cc6425-b7f0-4034-b8e1-3ff05265b1c1",
      ResourceVersion: (string) (len=5) "21239",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 33 2e 31  38 30 5c 22 7d 22 3a 7b  |68.243.180\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqqt2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqqt2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-22-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.22.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.22.96"
        }
      },
      PodIP: (string) (len=15) "192.168.243.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.243.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wqqt2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.249585 20 deployment.go:67] Pod "webserver-deployment-786f49d774-pswls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pswls",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b75474fc-1322-4892-a18f-17c9ef3b9aae",
      ResourceVersion: (string) (len=5) "21267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vlwq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vlwq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.250504 20 deployment.go:67] Pod "webserver-deployment-786f49d774-skkhd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-skkhd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6404e7d1-a648-4556-a318-3b609e16fa6b",
      ResourceVersion: (string) (len=5) "21216",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 2e 32 31  30 5c 22 7d 22 3a 7b 22  |68.21.210\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgvwp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgvwp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fgvwp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.252221 20 deployment.go:67] Pod "webserver-deployment-786f49d774-vt6v9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vt6v9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-504",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7eac7a1-1138-44a7-9ccd-1f4345a62f31",
      ResourceVersion: (string) (len=5) "21273",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864938701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "07215135-7d1e-4e8d-ad18-ba0d78ee0856",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864938701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  32 31 35 31 33 35 2d 37  |d\":\"07215135-7|
              00000090  64 31 65 2d 34 65 38 64  2d 61 64 31 38 2d 62 61  |d1e-4e8d-ad18-ba|
              000000a0  30 64 37 38 65 65 30 38  35 36 5c 22 7d 22 3a 7b  |0d78ee0856\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5nk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5nk6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:45:01.253395 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-504" for this suite. @ 10/19/24 12:45:01.261
â€¢ [6.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 10/19/24 12:45:01.278
  I1019 12:45:01.278357 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 12:45:01.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:45:01.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:45:01.303
  STEP: Creating service test in namespace statefulset-3982 @ 10/19/24 12:45:01.306
  I1019 12:45:01.334528 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1019 12:45:01.631711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:02.631906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:03.632575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:04.632720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:05.633371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:06.635496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:07.634623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:08.634729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:09.635339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:10.635528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:45:11.330401 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/19/24 12:45:11.337
  I1019 12:45:11.356835 20 wait.go:40] Found 1 stateful pods, waiting for 2
  E1019 12:45:11.636298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:12.636400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:13.637291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:14.637582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:15.637715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:16.637856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:17.638048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:18.638271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:19.638387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:20.638579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:45:21.358861 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1019 12:45:21.358894 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/19/24 12:45:21.367
  STEP: Delete all of the StatefulSets @ 10/19/24 12:45:21.371
  STEP: Verify that StatefulSets have been deleted @ 10/19/24 12:45:21.384
  I1019 12:45:21.390809 20 statefulset.go:138] Deleting all statefulset in ns statefulset-3982
  I1019 12:45:21.417021 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3982" for this suite. @ 10/19/24 12:45:21.427
â€¢ [20.164 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/19/24 12:45:21.442
  I1019 12:45:21.442786 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename watch @ 10/19/24 12:45:21.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:45:21.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:45:21.475
  STEP: creating a watch on configmaps with label A @ 10/19/24 12:45:21.478
  STEP: creating a watch on configmaps with label B @ 10/19/24 12:45:21.48
  STEP: creating a watch on configmaps with label A or B @ 10/19/24 12:45:21.481
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/19/24 12:45:21.482
  I1019 12:45:21.488088 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21780 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:45:21.488204 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21780 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/19/24 12:45:21.488
  I1019 12:45:21.499710 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21781 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:45:21.500021 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21781 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/19/24 12:45:21.5
  I1019 12:45:21.508700 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21782 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:45:21.508770 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21782 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/19/24 12:45:21.508
  I1019 12:45:21.516361 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21783 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:45:21.516438 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3647  fca6aa47-7e56-433e-8a37-60bc0cf1f266 21783 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/19/24 12:45:21.516
  I1019 12:45:21.521417 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3647  b628ed3e-06ad-4652-8dbf-64bbe3bdf86b 21784 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:45:21.521728 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3647  b628ed3e-06ad-4652-8dbf-64bbe3bdf86b 21784 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1019 12:45:21.638637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:22.638868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:23.639264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:24.639476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:25.639740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:26.639826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:27.639966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:28.640197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:29.640319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:30.640997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/19/24 12:45:31.521
  I1019 12:45:31.531459 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3647  b628ed3e-06ad-4652-8dbf-64bbe3bdf86b 21851 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 12:45:31.531510 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3647  b628ed3e-06ad-4652-8dbf-64bbe3bdf86b 21851 0 2024-10-19 12:45:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-19 12:45:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1019 12:45:31.641698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:32.642273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:33.643326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:34.643427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:35.644332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:36.644431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:37.644980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:38.645267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:39.645463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:40.646331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:45:41.531797 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3647" for this suite. @ 10/19/24 12:45:41.537
â€¢ [20.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/19/24 12:45:41.545
  I1019 12:45:41.545404 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-watch @ 10/19/24 12:45:41.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:45:41.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:45:41.563
  I1019 12:45:41.569674 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 12:45:41.646448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:42.647535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:43.647955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 10/19/24 12:45:44.106
  I1019 12:45:44.112344 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-19T12:45:44Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-19T12:45:44Z]] name:name1 resourceVersion:21887 uid:7e1556e3-f779-4207-b57c-541417ffc61a] num:map[num1:9223372036854775807 num2:1000000]]}
  E1019 12:45:44.648102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:45.648334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:46.648553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:47.648689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:48.649013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:49.650033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:50.650204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:51.650274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:52.650477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:53.650737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 10/19/24 12:45:54.113
  I1019 12:45:54.119750 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-19T12:45:54Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-19T12:45:54Z]] name:name2 resourceVersion:21913 uid:13e0705f-107f-43c3-afd0-2817eb33907e] num:map[num1:9223372036854775807 num2:1000000]]}
  E1019 12:45:54.651459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:55.651582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:56.652690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:57.652764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:58.652861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:45:59.653950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:00.654046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:01.654329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:02.655325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:03.655458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 10/19/24 12:46:04.12
  I1019 12:46:04.127660 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-19T12:45:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-19T12:46:04Z]] name:name1 resourceVersion:21933 uid:7e1556e3-f779-4207-b57c-541417ffc61a] num:map[num1:9223372036854775807 num2:1000000]]}
  E1019 12:46:04.656325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:05.656594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:06.657327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:07.657515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:08.657622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:09.657817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:10.658049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:11.658280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:12.658524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:13.659024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 10/19/24 12:46:14.128
  I1019 12:46:14.137469 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-19T12:45:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-19T12:46:14Z]] name:name2 resourceVersion:21953 uid:13e0705f-107f-43c3-afd0-2817eb33907e] num:map[num1:9223372036854775807 num2:1000000]]}
  E1019 12:46:14.659085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:15.659290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:16.659496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:17.659682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:18.660002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:19.660361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:20.660568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:21.660692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:22.660881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:23.661058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 10/19/24 12:46:24.137
  I1019 12:46:24.147867 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-19T12:45:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-19T12:46:04Z]] name:name1 resourceVersion:21975 uid:7e1556e3-f779-4207-b57c-541417ffc61a] num:map[num1:9223372036854775807 num2:1000000]]}
  E1019 12:46:24.661459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:25.662356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:26.663004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:27.663179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:28.663278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:29.663415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:30.664373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:31.665355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:32.665557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:33.665724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 10/19/24 12:46:34.148
  I1019 12:46:34.158042 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-19T12:45:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-19T12:46:14Z]] name:name2 resourceVersion:21996 uid:13e0705f-107f-43c3-afd0-2817eb33907e] num:map[num1:9223372036854775807 num2:1000000]]}
  E1019 12:46:34.666338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:35.666423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:36.666617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:37.666862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:38.667255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:39.667771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:40.667904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:41.668086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:42.668364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:43.668533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:44.669203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:46:44.675032 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2831" for this suite. @ 10/19/24 12:46:44.68
â€¢ [63.145 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/19/24 12:46:44.69
  I1019 12:46:44.690732 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 12:46:44.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:46:44.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:46:44.708
  STEP: Create a pod @ 10/19/24 12:46:44.71
  E1019 12:46:45.669589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:46.669473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/19/24 12:46:46.732
  I1019 12:46:46.739194 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1019 12:46:46.739327 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4590" for this suite. @ 10/19/24 12:46:46.743
â€¢ [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/19/24 12:46:46.752
  I1019 12:46:46.752320 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:46:46.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:46:46.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:46:46.771
  STEP: Creating secret with name secret-test-7065d19c-77fc-40d1-affd-6b09ea60fa1c @ 10/19/24 12:46:46.773
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:46:46.78
  E1019 12:46:47.670197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:48.670473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:49.670610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:50.670832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:46:50.806
  I1019 12:46:50.811604 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-secrets-daf51e2a-c6e0-4f7d-bda1-bac7b4743c82 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:46:50.829
  I1019 12:46:50.847668 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8318" for this suite. @ 10/19/24 12:46:50.851
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 10/19/24 12:46:50.859
  I1019 12:46:50.859637 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:46:50.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:46:50.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:46:50.878
  STEP: Creating secret with name secret-test-f05da36a-5596-4abb-b2a2-729a58da0f39 @ 10/19/24 12:46:50.881
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:46:50.886
  E1019 12:46:51.670993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:52.671218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:53.671843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:54.671918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:46:54.911
  I1019 12:46:54.916337 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-secrets-35b1d0f4-b53c-4fd4-9065-49fc4aac2c14 container secret-env-test: <nil>
  STEP: delete the pod @ 10/19/24 12:46:54.924
  I1019 12:46:54.941442 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6496" for this suite. @ 10/19/24 12:46:54.946
â€¢ [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/19/24 12:46:54.953
  I1019 12:46:54.953932 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:46:54.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:46:54.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:46:54.972
  STEP: Creating secret with name secret-test-c2844bc3-d6b5-4373-a380-64e8cb32470c @ 10/19/24 12:46:54.974
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:46:54.98
  E1019 12:46:55.672425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:56.672537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:57.672761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:46:58.672865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:46:59.007
  I1019 12:46:59.012363 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-secrets-e2323879-f59e-439a-a040-4f3d55e56d97 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:46:59.029
  I1019 12:46:59.047478 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1647" for this suite. @ 10/19/24 12:46:59.051
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 10/19/24 12:46:59.061
  I1019 12:46:59.061530 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:46:59.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:46:59.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:46:59.082
  STEP: Creating a ResourceQuota @ 10/19/24 12:46:59.085
  STEP: Getting a ResourceQuota @ 10/19/24 12:46:59.091
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/19/24 12:46:59.096
  STEP: Patching the ResourceQuota @ 10/19/24 12:46:59.1
  STEP: Deleting a Collection of ResourceQuotas @ 10/19/24 12:46:59.106
  STEP: Verifying the deleted ResourceQuota @ 10/19/24 12:46:59.117
  I1019 12:46:59.121785 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8087" for this suite. @ 10/19/24 12:46:59.126
â€¢ [0.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/19/24 12:46:59.134
  I1019 12:46:59.134500 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename init-container @ 10/19/24 12:46:59.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:46:59.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:46:59.153
  STEP: creating the pod @ 10/19/24 12:46:59.155
  I1019 12:46:59.155291 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1019 12:46:59.673931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:00.674880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:01.675733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:02.676591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:47:03.618233 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5217" for this suite. @ 10/19/24 12:47:03.623
â€¢ [4.498 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/19/24 12:47:03.632
  I1019 12:47:03.632743 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename hostport @ 10/19/24 12:47:03.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:47:03.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:47:03.649
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/19/24 12:47:03.657
  E1019 12:47:03.676972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:04.677179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.204 on the node which pod1 resides and expect scheduled @ 10/19/24 12:47:05.675
  E1019 12:47:05.677586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:06.677778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:07.677983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:08.678291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:09.678548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.204 but use UDP protocol on the node which pod2 resides @ 10/19/24 12:47:09.699
  E1019 12:47:10.679350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:11.679576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:12.679695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:13.679799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/19/24 12:47:13.736
  I1019 12:47:13.736967 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.204 http://127.0.0.1:54323/hostname] Namespace:hostport-8335 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:47:13.736984 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:47:13.737466 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:47:13.737523 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8335/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.204+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.204, port: 54323 @ 10/19/24 12:47:13.789
  I1019 12:47:13.789483 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.204:54323/hostname] Namespace:hostport-8335 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:47:13.789500 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:47:13.789969 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:47:13.790015 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8335/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.204%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.204, port: 54323 UDP @ 10/19/24 12:47:13.827
  I1019 12:47:13.827446 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.3.204 54323] Namespace:hostport-8335 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:47:13.827464 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:47:13.827913 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:47:13.827996 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8335/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.3.204+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1019 12:47:14.679949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:15.680170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:16.680337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:17.680490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:18.681482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:47:18.866410 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8335" for this suite. @ 10/19/24 12:47:18.871
â€¢ [15.248 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 10/19/24 12:47:18.88
  I1019 12:47:18.880641 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 12:47:18.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:47:18.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:47:18.9
  STEP: Creating a test headless service @ 10/19/24 12:47:18.902
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-499.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-499.svc.cluster.local;sleep 1; done
   @ 10/19/24 12:47:18.91
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-499.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-499.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-499.svc.cluster.local;sleep 1; done
   @ 10/19/24 12:47:18.91
  STEP: creating a pod to probe DNS @ 10/19/24 12:47:18.91
  STEP: submitting the pod to kubernetes @ 10/19/24 12:47:18.91
  E1019 12:47:19.681749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:20.682755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 12:47:20.934
  STEP: looking for the results for each expected name from probers @ 10/19/24 12:47:20.939
  I1019 12:47:20.944389 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.949341 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.953737 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.957343 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.961731 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.966538 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.970341 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.974404 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-499.svc.cluster.local from pod dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a: the server could not find the requested resource (get pods dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a)
  I1019 12:47:20.974426 20 dns_common.go:489] Lookups using dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local wheezy_udp@dns-test-service-2.dns-499.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-499.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-499.svc.cluster.local jessie_udp@dns-test-service-2.dns-499.svc.cluster.local jessie_tcp@dns-test-service-2.dns-499.svc.cluster.local]

  I1019 12:47:20.982395 20 dns_common.go:495] Pod client logs for webserver: 
  I1019 12:47:20.988405 20 dns_common.go:495] Pod client logs for querier: 
  I1019 12:47:20.995966 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1019 12:47:21.683586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:22.683692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:23.683747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:24.683849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:25.683973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:47:25.976408 20 dns_common.go:527] DNS probes using dns-499/dns-test-4c2ea9b7-ddf6-49c1-af1a-b93f0cf34b3a succeeded

  STEP: deleting the pod @ 10/19/24 12:47:25.976
  STEP: deleting the test headless service @ 10/19/24 12:47:25.994
  I1019 12:47:26.012611 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-499" for this suite. @ 10/19/24 12:47:26.017
â€¢ [7.144 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 10/19/24 12:47:26.025
  I1019 12:47:26.025111 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:47:26.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:47:26.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:47:26.044
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/19/24 12:47:26.046
  E1019 12:47:26.684435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:27.684607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:28.685357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:29.685541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:47:30.075
  I1019 12:47:30.080212 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-360bedf6-ed74-405d-a186-29c41479c1ad container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:47:30.087
  I1019 12:47:30.106213 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6096" for this suite. @ 10/19/24 12:47:30.111
â€¢ [4.096 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/19/24 12:47:30.12
  I1019 12:47:30.121013 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename cronjob @ 10/19/24 12:47:30.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:47:30.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:47:30.138
  STEP: Creating a ForbidConcurrent cronjob @ 10/19/24 12:47:30.14
  STEP: Ensuring a job is scheduled @ 10/19/24 12:47:30.145
  E1019 12:47:30.686352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:31.686451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:32.686678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:33.686887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:34.687003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:35.687125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:36.687891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:37.688666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:38.688784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:39.689038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:40.689272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:41.689490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:42.689546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:43.689651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:44.690509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:45.690609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:46.690762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:47.690979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:48.691312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:49.691363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:50.691856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:51.691967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:52.692618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:53.692751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:54.692838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:55.692991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:56.693973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:57.694091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:58.695103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:47:59.695321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/19/24 12:48:00.153
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/19/24 12:48:00.156
  STEP: Ensuring no more jobs are scheduled @ 10/19/24 12:48:00.161
  STEP: Removing cronjob @ 10/19/24 12:48:00.165
  I1019 12:48:00.172557 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4214" for this suite. @ 10/19/24 12:48:00.176
â€¢ [30.064 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 10/19/24 12:48:00.185
  I1019 12:48:00.185334 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:48:00.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:00.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:00.204
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/19/24 12:48:00.207
  E1019 12:48:00.695747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:01.695863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:02.696536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:03.696639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:48:04.235
  I1019 12:48:04.238652 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-ef230eb2-c4f9-49a9-b6af-a4a614837835 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:48:04.246
  I1019 12:48:04.268190 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2441" for this suite. @ 10/19/24 12:48:04.272
â€¢ [4.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/19/24 12:48:04.28
  I1019 12:48:04.280651 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubelet-test @ 10/19/24 12:48:04.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:04.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:04.299
  I1019 12:48:04.322751 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7952" for this suite. @ 10/19/24 12:48:04.326
â€¢ [0.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/19/24 12:48:04.334
  I1019 12:48:04.334818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/19/24 12:48:04.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:04.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:04.352
  STEP: creating a target pod @ 10/19/24 12:48:04.355
  E1019 12:48:04.696799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:05.697155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/19/24 12:48:06.378
  E1019 12:48:06.697708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:07.697801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/19/24 12:48:08.399
  I1019 12:48:08.399535 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6665 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:48:08.399555 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:48:08.399984 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:48:08.400020 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6665/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1019 12:48:08.441620 20 exec_util.go:111] Exec stderr: ""
  I1019 12:48:08.450019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6665" for this suite. @ 10/19/24 12:48:08.455
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/19/24 12:48:08.464
  I1019 12:48:08.464432 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:48:08.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:08.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:08.484
  STEP: Creating secret with name secret-test-map-26630138-2488-4e76-a639-384c41c47857 @ 10/19/24 12:48:08.486
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:48:08.492
  E1019 12:48:08.698438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:09.698600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:10.699012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:11.699603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:48:12.518
  I1019 12:48:12.522646 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-secrets-bfaaa81b-6091-4ca3-a139-701b0f94c95d container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:48:12.53
  I1019 12:48:12.548757 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-883" for this suite. @ 10/19/24 12:48:12.552
â€¢ [4.099 seconds]
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 10/19/24 12:48:12.563
  I1019 12:48:12.563153 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 12:48:12.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:12.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:12.581
  STEP: Creating pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565 @ 10/19/24 12:48:12.583
  E1019 12:48:12.700600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:13.700679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 12:48:14.601
  I1019 12:48:14.606789 20 container_probe.go:1749] Initial restart count of pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f is 0
  I1019 12:48:14.611004 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:14.701341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:15.701484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:16.616972 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:16.702205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:17.702290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:18.622851 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:18.703098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:19.703309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:20.628782 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:20.703922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:21.704024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:22.634712 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:22.704929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:23.705012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:24.639460 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:24.705664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:25.705857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:26.645383 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:26.706576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:27.706714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:28.650910 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:28.707066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:29.707275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:30.656502 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:30.707602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:31.707822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:32.662107 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  E1019 12:48:32.708481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:33.709443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:34.668320 20 container_probe.go:1759] Get pod liveness-f7e599a4-821e-4385-8ab5-37878cd3177f in namespace container-probe-9565
  I1019 12:48:34.668356 20 container_probe.go:1763] Restart count of pod container-probe-9565/liveness-f7e599a4-821e-4385-8ab5-37878cd3177f is now 1 (20.061539973s elapsed)
  STEP: deleting the pod @ 10/19/24 12:48:34.668
  I1019 12:48:34.682379 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9565" for this suite. @ 10/19/24 12:48:34.687
â€¢ [22.132 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/19/24 12:48:34.695
  I1019 12:48:34.695558 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/19/24 12:48:34.696
  E1019 12:48:34.709941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:34.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:34.717
  STEP: mirroring a new custom Endpoint @ 10/19/24 12:48:34.732
  I1019 12:48:34.742051 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1019 12:48:35.710156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:36.710309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/19/24 12:48:36.747
  I1019 12:48:36.756417 20 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1019 12:48:37.710433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:38.710683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 10/19/24 12:48:38.761
  I1019 12:48:38.775387 20 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E1019 12:48:39.710804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:40.711030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:48:40.781183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5714" for this suite. @ 10/19/24 12:48:40.785
â€¢ [6.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 10/19/24 12:48:40.798
  I1019 12:48:40.798853 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/19/24 12:48:40.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:40.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:40.823
  STEP: getting /apis @ 10/19/24 12:48:40.825
  STEP: getting /apis/storage.k8s.io @ 10/19/24 12:48:40.828
  STEP: getting /apis/storage.k8s.io/v1 @ 10/19/24 12:48:40.829
  STEP: creating @ 10/19/24 12:48:40.829
  STEP: watching @ 10/19/24 12:48:40.85
  I1019 12:48:40.850877 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 10/19/24 12:48:40.857
  STEP: listing in namespace @ 10/19/24 12:48:40.86
  STEP: listing across namespaces @ 10/19/24 12:48:40.864
  STEP: patching @ 10/19/24 12:48:40.868
  STEP: updating @ 10/19/24 12:48:40.872
  I1019 12:48:40.877984 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1019 12:48:40.878044 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/19/24 12:48:40.878
  STEP: deleting a collection @ 10/19/24 12:48:40.893
  I1019 12:48:40.913092 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8701" for this suite. @ 10/19/24 12:48:40.916
â€¢ [0.127 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 10/19/24 12:48:40.925
  I1019 12:48:40.925905 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 12:48:40.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:40.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:40.946
  STEP: Creating ServiceAccount "e2e-sa-76p97"  @ 10/19/24 12:48:40.948
  I1019 12:48:40.952770 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-76p97"  @ 10/19/24 12:48:40.952
  I1019 12:48:40.960984 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I1019 12:48:40.961110 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9846" for this suite. @ 10/19/24 12:48:40.965
â€¢ [0.047 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 10/19/24 12:48:40.972
  I1019 12:48:40.972752 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 12:48:40.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:40.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:40.991
  STEP: Creating a pod to test downward api env vars @ 10/19/24 12:48:40.997
  E1019 12:48:41.711907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:42.712089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:43.712294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:44.712401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:48:45.034
  I1019 12:48:45.039078 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod downward-api-627e6e5e-e7e8-4e5e-8874-247252435112 container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 12:48:45.047
  I1019 12:48:45.063753 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7904" for this suite. @ 10/19/24 12:48:45.068
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 10/19/24 12:48:45.075
  I1019 12:48:45.075971 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename disruption @ 10/19/24 12:48:45.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:45.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:45.097
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/19/24 12:48:45.1
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:48:45.105
  E1019 12:48:45.712729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:46.712598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/19/24 12:48:47.117
  STEP: Waiting for all pods to be running @ 10/19/24 12:48:47.117
  I1019 12:48:47.121679 20 disruption.go:680] pods: 0 < 3
  E1019 12:48:47.713454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:48.714354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/19/24 12:48:49.122
  STEP: Updating the pdb to allow a pod to be evicted @ 10/19/24 12:48:49.136
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:48:49.147
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/19/24 12:48:49.153
  STEP: Waiting for all pods to be running @ 10/19/24 12:48:49.153
  STEP: Waiting for the pdb to observed all healthy pods @ 10/19/24 12:48:49.156
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/19/24 12:48:49.185
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:48:49.21
  E1019 12:48:49.714865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:50.714936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/19/24 12:48:51.215
  STEP: locating a running pod @ 10/19/24 12:48:51.218
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/19/24 12:48:51.232
  STEP: Waiting for the pdb to be deleted @ 10/19/24 12:48:51.239
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/19/24 12:48:51.243
  STEP: Waiting for all pods to be running @ 10/19/24 12:48:51.243
  I1019 12:48:51.268930 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3315" for this suite. @ 10/19/24 12:48:51.275
â€¢ [6.210 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 10/19/24 12:48:51.286
  I1019 12:48:51.286487 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 12:48:51.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:48:51.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:48:51.305
  STEP: Creating service test in namespace statefulset-3987 @ 10/19/24 12:48:51.308
  STEP: Creating statefulset ss in namespace statefulset-3987 @ 10/19/24 12:48:51.318
  I1019 12:48:51.330881 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1019 12:48:51.716292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:52.717357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:53.717502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:54.717646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:55.717773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:56.717902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:57.718113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:58.718394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:48:59.718614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:00.718735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:01.332011 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/19/24 12:49:01.341
  STEP: Getting /status @ 10/19/24 12:49:01.349
  I1019 12:49:01.353548 20 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/19/24 12:49:01.353
  I1019 12:49:01.363827 20 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/19/24 12:49:01.363
  I1019 12:49:01.365438 20 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1019 12:49:01.365468 20 statefulset.go:1111] Found Statefulset ss in namespace statefulset-3987 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 12:49:01.365478 20 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/19/24 12:49:01.365
  I1019 12:49:01.365498 20 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1019 12:49:01.373440 20 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/19/24 12:49:01.373
  I1019 12:49:01.375876 20 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1019 12:49:01.375904 20 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-3987 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 12:49:01.376021 20 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1019 12:49:01.376119 20 statefulset.go:138] Deleting all statefulset in ns statefulset-3987
  I1019 12:49:01.380882 20 rest.go:150] Scaling statefulset ss to 0
  E1019 12:49:01.719516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:02.719727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:03.720089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:04.720280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:05.720422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:06.720669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:07.720857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:08.720947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:09.721180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:10.721269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:11.400928 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 12:49:11.408692 20 rest.go:88] Deleting statefulset ss
  I1019 12:49:11.427986 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3987" for this suite. @ 10/19/24 12:49:11.432
â€¢ [20.155 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 10/19/24 12:49:11.442
  I1019 12:49:11.442055 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename security-context @ 10/19/24 12:49:11.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:49:11.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:49:11.465
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/19/24 12:49:11.468
  E1019 12:49:11.721395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:12.721519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:13.722346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:14.722463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:49:15.496
  I1019 12:49:15.501573 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod security-context-381d6498-4833-424c-8e5e-174b548dee03 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 12:49:15.51
  I1019 12:49:15.528809 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2884" for this suite. @ 10/19/24 12:49:15.533
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 10/19/24 12:49:15.542
  I1019 12:49:15.542312 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename podtemplate @ 10/19/24 12:49:15.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:49:15.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:49:15.563
  I1019 12:49:15.600498 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3445" for this suite. @ 10/19/24 12:49:15.604
â€¢ [0.070 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 10/19/24 12:49:15.612
  I1019 12:49:15.612752 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replication-controller @ 10/19/24 12:49:15.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:49:15.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:49:15.631
  STEP: Creating ReplicationController "e2e-rc-24qwg" @ 10/19/24 12:49:15.634
  I1019 12:49:15.638796 20 rc.go:792] Get Replication Controller "e2e-rc-24qwg" to confirm replicas
  E1019 12:49:15.723274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:16.638928 20 rc.go:792] Get Replication Controller "e2e-rc-24qwg" to confirm replicas
  I1019 12:49:16.642737 20 rc.go:801] Found 1 replicas for "e2e-rc-24qwg" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-24qwg" @ 10/19/24 12:49:16.642
  STEP: Updating a scale subresource @ 10/19/24 12:49:16.647
  STEP: Verifying replicas where modified for replication controller "e2e-rc-24qwg" @ 10/19/24 12:49:16.653
  I1019 12:49:16.653088 20 rc.go:792] Get Replication Controller "e2e-rc-24qwg" to confirm replicas
  E1019 12:49:16.723958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:17.653250 20 rc.go:792] Get Replication Controller "e2e-rc-24qwg" to confirm replicas
  I1019 12:49:17.658448 20 rc.go:801] Found 2 replicas for "e2e-rc-24qwg" replication controller
  I1019 12:49:17.658560 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4779" for this suite. @ 10/19/24 12:49:17.663
â€¢ [2.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 10/19/24 12:49:17.673
  I1019 12:49:17.673371 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:49:17.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:49:17.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:49:17.696
  STEP: creating service in namespace services-262 @ 10/19/24 12:49:17.698
  STEP: creating service affinity-clusterip-transition in namespace services-262 @ 10/19/24 12:49:17.698
  STEP: creating replication controller affinity-clusterip-transition in namespace services-262 @ 10/19/24 12:49:17.71
  I1019 12:49:17.720275      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-262, replica count: 3
  E1019 12:49:17.724204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:18.724880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:19.725364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:20.725539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:20.771766      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:49:20.784382 20 resource.go:361] Creating new exec pod
  E1019 12:49:21.726353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:22.726533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:23.727559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:23.810918 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-262 exec execpod-affinityczgj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1019 12:49:23.891198 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1019 12:49:23.891267 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:49:23.891344 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-262 exec execpod-affinityczgj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
  I1019 12:49:23.968577 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.166 80\nConnection to 10.152.183.166 80 port [tcp/http] succeeded!\n"
  I1019 12:49:23.968620 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 12:49:23.978279 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-262 exec execpod-affinityczgj2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.166:80/ ; done'
  I1019 12:49:24.109778 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n"
  I1019 12:49:24.109828 20 builder.go:147] stdout: "\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-mm97n\naffinity-clusterip-transition-mm97n\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-mm97n\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-hfscz\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk"
  I1019 12:49:24.109841 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109849 20 service.go:242] Received response from host: affinity-clusterip-transition-mm97n
  I1019 12:49:24.109856 20 service.go:242] Received response from host: affinity-clusterip-transition-mm97n
  I1019 12:49:24.109862 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109869 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.109874 20 service.go:242] Received response from host: affinity-clusterip-transition-mm97n
  I1019 12:49:24.109880 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109886 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.109892 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109897 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109904 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109910 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.109915 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109921 20 service.go:242] Received response from host: affinity-clusterip-transition-hfscz
  I1019 12:49:24.109932 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.109937 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.122352 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-262 exec execpod-affinityczgj2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.166:80/ ; done'
  I1019 12:49:24.254180 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.166:80/\n"
  I1019 12:49:24.254248 20 builder.go:147] stdout: "\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk\naffinity-clusterip-transition-664fk"
  I1019 12:49:24.254261 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254270 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254276 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254282 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254288 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254294 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254299 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254306 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254312 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254317 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254321 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254326 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254347 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254356 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254362 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254368 20 service.go:242] Received response from host: affinity-clusterip-transition-664fk
  I1019 12:49:24.254489 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-262, will wait for the garbage collector to delete the pods @ 10/19/24 12:49:24.269
  I1019 12:49:24.333683 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 10.10822ms
  I1019 12:49:24.433999 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.311716ms
  E1019 12:49:24.727786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:25.728500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:26.729109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:49:27.657302 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-262" for this suite. @ 10/19/24 12:49:27.662
â€¢ [9.996 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/19/24 12:49:27.669
  I1019 12:49:27.669577 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename cronjob @ 10/19/24 12:49:27.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:49:27.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:49:27.687
  STEP: Creating a suspended cronjob @ 10/19/24 12:49:27.69
  STEP: Ensuring no jobs are scheduled @ 10/19/24 12:49:27.695
  E1019 12:49:27.729755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:28.730015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:29.730550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:30.730784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:31.730999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:32.731115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:33.731679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:34.731778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:35.731898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:36.732113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:37.732590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:38.732802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:39.733208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:40.733349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:41.733453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:42.733584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:43.733909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:44.734290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:45.735358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:46.736297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:47.736427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:48.736538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:49.736659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:50.737036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:51.737039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:52.737246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:53.737325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:54.737453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:55.737783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:56.737915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:57.738153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:58.739042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:49:59.739336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:00.739459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:01.739597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:02.739710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:03.739951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:04.740097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:05.740258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:06.740380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:07.740586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:08.741332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:09.742371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:10.743311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:11.743465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:12.744332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:13.745344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:14.745455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:15.745584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:16.745749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:17.745861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:18.746348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:19.746631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:20.746717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:21.746850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:22.747448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:23.747586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:24.747672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:25.747782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:26.747991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:27.748235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:28.749227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:29.749324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:30.750163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:31.750369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:32.750389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:33.751353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:34.751585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:35.751789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:36.752338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:37.752450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:38.753476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:39.753577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:40.754102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:41.754291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:42.754394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:43.755347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:44.755452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:45.755748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:46.755898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:47.756106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:48.757165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:49.757278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:50.757464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:51.757565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:52.758151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:53.758290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:54.758680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:55.758893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:56.758934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:57.759117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:58.759347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:50:59.759541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:00.759746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:01.760032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:02.761081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:03.761363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:04.762447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:05.763508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:06.763630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:07.764336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:08.764427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:09.764521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:10.765421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:11.766416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:12.767506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:13.767677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:14.768263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:15.768428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:16.768580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:17.768772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:18.769594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:19.769796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:20.769910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:21.770108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:22.770279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:23.770620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:24.770726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:25.771363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:26.772334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:27.772512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:28.773340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:29.774354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:30.774449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:31.775328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:32.775795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:33.775983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:34.776824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:35.777062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:36.777276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:37.778332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:38.779096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:39.779259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:40.779380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:41.779576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:42.779732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:43.779842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:44.780449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:45.781339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:46.781415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:47.782328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:48.782394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:49.782665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:50.783321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:51.784625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:52.784719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:53.784762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:54.784855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:55.785102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:56.785263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:57.785353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:58.785453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:51:59.785642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:00.786515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:01.786711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:02.787609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:03.788038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:04.788988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:05.789370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:06.790228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:07.790260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:08.790467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:09.791499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:10.792471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:11.792861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:12.793204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:13.793257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:14.793355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:15.793648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:16.793896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:17.794320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:18.795316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:19.795524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:20.795637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:21.796340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:22.797332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:23.798321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:24.798445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:25.798549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:26.798648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:27.798838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:28.799835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:29.800020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:30.800371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:31.800558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:32.800806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:33.800943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:34.801961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:35.802108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:36.803103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:37.803288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:38.803389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:39.803481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:40.804247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:41.804301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:42.804399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:43.805326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:44.805471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:45.805581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:46.806404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:47.806460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:48.806514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:49.806720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:50.807088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:51.807653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:52.807760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:53.808049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:54.808294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:55.808493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:56.808591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:57.808703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:58.808884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:52:59.808998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:00.809902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:01.810226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:02.811275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:03.811540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:04.812385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:05.813189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:06.813245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:07.813304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:08.813895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:09.814356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:10.815357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:11.821233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:12.815650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:13.816012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:14.816147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:15.816284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:16.817055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:17.817177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:18.817298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:19.817424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:20.818053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:21.820291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:22.818365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:23.818642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:24.818754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:25.818964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:26.819598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:27.819767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:28.820599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:29.820792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:30.820951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:31.821794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:32.821832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:33.822113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:34.822218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:35.822347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:36.823203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:37.823307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:38.823839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:39.823931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:40.824364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:41.825037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:42.825296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:43.825421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:44.825535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:45.825653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:46.826346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:47.826457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:48.826554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:49.826773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:50.827388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:51.828408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:52.828817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:53.829165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:54.829308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:55.829524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:56.830311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:57.830373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:58.830479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:53:59.830610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:00.830667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:01.831613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:02.832636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:03.832727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:04.833729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:05.833802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:06.834344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:07.834454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:08.835451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:09.835640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:10.835770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:11.837299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:12.837423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:13.837518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:14.838160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:15.838294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:16.839150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:17.839329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:18.840229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:19.840433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:20.840853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:21.842548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:22.843344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:23.843469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:24.844348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:25.844457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:26.845222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/19/24 12:54:27.695
  STEP: Removing cronjob @ 10/19/24 12:54:27.7
  I1019 12:54:27.709251 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2958" for this suite. @ 10/19/24 12:54:27.714
â€¢ [300.054 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 10/19/24 12:54:27.723
  I1019 12:54:27.723254 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:54:27.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:54:27.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:54:27.75
  STEP: Counting existing ResourceQuota @ 10/19/24 12:54:27.752
  E1019 12:54:27.845477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:28.846207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:29.846651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:30.847563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:31.848099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/19/24 12:54:32.759
  STEP: Ensuring resource quota status is calculated @ 10/19/24 12:54:32.765
  E1019 12:54:32.848876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:33.849141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/19/24 12:54:34.771
  STEP: Ensuring resource quota status captures replicaset creation @ 10/19/24 12:54:34.785
  E1019 12:54:34.849339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:35.849446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/19/24 12:54:36.79
  STEP: Ensuring resource quota status released usage @ 10/19/24 12:54:36.798
  E1019 12:54:36.849494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:37.849588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:54:38.803388 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-826" for this suite. @ 10/19/24 12:54:38.808
â€¢ [11.093 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 10/19/24 12:54:38.816
  I1019 12:54:38.816674 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 12:54:38.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:54:38.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:54:38.837
  STEP: creating service nodeport-test with type=NodePort in namespace services-4448 @ 10/19/24 12:54:38.839
  E1019 12:54:38.849671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating replication controller nodeport-test in namespace services-4448 @ 10/19/24 12:54:38.859
  I1019 12:54:38.866601      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-4448, replica count: 2
  E1019 12:54:39.850361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:40.851348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:41.851454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:54:41.917736      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 12:54:41.917771 20 resource.go:361] Creating new exec pod
  E1019 12:54:42.851553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:43.851988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:44.852453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:54:44.941808 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1019 12:54:45.032905 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1019 12:54:45.032942 20 builder.go:147] stdout: ""
  E1019 12:54:45.852718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:54:45.941909 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1019 12:54:46.018851 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1019 12:54:46.018895 20 builder.go:147] stdout: ""
  E1019 12:54:46.852663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:54:46.941903 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1019 12:54:47.027994 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1019 12:54:47.028043 20 builder.go:147] stdout: "nodeport-test-sxptl"
  I1019 12:54:47.028120 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.183 80'
  I1019 12:54:47.104451 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.183 80\nConnection to 10.152.183.183 80 port [tcp/http] succeeded!\n"
  I1019 12:54:47.104509 20 builder.go:147] stdout: "nodeport-test-vzptw"
  I1019 12:54:47.104589 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.204 32092'
  I1019 12:54:47.185355 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.204 32092\nConnection to 172.31.3.204 32092 port [tcp/*] succeeded!\n"
  I1019 12:54:47.185407 20 builder.go:147] stdout: ""
  E1019 12:54:47.852746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:54:48.105209 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.204 32092'
  I1019 12:54:48.185367 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.3.204 32092\n+ echo hostName\nConnection to 172.31.3.204 32092 port [tcp/*] succeeded!\n"
  I1019 12:54:48.185406 20 builder.go:147] stdout: "nodeport-test-sxptl"
  I1019 12:54:48.185502 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-4448 exec execpodt5crx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.96 32092'
  I1019 12:54:48.268089 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.96 32092\nConnection to 172.31.22.96 32092 port [tcp/*] succeeded!\n"
  I1019 12:54:48.268193 20 builder.go:147] stdout: "nodeport-test-vzptw"
  I1019 12:54:48.268333 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4448" for this suite. @ 10/19/24 12:54:48.274
â€¢ [9.465 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 10/19/24 12:54:48.282
  I1019 12:54:48.282164 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 12:54:48.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:54:48.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:54:48.302
  STEP: Creating a pod to test env composition @ 10/19/24 12:54:48.304
  E1019 12:54:48.853473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:49.853665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:54:50.327
  I1019 12:54:50.331721 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod var-expansion-0286d995-6eb6-4f13-b854-87998ae23186 container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 12:54:50.352
  I1019 12:54:50.374677 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2719" for this suite. @ 10/19/24 12:54:50.379
â€¢ [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 10/19/24 12:54:50.388
  I1019 12:54:50.388691 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 12:54:50.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:54:50.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:54:50.408
  E1019 12:54:50.853721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:51.853992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 10/19/24 12:54:52.437
  I1019 12:54:52.437291 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3138 pod-service-account-db291ac4-8e4f-4a1a-b69a-4a77994c84ec -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/19/24 12:54:52.522
  I1019 12:54:52.522748 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3138 pod-service-account-db291ac4-8e4f-4a1a-b69a-4a77994c84ec -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/19/24 12:54:52.598
  I1019 12:54:52.598694 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3138 pod-service-account-db291ac4-8e4f-4a1a-b69a-4a77994c84ec -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1019 12:54:52.682986 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-3138"
  I1019 12:54:52.684639 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3138" for this suite. @ 10/19/24 12:54:52.688
â€¢ [2.308 seconds]
------------------------------
SSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 10/19/24 12:54:52.697
  I1019 12:54:52.697059 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename lease-test @ 10/19/24 12:54:52.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:54:52.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:54:52.714
  I1019 12:54:52.782459 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9343" for this suite. @ 10/19/24 12:54:52.786
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 10/19/24 12:54:52.796
  I1019 12:54:52.796951 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:54:52.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:54:52.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:54:52.816
  E1019 12:54:52.854186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:53.854608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:54.855636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:55.855749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:56.855882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:57.856496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:58.856696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:54:59.856905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:00.857537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:01.857850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:02.858505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:03.858834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:04.859235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:05.860026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:06.861010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:07.861936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:08.862423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/19/24 12:55:09.824
  E1019 12:55:09.862845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:10.863504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:11.864325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:12.864603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:13.864870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/19/24 12:55:14.829
  STEP: Ensuring resource quota status is calculated @ 10/19/24 12:55:14.836
  E1019 12:55:14.865418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:15.865528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 10/19/24 12:55:16.84
  STEP: Ensuring resource quota status captures configMap creation @ 10/19/24 12:55:16.853
  E1019 12:55:16.866110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:17.866321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 10/19/24 12:55:18.859
  E1019 12:55:18.866856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 10/19/24 12:55:18.867
  E1019 12:55:19.867005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:20.867364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:20.874299 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8224" for this suite. @ 10/19/24 12:55:20.879
â€¢ [28.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 10/19/24 12:55:20.886
  I1019 12:55:20.886868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/19/24 12:55:20.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:55:20.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:55:20.907
  STEP: create the container to handle the HTTPGet hook request. @ 10/19/24 12:55:20.913
  E1019 12:55:21.867423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:22.868334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/19/24 12:55:22.942
  E1019 12:55:23.868460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:24.868555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/19/24 12:55:24.964
  STEP: delete the pod with lifecycle hook @ 10/19/24 12:55:24.986
  E1019 12:55:25.868649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:26.868748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:27.006633 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5548" for this suite. @ 10/19/24 12:55:27.011
â€¢ [6.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/19/24 12:55:27.019
  I1019 12:55:27.019769 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 12:55:27.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:55:27.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:55:27.037
  I1019 12:55:27.040109 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: creating the pod @ 10/19/24 12:55:27.04
  STEP: submitting the pod to kubernetes @ 10/19/24 12:55:27.04
  E1019 12:55:27.869359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:28.870365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:29.109726 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7635" for this suite. @ 10/19/24 12:55:29.115
â€¢ [2.103 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/19/24 12:55:29.123
  I1019 12:55:29.123211 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename events @ 10/19/24 12:55:29.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:55:29.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:55:29.14
  STEP: Create set of events @ 10/19/24 12:55:29.143
  STEP: get a list of Events with a label in the current namespace @ 10/19/24 12:55:29.16
  STEP: delete a list of events @ 10/19/24 12:55:29.163
  I1019 12:55:29.163258 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/19/24 12:55:29.195
  I1019 12:55:29.201416 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5278" for this suite. @ 10/19/24 12:55:29.205
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 10/19/24 12:55:29.212
  I1019 12:55:29.212919 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 12:55:29.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:55:29.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:55:29.234
  I1019 12:55:29.236433 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 12:55:29.870959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/19/24 12:55:30.455
  I1019 12:55:30.455533 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8398 --namespace=crd-publish-openapi-8398 create -f -'
  E1019 12:55:30.871507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:31.871580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:32.525057 20 builder.go:146] stderr: ""
  I1019 12:55:32.525097 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2146-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1019 12:55:32.525174 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8398 --namespace=crd-publish-openapi-8398 delete e2e-test-crd-publish-openapi-2146-crds test-cr'
  I1019 12:55:32.577044 20 builder.go:146] stderr: ""
  I1019 12:55:32.577088 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2146-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1019 12:55:32.577202 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8398 --namespace=crd-publish-openapi-8398 apply -f -'
  I1019 12:55:32.635335 20 builder.go:146] stderr: ""
  I1019 12:55:32.635369 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2146-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1019 12:55:32.635478 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8398 --namespace=crd-publish-openapi-8398 delete e2e-test-crd-publish-openapi-2146-crds test-cr'
  I1019 12:55:32.696629 20 builder.go:146] stderr: ""
  I1019 12:55:32.696671 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2146-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/19/24 12:55:32.696
  I1019 12:55:32.696799 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8398 explain e2e-test-crd-publish-openapi-2146-crds'
  I1019 12:55:32.738347 20 builder.go:146] stderr: ""
  I1019 12:55:32.738399 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2146-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1019 12:55:32.872346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:33.872878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:33.998943 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8398" for this suite. @ 10/19/24 12:55:34.006
â€¢ [4.804 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 10/19/24 12:55:34.017
  I1019 12:55:34.017214 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 12:55:34.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:55:34.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:55:34.037
  STEP: Creating service test in namespace statefulset-2626 @ 10/19/24 12:55:34.039
  STEP: Creating stateful set ss in namespace statefulset-2626 @ 10/19/24 12:55:34.048
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2626 @ 10/19/24 12:55:34.069
  I1019 12:55:34.074150 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1019 12:55:34.873746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:35.873848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:36.873921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:37.874006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:38.874290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:39.875356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:40.876331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:41.877314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:42.877515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:43.877865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:44.074247 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/19/24 12:55:44.074
  I1019 12:55:44.078394 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 12:55:44.165528 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 12:55:44.165566 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 12:55:44.165576 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 12:55:44.170862 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1019 12:55:44.878071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:45.878299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:46.878548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:47.878650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:48.878818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:49.879034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:50.879151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:51.879289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:52.879438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:55:53.879607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:54.171938 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1019 12:55:54.171981 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1019 12:55:54.190788 20 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I1019 12:55:54.190845 20 resource.go:175] ss-0  ip-172-31-84-96  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:34 +0000 UTC  }]
  I1019 12:55:54.190851 20 resource.go:178] 
  I1019 12:55:54.190857 20 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E1019 12:55:54.879721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:55.196306 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996097687s
  E1019 12:55:55.879859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:56.201975 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990710166s
  E1019 12:55:56.880700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:57.209871 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.984811787s
  E1019 12:55:57.881663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:58.215730 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.97670107s
  E1019 12:55:58.882552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:55:59.220250 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.971215278s
  E1019 12:55:59.882650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:00.226856 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.96591436s
  E1019 12:56:00.883112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:01.233463 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.959383612s
  E1019 12:56:01.883524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:02.239730 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.953062802s
  E1019 12:56:02.884354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:03.245829 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 947.257945ms
  E1019 12:56:03.884393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2626 @ 10/19/24 12:56:04.246
  I1019 12:56:04.252306 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 12:56:04.329878 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 12:56:04.329914 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 12:56:04.329923 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 12:56:04.329965 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 12:56:04.437054 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1019 12:56:04.437101 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 12:56:04.437110 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 12:56:04.437172 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 12:56:04.566897 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1019 12:56:04.566934 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 12:56:04.566945 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 12:56:04.572336 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1019 12:56:04.572362 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1019 12:56:04.572369 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/19/24 12:56:04.572
  I1019 12:56:04.577070 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 12:56:04.658251 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 12:56:04.658286 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 12:56:04.658312 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 12:56:04.658375 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 12:56:04.735854 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 12:56:04.735903 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 12:56:04.735913 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 12:56:04.735953 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-2626 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 12:56:04.813665 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 12:56:04.813702 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 12:56:04.813711 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 12:56:04.813719 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1019 12:56:04.817543 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1019 12:56:04.884749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:05.884975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:06.885379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:07.885454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:08.885567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:09.885618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:10.885733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:11.885912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:12.886109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:13.886255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:14.824397 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1019 12:56:14.824429 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1019 12:56:14.824435 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1019 12:56:14.840539 20 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I1019 12:56:14.840584 20 resource.go:175] ss-0  ip-172-31-84-96  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:56:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:56:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:34 +0000 UTC  }]
  I1019 12:56:14.840605 20 resource.go:175] ss-1  ip-172-31-3-204  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:56:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:56:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:54 +0000 UTC  }]
  I1019 12:56:14.840624 20 resource.go:175] ss-2  ip-172-31-22-96  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:56:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:56:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 12:55:54 +0000 UTC  }]
  I1019 12:56:14.840629 20 resource.go:178] 
  I1019 12:56:14.840635 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1019 12:56:14.886651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:15.847015 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.994785795s
  E1019 12:56:15.887271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:16.851870 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.988842673s
  E1019 12:56:16.888051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:17.857438 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.984188169s
  E1019 12:56:17.888713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:18.862799 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.978595638s
  E1019 12:56:18.889005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:19.868777 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.972737703s
  E1019 12:56:19.889055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:20.874080 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.96727833s
  E1019 12:56:20.889299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:21.878770 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.961799324s
  E1019 12:56:21.890005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:22.884382 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.957244538s
  E1019 12:56:22.890529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:23.889457 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 951.683819ms
  E1019 12:56:23.890646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2626 @ 10/19/24 12:56:24.889
  E1019 12:56:24.890717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:24.896106 20 rest.go:150] Scaling statefulset ss to 0
  I1019 12:56:24.906014 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 12:56:24.911076 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2626
  I1019 12:56:24.916712 20 rest.go:150] Scaling statefulset ss to 0
  I1019 12:56:24.924341 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 12:56:24.929819 20 rest.go:88] Deleting statefulset ss
  I1019 12:56:24.951019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2626" for this suite. @ 10/19/24 12:56:24.955
â€¢ [50.947 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 10/19/24 12:56:24.964
  I1019 12:56:24.964273 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:56:24.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:56:24.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:56:24.981
  STEP: Creating a ResourceQuota with best effort scope @ 10/19/24 12:56:24.983
  STEP: Ensuring ResourceQuota status is calculated @ 10/19/24 12:56:24.99
  E1019 12:56:25.890923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:26.891235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 10/19/24 12:56:26.994
  STEP: Ensuring ResourceQuota status is calculated @ 10/19/24 12:56:27.001
  E1019 12:56:27.891887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:28.891947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 10/19/24 12:56:29.006
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/19/24 12:56:29.024
  E1019 12:56:29.892479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:30.893078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/19/24 12:56:31.029
  E1019 12:56:31.893269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:32.893361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/19/24 12:56:33.034
  STEP: Ensuring resource quota status released the pod usage @ 10/19/24 12:56:33.053
  E1019 12:56:33.893451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:34.894354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 10/19/24 12:56:35.059
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/19/24 12:56:35.072
  E1019 12:56:35.895367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:36.896347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/19/24 12:56:37.076
  E1019 12:56:37.896461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:38.896730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/19/24 12:56:39.082
  STEP: Ensuring resource quota status released the pod usage @ 10/19/24 12:56:39.098
  E1019 12:56:39.897285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:40.897519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:41.104124 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-768" for this suite. @ 10/19/24 12:56:41.108
â€¢ [16.154 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 10/19/24 12:56:41.118
  I1019 12:56:41.118914 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:56:41.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:56:41.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:56:41.138
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 12:56:41.141
  E1019 12:56:41.897674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:42.897767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:43.897898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:44.898376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:56:45.169
  I1019 12:56:45.173618 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-fdb5f7a3-a637-4529-bca5-6f4eca635f17 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 12:56:45.182
  I1019 12:56:45.205361 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8363" for this suite. @ 10/19/24 12:56:45.209
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 10/19/24 12:56:45.217
  I1019 12:56:45.217046 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 12:56:45.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:56:45.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:56:45.237
  STEP: Creating Pod @ 10/19/24 12:56:45.239
  E1019 12:56:45.898468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:46.898679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 10/19/24 12:56:47.259
  I1019 12:56:47.259316 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8535 PodName:pod-sharedvolume-4d6abe19-16d2-4f53-ae54-02b1571f9721 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 12:56:47.259343 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 12:56:47.259780 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 12:56:47.259820 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8535/pods/pod-sharedvolume-4d6abe19-16d2-4f53-ae54-02b1571f9721/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1019 12:56:47.292275 20 exec_util.go:111] Exec stderr: ""
  I1019 12:56:47.292425 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8535" for this suite. @ 10/19/24 12:56:47.297
â€¢ [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 10/19/24 12:56:47.305
  I1019 12:56:47.305036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:56:47.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:56:47.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:56:47.324
  STEP: Setting up server cert @ 10/19/24 12:56:47.351
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:56:47.57
  STEP: Deploying the webhook pod @ 10/19/24 12:56:47.58
  STEP: Wait for the deployment to be ready @ 10/19/24 12:56:47.596
  I1019 12:56:47.604820 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 12:56:47.899213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:48.899507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 12:56:49.619
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:56:49.633
  E1019 12:56:49.900287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:56:50.633719 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/19/24 12:56:50.642
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/19/24 12:56:50.642
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/19/24 12:56:50.656
  E1019 12:56:50.901354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/19/24 12:56:51.668
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/19/24 12:56:51.668
  E1019 12:56:51.901830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 10/19/24 12:56:52.703
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/19/24 12:56:52.703
  E1019 12:56:52.902462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:53.902634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:54.903710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:55.903803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:56.903864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/19/24 12:56:57.745
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/19/24 12:56:57.745
  E1019 12:56:57.904619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:58.905346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:56:59.906359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:00.906539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:01.906728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:02.853324 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6699" for this suite. @ 10/19/24 12:57:02.858
  STEP: Destroying namespace "webhook-markers-3888" for this suite. @ 10/19/24 12:57:02.868
â€¢ [15.570 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/19/24 12:57:02.875
  I1019 12:57:02.875646 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 12:57:02.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:02.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:02.896
  E1019 12:57:02.907577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:02.919213 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/19/24 12:57:02.925
  I1019 12:57:02.931154 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:02.931195 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:02.934266 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:57:02.934385 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 12:57:03.908667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:03.931109 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:03.931168 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:03.935669 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:57:03.935688 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 12:57:04.908724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:04.930984 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:04.931024 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:04.936187 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 12:57:04.936206 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/19/24 12:57:04.952
  STEP: Check that daemon pods images are updated. @ 10/19/24 12:57:04.966
  I1019 12:57:04.971038 20 daemon_set.go:1193] Wrong image for pod: daemon-set-cbwjw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:04.971063 20 daemon_set.go:1193] Wrong image for pod: daemon-set-mqn24. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:04.971070 20 daemon_set.go:1193] Wrong image for pod: daemon-set-pxpm2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:04.976331 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:04.976359 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 12:57:05.908802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:05.972655 20 daemon_set.go:1193] Wrong image for pod: daemon-set-cbwjw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:05.972691 20 daemon_set.go:1193] Wrong image for pod: daemon-set-pxpm2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:05.976416 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:05.976440 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 12:57:06.909287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:06.971684 20 daemon_set.go:1193] Wrong image for pod: daemon-set-cbwjw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:06.971714 20 daemon_set.go:1193] Wrong image for pod: daemon-set-pxpm2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:06.977504 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:06.977534 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 12:57:07.909370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:07.972429 20 daemon_set.go:1193] Wrong image for pod: daemon-set-cbwjw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:07.978057 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:07.978085 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 12:57:08.909618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:08.972406 20 daemon_set.go:1193] Wrong image for pod: daemon-set-cbwjw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1019 12:57:08.972439 20 daemon_set.go:1198] Pod daemon-set-v7s4v is not available
  I1019 12:57:08.976475 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:08.976501 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 12:57:09.910332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:09.972987 20 daemon_set.go:1198] Pod daemon-set-cxx8x is not available
  I1019 12:57:09.980546 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:09.980571 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/19/24 12:57:09.98
  I1019 12:57:09.988201 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:09.988231 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:09.992475 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1019 12:57:09.992495 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  E1019 12:57:10.910462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:10.986544 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:10.986578 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:10.990984 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1019 12:57:10.991003 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  E1019 12:57:11.910559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:11.986329 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:11.986365 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 12:57:11.990659 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 12:57:11.990685 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/19/24 12:57:12.012
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1471, will wait for the garbage collector to delete the pods @ 10/19/24 12:57:12.012
  I1019 12:57:12.076828 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.49497ms
  I1019 12:57:12.177812 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.979196ms
  E1019 12:57:12.911430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:13.912419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:14.282659 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 12:57:14.282693 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1019 12:57:14.286277 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25372"},"items":null}

  I1019 12:57:14.290095 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25372"},"items":null}

  I1019 12:57:14.305939 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1471" for this suite. @ 10/19/24 12:57:14.309
â€¢ [11.442 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 10/19/24 12:57:14.317
  I1019 12:57:14.317495 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:57:14.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:14.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:14.338
  STEP: Creating projection with secret that has name secret-emptykey-test-1a59617c-b523-45d3-8a2d-7432b3dc12bb @ 10/19/24 12:57:14.34
  I1019 12:57:14.342025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4339" for this suite. @ 10/19/24 12:57:14.346
â€¢ [0.037 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 10/19/24 12:57:14.354
  I1019 12:57:14.354845 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:57:14.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:14.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:14.373
  I1019 12:57:14.376273 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 create -f -'
  I1019 12:57:14.467063 20 builder.go:146] stderr: ""
  I1019 12:57:14.467099 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1019 12:57:14.467156 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 create -f -'
  I1019 12:57:14.554327 20 builder.go:146] stderr: ""
  I1019 12:57:14.554373 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/19/24 12:57:14.554
  E1019 12:57:14.913029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:15.559912 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 12:57:15.559952 20 framework.go:733] Found 1 / 1
  I1019 12:57:15.559966 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1019 12:57:15.564056 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 12:57:15.564073 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1019 12:57:15.564122 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 describe pod agnhost-primary-gsbmp'
  I1019 12:57:15.625741 20 builder.go:146] stderr: ""
  I1019 12:57:15.625861 20 builder.go:147] stdout: "Name:             agnhost-primary-gsbmp\nNamespace:        kubectl-5002\nPriority:         0\nService Account:  default\nNode:             ip-172-31-84-96/172.31.84.96\nStart Time:       Sat, 19 Oct 2024 12:57:14 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.73.108\nIPs:\n  IP:           192.168.73.108\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://addc80926fba740a3d83cff607f4bd3c1269a7c549ef5374fc920f9dddc7220e\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 19 Oct 2024 12:57:15 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-c6dxc (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-c6dxc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-5002/agnhost-primary-gsbmp to ip-172-31-84-96\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I1019 12:57:15.625932 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 describe rc agnhost-primary'
  I1019 12:57:15.686548 20 builder.go:146] stderr: ""
  I1019 12:57:15.686595 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5002\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-gsbmp\n"
  I1019 12:57:15.686649 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 describe service agnhost-primary'
  I1019 12:57:15.743607 20 builder.go:146] stderr: ""
  I1019 12:57:15.743649 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-5002\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.243\nIPs:                      10.152.183.243\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.73.108:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1019 12:57:15.748381 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 describe node ip-172-31-22-96'
  I1019 12:57:15.827651 20 builder.go:146] stderr: ""
  I1019 12:57:15.827747 20 builder.go:147] stdout: "Name:               ip-172-31-22-96\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-22-96\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 19 Oct 2024 11:49:17 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-22-96\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 19 Oct 2024 12:57:11 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 19 Oct 2024 12:00:12 +0000   Sat, 19 Oct 2024 12:00:12 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 19 Oct 2024 12:55:06 +0000   Sat, 19 Oct 2024 11:49:17 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 19 Oct 2024 12:55:06 +0000   Sat, 19 Oct 2024 11:49:17 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 19 Oct 2024 12:55:06 +0000   Sat, 19 Oct 2024 11:49:17 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 19 Oct 2024 12:55:06 +0000   Sat, 19 Oct 2024 11:51:06 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.22.96\n  Hostname:    ip-172-31-22-96\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7967652Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7865252Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec2c27d1ef71b4994921aeb695595efc\n  System UUID:                     ec2c27d1-ef71-b499-4921-aeb695595efc\n  Boot ID:                         1ef22ec2-79b9-47cd-9fe8-543072eda60d\n  Kernel Version:                  6.8.0-1017-aws\n  OS Image:                        Ubuntu 22.04.5 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.31.1\n  Kube-Proxy Version:              v1.31.1\nNon-terminated Pods:               (8 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-97rgd           0 (0%)        0 (0%)      0 (0%)           0 (0%)         62m\n  kube-system                      calico-node-6m9fv                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         57m\n  kube-system                      coredns-5b4857d7c8-cz9tq                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     68m\n  kube-system                      kube-state-metrics-5d7bdccd49-7stxf                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         68m\n  kube-system                      metrics-server-v0.7.1-6c77d69467-ts7gc                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     68m\n  kubernetes-dashboard             dashboard-metrics-scraper-64757cf48d-xllmt                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         68m\n  kubernetes-dashboard             kubernetes-dashboard-7b6b7bcb5d-zcjrt                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         68m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-fzrn7    0 (0%)        0 (0%)      0 (0%)           0 (0%)         52m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    355m (17%)  100m (5%)\n  memory                 120Mi (1%)  470Mi (6%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:\n  Type    Reason                   Age   From        Message\n  ----    ------                   ----  ----        -------\n  Normal  Starting                 58m   kube-proxy  \n  Normal  Starting                 58m   kubelet     Starting kubelet.\n  Normal  NodeAllocatableEnforced  58m   kubelet     Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  58m   kubelet     Node ip-172-31-22-96 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    58m   kubelet     Node ip-172-31-22-96 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     58m   kubelet     Node ip-172-31-22-96 status is now: NodeHasSufficientPID\n"
  I1019 12:57:15.827825 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5002 describe namespace kubectl-5002'
  I1019 12:57:15.880742 20 builder.go:146] stderr: ""
  I1019 12:57:15.880794 20 builder.go:147] stdout: "Name:         kubectl-5002\nLabels:       e2e-framework=kubectl\n              e2e-run=5399414b-5582-40e4-9a58-391ee53a2143\n              kubernetes.io/metadata.name=kubectl-5002\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1019 12:57:15.880907 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5002" for this suite. @ 10/19/24 12:57:15.885
â€¢ [1.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 10/19/24 12:57:15.894
  I1019 12:57:15.894578 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:57:15.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:15.91
  E1019 12:57:15.913169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:15.913
  STEP: Creating configMap with name projected-configmap-test-volume-map-0486037b-197a-4a6c-9a1a-8bfdf5c4621a @ 10/19/24 12:57:15.915
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:57:15.921
  E1019 12:57:16.913313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:17.914337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:18.915246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:19.915354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:57:19.948
  I1019 12:57:19.952647 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-configmaps-41ba017a-31eb-434b-a4bb-03ba7342523a container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 12:57:19.961
  I1019 12:57:19.978536 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8244" for this suite. @ 10/19/24 12:57:19.983
â€¢ [4.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/19/24 12:57:19.991
  I1019 12:57:19.991972 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:57:19.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:20.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:20.008
  STEP: Creating secret with name secret-test-886d2201-4e9c-4574-97ce-4fb6da5b022e @ 10/19/24 12:57:20.011
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:57:20.016
  E1019 12:57:20.915440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:21.915543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:22.915668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:23.915772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:57:24.042
  I1019 12:57:24.047060 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-secrets-207e3f9d-927b-4ed7-b1f0-e226a691ecbf container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:57:24.054
  I1019 12:57:24.071499 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6624" for this suite. @ 10/19/24 12:57:24.077
â€¢ [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/19/24 12:57:24.086
  I1019 12:57:24.086869 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubelet-test @ 10/19/24 12:57:24.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:24.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:24.104
  STEP: Waiting for pod completion @ 10/19/24 12:57:24.114
  E1019 12:57:24.915884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:25.916671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:26.916790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:27.916954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:28.142587 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2490" for this suite. @ 10/19/24 12:57:28.146
â€¢ [4.069 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 10/19/24 12:57:28.155
  I1019 12:57:28.155702 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename cronjob @ 10/19/24 12:57:28.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:28.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:28.175
  STEP: Creating a cronjob @ 10/19/24 12:57:28.177
  STEP: creating @ 10/19/24 12:57:28.177
  STEP: getting @ 10/19/24 12:57:28.185
  STEP: listing @ 10/19/24 12:57:28.189
  STEP: watching @ 10/19/24 12:57:28.193
  I1019 12:57:28.193275 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 10/19/24 12:57:28.194
  STEP: cluster-wide watching @ 10/19/24 12:57:28.198
  I1019 12:57:28.198291 20 cronjob.go:382] starting watch
  STEP: patching @ 10/19/24 12:57:28.199
  STEP: updating @ 10/19/24 12:57:28.205
  I1019 12:57:28.216107 20 cronjob.go:406] waiting for watch events with expected annotations
  I1019 12:57:28.216157 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 10/19/24 12:57:28.216
  STEP: updating /status @ 10/19/24 12:57:28.222
  STEP: get /status @ 10/19/24 12:57:28.23
  STEP: deleting @ 10/19/24 12:57:28.235
  STEP: deleting a collection @ 10/19/24 12:57:28.252
  I1019 12:57:28.267362 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4318" for this suite. @ 10/19/24 12:57:28.271
â€¢ [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 10/19/24 12:57:28.28
  I1019 12:57:28.280505 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:57:28.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:28.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:28.297
  STEP: Setting up server cert @ 10/19/24 12:57:28.322
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:57:28.567
  STEP: Deploying the webhook pod @ 10/19/24 12:57:28.577
  STEP: Wait for the deployment to be ready @ 10/19/24 12:57:28.591
  I1019 12:57:28.602316 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 12:57:28.917743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:29.917883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 12:57:30.617
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:57:30.63
  E1019 12:57:30.918892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:31.631180 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/19/24 12:57:31.64
  STEP: verifying the mutating webhook match conditions @ 10/19/24 12:57:31.649
  STEP: updating the mutating webhook match conditions @ 10/19/24 12:57:31.652
  STEP: verifying the mutating webhook match conditions @ 10/19/24 12:57:31.66
  I1019 12:57:31.717404 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8010" for this suite. @ 10/19/24 12:57:31.723
  STEP: Destroying namespace "webhook-markers-9409" for this suite. @ 10/19/24 12:57:31.732
â€¢ [3.459 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/19/24 12:57:31.739
  I1019 12:57:31.739512 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 12:57:31.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:31.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:31.758
  STEP: creating the pod @ 10/19/24 12:57:31.76
  STEP: submitting the pod to kubernetes @ 10/19/24 12:57:31.76
  W1019 12:57:31.769439      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1019 12:57:31.919343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:32.919460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/19/24 12:57:33.785
  STEP: updating the pod @ 10/19/24 12:57:33.789
  E1019 12:57:33.920096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:34.303028 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-2baad113-1120-4625-9007-cb49bd3b09ac"
  E1019 12:57:34.920943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:35.921162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:36.921287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:37.921494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:57:38.318628 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7363" for this suite. @ 10/19/24 12:57:38.323
â€¢ [6.592 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/19/24 12:57:38.331
  I1019 12:57:38.331865 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename subpath @ 10/19/24 12:57:38.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:57:38.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:57:38.351
  STEP: Setting up data @ 10/19/24 12:57:38.353
  STEP: Creating pod pod-subpath-test-configmap-gxrq @ 10/19/24 12:57:38.364
  STEP: Creating a pod to test atomic-volume-subpath @ 10/19/24 12:57:38.364
  E1019 12:57:38.921624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:39.921713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:40.922481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:41.922577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:42.922683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:43.922793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:44.923789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:45.924353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:46.925355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:47.925424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:48.926171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:49.926327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:50.927257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:51.927339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:52.927412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:53.927684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:54.927792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:55.927958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:56.929015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:57.929162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:58.929316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:57:59.929446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:00.929527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:01.929664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:58:02.451
  I1019 12:58:02.455862 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-subpath-test-configmap-gxrq container test-container-subpath-configmap-gxrq: <nil>
  STEP: delete the pod @ 10/19/24 12:58:02.464
  STEP: Deleting pod pod-subpath-test-configmap-gxrq @ 10/19/24 12:58:02.482
  I1019 12:58:02.482231 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-gxrq" in namespace "subpath-701"
  I1019 12:58:02.486389 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-701" for this suite. @ 10/19/24 12:58:02.49
â€¢ [24.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 10/19/24 12:58:02.498
  I1019 12:58:02.498348 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 12:58:02.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:02.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:02.516
  STEP: create the rc @ 10/19/24 12:58:02.526
  W1019 12:58:02.532457      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1019 12:58:02.929766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:03.929903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:04.931018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:05.931073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:06.933089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:07.933002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/19/24 12:58:08.539
  STEP: wait for the rc to be deleted @ 10/19/24 12:58:08.548
  E1019 12:58:08.933284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:09.933385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:10.933450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:11.933538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:12.933673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/19/24 12:58:13.554
  E1019 12:58:13.934354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:14.934452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:15.934525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:16.934626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:17.934738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:18.934856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:19.935393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:20.935517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:21.935621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:22.935727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:23.936154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:24.936335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:25.937330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:26.937516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:27.938324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:28.938440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:29.938642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:30.938843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:31.939052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:32.939974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:33.940049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:34.940329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:35.941326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:36.942325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:37.942504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:38.942735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:39.943619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:40.943717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:41.944323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:42.944501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/19/24 12:58:43.563
  W1019 12:58:43.569374      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1019 12:58:43.569404 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1019 12:58:43.569458 20 delete.go:95] Deleting pod "simpletest.rc-298kk" in namespace "gc-5748"
  I1019 12:58:43.584195 20 delete.go:95] Deleting pod "simpletest.rc-2gxwk" in namespace "gc-5748"
  I1019 12:58:43.602080 20 delete.go:95] Deleting pod "simpletest.rc-2vvvg" in namespace "gc-5748"
  I1019 12:58:43.617342 20 delete.go:95] Deleting pod "simpletest.rc-4b6zg" in namespace "gc-5748"
  I1019 12:58:43.629818 20 delete.go:95] Deleting pod "simpletest.rc-4b7kf" in namespace "gc-5748"
  I1019 12:58:43.644406 20 delete.go:95] Deleting pod "simpletest.rc-4jkxw" in namespace "gc-5748"
  I1019 12:58:43.657967 20 delete.go:95] Deleting pod "simpletest.rc-4qcr5" in namespace "gc-5748"
  I1019 12:58:43.672993 20 delete.go:95] Deleting pod "simpletest.rc-4rwxj" in namespace "gc-5748"
  I1019 12:58:43.686299 20 delete.go:95] Deleting pod "simpletest.rc-4t67r" in namespace "gc-5748"
  I1019 12:58:43.700018 20 delete.go:95] Deleting pod "simpletest.rc-4vjfn" in namespace "gc-5748"
  I1019 12:58:43.712969 20 delete.go:95] Deleting pod "simpletest.rc-5dhpg" in namespace "gc-5748"
  I1019 12:58:43.727308 20 delete.go:95] Deleting pod "simpletest.rc-5nfd9" in namespace "gc-5748"
  I1019 12:58:43.739801 20 delete.go:95] Deleting pod "simpletest.rc-5p2mk" in namespace "gc-5748"
  I1019 12:58:43.752575 20 delete.go:95] Deleting pod "simpletest.rc-5rt7k" in namespace "gc-5748"
  I1019 12:58:43.766948 20 delete.go:95] Deleting pod "simpletest.rc-5th7s" in namespace "gc-5748"
  I1019 12:58:43.781808 20 delete.go:95] Deleting pod "simpletest.rc-5w7nn" in namespace "gc-5748"
  I1019 12:58:43.797020 20 delete.go:95] Deleting pod "simpletest.rc-62lgs" in namespace "gc-5748"
  I1019 12:58:43.813071 20 delete.go:95] Deleting pod "simpletest.rc-6cl8l" in namespace "gc-5748"
  I1019 12:58:43.826927 20 delete.go:95] Deleting pod "simpletest.rc-6dxlz" in namespace "gc-5748"
  I1019 12:58:43.842877 20 delete.go:95] Deleting pod "simpletest.rc-6jv7n" in namespace "gc-5748"
  I1019 12:58:43.854727 20 delete.go:95] Deleting pod "simpletest.rc-7bs2g" in namespace "gc-5748"
  I1019 12:58:43.869012 20 delete.go:95] Deleting pod "simpletest.rc-8dl8l" in namespace "gc-5748"
  I1019 12:58:43.883313 20 delete.go:95] Deleting pod "simpletest.rc-8ptf8" in namespace "gc-5748"
  I1019 12:58:43.899078 20 delete.go:95] Deleting pod "simpletest.rc-92lp6" in namespace "gc-5748"
  I1019 12:58:43.918808 20 delete.go:95] Deleting pod "simpletest.rc-95gfx" in namespace "gc-5748"
  I1019 12:58:43.936160 20 delete.go:95] Deleting pod "simpletest.rc-9khgk" in namespace "gc-5748"
  E1019 12:58:43.945402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:58:43.951440 20 delete.go:95] Deleting pod "simpletest.rc-9l7fk" in namespace "gc-5748"
  I1019 12:58:43.965296 20 delete.go:95] Deleting pod "simpletest.rc-bdk79" in namespace "gc-5748"
  I1019 12:58:43.984412 20 delete.go:95] Deleting pod "simpletest.rc-bhr86" in namespace "gc-5748"
  I1019 12:58:44.001780 20 delete.go:95] Deleting pod "simpletest.rc-bstqz" in namespace "gc-5748"
  I1019 12:58:44.015485 20 delete.go:95] Deleting pod "simpletest.rc-bwxw2" in namespace "gc-5748"
  I1019 12:58:44.029312 20 delete.go:95] Deleting pod "simpletest.rc-cwm8n" in namespace "gc-5748"
  I1019 12:58:44.045212 20 delete.go:95] Deleting pod "simpletest.rc-d9sbn" in namespace "gc-5748"
  I1019 12:58:44.059913 20 delete.go:95] Deleting pod "simpletest.rc-dcfjv" in namespace "gc-5748"
  I1019 12:58:44.077768 20 delete.go:95] Deleting pod "simpletest.rc-dkpch" in namespace "gc-5748"
  I1019 12:58:44.090866 20 delete.go:95] Deleting pod "simpletest.rc-fhlpf" in namespace "gc-5748"
  I1019 12:58:44.106775 20 delete.go:95] Deleting pod "simpletest.rc-fhtk9" in namespace "gc-5748"
  I1019 12:58:44.121954 20 delete.go:95] Deleting pod "simpletest.rc-fqckm" in namespace "gc-5748"
  I1019 12:58:44.135451 20 delete.go:95] Deleting pod "simpletest.rc-fzhzk" in namespace "gc-5748"
  I1019 12:58:44.155031 20 delete.go:95] Deleting pod "simpletest.rc-gbxkc" in namespace "gc-5748"
  I1019 12:58:44.169601 20 delete.go:95] Deleting pod "simpletest.rc-gp55p" in namespace "gc-5748"
  I1019 12:58:44.187223 20 delete.go:95] Deleting pod "simpletest.rc-gx9b9" in namespace "gc-5748"
  I1019 12:58:44.200428 20 delete.go:95] Deleting pod "simpletest.rc-hc7mt" in namespace "gc-5748"
  I1019 12:58:44.215248 20 delete.go:95] Deleting pod "simpletest.rc-j4s2z" in namespace "gc-5748"
  I1019 12:58:44.235395 20 delete.go:95] Deleting pod "simpletest.rc-jkjmj" in namespace "gc-5748"
  I1019 12:58:44.254737 20 delete.go:95] Deleting pod "simpletest.rc-jm9hs" in namespace "gc-5748"
  I1019 12:58:44.272056 20 delete.go:95] Deleting pod "simpletest.rc-jw6rn" in namespace "gc-5748"
  I1019 12:58:44.285621 20 delete.go:95] Deleting pod "simpletest.rc-kfgb4" in namespace "gc-5748"
  I1019 12:58:44.299960 20 delete.go:95] Deleting pod "simpletest.rc-kj5kl" in namespace "gc-5748"
  I1019 12:58:44.314212 20 delete.go:95] Deleting pod "simpletest.rc-kqdzg" in namespace "gc-5748"
  I1019 12:58:44.326983 20 delete.go:95] Deleting pod "simpletest.rc-l8phc" in namespace "gc-5748"
  I1019 12:58:44.343642 20 delete.go:95] Deleting pod "simpletest.rc-lg7c6" in namespace "gc-5748"
  I1019 12:58:44.373370 20 delete.go:95] Deleting pod "simpletest.rc-lpcs7" in namespace "gc-5748"
  I1019 12:58:44.386929 20 delete.go:95] Deleting pod "simpletest.rc-lsq6d" in namespace "gc-5748"
  I1019 12:58:44.401435 20 delete.go:95] Deleting pod "simpletest.rc-lwllq" in namespace "gc-5748"
  I1019 12:58:44.413445 20 delete.go:95] Deleting pod "simpletest.rc-m88t8" in namespace "gc-5748"
  I1019 12:58:44.431737 20 delete.go:95] Deleting pod "simpletest.rc-mfm8l" in namespace "gc-5748"
  I1019 12:58:44.453282 20 delete.go:95] Deleting pod "simpletest.rc-mgkqb" in namespace "gc-5748"
  I1019 12:58:44.469124 20 delete.go:95] Deleting pod "simpletest.rc-mj8fl" in namespace "gc-5748"
  I1019 12:58:44.489071 20 delete.go:95] Deleting pod "simpletest.rc-mjdwx" in namespace "gc-5748"
  I1019 12:58:44.503362 20 delete.go:95] Deleting pod "simpletest.rc-n56sg" in namespace "gc-5748"
  I1019 12:58:44.518713 20 delete.go:95] Deleting pod "simpletest.rc-n5r28" in namespace "gc-5748"
  I1019 12:58:44.537066 20 delete.go:95] Deleting pod "simpletest.rc-nwvpg" in namespace "gc-5748"
  I1019 12:58:44.549257 20 delete.go:95] Deleting pod "simpletest.rc-p47mn" in namespace "gc-5748"
  I1019 12:58:44.564964 20 delete.go:95] Deleting pod "simpletest.rc-pcwr6" in namespace "gc-5748"
  I1019 12:58:44.580403 20 delete.go:95] Deleting pod "simpletest.rc-pwg84" in namespace "gc-5748"
  I1019 12:58:44.592394 20 delete.go:95] Deleting pod "simpletest.rc-q8ddr" in namespace "gc-5748"
  I1019 12:58:44.609537 20 delete.go:95] Deleting pod "simpletest.rc-qcfks" in namespace "gc-5748"
  I1019 12:58:44.627433 20 delete.go:95] Deleting pod "simpletest.rc-qtsv4" in namespace "gc-5748"
  I1019 12:58:44.640860 20 delete.go:95] Deleting pod "simpletest.rc-r2jpk" in namespace "gc-5748"
  I1019 12:58:44.667414 20 delete.go:95] Deleting pod "simpletest.rc-r5h9j" in namespace "gc-5748"
  I1019 12:58:44.717671 20 delete.go:95] Deleting pod "simpletest.rc-r722h" in namespace "gc-5748"
  I1019 12:58:44.771780 20 delete.go:95] Deleting pod "simpletest.rc-rglg2" in namespace "gc-5748"
  I1019 12:58:44.820059 20 delete.go:95] Deleting pod "simpletest.rc-rlgws" in namespace "gc-5748"
  I1019 12:58:44.868603 20 delete.go:95] Deleting pod "simpletest.rc-rmlx8" in namespace "gc-5748"
  I1019 12:58:44.920336 20 delete.go:95] Deleting pod "simpletest.rc-rn9s2" in namespace "gc-5748"
  E1019 12:58:44.946631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:58:44.968017 20 delete.go:95] Deleting pod "simpletest.rc-s5zfq" in namespace "gc-5748"
  I1019 12:58:45.018920 20 delete.go:95] Deleting pod "simpletest.rc-sb96b" in namespace "gc-5748"
  I1019 12:58:45.066034 20 delete.go:95] Deleting pod "simpletest.rc-sbwvc" in namespace "gc-5748"
  I1019 12:58:45.118633 20 delete.go:95] Deleting pod "simpletest.rc-szct5" in namespace "gc-5748"
  I1019 12:58:45.168744 20 delete.go:95] Deleting pod "simpletest.rc-t74k5" in namespace "gc-5748"
  I1019 12:58:45.225325 20 delete.go:95] Deleting pod "simpletest.rc-tb962" in namespace "gc-5748"
  I1019 12:58:45.269350 20 delete.go:95] Deleting pod "simpletest.rc-thxqr" in namespace "gc-5748"
  I1019 12:58:45.318519 20 delete.go:95] Deleting pod "simpletest.rc-tm6ch" in namespace "gc-5748"
  I1019 12:58:45.367323 20 delete.go:95] Deleting pod "simpletest.rc-tq54p" in namespace "gc-5748"
  I1019 12:58:45.420030 20 delete.go:95] Deleting pod "simpletest.rc-tzm5t" in namespace "gc-5748"
  I1019 12:58:45.471014 20 delete.go:95] Deleting pod "simpletest.rc-v2lm8" in namespace "gc-5748"
  I1019 12:58:45.518792 20 delete.go:95] Deleting pod "simpletest.rc-v5lxn" in namespace "gc-5748"
  I1019 12:58:45.572936 20 delete.go:95] Deleting pod "simpletest.rc-v8bgn" in namespace "gc-5748"
  I1019 12:58:45.618906 20 delete.go:95] Deleting pod "simpletest.rc-vcxbv" in namespace "gc-5748"
  I1019 12:58:45.667244 20 delete.go:95] Deleting pod "simpletest.rc-vlr7z" in namespace "gc-5748"
  I1019 12:58:45.717236 20 delete.go:95] Deleting pod "simpletest.rc-vm5nc" in namespace "gc-5748"
  I1019 12:58:45.767039 20 delete.go:95] Deleting pod "simpletest.rc-w59x7" in namespace "gc-5748"
  I1019 12:58:45.821492 20 delete.go:95] Deleting pod "simpletest.rc-w8zd7" in namespace "gc-5748"
  I1019 12:58:45.868753 20 delete.go:95] Deleting pod "simpletest.rc-w9fzn" in namespace "gc-5748"
  I1019 12:58:45.924036 20 delete.go:95] Deleting pod "simpletest.rc-wrzgh" in namespace "gc-5748"
  E1019 12:58:45.946439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:58:45.968379 20 delete.go:95] Deleting pod "simpletest.rc-wvjr2" in namespace "gc-5748"
  I1019 12:58:46.020249 20 delete.go:95] Deleting pod "simpletest.rc-xprmh" in namespace "gc-5748"
  I1019 12:58:46.072013 20 delete.go:95] Deleting pod "simpletest.rc-z9nwl" in namespace "gc-5748"
  I1019 12:58:46.120921 20 delete.go:95] Deleting pod "simpletest.rc-zqm4x" in namespace "gc-5748"
  I1019 12:58:46.168985 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5748" for this suite. @ 10/19/24 12:58:46.209
â€¢ [43.769 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 10/19/24 12:58:46.268
  I1019 12:58:46.268237 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:58:46.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:46.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:46.294
  I1019 12:58:46.300653 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-1572 version'
  I1019 12:58:46.599275 20 builder.go:146] stderr: ""
  I1019 12:58:46.599450 20 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1\n"
  I1019 12:58:46.602739 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1572" for this suite. @ 10/19/24 12:58:46.617
â€¢ [0.365 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 10/19/24 12:58:46.638
  I1019 12:58:46.638313 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 12:58:46.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:46.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:46.666
  STEP: Creating configMap with name configmap-test-upd-70de851d-3931-46f9-95e6-cf8a62a8c8b6 @ 10/19/24 12:58:46.676
  STEP: Creating the pod @ 10/19/24 12:58:46.684
  E1019 12:58:46.947230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:47.947383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:48.948034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:49.948263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 10/19/24 12:58:50.718
  STEP: Waiting for pod with binary data @ 10/19/24 12:58:50.726
  I1019 12:58:50.734666 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8127" for this suite. @ 10/19/24 12:58:50.738
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 10/19/24 12:58:50.746
  I1019 12:58:50.746971 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename runtimeclass @ 10/19/24 12:58:50.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:50.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:50.768
  STEP: Deleting RuntimeClass runtimeclass-540-delete-me @ 10/19/24 12:58:50.775
  STEP: Waiting for the RuntimeClass to disappear @ 10/19/24 12:58:50.782
  I1019 12:58:50.794474 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-540" for this suite. @ 10/19/24 12:58:50.798
â€¢ [0.059 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 10/19/24 12:58:50.805
  I1019 12:58:50.805959 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 12:58:50.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:50.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:50.824
  STEP: Setting up server cert @ 10/19/24 12:58:50.849
  E1019 12:58:50.949009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 12:58:50.963
  STEP: Deploying the webhook pod @ 10/19/24 12:58:50.972
  STEP: Wait for the deployment to be ready @ 10/19/24 12:58:50.987
  I1019 12:58:50.998392 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 12:58:51.949392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:52.949498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 12:58:53.014
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 12:58:53.026
  E1019 12:58:53.950303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:58:54.026527 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/19/24 12:58:54.037
  STEP: create a namespace for the webhook @ 10/19/24 12:58:54.051
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/19/24 12:58:54.069
  I1019 12:58:54.197382 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-775" for this suite. @ 10/19/24 12:58:54.201
  STEP: Destroying namespace "webhook-markers-79" for this suite. @ 10/19/24 12:58:54.209
  STEP: Destroying namespace "fail-closed-namespace-1384" for this suite. @ 10/19/24 12:58:54.218
â€¢ [3.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/19/24 12:58:54.228
  I1019 12:58:54.228787 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 12:58:54.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:54.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:54.255
  STEP: Creating secret with name secret-test-1af5c9c9-7edf-44cf-acd5-0948a0994293 @ 10/19/24 12:58:54.259
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:58:54.268
  E1019 12:58:54.951430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:55.952251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:56.952785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:57.952948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:58:58.298
  I1019 12:58:58.302037 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-secrets-6cb8ff78-9bc2-4d86-a3d5-8d13b1549745 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:58:58.314
  I1019 12:58:58.338862 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1878" for this suite. @ 10/19/24 12:58:58.343
â€¢ [4.122 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 10/19/24 12:58:58.351
  I1019 12:58:58.351183 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 12:58:58.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:58:58.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:58:58.37
  STEP: creating a Deployment @ 10/19/24 12:58:58.376
  I1019 12:58:58.376056 20 deployment.go:507] Creating simple deployment test-deployment-x4gqx
  I1019 12:58:58.392932 20 deployment.go:222] deployment "test-deployment-x4gqx" doesn't have the required revision set
  E1019 12:58:58.953291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:58:59.953391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 10/19/24 12:59:00.41
  I1019 12:59:00.414973 20 deployment.go:532] Deployment test-deployment-x4gqx has Conditions: [{Available True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x4gqx-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/19/24 12:59:00.415
  I1019 12:59:00.425172 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 58, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 12, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 12, 58, 58, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-x4gqx-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/19/24 12:59:00.425
  I1019 12:59:00.426570 20 deployment.go:579] Observed &Deployment event: ADDED
  I1019 12:59:00.426592 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x4gqx-f4dbbbf74"}
  I1019 12:59:00.426727 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1019 12:59:00.426747 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x4gqx-f4dbbbf74"}
  I1019 12:59:00.426775 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1019 12:59:00.426854 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1019 12:59:00.426876 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1019 12:59:00.426887 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-x4gqx-f4dbbbf74" is progressing.}
  I1019 12:59:00.426950 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1019 12:59:00.426982 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1019 12:59:00.427018 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x4gqx-f4dbbbf74" has successfully progressed.}
  I1019 12:59:00.427156 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1019 12:59:00.427172 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1019 12:59:00.427181 20 deployment.go:575] Observed Deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x4gqx-f4dbbbf74" has successfully progressed.}
  I1019 12:59:00.427191 20 deployment.go:572] Found Deployment test-deployment-x4gqx in namespace deployment-2060 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 12:59:00.427202 20 deployment.go:583] Deployment test-deployment-x4gqx has an updated status
  STEP: patching the Statefulset Status @ 10/19/24 12:59:00.427
  I1019 12:59:00.427230 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1019 12:59:00.433430 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/19/24 12:59:00.433
  I1019 12:59:00.434769 20 deployment.go:616] Observed &Deployment event: ADDED
  I1019 12:59:00.434792 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x4gqx-f4dbbbf74"}
  I1019 12:59:00.434860 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1019 12:59:00.434875 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x4gqx-f4dbbbf74"}
  I1019 12:59:00.434883 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1019 12:59:00.434949 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1019 12:59:00.434964 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1019 12:59:00.434972 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:58 +0000 UTC 2024-10-19 12:58:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-x4gqx-f4dbbbf74" is progressing.}
  I1019 12:59:00.435034 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1019 12:59:00.435047 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1019 12:59:00.435056 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x4gqx-f4dbbbf74" has successfully progressed.}
  I1019 12:59:00.435115 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1019 12:59:00.435143 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1019 12:59:00.435152 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-19 12:58:59 +0000 UTC 2024-10-19 12:58:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x4gqx-f4dbbbf74" has successfully progressed.}
  I1019 12:59:00.435161 20 deployment.go:612] Observed deployment test-deployment-x4gqx in namespace deployment-2060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 12:59:00.435236 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1019 12:59:00.435290 20 deployment.go:609] Found deployment test-deployment-x4gqx in namespace deployment-2060 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1019 12:59:00.435300 20 deployment.go:620] Deployment test-deployment-x4gqx has a patched status
  I1019 12:59:00.440062 20 deployment.go:633] Deployment "test-deployment-x4gqx":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-x4gqx",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dba5c338-cf03-48fa-9f99-778a3c83d892",
      ResourceVersion: (string) (len=5) "28555",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-x4gqx-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1019 12:59:00.444968 20 deployment.go:39] New ReplicaSet "test-deployment-x4gqx-f4dbbbf74" of Deployment "test-deployment-x4gqx":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-x4gqx-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa1f3210-d9df-4941-abf6-094ad9c5b741",
      ResourceVersion: (string) (len=5) "28549",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-x4gqx",
          UID: (types.UID) (len=36) "dba5c338-cf03-48fa-9f99-778a3c83d892",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 62 61  |k:{\"uid\":\"dba|
              00000120  35 63 33 33 38 2d 63 66  30 33 2d 34 38 66 61 2d  |5c338-cf03-48fa-|
              00000130  39 66 39 39 2d 37 37 38  61 33 63 38 33 64 38 39  |9f99-778a3c83d89|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 12:59:00.450072 20 deployment.go:67] Pod "test-deployment-x4gqx-f4dbbbf74-lz5gg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-x4gqx-f4dbbbf74-lz5gg",
      GenerateName: (string) (len=32) "test-deployment-x4gqx-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-2060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edb6c533-97f9-4137-bf6a-40c9d2bc3bb0",
      ResourceVersion: (string) (len=5) "28548",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-x4gqx-f4dbbbf74",
          UID: (types.UID) (len=36) "aa1f3210-d9df-4941-abf6-094ad9c5b741",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 61 31 66 33 32 31  30 2d 64 39 64 66 2d 34  |"aa1f3210-d9df-4|
              000000a0  39 34 31 2d 61 62 66 36  2d 30 39 34 61 64 39 63  |941-abf6-094ad9c|
              000000b0  35 62 37 34 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5b741\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 38 34 5c 22 7d 22 3a  |2.168.73.84\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cndqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cndqj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=13) "192.168.73.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.73.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864939538,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7808ebd34cdd38c2fc12a6bc87852d7e802bd12964e09d2771ea518e9bdfb050",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cndqj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 12:59:00.451193 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2060" for this suite. @ 10/19/24 12:59:00.455
â€¢ [2.114 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 10/19/24 12:59:00.464
  I1019 12:59:00.464923 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:59:00.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:00.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:00.481
  STEP: Counting existing ResourceQuota @ 10/19/24 12:59:00.484
  E1019 12:59:00.953758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:01.953878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:02.953915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:03.954340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:04.955177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/19/24 12:59:05.488
  STEP: Ensuring resource quota status is calculated @ 10/19/24 12:59:05.495
  E1019 12:59:05.955592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:06.956383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 10/19/24 12:59:07.501
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/19/24 12:59:07.52
  E1019 12:59:07.956518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:08.956605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/19/24 12:59:09.526
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/19/24 12:59:09.528
  STEP: Ensuring a pod cannot update its resource requirements @ 10/19/24 12:59:09.53
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/19/24 12:59:09.535
  E1019 12:59:09.957622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:10.958381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/19/24 12:59:11.541
  STEP: Ensuring resource quota status released the pod usage @ 10/19/24 12:59:11.555
  E1019 12:59:11.959271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:12.959510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:13.560502 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9914" for this suite. @ 10/19/24 12:59:13.564
â€¢ [13.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 10/19/24 12:59:13.574
  I1019 12:59:13.574507 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replication-controller @ 10/19/24 12:59:13.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:13.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:13.595
  I1019 12:59:13.597331 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1019 12:59:13.959537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/19/24 12:59:14.612
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/19/24 12:59:14.618
  E1019 12:59:14.960376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/19/24 12:59:15.628
  I1019 12:59:15.637683 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/19/24 12:59:15.637
  E1019 12:59:15.961283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:16.650198 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5170" for this suite. @ 10/19/24 12:59:16.655
â€¢ [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/19/24 12:59:16.663
  I1019 12:59:16.663786 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:59:16.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:16.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:16.682
  STEP: Creating projection with secret that has name projected-secret-test-1cbbf597-8668-40d4-87c6-7284605b18d5 @ 10/19/24 12:59:16.685
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:59:16.691
  E1019 12:59:16.961765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:17.961913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:18.962001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:19.962241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:59:20.716
  I1019 12:59:20.721412 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-secrets-d926b869-70be-4cb4-8a42-9af5e883044f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:59:20.729
  I1019 12:59:20.748826 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6132" for this suite. @ 10/19/24 12:59:20.752
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/19/24 12:59:20.76
  I1019 12:59:20.760342 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:59:20.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:20.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:20.778
  STEP: Creating projection with secret that has name projected-secret-test-4c4bf3b3-6be2-4544-80a8-746e45a6fc51 @ 10/19/24 12:59:20.78
  STEP: Creating a pod to test consume secrets @ 10/19/24 12:59:20.787
  E1019 12:59:20.963064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:21.963184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:22.963820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:23.963892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:59:24.812
  I1019 12:59:24.816689 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-secrets-fe9cad3d-10d0-4d6e-b7d8-1d8bf432d322 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 12:59:24.824
  I1019 12:59:24.845297 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2002" for this suite. @ 10/19/24 12:59:24.849
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 10/19/24 12:59:24.858
  I1019 12:59:24.858451 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename ingress @ 10/19/24 12:59:24.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:24.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:24.875
  STEP: getting /apis @ 10/19/24 12:59:24.879
  STEP: getting /apis/networking.k8s.io @ 10/19/24 12:59:24.882
  STEP: getting /apis/networking.k8s.iov1 @ 10/19/24 12:59:24.883
  STEP: creating @ 10/19/24 12:59:24.884
  STEP: getting @ 10/19/24 12:59:24.902
  STEP: listing @ 10/19/24 12:59:24.908
  STEP: watching @ 10/19/24 12:59:24.912
  I1019 12:59:24.912371 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 10/19/24 12:59:24.913
  STEP: cluster-wide watching @ 10/19/24 12:59:24.917
  I1019 12:59:24.917608 20 ingress.go:198] starting watch
  STEP: patching @ 10/19/24 12:59:24.918
  STEP: updating @ 10/19/24 12:59:24.925
  I1019 12:59:24.940284 20 ingress.go:221] waiting for watch events with expected annotations
  I1019 12:59:24.940316 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 10/19/24 12:59:24.94
  STEP: updating /status @ 10/19/24 12:59:24.948
  STEP: get /status @ 10/19/24 12:59:24.958
  STEP: deleting @ 10/19/24 12:59:24.962
  E1019 12:59:24.964616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 10/19/24 12:59:24.979
  I1019 12:59:24.999257 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9885" for this suite. @ 10/19/24 12:59:25.003
â€¢ [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 10/19/24 12:59:25.01
  I1019 12:59:25.010173 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 12:59:25.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:25.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:25.029
  I1019 12:59:25.032507 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 12:59:25.965342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/19/24 12:59:26.234
  I1019 12:59:26.234290 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 create -f -'
  E1019 12:59:26.966360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:27.966440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:28.294591 20 builder.go:146] stderr: ""
  I1019 12:59:28.294631 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7493-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1019 12:59:28.294674 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 delete e2e-test-crd-publish-openapi-7493-crds test-foo'
  I1019 12:59:28.345919 20 builder.go:146] stderr: ""
  I1019 12:59:28.345963 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7493-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1019 12:59:28.346000 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 apply -f -'
  I1019 12:59:28.421320 20 builder.go:146] stderr: ""
  I1019 12:59:28.421355 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7493-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1019 12:59:28.421393 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 delete e2e-test-crd-publish-openapi-7493-crds test-foo'
  I1019 12:59:28.470099 20 builder.go:146] stderr: ""
  I1019 12:59:28.470164 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7493-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/19/24 12:59:28.47
  I1019 12:59:28.470231 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 create -f -'
  I1019 12:59:28.512182 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/19/24 12:59:28.512
  I1019 12:59:28.512370 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 create -f -'
  I1019 12:59:28.554219 20 builder.go:135] rc: 1
  I1019 12:59:28.554291 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 apply -f -'
  I1019 12:59:28.601306 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/19/24 12:59:28.601
  I1019 12:59:28.601451 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 create -f -'
  I1019 12:59:28.642758 20 builder.go:135] rc: 1
  I1019 12:59:28.642828 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 --namespace=crd-publish-openapi-4744 apply -f -'
  I1019 12:59:28.693300 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/19/24 12:59:28.693
  I1019 12:59:28.693392 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 explain e2e-test-crd-publish-openapi-7493-crds'
  I1019 12:59:28.733362 20 builder.go:146] stderr: ""
  I1019 12:59:28.733412 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7493-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/19/24 12:59:28.733
  I1019 12:59:28.733718 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 explain e2e-test-crd-publish-openapi-7493-crds.metadata'
  I1019 12:59:28.775625 20 builder.go:146] stderr: ""
  I1019 12:59:28.775733 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7493-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1019 12:59:28.775916 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 explain e2e-test-crd-publish-openapi-7493-crds.spec'
  I1019 12:59:28.815432 20 builder.go:146] stderr: ""
  I1019 12:59:28.815464 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7493-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1019 12:59:28.815571 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 explain e2e-test-crd-publish-openapi-7493-crds.spec.bars'
  I1019 12:59:28.855782 20 builder.go:146] stderr: ""
  I1019 12:59:28.855832 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7493-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/19/24 12:59:28.855
  I1019 12:59:28.856065 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-4744 explain e2e-test-crd-publish-openapi-7493-crds.spec.bars2'
  I1019 12:59:28.898433 20 builder.go:135] rc: 1
  E1019 12:59:28.966477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:29.967521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:30.266169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4744" for this suite. @ 10/19/24 12:59:30.271
â€¢ [5.271 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/19/24 12:59:30.281
  I1019 12:59:30.281293 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename containers @ 10/19/24 12:59:30.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:30.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:30.299
  STEP: Creating a pod to test override command @ 10/19/24 12:59:30.304
  E1019 12:59:30.968382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:31.968488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:59:32.323
  I1019 12:59:32.328097 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod client-containers-53ff971f-6f73-487e-b838-255db945928c container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 12:59:32.34
  I1019 12:59:32.358713 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3566" for this suite. @ 10/19/24 12:59:32.363
â€¢ [2.090 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 10/19/24 12:59:32.371
  I1019 12:59:32.371760 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 12:59:32.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:32.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:32.393
  STEP: Creating resourceQuota "e2e-rq-status-5c985" @ 10/19/24 12:59:32.4
  I1019 12:59:32.409097 20 resource_quota.go:1102] Resource quota "e2e-rq-status-5c985" reports spec: hard cpu limit of 500m
  I1019 12:59:32.409118 20 resource_quota.go:1104] Resource quota "e2e-rq-status-5c985" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5c985" /status @ 10/19/24 12:59:32.409
  STEP: Confirm /status for "e2e-rq-status-5c985" resourceQuota via watch @ 10/19/24 12:59:32.418
  I1019 12:59:32.419302 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-5c985" in namespace "resourcequota-2107" with hard status: v1.ResourceList(nil)
  I1019 12:59:32.419360 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-5c985" in namespace "resourcequota-2107" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1019 12:59:32.419374 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-5c985" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/19/24 12:59:32.423
  I1019 12:59:32.429509 20 resource_quota.go:1152] Resource quota "e2e-rq-status-5c985" reports spec: hard cpu limit of 1
  I1019 12:59:32.429532 20 resource_quota.go:1153] Resource quota "e2e-rq-status-5c985" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5c985" /status @ 10/19/24 12:59:32.429
  STEP: Confirm /status for "e2e-rq-status-5c985" resourceQuota via watch @ 10/19/24 12:59:32.434
  I1019 12:59:32.435037 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-5c985" in namespace "resourcequota-2107" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1019 12:59:32.435059 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-5c985" in namespace "resourcequota-2107" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1019 12:59:32.435068 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-5c985" /status was patched
  STEP: Get "e2e-rq-status-5c985" /status @ 10/19/24 12:59:32.435
  I1019 12:59:32.439275 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-5c985" reports status: hard cpu of 1
  I1019 12:59:32.439297 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-5c985" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5c985" /status before checking Spec is unchanged @ 10/19/24 12:59:32.443
  I1019 12:59:32.447947 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-5c985" reports status: hard cpu of 2
  I1019 12:59:32.447973 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-5c985" reports status: hard memory of 2Gi
  I1019 12:59:32.448873 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-5c985" in namespace "resourcequota-2107" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1019 12:59:32.453156 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5c985" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5c985", GenerateName:"", Namespace:"resourcequota-2107", SelfLink:"", UID:"c503f0c6-deb2-42ad-83b9-a99b956faf7b", ResourceVersion:"28949", Generation:0, CreationTimestamp:time.Date(2024, time.October, 19, 12, 59, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5c985"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 19, 12, 59, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051bd8a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 19, 12, 59, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051bd908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 19, 12, 59, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051bd950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  E1019 12:59:32.968679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:33.968903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:34.969098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:35.969571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:36.969790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:37.454372 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-5c985" Spec was unchanged and /status reset
  I1019 12:59:37.454497 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2107" for this suite. @ 10/19/24 12:59:37.457
â€¢ [5.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 10/19/24 12:59:37.465
  I1019 12:59:37.465016 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename runtimeclass @ 10/19/24 12:59:37.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:37.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:37.486
  E1019 12:59:37.969870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:38.970046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:39.519870 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1334" for this suite. @ 10/19/24 12:59:39.524
â€¢ [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 10/19/24 12:59:39.532
  I1019 12:59:39.532593 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 12:59:39.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:39.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:39.557
  STEP: Looking for a node to schedule job pod @ 10/19/24 12:59:39.558
  STEP: Creating a job @ 10/19/24 12:59:39.566
  STEP: Ensuring job fails @ 10/19/24 12:59:39.571
  E1019 12:59:39.970216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:40.970327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:41.970441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:42.970658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:43.970782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:44.970896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:45.581996 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7732" for this suite. @ 10/19/24 12:59:45.585
â€¢ [6.061 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 10/19/24 12:59:45.593
  I1019 12:59:45.593880 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 12:59:45.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:45.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:45.618
  STEP: Creating configMap with name projected-configmap-test-volume-724c8450-fdcd-4baf-ac31-0750626b3677 @ 10/19/24 12:59:45.619
  STEP: Creating a pod to test consume configMaps @ 10/19/24 12:59:45.625
  E1019 12:59:45.971797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:46.972721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:47.972817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:48.973212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 12:59:49.651
  I1019 12:59:49.655437 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-configmaps-f827e0a6-618b-4b37-9812-fa46fc2da276 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 12:59:49.665
  I1019 12:59:49.686659 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1675" for this suite. @ 10/19/24 12:59:49.69
â€¢ [4.103 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 10/19/24 12:59:49.697
  I1019 12:59:49.697435 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 12:59:49.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:49.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:49.718
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/19/24 12:59:49.72
  I1019 12:59:49.720106 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-414 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1019 12:59:49.769618 20 builder.go:146] stderr: ""
  I1019 12:59:49.769646 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/19/24 12:59:49.769
  E1019 12:59:49.973950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:50.974249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:51.974835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:52.974936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:53.975020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/19/24 12:59:54.82
  I1019 12:59:54.821079 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-414 get pod e2e-test-httpd-pod -o json'
  I1019 12:59:54.866204 20 builder.go:146] stderr: ""
  I1019 12:59:54.866302 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-10-19T12:59:49Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-414\",\n        \"resourceVersion\": \"29150\",\n        \"uid\": \"8a90b874-c3b3-4e27-8174-740d5dd9cd70\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-fhv4c\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-84-96\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-fhv4c\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-19T12:59:50Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-19T12:59:49Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-19T12:59:50Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-19T12:59:50Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-19T12:59:49Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://7da1bce755bdd436ece34ea483de231bb4efd7b43c90d049584c760cf74d01b7\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-10-19T12:59:50Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-fhv4c\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.84.96\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.84.96\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.73.89\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.73.89\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-10-19T12:59:49Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/19/24 12:59:54.866
  I1019 12:59:54.866390 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-414 replace -f -'
  I1019 12:59:54.951026 20 builder.go:146] stderr: ""
  I1019 12:59:54.951061 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 10/19/24 12:59:54.951
  I1019 12:59:54.955415 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-414 delete pods e2e-test-httpd-pod'
  E1019 12:59:54.975718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:55.975886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:56.976393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 12:59:57.040052 20 builder.go:146] stderr: ""
  I1019 12:59:57.040098 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1019 12:59:57.040359 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-414" for this suite. @ 10/19/24 12:59:57.044
â€¢ [7.355 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 10/19/24 12:59:57.052
  I1019 12:59:57.052698 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename disruption @ 10/19/24 12:59:57.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 12:59:57.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 12:59:57.074
  STEP: Waiting for the pdb to be processed @ 10/19/24 12:59:57.084
  E1019 12:59:57.976428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 12:59:58.976750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 10/19/24 12:59:59.089
  STEP: Waiting for all pods to be running @ 10/19/24 12:59:59.099
  I1019 12:59:59.103766 20 disruption.go:691] running pods: 0 < 1
  E1019 12:59:59.977818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:00.978634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/19/24 13:00:01.105
  STEP: Waiting for the pdb to be processed @ 10/19/24 13:00:01.12
  STEP: Patching PodDisruptionBudget status @ 10/19/24 13:00:01.128
  STEP: Waiting for the pdb to be processed @ 10/19/24 13:00:01.138
  I1019 13:00:01.144934 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8545" for this suite. @ 10/19/24 13:00:01.149
â€¢ [4.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/19/24 13:00:01.157
  I1019 13:00:01.157287 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename proxy @ 10/19/24 13:00:01.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:01.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:01.181
  STEP: starting an echo server on multiple ports @ 10/19/24 13:00:01.197
  STEP: creating replication controller proxy-service-9nk78 in namespace proxy-3711 @ 10/19/24 13:00:01.197
  I1019 13:00:01.207595      20 runners.go:193] Created replication controller with name: proxy-service-9nk78, namespace: proxy-3711, replica count: 1
  E1019 13:00:01.978897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:02.258321      20 runners.go:193] proxy-service-9nk78 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 13:00:02.262648 20 proxy.go:230] setup took 1.079608267s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/19/24 13:00:02.262
  I1019 13:00:02.270288 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 7.18825ms)
  I1019 13:00:02.270288 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.286084ms)
  I1019 13:00:02.270657 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 7.692065ms)
  I1019 13:00:02.270730 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.859214ms)
  I1019 13:00:02.271704 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 8.595857ms)
  I1019 13:00:02.271935 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 9.213471ms)
  I1019 13:00:02.272991 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 10.007117ms)
  I1019 13:00:02.273196 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 10.273558ms)
  I1019 13:00:02.273212 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 10.157303ms)
  I1019 13:00:02.273219 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 10.155087ms)
  I1019 13:00:02.273298 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 10.410695ms)
  I1019 13:00:02.273302 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 10.476727ms)
  I1019 13:00:02.274084 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 11.046947ms)
  I1019 13:00:02.274508 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 11.426699ms)
  I1019 13:00:02.274598 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 11.577149ms)
  I1019 13:00:02.274748 20 proxy.go:558] (0) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 11.80405ms)
  I1019 13:00:02.277950 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 3.171905ms)
  I1019 13:00:02.279942 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 4.880318ms)
  I1019 13:00:02.280756 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 5.658487ms)
  I1019 13:00:02.280758 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.790844ms)
  I1019 13:00:02.281169 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.37997ms)
  I1019 13:00:02.281940 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.991102ms)
  I1019 13:00:02.282274 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.124936ms)
  I1019 13:00:02.283234 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 8.112672ms)
  I1019 13:00:02.283242 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 8.238074ms)
  I1019 13:00:02.283277 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 8.357376ms)
  I1019 13:00:02.283400 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.544518ms)
  I1019 13:00:02.283940 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.859768ms)
  I1019 13:00:02.284600 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 9.563894ms)
  I1019 13:00:02.284760 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 9.874684ms)
  I1019 13:00:02.286152 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 11.127331ms)
  I1019 13:00:02.286340 20 proxy.go:558] (1) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 11.522816ms)
  I1019 13:00:02.290439 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.06658ms)
  I1019 13:00:02.290768 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 4.283887ms)
  I1019 13:00:02.291180 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 4.642724ms)
  I1019 13:00:02.291596 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 4.962363ms)
  I1019 13:00:02.291751 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 5.344434ms)
  I1019 13:00:02.292264 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.743059ms)
  I1019 13:00:02.292720 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.133842ms)
  I1019 13:00:02.292731 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 6.181798ms)
  I1019 13:00:02.293190 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.523127ms)
  I1019 13:00:02.293196 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.542751ms)
  I1019 13:00:02.294239 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 7.671321ms)
  I1019 13:00:02.294751 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.315606ms)
  I1019 13:00:02.295159 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.659991ms)
  I1019 13:00:02.296624 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 10.004887ms)
  I1019 13:00:02.297271 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 10.814131ms)
  I1019 13:00:02.297380 20 proxy.go:558] (2) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 10.777143ms)
  I1019 13:00:02.301780 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 4.20057ms)
  I1019 13:00:02.302329 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.734355ms)
  I1019 13:00:02.302371 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 4.940057ms)
  I1019 13:00:02.302822 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.168457ms)
  I1019 13:00:02.302997 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.360532ms)
  I1019 13:00:02.303875 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 6.474435ms)
  I1019 13:00:02.304009 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.447423ms)
  I1019 13:00:02.304344 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.845262ms)
  I1019 13:00:02.304697 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 7.148491ms)
  I1019 13:00:02.304898 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 7.20504ms)
  I1019 13:00:02.305058 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.526512ms)
  I1019 13:00:02.306511 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 8.845006ms)
  I1019 13:00:02.306994 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 9.384119ms)
  I1019 13:00:02.307564 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 9.931986ms)
  I1019 13:00:02.308464 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 10.991345ms)
  I1019 13:00:02.309183 20 proxy.go:558] (3) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 11.668393ms)
  I1019 13:00:02.312443 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 3.230549ms)
  I1019 13:00:02.313315 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 3.880651ms)
  I1019 13:00:02.313494 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 4.046188ms)
  I1019 13:00:02.314461 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.943021ms)
  I1019 13:00:02.314509 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 5.170594ms)
  I1019 13:00:02.314639 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.088568ms)
  I1019 13:00:02.314908 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.599239ms)
  I1019 13:00:02.315265 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 5.886901ms)
  I1019 13:00:02.316182 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.912665ms)
  I1019 13:00:02.316332 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.798134ms)
  I1019 13:00:02.316756 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 7.294406ms)
  I1019 13:00:02.316775 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 7.49262ms)
  I1019 13:00:02.317842 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.336421ms)
  I1019 13:00:02.317999 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 8.598064ms)
  I1019 13:00:02.318320 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.964724ms)
  I1019 13:00:02.319397 20 proxy.go:558] (4) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 9.920004ms)
  I1019 13:00:02.323809 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 4.381503ms)
  I1019 13:00:02.323812 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 4.292508ms)
  I1019 13:00:02.324485 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.013797ms)
  I1019 13:00:02.325419 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 5.742396ms)
  I1019 13:00:02.325533 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.9176ms)
  I1019 13:00:02.325562 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.836026ms)
  I1019 13:00:02.326031 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.369633ms)
  I1019 13:00:02.326094 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.494039ms)
  I1019 13:00:02.326654 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 7.110859ms)
  I1019 13:00:02.326726 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.018001ms)
  I1019 13:00:02.327126 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 7.561526ms)
  I1019 13:00:02.327856 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.166003ms)
  I1019 13:00:02.328048 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.552895ms)
  I1019 13:00:02.328048 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.46544ms)
  I1019 13:00:02.328060 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 8.428573ms)
  I1019 13:00:02.329406 20 proxy.go:558] (5) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 9.760056ms)
  I1019 13:00:02.333210 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 3.734305ms)
  I1019 13:00:02.333614 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 4.084926ms)
  I1019 13:00:02.334604 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.105108ms)
  I1019 13:00:02.335710 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.060774ms)
  I1019 13:00:02.335730 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.154809ms)
  I1019 13:00:02.335954 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 6.281575ms)
  I1019 13:00:02.335954 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.438193ms)
  I1019 13:00:02.335984 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 6.39361ms)
  I1019 13:00:02.336067 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 6.363994ms)
  I1019 13:00:02.336381 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 6.955497ms)
  I1019 13:00:02.336861 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.208966ms)
  I1019 13:00:02.337170 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 7.443034ms)
  I1019 13:00:02.337592 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.048865ms)
  I1019 13:00:02.337669 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.043542ms)
  I1019 13:00:02.338837 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 9.274517ms)
  I1019 13:00:02.340447 20 proxy.go:558] (6) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 10.840392ms)
  I1019 13:00:02.347366 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.606148ms)
  I1019 13:00:02.347581 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.047672ms)
  I1019 13:00:02.347604 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.123414ms)
  I1019 13:00:02.347610 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.97848ms)
  I1019 13:00:02.347763 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 7.215704ms)
  I1019 13:00:02.349681 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 9.167004ms)
  I1019 13:00:02.349708 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 8.98357ms)
  I1019 13:00:02.349864 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 9.382659ms)
  I1019 13:00:02.349885 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 9.273815ms)
  I1019 13:00:02.349894 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 9.199809ms)
  I1019 13:00:02.349895 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 9.232763ms)
  I1019 13:00:02.350059 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 9.348645ms)
  I1019 13:00:02.350771 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 10.201036ms)
  I1019 13:00:02.351297 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 10.616939ms)
  I1019 13:00:02.352484 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 11.743575ms)
  I1019 13:00:02.352574 20 proxy.go:558] (7) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 11.985675ms)
  I1019 13:00:02.357015 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 4.418474ms)
  I1019 13:00:02.357266 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.473453ms)
  I1019 13:00:02.358254 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.429332ms)
  I1019 13:00:02.358323 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 5.567727ms)
  I1019 13:00:02.358778 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.008467ms)
  I1019 13:00:02.359104 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 6.264274ms)
  I1019 13:00:02.359104 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.433202ms)
  I1019 13:00:02.360072 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.215346ms)
  I1019 13:00:02.360174 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 7.523121ms)
  I1019 13:00:02.360294 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.670023ms)
  I1019 13:00:02.360397 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 7.691092ms)
  I1019 13:00:02.360477 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 7.737135ms)
  I1019 13:00:02.361692 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 8.821219ms)
  I1019 13:00:02.361909 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 9.099563ms)
  I1019 13:00:02.362095 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 9.369827ms)
  I1019 13:00:02.363775 20 proxy.go:558] (8) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 10.885463ms)
  I1019 13:00:02.367690 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 3.790323ms)
  I1019 13:00:02.368838 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 4.908038ms)
  I1019 13:00:02.369005 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 5.058152ms)
  I1019 13:00:02.369615 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.536406ms)
  I1019 13:00:02.370490 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 6.516806ms)
  I1019 13:00:02.370677 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 6.442599ms)
  I1019 13:00:02.370781 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.733659ms)
  I1019 13:00:02.370843 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.992406ms)
  I1019 13:00:02.371846 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 7.782292ms)
  I1019 13:00:02.372334 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.32354ms)
  I1019 13:00:02.374246 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 10.028739ms)
  I1019 13:00:02.374246 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 10.213003ms)
  I1019 13:00:02.374268 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 10.170414ms)
  I1019 13:00:02.374276 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 10.155293ms)
  I1019 13:00:02.376289 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 12.418118ms)
  I1019 13:00:02.376519 20 proxy.go:558] (9) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 12.525953ms)
  I1019 13:00:02.380339 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 3.797204ms)
  I1019 13:00:02.381950 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.266864ms)
  I1019 13:00:02.382023 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.410784ms)
  I1019 13:00:02.382183 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.439296ms)
  I1019 13:00:02.382186 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 5.346485ms)
  I1019 13:00:02.383811 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 6.986363ms)
  I1019 13:00:02.383830 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.132042ms)
  I1019 13:00:02.383819 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 7.212982ms)
  I1019 13:00:02.383843 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 7.050378ms)
  I1019 13:00:02.383852 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 7.080014ms)
  I1019 13:00:02.385585 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.85576ms)
  I1019 13:00:02.385606 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.797778ms)
  I1019 13:00:02.385610 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.964899ms)
  I1019 13:00:02.385883 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 9.253515ms)
  I1019 13:00:02.385929 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 9.216964ms)
  I1019 13:00:02.387256 20 proxy.go:558] (10) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 10.499364ms)
  I1019 13:00:02.391747 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.459945ms)
  I1019 13:00:02.391764 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 4.445618ms)
  I1019 13:00:02.392562 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 5.131386ms)
  I1019 13:00:02.392605 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.238862ms)
  I1019 13:00:02.392662 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 5.065272ms)
  I1019 13:00:02.393305 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.8453ms)
  I1019 13:00:02.393471 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 6.075257ms)
  I1019 13:00:02.393521 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.945348ms)
  I1019 13:00:02.393814 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.253251ms)
  I1019 13:00:02.394054 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 6.508806ms)
  I1019 13:00:02.394255 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.810705ms)
  I1019 13:00:02.395009 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 7.662695ms)
  I1019 13:00:02.395341 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 7.86838ms)
  I1019 13:00:02.395569 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.155974ms)
  I1019 13:00:02.396840 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 9.336179ms)
  I1019 13:00:02.399223 20 proxy.go:558] (11) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 11.70223ms)
  I1019 13:00:02.402721 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 3.450234ms)
  I1019 13:00:02.403149 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 3.904374ms)
  I1019 13:00:02.404575 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 4.991023ms)
  I1019 13:00:02.404714 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.330644ms)
  I1019 13:00:02.405507 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.975062ms)
  I1019 13:00:02.405893 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.524325ms)
  I1019 13:00:02.406035 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.46749ms)
  I1019 13:00:02.406099 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.499597ms)
  I1019 13:00:02.406662 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 7.197123ms)
  I1019 13:00:02.406763 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 7.428517ms)
  I1019 13:00:02.406926 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 7.373263ms)
  I1019 13:00:02.407361 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 7.915283ms)
  I1019 13:00:02.407383 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 7.867463ms)
  I1019 13:00:02.408284 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 8.859814ms)
  I1019 13:00:02.408465 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 9.111322ms)
  I1019 13:00:02.408892 20 proxy.go:558] (12) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 9.394293ms)
  I1019 13:00:02.412347 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 3.430754ms)
  I1019 13:00:02.414077 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.079906ms)
  I1019 13:00:02.414076 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 4.98857ms)
  I1019 13:00:02.414332 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.214216ms)
  I1019 13:00:02.414502 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.319924ms)
  I1019 13:00:02.414502 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 5.270265ms)
  I1019 13:00:02.415479 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.409993ms)
  I1019 13:00:02.415746 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 6.790416ms)
  I1019 13:00:02.415899 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 6.734492ms)
  I1019 13:00:02.416333 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 7.321866ms)
  I1019 13:00:02.416403 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.302854ms)
  I1019 13:00:02.417210 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 8.062002ms)
  I1019 13:00:02.417310 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.259197ms)
  I1019 13:00:02.417455 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.476931ms)
  I1019 13:00:02.418408 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 9.20999ms)
  I1019 13:00:02.419045 20 proxy.go:558] (13) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 9.831615ms)
  I1019 13:00:02.423071 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 3.968882ms)
  I1019 13:00:02.423168 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 3.992063ms)
  I1019 13:00:02.424120 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 5.048767ms)
  I1019 13:00:02.424120 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 4.740927ms)
  I1019 13:00:02.424364 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 5.088946ms)
  I1019 13:00:02.425379 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.983937ms)
  I1019 13:00:02.425515 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.170544ms)
  I1019 13:00:02.426168 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.841519ms)
  I1019 13:00:02.426219 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 6.79413ms)
  I1019 13:00:02.426335 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.926115ms)
  I1019 13:00:02.426357 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 7.108612ms)
  I1019 13:00:02.426940 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 7.632328ms)
  I1019 13:00:02.427722 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.509436ms)
  I1019 13:00:02.427735 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.374658ms)
  I1019 13:00:02.428149 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.707315ms)
  I1019 13:00:02.429688 20 proxy.go:558] (14) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 10.398536ms)
  I1019 13:00:02.433516 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 3.771126ms)
  I1019 13:00:02.434301 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.581745ms)
  I1019 13:00:02.434622 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 4.823607ms)
  I1019 13:00:02.435027 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 5.15089ms)
  I1019 13:00:02.435071 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.179897ms)
  I1019 13:00:02.436718 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.752311ms)
  I1019 13:00:02.436782 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.833444ms)
  I1019 13:00:02.436905 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 7.132074ms)
  I1019 13:00:02.437091 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.083634ms)
  I1019 13:00:02.437211 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.217141ms)
  I1019 13:00:02.437454 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.594593ms)
  I1019 13:00:02.438162 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.32001ms)
  I1019 13:00:02.438162 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.180954ms)
  I1019 13:00:02.438654 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 8.737029ms)
  I1019 13:00:02.439282 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 9.349316ms)
  I1019 13:00:02.440242 20 proxy.go:558] (15) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 10.431981ms)
  I1019 13:00:02.444178 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 3.907333ms)
  I1019 13:00:02.444508 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 4.226776ms)
  I1019 13:00:02.445577 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 5.18113ms)
  I1019 13:00:02.446580 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 6.092126ms)
  I1019 13:00:02.446582 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 6.066728ms)
  I1019 13:00:02.446599 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.145441ms)
  I1019 13:00:02.446951 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 6.574444ms)
  I1019 13:00:02.446983 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 6.452762ms)
  I1019 13:00:02.447469 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.923438ms)
  I1019 13:00:02.448173 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 7.823622ms)
  I1019 13:00:02.448244 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 7.682613ms)
  I1019 13:00:02.448331 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 7.865431ms)
  I1019 13:00:02.448820 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 8.405386ms)
  I1019 13:00:02.448921 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.342636ms)
  I1019 13:00:02.449605 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 9.171124ms)
  I1019 13:00:02.450179 20 proxy.go:558] (16) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 9.674648ms)
  I1019 13:00:02.454957 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 4.744065ms)
  I1019 13:00:02.454958 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 4.5889ms)
  I1019 13:00:02.455414 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 5.057942ms)
  I1019 13:00:02.456200 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 5.747764ms)
  I1019 13:00:02.456206 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.787769ms)
  I1019 13:00:02.456849 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.56928ms)
  I1019 13:00:02.457316 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.016113ms)
  I1019 13:00:02.457424 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 6.950274ms)
  I1019 13:00:02.457532 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.09489ms)
  I1019 13:00:02.457662 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 7.323401ms)
  I1019 13:00:02.458482 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 8.098966ms)
  I1019 13:00:02.458567 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.366999ms)
  I1019 13:00:02.458790 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.3886ms)
  I1019 13:00:02.459356 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 9.09212ms)
  I1019 13:00:02.460051 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 9.80706ms)
  I1019 13:00:02.460223 20 proxy.go:558] (17) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 9.906554ms)
  I1019 13:00:02.465327 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 5.010479ms)
  I1019 13:00:02.465491 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 5.200316ms)
  I1019 13:00:02.465670 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.176247ms)
  I1019 13:00:02.465669 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.255556ms)
  I1019 13:00:02.465691 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 5.210929ms)
  I1019 13:00:02.466280 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 6.027182ms)
  I1019 13:00:02.467843 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.468641ms)
  I1019 13:00:02.467948 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 7.591906ms)
  I1019 13:00:02.467965 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 7.537008ms)
  I1019 13:00:02.468099 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 7.57027ms)
  I1019 13:00:02.468117 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 7.604988ms)
  I1019 13:00:02.468329 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 7.884685ms)
  I1019 13:00:02.468856 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.523665ms)
  I1019 13:00:02.469230 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.765608ms)
  I1019 13:00:02.470167 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 9.919723ms)
  I1019 13:00:02.471060 20 proxy.go:558] (18) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 10.668526ms)
  I1019 13:00:02.475752 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">... (200; 4.570548ms)
  I1019 13:00:02.476594 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.335701ms)
  I1019 13:00:02.476716 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:160/proxy/: foo (200; 5.422316ms)
  I1019 13:00:02.476883 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/http:proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 5.546092ms)
  I1019 13:00:02.477023 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:462/proxy/: tls qux (200; 5.714636ms)
  I1019 13:00:02.477954 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname1/proxy/: foo (200; 6.80733ms)
  I1019 13:00:02.477969 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:1080/proxy/rewriteme">test<... (200; 6.597856ms)
  I1019 13:00:02.478555 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz:162/proxy/: bar (200; 7.134625ms)
  I1019 13:00:02.478555 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/proxy-service-9nk78-qwdgz/proxy/rewriteme">test</a> (200; 7.312379ms)
  I1019 13:00:02.478793 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:460/proxy/: tls baz (200; 7.408559ms)
  I1019 13:00:02.478810 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname1/proxy/: tls baz (200; 7.72779ms)
  I1019 13:00:02.478825 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/: <a href="/api/v1/namespaces/proxy-3711/pods/https:proxy-service-9nk78-qwdgz:443/proxy/tlsrewritem... (200; 7.622153ms)
  I1019 13:00:02.479431 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname2/proxy/: bar (200; 8.20753ms)
  I1019 13:00:02.479742 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/services/proxy-service-9nk78:portname1/proxy/: foo (200; 8.34109ms)
  I1019 13:00:02.479889 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/services/https:proxy-service-9nk78:tlsportname2/proxy/: tls qux (200; 8.534813ms)
  I1019 13:00:02.480227 20 proxy.go:558] (19) /api/v1/namespaces/proxy-3711/services/http:proxy-service-9nk78:portname2/proxy/: bar (200; 8.953596ms)
  STEP: deleting ReplicationController proxy-service-9nk78 in namespace proxy-3711, will wait for the garbage collector to delete the pods @ 10/19/24 13:00:02.48
  I1019 13:00:02.545188 20 resources.go:139] Deleting ReplicationController proxy-service-9nk78 took: 9.630403ms
  I1019 13:00:02.645860 20 resources.go:163] Terminating ReplicationController proxy-service-9nk78 pods took: 100.666897ms
  E1019 13:00:02.979720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:03.980245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:04.980300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:05.146586 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3711" for this suite. @ 10/19/24 13:00:05.151
â€¢ [4.004 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/19/24 13:00:05.161
  I1019 13:00:05.161037 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-pred @ 10/19/24 13:00:05.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:05.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:05.187
  I1019 13:00:05.189186 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1019 13:00:05.198740 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1019 13:00:05.202405 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-96 before test
  I1019 13:00:05.207884 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-97rgd from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.207900 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:00:05.207947 20 predicates.go:957] calico-node-6m9fv from kube-system started at 2024-10-19 12:00:10 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.207953 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:00:05.207961 20 predicates.go:957] coredns-5b4857d7c8-cz9tq from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.207966 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1019 13:00:05.207972 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7stxf from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.207977 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1019 13:00:05.207983 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-ts7gc from kube-system started at 2024-10-19 11:55:31 +0000 UTC (2 container statuses recorded)
  I1019 13:00:05.207988 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1019 13:00:05.207993 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1019 13:00:05.207997 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-xllmt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.208002 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1019 13:00:05.208007 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-zcjrt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.208012 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1019 13:00:05.208018 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-fzrn7 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:00:05.208022 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:00:05.208027 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:00:05.208031 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-204 before test
  I1019 13:00:05.213931 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-4f8gv from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:35 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.213950 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:00:05.213957 20 predicates.go:957] calico-node-f8b2r from kube-system started at 2024-10-19 12:00:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.213962 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:00:05.213968 20 predicates.go:957] sonobuoy-e2e-job-2d9fcc7a8e884827 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:00:05.213973 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1019 13:00:05.213978 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:00:05.213988 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-ffz26 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:00:05.213992 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:00:05.213996 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:00:05.214001 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-84-96 before test
  I1019 13:00:05.219102 20 predicates.go:957] pod-0 from disruption-8545 started at 2024-10-19 12:59:59 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.219117 20 predicates.go:959] 	Container donothing ready: true, restart count 0
  I1019 13:00:05.219123 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-zj6s2 from ingress-nginx-kubernetes-worker started at 2024-10-19 12:32:31 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.219148 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:00:05.219155 20 predicates.go:957] calico-node-d9qdc from kube-system started at 2024-10-19 11:59:30 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.219160 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:00:05.219166 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-19 12:05:01 +0000 UTC (1 container statuses recorded)
  I1019 13:00:05.219174 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1019 13:00:05.219180 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-d46rj from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:00:05.219188 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:00:05.219199 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/19/24 13:00:05.219
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ffdc1e714b07a0], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 10/19/24 13:00:05.248
  E1019 13:00:05.980714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:06.246205 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2060" for this suite. @ 10/19/24 13:00:06.249
â€¢ [1.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 10/19/24 13:00:06.256
  I1019 13:00:06.256688 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 13:00:06.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:06.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:06.281
  STEP: Creating service test in namespace statefulset-1207 @ 10/19/24 13:00:06.282
  STEP: Creating statefulset ss in namespace statefulset-1207 @ 10/19/24 13:00:06.288
  I1019 13:00:06.301024 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1019 13:00:06.981358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:07.981546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:08.981912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:09.982035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:10.982280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:11.982461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:12.982577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:13.983366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:14.983462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:15.984333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:16.303115 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/19/24 13:00:16.312
  STEP: updating a scale subresource @ 10/19/24 13:00:16.316
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/19/24 13:00:16.322
  STEP: Patch a scale subresource @ 10/19/24 13:00:16.326
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/19/24 13:00:16.333
  I1019 13:00:16.337443 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1207
  I1019 13:00:16.346799 20 rest.go:150] Scaling statefulset ss to 0
  E1019 13:00:16.985348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:17.986363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:18.986437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:19.986766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:20.987221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:21.987438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:22.988059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:23.988265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:24.988341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:25.988467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:26.361392 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 13:00:26.365063 20 rest.go:88] Deleting statefulset ss
  I1019 13:00:26.380689 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1207" for this suite. @ 10/19/24 13:00:26.384
â€¢ [20.136 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 10/19/24 13:00:26.393
  I1019 13:00:26.393297 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:00:26.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:26.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:26.415
  STEP: Setting up server cert @ 10/19/24 13:00:26.444
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:00:26.586
  STEP: Deploying the webhook pod @ 10/19/24 13:00:26.598
  STEP: Wait for the deployment to be ready @ 10/19/24 13:00:26.611
  I1019 13:00:26.622097 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:00:26.988536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:27.988867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:00:28.635
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:00:28.651
  E1019 13:00:28.988975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:29.651747 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/19/24 13:00:29.661
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/19/24 13:00:29.679
  STEP: Creating a configMap that should not be mutated @ 10/19/24 13:00:29.686
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/19/24 13:00:29.7
  STEP: Creating a configMap that should be mutated @ 10/19/24 13:00:29.71
  I1019 13:00:29.779445 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9812" for this suite. @ 10/19/24 13:00:29.782
  STEP: Destroying namespace "webhook-markers-8851" for this suite. @ 10/19/24 13:00:29.793
â€¢ [3.408 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 10/19/24 13:00:29.801
  I1019 13:00:29.801810 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:00:29.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:29.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:29.821
  STEP: creating a replication controller @ 10/19/24 13:00:29.823
  I1019 13:00:29.823906 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 create -f -'
  I1019 13:00:29.907461 20 builder.go:146] stderr: ""
  I1019 13:00:29.907497 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/19/24 13:00:29.907
  I1019 13:00:29.907578 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 13:00:29.957664 20 builder.go:146] stderr: ""
  I1019 13:00:29.957706 20 builder.go:147] stdout: "update-demo-nautilus-fd9sp update-demo-nautilus-z944s "
  I1019 13:00:29.957747 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods update-demo-nautilus-fd9sp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1019 13:00:29.989618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:29.999558 20 builder.go:146] stderr: ""
  I1019 13:00:29.999589 20 builder.go:147] stdout: ""
  I1019 13:00:29.999597 20 kubectl.go:2502] update-demo-nautilus-fd9sp is created but not running
  E1019 13:00:30.990286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:31.991337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:32.991476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:33.991674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:34.991795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:35.000076 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1019 13:00:35.047239 20 builder.go:146] stderr: ""
  I1019 13:00:35.047282 20 builder.go:147] stdout: "update-demo-nautilus-fd9sp update-demo-nautilus-z944s "
  I1019 13:00:35.047327 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods update-demo-nautilus-fd9sp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 13:00:35.093901 20 builder.go:146] stderr: ""
  I1019 13:00:35.093933 20 builder.go:147] stdout: "true"
  I1019 13:00:35.093970 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods update-demo-nautilus-fd9sp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 13:00:35.137571 20 builder.go:146] stderr: ""
  I1019 13:00:35.137615 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 13:00:35.137625 20 kubectl.go:2393] validating pod update-demo-nautilus-fd9sp
  I1019 13:00:35.143208 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 13:00:35.143272 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 13:00:35.143286 20 kubectl.go:2520] update-demo-nautilus-fd9sp is verified up and running
  I1019 13:00:35.143319 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods update-demo-nautilus-z944s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1019 13:00:35.187606 20 builder.go:146] stderr: ""
  I1019 13:00:35.187642 20 builder.go:147] stdout: "true"
  I1019 13:00:35.187680 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods update-demo-nautilus-z944s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1019 13:00:35.230956 20 builder.go:146] stderr: ""
  I1019 13:00:35.231001 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1019 13:00:35.231014 20 kubectl.go:2393] validating pod update-demo-nautilus-z944s
  I1019 13:00:35.236334 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1019 13:00:35.236371 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1019 13:00:35.236383 20 kubectl.go:2520] update-demo-nautilus-z944s is verified up and running
  STEP: using delete to clean up resources @ 10/19/24 13:00:35.236
  I1019 13:00:35.236446 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 delete --grace-period=0 --force -f -'
  I1019 13:00:35.287847 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:00:35.287882 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1019 13:00:35.287923 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get rc,svc -l name=update-demo --no-headers'
  I1019 13:00:35.349248 20 builder.go:146] stderr: "No resources found in kubectl-6509 namespace.\n"
  I1019 13:00:35.349298 20 builder.go:147] stdout: ""
  I1019 13:00:35.349341 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6509 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1019 13:00:35.425647 20 builder.go:146] stderr: ""
  I1019 13:00:35.425695 20 builder.go:147] stdout: ""
  I1019 13:00:35.425811 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6509" for this suite. @ 10/19/24 13:00:35.431
â€¢ [5.639 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/19/24 13:00:35.44
  I1019 13:00:35.440792 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 13:00:35.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:35.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:35.47
  I1019 13:00:35.485246 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1019 13:00:35.991931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:36.992075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:37.992290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:38.993152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:39.993293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:40.491653 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/19/24 13:00:40.491
  I1019 13:00:40.491729 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1019 13:00:40.993405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:41.994332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:42.497253 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1019 13:00:42.508248 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1019 13:00:42.996676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:43.996805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:44.517339 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1019 13:00:44.525317 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1019 13:00:44.533710 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1019 13:00:44.544212 20 deployment.go:313] Updating deployment test-rollover-deployment
  I1019 13:00:44.544244 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1019 13:00:44.997041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:45.997013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:46.552475 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1019 13:00:46.560596 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1019 13:00:46.572289 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1019 13:00:46.572373 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1019 13:00:46.997240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:47.998248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:48.582623 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1019 13:00:48.582683 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1019 13:00:48.999096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:49.999317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:50.582534 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1019 13:00:50.582592 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1019 13:00:50.999986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:52.000102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:52.582351 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1019 13:00:52.582414 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1019 13:00:53.000673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:54.000914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:54.581657 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1019 13:00:54.581705 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 19, 13, 0, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 19, 13, 0, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1019 13:00:55.001054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:56.001260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:00:56.581020 20 deployment.go:94] 
  I1019 13:00:56.581057 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I1019 13:00:56.593469 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5455",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "072fc335-14de-4bad-841b-2cc56d259d99",
      ResourceVersion: (string) (len=5) "29767",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1019 13:00:56.598297 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5455",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "845945cf-7294-45ff-8281-4f8ebe6b0b58",
      ResourceVersion: (string) (len=5) "29757",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "072fc335-14de-4bad-841b-2cc56d259d99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 37 32 66 63 33  33 35 2d 31 34 64 65 2d  |\"072fc335-14de-|
              00000120  34 62 61 64 2d 38 34 31  62 2d 32 63 63 35 36 64  |4bad-841b-2cc56d|
              00000130  32 35 39 64 39 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |259d99\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 13:00:56.598803 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1019 13:00:56.598994 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5455",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b240eb7-b336-484c-800a-45fe07ab6db8",
      ResourceVersion: (string) (len=5) "29766",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "072fc335-14de-4bad-841b-2cc56d259d99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 37 32 66 63 33 33 35  2d 31 34 64 65 2d 34 62  |072fc335-14de-4b|
              000000c0  61 64 2d 38 34 31 62 2d  32 63 63 35 36 64 32 35  |ad-841b-2cc56d25|
              000000d0  39 64 39 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9d99\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 13:00:56.599715 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5455",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33b295cf-2683-4b20-a50f-bfe932f5af0f",
      ResourceVersion: (string) (len=5) "29718",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "072fc335-14de-4bad-841b-2cc56d259d99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 37 32 66 63 33  33 35 2d 31 34 64 65 2d  |\"072fc335-14de-|
              00000120  34 62 61 64 2d 38 34 31  62 2d 32 63 63 35 36 64  |4bad-841b-2cc56d|
              00000130  32 35 39 64 39 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |259d99\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 13:00:56.605584 20 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-pjglf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-pjglf",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-5455",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9adf551e-ee34-487f-8573-1c872fe5c14b",
      ResourceVersion: (string) (len=5) "29735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "845945cf-7294-45ff-8281-4f8ebe6b0b58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  35 39 34 35 63 66 2d 37  |d\":\"845945cf-7|
              00000090  32 39 34 2d 34 35 66 66  2d 38 32 38 31 2d 34 66  |294-45ff-8281-4f|
              000000a0  38 65 62 65 36 62 30 62  35 38 5c 22 7d 22 3a 7b  |8ebe6b0b58\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 32 31 36 5c 22 7d 22  |2.168.21.216\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n69nq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n69nq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864939644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.204"
        }
      },
      PodIP: (string) (len=14) "192.168.21.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864939644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864939645,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://2829da9846ea658aefea5dc461cc860fa58facc1deb658623e95526430f5a24a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n69nq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 13:00:56.606766 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5455" for this suite. @ 10/19/24 13:00:56.612
â€¢ [21.180 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 10/19/24 13:00:56.62
  I1019 13:00:56.620977 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 13:00:56.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:00:56.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:00:56.644
  STEP: Creating service test in namespace statefulset-9119 @ 10/19/24 13:00:56.645
  STEP: Creating a new StatefulSet @ 10/19/24 13:00:56.651
  I1019 13:00:56.663867 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E1019 13:00:57.001449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:58.001564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:00:59.001634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:00.001732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:01.001877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:02.002027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:03.002271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:04.002569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:05.002639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:06.002749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:01:06.665340 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:01:06.665375 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:01:06.665383 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:01:06.677915 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-9119 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 13:01:06.774874 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 13:01:06.774911 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 13:01:06.774920 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1019 13:01:07.003278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:08.003407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:09.004359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:10.004452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:11.004525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:12.004634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:13.005572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:14.005642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:15.005831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:16.005945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/19/24 13:01:16.784
  I1019 13:01:16.794668 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/19/24 13:01:16.794
  E1019 13:01:17.006424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:18.006553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:19.006628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:20.006751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:21.006888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:22.007002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:23.007154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:24.007305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:25.007444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:26.007540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/19/24 13:01:26.805
  I1019 13:01:26.808957 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-9119 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 13:01:26.888864 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 13:01:26.888903 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 13:01:26.888913 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1019 13:01:27.008581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:28.008757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:29.009088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:30.009278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:31.009359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:32.009469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:33.009543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:34.009659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:35.009777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:36.009862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:37.010380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:38.010459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:39.010597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:40.010751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:41.010863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:42.011208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:43.011391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:44.011467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:45.011687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:46.011965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/19/24 13:01:46.908
  I1019 13:01:46.908394 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-9119 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 13:01:46.988606 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 13:01:46.988645 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 13:01:46.988660 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1019 13:01:47.012794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:48.012912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:49.012999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:50.013121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:51.013285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:52.013383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:53.013452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:54.014350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:55.015328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:56.015528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:01:57.011265 20 statefulset.go:2507] Updating stateful set ss2
  E1019 13:01:57.015788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:58.016514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:01:59.016878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:00.017429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:01.018330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:02.019391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:03.020334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:04.020726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:05.021451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:06.022516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/19/24 13:02:07.021
  E1019 13:02:07.022781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:07.026584 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-9119 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 13:02:07.104324 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 13:02:07.104363 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 13:02:07.104373 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1019 13:02:08.023299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:09.023397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:10.023482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:11.024343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:12.024456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:13.024556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:14.024622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:15.024715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:16.024981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:17.025099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:17.123070 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9119
  I1019 13:02:17.127105 20 rest.go:150] Scaling statefulset ss2 to 0
  E1019 13:02:18.025307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:19.025652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:20.026336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:21.027358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:22.027478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:23.027558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:24.027678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:25.027845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:26.028064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:27.028305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:27.143375 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 13:02:27.148302 20 rest.go:88] Deleting statefulset ss2
  I1019 13:02:27.162473 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9119" for this suite. @ 10/19/24 13:02:27.169
â€¢ [90.558 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/19/24 13:02:27.179
  I1019 13:02:27.179325 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubelet-test @ 10/19/24 13:02:27.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:02:27.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:02:27.201
  E1019 13:02:28.028447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:29.028618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:29.241919 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2600" for this suite. @ 10/19/24 13:02:29.246
â€¢ [2.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 10/19/24 13:02:29.255
  I1019 13:02:29.255402 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:02:29.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:02:29.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:02:29.277
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9946 @ 10/19/24 13:02:29.279
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/19/24 13:02:29.298
  STEP: creating service externalsvc in namespace services-9946 @ 10/19/24 13:02:29.298
  STEP: creating replication controller externalsvc in namespace services-9946 @ 10/19/24 13:02:29.313
  I1019 13:02:29.321480      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9946, replica count: 2
  E1019 13:02:30.029355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:31.029498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:32.029780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:32.372339      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/19/24 13:02:32.376
  I1019 13:02:32.397338 20 resource.go:361] Creating new exec pod
  E1019 13:02:33.029900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:34.030037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:34.417524 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-9946 exec execpodwc5qm -- /bin/sh -x -c nslookup nodeport-service.services-9946.svc.cluster.local'
  I1019 13:02:34.511845 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-9946.svc.cluster.local\n"
  I1019 13:02:34.511885 20 builder.go:147] stdout: "Server:\t\t10.152.183.178\nAddress:\t10.152.183.178#53\n\nnodeport-service.services-9946.svc.cluster.local\tcanonical name = externalsvc.services-9946.svc.cluster.local.\nName:\texternalsvc.services-9946.svc.cluster.local\nAddress: 10.152.183.108\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9946, will wait for the garbage collector to delete the pods @ 10/19/24 13:02:34.512
  I1019 13:02:34.576899 20 resources.go:139] Deleting ReplicationController externalsvc took: 9.167466ms
  I1019 13:02:34.677009 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.094069ms
  E1019 13:02:35.030798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:36.031538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:37.032256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:02:37.405054 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1019 13:02:37.417271 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9946" for this suite. @ 10/19/24 13:02:37.424
â€¢ [8.175 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 10/19/24 13:02:37.43
  I1019 13:02:37.430694 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pod-network-test @ 10/19/24 13:02:37.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:02:37.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:02:37.455
  STEP: Performing setup for networking test in namespace pod-network-test-7526 @ 10/19/24 13:02:37.457
  STEP: creating a selector @ 10/19/24 13:02:37.457
  STEP: Creating the service pods in kubernetes @ 10/19/24 13:02:37.457
  I1019 13:02:37.457081 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1019 13:02:38.033099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:39.033287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:40.034282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:41.034371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:42.035358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:43.035622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:44.036379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:45.036590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:46.037509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:47.037837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:48.037860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:49.038273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:50.039254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:51.039841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:52.039870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:53.040332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:54.041147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:55.041303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:56.041407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:57.041575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:58.041668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:02:59.041771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/19/24 13:02:59.579
  E1019 13:03:00.041902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:01.042112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:03:01.599030 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1019 13:03:01.599103 20 networking.go:42] Breadth first check of 192.168.243.147 on host 172.31.22.96...
  I1019 13:03:01.603438 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.73.103:9080/dial?request=hostname&protocol=http&host=192.168.243.147&port=8083&tries=1'] Namespace:pod-network-test-7526 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 13:03:01.603462 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 13:03:01.603890 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 13:03:01.603931 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7526/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.73.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.243.147%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1019 13:03:01.651880 20 utils.go:356] Waiting for responses: map[]
  I1019 13:03:01.651912 20 utils.go:360] reached 192.168.243.147 after 0/1 tries
  I1019 13:03:01.651926 20 networking.go:42] Breadth first check of 192.168.21.226 on host 172.31.3.204...
  I1019 13:03:01.657216 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.73.103:9080/dial?request=hostname&protocol=http&host=192.168.21.226&port=8083&tries=1'] Namespace:pod-network-test-7526 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 13:03:01.657238 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 13:03:01.657619 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 13:03:01.657663 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7526/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.73.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.21.226%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1019 13:03:01.698383 20 utils.go:356] Waiting for responses: map[]
  I1019 13:03:01.698412 20 utils.go:360] reached 192.168.21.226 after 0/1 tries
  I1019 13:03:01.698424 20 networking.go:42] Breadth first check of 192.168.73.102 on host 172.31.84.96...
  I1019 13:03:01.703218 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.73.103:9080/dial?request=hostname&protocol=http&host=192.168.73.102&port=8083&tries=1'] Namespace:pod-network-test-7526 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 13:03:01.703238 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 13:03:01.703634 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 13:03:01.703675 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7526/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.73.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.73.102%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1019 13:03:01.739442 20 utils.go:356] Waiting for responses: map[]
  I1019 13:03:01.739477 20 utils.go:360] reached 192.168.73.102 after 0/1 tries
  I1019 13:03:01.739488 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1019 13:03:01.739611 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7526" for this suite. @ 10/19/24 13:03:01.743
â€¢ [24.322 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 10/19/24 13:03:01.752
  I1019 13:03:01.752513 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:03:01.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:03:01.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:03:01.773
  STEP: Creating configMap with name cm-test-opt-del-d19d8ebc-f2ee-4cf7-bf3b-41adb6c3b906 @ 10/19/24 13:03:01.781
  STEP: Creating configMap with name cm-test-opt-upd-0ab44665-3841-492d-b49f-f279d96c0ed8 @ 10/19/24 13:03:01.786
  STEP: Creating the pod @ 10/19/24 13:03:01.792
  E1019 13:03:02.043084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:03.043299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d19d8ebc-f2ee-4cf7-bf3b-41adb6c3b906 @ 10/19/24 13:03:03.855
  STEP: Updating configmap cm-test-opt-upd-0ab44665-3841-492d-b49f-f279d96c0ed8 @ 10/19/24 13:03:03.864
  STEP: Creating configMap with name cm-test-opt-create-37b0a9a5-edfa-4508-a43c-99e4fddc7514 @ 10/19/24 13:03:03.869
  STEP: waiting to observe update in volume @ 10/19/24 13:03:03.874
  E1019 13:03:04.043966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:05.044354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:06.045278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:07.045470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:08.045785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:09.045963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:10.046901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:11.047018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:12.047882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:13.048098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:14.048885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:15.049017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:16.049879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:17.050075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:18.051030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:19.051165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:20.052184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:21.053106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:22.053156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:23.053287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:24.054352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:25.054448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:26.055363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:27.056356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:28.057337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:29.057631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:30.057886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:31.058014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:32.058488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:33.058695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:34.058920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:35.059038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:36.059282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:37.059387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:38.060054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:39.060352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:40.060755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:41.060966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:42.061834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:43.061936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:44.062112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:45.062509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:46.062607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:47.063577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:48.063671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:49.063772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:50.063864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:51.064340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:52.064420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:53.065289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:54.065429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:55.065977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:56.066089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:57.066213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:58.066316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:03:59.066453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:00.066673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:01.066861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:02.066967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:03.067306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:04.067419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:05.067493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:06.067621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:07.067920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:08.068163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:09.068846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:10.069078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:11.069218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:12.069321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:13.070089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:14.070263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:15.070564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:16.070793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:17.071039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:18.071187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:19.071543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:20.072506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:21.072926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:22.073034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:04:22.281187 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4405" for this suite. @ 10/19/24 13:04:22.284
â€¢ [80.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 10/19/24 13:04:22.292
  I1019 13:04:22.292450 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 13:04:22.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:22.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:22.314
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/19/24 13:04:22.316
  E1019 13:04:23.073287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:24.074351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:25.074449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:26.074539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:04:26.341
  I1019 13:04:26.346414 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-ce7d13ac-abe7-4ab0-907a-75694ba1a5e0 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:04:26.358
  I1019 13:04:26.377237 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9786" for this suite. @ 10/19/24 13:04:26.382
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 10/19/24 13:04:26.39
  I1019 13:04:26.390164 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:04:26.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:26.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:26.413
  STEP: Creating the pod @ 10/19/24 13:04:26.414
  E1019 13:04:27.074625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:28.074714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:04:28.965792 20 pod_client.go:173] Successfully updated pod "annotationupdate339aafd2-66b8-496a-ab1f-6d6c54016fc3"
  E1019 13:04:29.075335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:30.076349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:04:30.983921 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7679" for this suite. @ 10/19/24 13:04:30.987
â€¢ [4.605 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 10/19/24 13:04:30.995
  I1019 13:04:30.995577 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename disruption @ 10/19/24 13:04:30.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:31.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:31.018
  STEP: creating the pdb @ 10/19/24 13:04:31.02
  STEP: Waiting for the pdb to be processed @ 10/19/24 13:04:31.027
  E1019 13:04:31.077273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:32.077391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 10/19/24 13:04:33.032
  STEP: Waiting for the pdb to be processed @ 10/19/24 13:04:33.045
  E1019 13:04:33.078158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:34.078327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 10/19/24 13:04:35.05
  STEP: Waiting for the pdb to be processed @ 10/19/24 13:04:35.061
  E1019 13:04:35.078660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:36.078880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 10/19/24 13:04:37.074
  I1019 13:04:37.078254 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1019 13:04:37.079266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-5204" for this suite. @ 10/19/24 13:04:37.082
â€¢ [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 10/19/24 13:04:37.09
  I1019 13:04:37.090046 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 13:04:37.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:37.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:37.112
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9680.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9680.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/19/24 13:04:37.115
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9680.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9680.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/19/24 13:04:37.115
  STEP: creating a pod to probe /etc/hosts @ 10/19/24 13:04:37.115
  STEP: submitting the pod to kubernetes @ 10/19/24 13:04:37.115
  E1019 13:04:38.079467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:39.079791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 13:04:39.14
  STEP: looking for the results for each expected name from probers @ 10/19/24 13:04:39.145
  I1019 13:04:39.164888 20 dns_common.go:527] DNS probes using dns-9680/dns-test-3574051b-0cf3-4e54-b56f-c661a458cd22 succeeded

  STEP: deleting the pod @ 10/19/24 13:04:39.164
  I1019 13:04:39.178232 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9680" for this suite. @ 10/19/24 13:04:39.183
â€¢ [2.106 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/19/24 13:04:39.195
  I1019 13:04:39.195922 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename conformance-tests @ 10/19/24 13:04:39.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:39.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:39.222
  STEP: Getting node addresses @ 10/19/24 13:04:39.223
  I1019 13:04:39.224012 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1019 13:04:39.228552 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7662" for this suite. @ 10/19/24 13:04:39.232
â€¢ [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/19/24 13:04:39.239
  I1019 13:04:39.239863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename prestop @ 10/19/24 13:04:39.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:39.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:39.264
  STEP: Creating server pod server in namespace prestop-5975 @ 10/19/24 13:04:39.265
  STEP: Waiting for pods to come up. @ 10/19/24 13:04:39.276
  E1019 13:04:40.079944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:41.080030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5975 @ 10/19/24 13:04:41.291
  E1019 13:04:42.080295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:43.080523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 10/19/24 13:04:43.306
  E1019 13:04:44.080623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:45.081351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:46.081457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:47.081987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:48.081765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:04:48.321519 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 10/19/24 13:04:48.321
  I1019 13:04:48.340724 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5975" for this suite. @ 10/19/24 13:04:48.345
â€¢ [9.112 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/19/24 13:04:48.352
  I1019 13:04:48.352157 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-pred @ 10/19/24 13:04:48.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:48.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:48.378
  I1019 13:04:48.380576 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1019 13:04:48.388838 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1019 13:04:48.393218 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-96 before test
  I1019 13:04:48.398372 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-97rgd from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.398388 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:04:48.398396 20 predicates.go:957] calico-node-6m9fv from kube-system started at 2024-10-19 12:00:10 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.398401 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:04:48.398407 20 predicates.go:957] coredns-5b4857d7c8-cz9tq from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.398411 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1019 13:04:48.398417 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7stxf from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.398423 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1019 13:04:48.398433 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-ts7gc from kube-system started at 2024-10-19 11:55:31 +0000 UTC (2 container statuses recorded)
  I1019 13:04:48.398437 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1019 13:04:48.398442 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1019 13:04:48.398447 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-xllmt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.398452 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1019 13:04:48.398457 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-zcjrt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.398462 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1019 13:04:48.398467 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-fzrn7 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:04:48.398471 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:04:48.398476 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:04:48.398482 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-204 before test
  I1019 13:04:48.404245 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-4f8gv from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:35 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.404261 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:04:48.404268 20 predicates.go:957] calico-node-f8b2r from kube-system started at 2024-10-19 12:00:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.404273 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:04:48.404278 20 predicates.go:957] sonobuoy-e2e-job-2d9fcc7a8e884827 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:04:48.404285 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1019 13:04:48.404290 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:04:48.404296 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-ffz26 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:04:48.404301 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:04:48.404307 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:04:48.404312 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-84-96 before test
  I1019 13:04:48.410569 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-zj6s2 from ingress-nginx-kubernetes-worker started at 2024-10-19 12:32:31 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.410588 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:04:48.410595 20 predicates.go:957] calico-node-d9qdc from kube-system started at 2024-10-19 11:59:30 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.410602 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:04:48.410608 20 predicates.go:957] tester from prestop-5975 started at 2024-10-19 13:04:41 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.410613 20 predicates.go:959] 	Container tester ready: true, restart count 0
  I1019 13:04:48.410619 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-19 12:05:01 +0000 UTC (1 container statuses recorded)
  I1019 13:04:48.410624 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1019 13:04:48.410636 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-d46rj from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:04:48.410641 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:04:48.410647 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/19/24 13:04:48.41
  E1019 13:04:49.081799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:50.081919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/19/24 13:04:50.433
  STEP: Trying to apply a random label on the found node. @ 10/19/24 13:04:50.446
  STEP: verifying the node has the label kubernetes.io/e2e-4dc32eb8-f0f3-49c4-bcfd-597a9cdf7777 42 @ 10/19/24 13:04:50.459
  STEP: Trying to relaunch the pod, now with labels. @ 10/19/24 13:04:50.466
  E1019 13:04:51.081983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:52.082190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4dc32eb8-f0f3-49c4-bcfd-597a9cdf7777 off the node ip-172-31-3-204 @ 10/19/24 13:04:52.491
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4dc32eb8-f0f3-49c4-bcfd-597a9cdf7777 @ 10/19/24 13:04:52.514
  I1019 13:04:52.521424 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9828" for this suite. @ 10/19/24 13:04:52.528
â€¢ [4.187 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 10/19/24 13:04:52.538
  I1019 13:04:52.538994 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 13:04:52.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:04:52.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:04:52.562
  STEP: Creating service test in namespace statefulset-7983 @ 10/19/24 13:04:52.564
  STEP: Creating a new StatefulSet @ 10/19/24 13:04:52.571
  I1019 13:04:52.582783 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E1019 13:04:53.082462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:54.083358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:55.083455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:56.083521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:57.083612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:58.083733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:04:59.083826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:00.084330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:01.084431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:02.084514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:05:02.584544 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:05:02.584579 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:05:02.584587 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/19/24 13:05:02.596
  I1019 13:05:02.605885 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/19/24 13:05:02.605
  E1019 13:05:03.084797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:04.084755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:05.084862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:06.084934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:07.085324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:08.085456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:09.085569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:10.085669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:11.085738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:12.085884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/19/24 13:05:12.615
  STEP: Performing a canary update @ 10/19/24 13:05:12.615
  I1019 13:05:12.627712 20 statefulset.go:2507] Updating stateful set ss2
  I1019 13:05:12.633675 20 wait.go:74] Waiting for Pod statefulset-7983/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1019 13:05:13.086269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:14.086594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:15.086717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:16.086844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:17.086925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:18.087023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:19.087166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:20.087364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:21.087553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:22.087726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/19/24 13:05:22.638
  I1019 13:05:22.673866 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E1019 13:05:23.088340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:24.088504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:25.088590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:26.088836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:27.088999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:28.089240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:29.089451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:30.089630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:31.089728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:32.089889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:05:32.675270 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:05:32.675298 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:05:32.675307 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/19/24 13:05:32.684
  I1019 13:05:32.694397 20 statefulset.go:2507] Updating stateful set ss2
  I1019 13:05:32.701396 20 wait.go:74] Waiting for Pod statefulset-7983/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1019 13:05:33.090559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:34.090921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:35.091164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:36.091285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:37.091504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:38.091703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:39.091817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:40.092073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:41.092220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:42.092281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:05:42.714992 20 statefulset.go:2507] Updating stateful set ss2
  I1019 13:05:42.728502 20 wait.go:56] Waiting for StatefulSet statefulset-7983/ss2 to complete update
  I1019 13:05:42.728535 20 wait.go:63] Waiting for Pod statefulset-7983/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1019 13:05:43.093015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:44.093291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:45.093386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:46.093481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:47.093579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:48.093646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:49.093735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:50.093855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:51.093950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:52.094025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:05:52.724272 20 statefulset.go:138] Deleting all statefulset in ns statefulset-7983
  I1019 13:05:52.728638 20 rest.go:150] Scaling statefulset ss2 to 0
  E1019 13:05:53.094305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:54.094395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:55.094520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:56.094579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:57.094681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:58.094813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:05:59.095394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:00.095497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:01.095592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:02.095782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:02.744016 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 13:06:02.748251 20 rest.go:88] Deleting statefulset ss2
  I1019 13:06:02.762452 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7983" for this suite. @ 10/19/24 13:06:02.765
â€¢ [70.238 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 10/19/24 13:06:02.777
  I1019 13:06:02.777166 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:06:02.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:02.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:02.8
  STEP: Creating a pod to test downward api env vars @ 10/19/24 13:06:02.801
  E1019 13:06:03.097240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:04.096948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:06:04.824
  I1019 13:06:04.828693 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downward-api-38766c04-3bb5-441f-8bc2-f443807b378c container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 13:06:04.841
  I1019 13:06:04.859190 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7516" for this suite. @ 10/19/24 13:06:04.863
â€¢ [2.096 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 10/19/24 13:06:04.873
  I1019 13:06:04.873033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sysctl @ 10/19/24 13:06:04.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:04.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:04.894
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/19/24 13:06:04.896
  I1019 13:06:04.901231 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3318" for this suite. @ 10/19/24 13:06:04.904
â€¢ [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/19/24 13:06:04.913
  I1019 13:06:04.913395 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename containers @ 10/19/24 13:06:04.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:04.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:04.934
  STEP: Creating a pod to test override all @ 10/19/24 13:06:04.936
  E1019 13:06:05.098001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:06.098242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:06:06.955
  I1019 13:06:06.960276 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod client-containers-573cd2a4-2051-4b18-83f5-271d3805b7ba container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:06:06.969
  I1019 13:06:06.986814 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9237" for this suite. @ 10/19/24 13:06:06.991
â€¢ [2.087 seconds]
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 10/19/24 13:06:06.999
  I1019 13:06:07.000002 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 13:06:07
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:07.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:07.023
  STEP: creating a ServiceAccount @ 10/19/24 13:06:07.025
  STEP: watching for the ServiceAccount to be added @ 10/19/24 13:06:07.037
  STEP: patching the ServiceAccount @ 10/19/24 13:06:07.039
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/19/24 13:06:07.044
  STEP: deleting the ServiceAccount @ 10/19/24 13:06:07.047
  I1019 13:06:07.067940 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9548" for this suite. @ 10/19/24 13:06:07.071
â€¢ [0.084 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/19/24 13:06:07.084
  I1019 13:06:07.084272 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 13:06:07.084
  E1019 13:06:07.098408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:07.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:07.106
  STEP: creating a Pod with a static label @ 10/19/24 13:06:07.114
  STEP: watching for Pod to be ready @ 10/19/24 13:06:07.124
  I1019 13:06:07.125120 20 pods.go:945] observed Pod pod-test in namespace pods-4353 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1019 13:06:07.131553 20 pods.go:945] observed Pod pod-test in namespace pods-4353 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC  }]
  I1019 13:06:07.156057 20 pods.go:945] observed Pod pod-test in namespace pods-4353 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC  }]
  E1019 13:06:08.099033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:08.679334 20 pods.go:948] Found Pod pod-test in namespace pods-4353 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:08 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:08 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-19 13:06:07 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/19/24 13:06:08.684
  STEP: getting the Pod and ensuring that it's patched @ 10/19/24 13:06:08.694
  STEP: replacing the Pod's status Ready condition to False @ 10/19/24 13:06:08.698
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/19/24 13:06:08.71
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/19/24 13:06:08.71
  STEP: watching for the Pod to be deleted @ 10/19/24 13:06:08.724
  I1019 13:06:08.725051 20 pods.go:1058] observed event type MODIFIED
  E1019 13:06:09.099180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:10.099677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:10.681218 20 pods.go:1058] observed event type MODIFIED
  I1019 13:06:10.874023 20 pods.go:1058] observed event type MODIFIED
  E1019 13:06:11.100361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:11.688146 20 pods.go:1058] observed event type MODIFIED
  I1019 13:06:11.700236 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4353" for this suite. @ 10/19/24 13:06:11.704
â€¢ [4.630 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 10/19/24 13:06:11.713
  I1019 13:06:11.713803 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename security-context-test @ 10/19/24 13:06:11.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:11.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:11.739
  E1019 13:06:12.100454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:13.100699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:14.101486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:15.101603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:15.779942 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9879" for this suite. @ 10/19/24 13:06:15.783
â€¢ [4.080 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 10/19/24 13:06:15.793
  I1019 13:06:15.793697 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename events @ 10/19/24 13:06:15.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:15.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:15.815
  STEP: Create set of events @ 10/19/24 13:06:15.817
  I1019 13:06:15.821334 20 core_events.go:198] created test-event-1
  I1019 13:06:15.826260 20 core_events.go:198] created test-event-2
  I1019 13:06:15.833679 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/19/24 13:06:15.833
  STEP: delete collection of events @ 10/19/24 13:06:15.836
  I1019 13:06:15.836930 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/19/24 13:06:15.869
  I1019 13:06:15.869882 20 core_events.go:230] requesting list of events to confirm quantity
  I1019 13:06:15.874666 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-843" for this suite. @ 10/19/24 13:06:15.879
â€¢ [0.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 10/19/24 13:06:15.888
  I1019 13:06:15.888840 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:06:15.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:15.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:15.91
  STEP: validating api versions @ 10/19/24 13:06:15.911
  I1019 13:06:15.911909 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-2878 api-versions'
  I1019 13:06:15.953562 20 builder.go:146] stderr: ""
  I1019 13:06:15.953593 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1019 13:06:15.953697 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2878" for this suite. @ 10/19/24 13:06:15.959
â€¢ [0.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 10/19/24 13:06:15.969
  I1019 13:06:15.969909 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:06:15.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:15.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:15.995
  STEP: Creating configMap with name configmap-test-volume-a8a7283c-1504-4158-bcc9-e817f73ed0b0 @ 10/19/24 13:06:15.997
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:06:16.004
  E1019 13:06:16.102436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:17.102636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:06:18.027
  I1019 13:06:18.031942 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-9457e8ab-f9b6-4ce3-80f4-a3c3544fc820 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:06:18.039
  I1019 13:06:18.057208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2142" for this suite. @ 10/19/24 13:06:18.061
â€¢ [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 10/19/24 13:06:18.07
  I1019 13:06:18.070184 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:06:18.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:18.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:18.096
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/19/24 13:06:18.098
  I1019 13:06:18.098601 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6429 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E1019 13:06:18.102864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:18.148290 20 builder.go:146] stderr: ""
  I1019 13:06:18.148320 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/19/24 13:06:18.148
  I1019 13:06:18.151241 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-6429 delete pods e2e-test-httpd-pod'
  E1019 13:06:19.103294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:19.757991 20 builder.go:146] stderr: ""
  I1019 13:06:19.758024 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1019 13:06:19.758143 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6429" for this suite. @ 10/19/24 13:06:19.763
â€¢ [1.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/19/24 13:06:19.77
  I1019 13:06:19.770844 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 13:06:19.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:19.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:19.795
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/19/24 13:06:19.817
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/19/24 13:06:19.828
  I1019 13:06:19.832599 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:19.832622 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:19.835333 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:06:19.835353 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 13:06:20.103780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:20.833547 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:20.833590 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:20.837217 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1019 13:06:20.837234 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  E1019 13:06:21.104355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:21.835331 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:21.835392 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:21.844229 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:06:21.844290 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/19/24 13:06:21.85
  I1019 13:06:21.866830 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:21.866866 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:06:21.872269 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:06:21.872288 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/19/24 13:06:21.872
  E1019 13:06:22.104954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 10/19/24 13:06:22.882
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6495, will wait for the garbage collector to delete the pods @ 10/19/24 13:06:22.882
  I1019 13:06:22.945872 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.480462ms
  I1019 13:06:23.046869 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.975621ms
  E1019 13:06:23.105013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:24.105942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:24.352579 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:06:24.352610 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1019 13:06:24.357069 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32191"},"items":null}

  I1019 13:06:24.361311 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32191"},"items":null}

  I1019 13:06:24.377411 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6495" for this suite. @ 10/19/24 13:06:24.381
â€¢ [4.620 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 10/19/24 13:06:24.39
  I1019 13:06:24.390955 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replication-controller @ 10/19/24 13:06:24.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:24.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:24.412
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/19/24 13:06:24.414
  E1019 13:06:25.106064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:26.106254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 10/19/24 13:06:26.439
  STEP: Then the orphan pod is adopted @ 10/19/24 13:06:26.444
  E1019 13:06:27.106915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:27.452527 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9633" for this suite. @ 10/19/24 13:06:27.457
â€¢ [3.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 10/19/24 13:06:27.465
  I1019 13:06:27.465381 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 13:06:27.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:27.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:27.487
  STEP: Counting existing ResourceQuota @ 10/19/24 13:06:27.489
  E1019 13:06:28.107794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:29.108375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:30.108476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:31.109007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:32.109861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/19/24 13:06:32.495
  STEP: Ensuring resource quota status is calculated @ 10/19/24 13:06:32.504
  E1019 13:06:33.109962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:34.110116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 10/19/24 13:06:34.51
  STEP: Creating a NodePort Service @ 10/19/24 13:06:34.529
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/19/24 13:06:34.557
  STEP: Ensuring resource quota status captures service creation @ 10/19/24 13:06:34.585
  E1019 13:06:35.110251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:36.110490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 10/19/24 13:06:36.591
  STEP: Ensuring resource quota status released usage @ 10/19/24 13:06:36.633
  E1019 13:06:37.110571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:38.110717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:38.638255 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8924" for this suite. @ 10/19/24 13:06:38.643
â€¢ [11.190 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 10/19/24 13:06:38.655
  I1019 13:06:38.655725 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:06:38.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:38.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:38.683
  STEP: Creating configMap with name projected-configmap-test-volume-map-c90d9366-5591-4837-a1c3-f14b8a59bf84 @ 10/19/24 13:06:38.685
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:06:38.69
  E1019 13:06:39.111292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:40.111387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:41.111501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:42.111708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:06:42.719
  I1019 13:06:42.724099 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-configmaps-eb09b38a-1551-44c8-8d66-7e25ee99fe32 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:06:42.732
  I1019 13:06:42.751068 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1380" for this suite. @ 10/19/24 13:06:42.755
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/19/24 13:06:42.764
  I1019 13:06:42.764950 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/19/24 13:06:42.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:42.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:42.787
  E1019 13:06:43.112508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:44.112619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 10/19/24 13:06:44.824
  STEP: Cleaning up the configmap @ 10/19/24 13:06:44.833
  STEP: Cleaning up the pod @ 10/19/24 13:06:44.84
  I1019 13:06:44.857169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8270" for this suite. @ 10/19/24 13:06:44.86
â€¢ [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 10/19/24 13:06:44.868
  I1019 13:06:44.868695 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:06:44.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:44.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:44.888
  STEP: Creating a pod to test downward api env vars @ 10/19/24 13:06:44.89
  E1019 13:06:45.113441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:46.113551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:47.113852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:48.113753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:06:48.916
  I1019 13:06:48.921288 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downward-api-cc729283-f838-4441-aa0c-17b6d23f3562 container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 13:06:48.928
  I1019 13:06:48.944698 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-69" for this suite. @ 10/19/24 13:06:48.948
â€¢ [4.088 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 10/19/24 13:06:48.957
  I1019 13:06:48.957109 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename security-context-test @ 10/19/24 13:06:48.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:48.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:48.98
  E1019 13:06:49.114367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:50.114553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:51.002793 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2104" for this suite. @ 10/19/24 13:06:51.007
â€¢ [2.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/19/24 13:06:51.015
  I1019 13:06:51.015708 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-pred @ 10/19/24 13:06:51.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:51.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:51.046
  I1019 13:06:51.047945 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1019 13:06:51.056361 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1019 13:06:51.059838 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-96 before test
  I1019 13:06:51.068346 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-97rgd from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.068361 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:06:51.068368 20 predicates.go:957] calico-node-6m9fv from kube-system started at 2024-10-19 12:00:10 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.068373 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:06:51.068379 20 predicates.go:957] coredns-5b4857d7c8-cz9tq from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.068383 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1019 13:06:51.068389 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7stxf from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.068394 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1019 13:06:51.068400 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-ts7gc from kube-system started at 2024-10-19 11:55:31 +0000 UTC (2 container statuses recorded)
  I1019 13:06:51.068405 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1019 13:06:51.068415 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1019 13:06:51.068421 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-xllmt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.068427 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1019 13:06:51.068432 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-zcjrt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.068437 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1019 13:06:51.068442 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-fzrn7 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:06:51.068446 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:06:51.068450 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:06:51.068455 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-204 before test
  I1019 13:06:51.073630 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-4f8gv from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:35 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.073649 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:06:51.073656 20 predicates.go:957] calico-node-f8b2r from kube-system started at 2024-10-19 12:00:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.073661 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:06:51.073667 20 predicates.go:957] sonobuoy-e2e-job-2d9fcc7a8e884827 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:06:51.073672 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1019 13:06:51.073677 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:06:51.073683 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-ffz26 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:06:51.073688 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:06:51.073693 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:06:51.073699 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-84-96 before test
  I1019 13:06:51.079252 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-zj6s2 from ingress-nginx-kubernetes-worker started at 2024-10-19 12:32:31 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.079266 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:06:51.079273 20 predicates.go:957] calico-node-d9qdc from kube-system started at 2024-10-19 11:59:30 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.079279 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:06:51.079285 20 predicates.go:957] busybox-user-65534-05ecb3b3-ceec-4dc5-b528-a5bd3e845650 from security-context-test-2104 started at 2024-10-19 13:06:48 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.079297 20 predicates.go:959] 	Container busybox-user-65534-05ecb3b3-ceec-4dc5-b528-a5bd3e845650 ready: false, restart count 0
  I1019 13:06:51.079305 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-19 12:05:01 +0000 UTC (1 container statuses recorded)
  I1019 13:06:51.079310 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1019 13:06:51.079316 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-d46rj from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:06:51.079326 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:06:51.079331 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-22-96 @ 10/19/24 13:06:51.096
  STEP: verifying the node has the label node ip-172-31-3-204 @ 10/19/24 13:06:51.11
  E1019 13:06:51.114712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the node has the label node ip-172-31-84-96 @ 10/19/24 13:06:51.125
  I1019 13:06:51.142729 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-4f8gv requesting resource cpu=0m on Node ip-172-31-3-204
  I1019 13:06:51.142756 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-97rgd requesting resource cpu=0m on Node ip-172-31-22-96
  I1019 13:06:51.142763 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-zj6s2 requesting resource cpu=0m on Node ip-172-31-84-96
  I1019 13:06:51.142774 20 predicates.go:372] Pod calico-node-6m9fv requesting resource cpu=250m on Node ip-172-31-22-96
  I1019 13:06:51.142780 20 predicates.go:372] Pod calico-node-d9qdc requesting resource cpu=250m on Node ip-172-31-84-96
  I1019 13:06:51.142786 20 predicates.go:372] Pod calico-node-f8b2r requesting resource cpu=250m on Node ip-172-31-3-204
  I1019 13:06:51.142794 20 predicates.go:372] Pod coredns-5b4857d7c8-cz9tq requesting resource cpu=100m on Node ip-172-31-22-96
  I1019 13:06:51.142799 20 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-7stxf requesting resource cpu=0m on Node ip-172-31-22-96
  I1019 13:06:51.142805 20 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-ts7gc requesting resource cpu=5m on Node ip-172-31-22-96
  I1019 13:06:51.142811 20 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-xllmt requesting resource cpu=0m on Node ip-172-31-22-96
  I1019 13:06:51.142816 20 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-zcjrt requesting resource cpu=0m on Node ip-172-31-22-96
  I1019 13:06:51.142822 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-84-96
  I1019 13:06:51.142828 20 predicates.go:372] Pod sonobuoy-e2e-job-2d9fcc7a8e884827 requesting resource cpu=0m on Node ip-172-31-3-204
  I1019 13:06:51.142834 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-d46rj requesting resource cpu=0m on Node ip-172-31-84-96
  I1019 13:06:51.142839 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-ffz26 requesting resource cpu=0m on Node ip-172-31-3-204
  I1019 13:06:51.142845 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-fzrn7 requesting resource cpu=0m on Node ip-172-31-22-96
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/19/24 13:06:51.142
  I1019 13:06:51.142873 20 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-22-96
  I1019 13:06:51.153974 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-3-204
  I1019 13:06:51.162365 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-84-96
  E1019 13:06:52.115308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:53.116334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/19/24 13:06:53.189
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6.17ffdc7cf45c75a5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5069/filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6 to ip-172-31-3-204] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6.17ffdc7d11874122], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6.17ffdc7d1292a310], Reason = [Created], Message = [Created container filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6.17ffdc7d15325102], Reason = [Started], Message = [Started container filler-pod-462d2893-09d9-4e8c-8db7-59cf197f84f6] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b98f943-df81-462a-a228-baba22a94335.17ffdc7cf3d63699], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5069/filler-pod-8b98f943-df81-462a-a228-baba22a94335 to ip-172-31-22-96] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b98f943-df81-462a-a228-baba22a94335.17ffdc7d227ba315], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b98f943-df81-462a-a228-baba22a94335.17ffdc7d2387d0bd], Reason = [Created], Message = [Created container filler-pod-8b98f943-df81-462a-a228-baba22a94335] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b98f943-df81-462a-a228-baba22a94335.17ffdc7d25b71ace], Reason = [Started], Message = [Started container filler-pod-8b98f943-df81-462a-a228-baba22a94335] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727.17ffdc7cf4c851ab], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5069/filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727 to ip-172-31-84-96] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727.17ffdc7d1195709d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727.17ffdc7d128ee37a], Reason = [Created], Message = [Created container filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727.17ffdc7d14fde54e], Reason = [Started], Message = [Started container filler-pod-8e921c02-bf8a-43f5-a66a-2a3c83957727] @ 10/19/24 13:06:53.195
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ffdc7d6da86d86], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 10/19/24 13:06:53.21
  E1019 13:06:54.116501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-84-96 @ 10/19/24 13:06:54.207
  STEP: verifying the node doesn't have the label node @ 10/19/24 13:06:54.219
  STEP: removing the label node off the node ip-172-31-22-96 @ 10/19/24 13:06:54.223
  STEP: verifying the node doesn't have the label node @ 10/19/24 13:06:54.239
  STEP: removing the label node off the node ip-172-31-3-204 @ 10/19/24 13:06:54.242
  STEP: verifying the node doesn't have the label node @ 10/19/24 13:06:54.256
  I1019 13:06:54.265468 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5069" for this suite. @ 10/19/24 13:06:54.271
â€¢ [3.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 10/19/24 13:06:54.28
  I1019 13:06:54.280460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:06:54.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:54.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:54.304
  STEP: creating Agnhost RC @ 10/19/24 13:06:54.308
  I1019 13:06:54.308618 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5149 create -f -'
  I1019 13:06:54.393970 20 builder.go:146] stderr: ""
  I1019 13:06:54.394003 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/19/24 13:06:54.394
  E1019 13:06:55.116624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:55.401228 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 13:06:55.401312 20 framework.go:733] Found 0 / 1
  E1019 13:06:56.116717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:06:56.400511 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 13:06:56.400543 20 framework.go:733] Found 1 / 1
  I1019 13:06:56.400556 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/19/24 13:06:56.4
  I1019 13:06:56.405033 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 13:06:56.405053 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1019 13:06:56.405098 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-5149 patch pod agnhost-primary-ppxb2 -p {"metadata":{"annotations":{"x":"y"}}}'
  I1019 13:06:56.455809 20 builder.go:146] stderr: ""
  I1019 13:06:56.455838 20 builder.go:147] stdout: "pod/agnhost-primary-ppxb2 patched\n"
  STEP: checking annotations @ 10/19/24 13:06:56.455
  I1019 13:06:56.460257 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1019 13:06:56.460278 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1019 13:06:56.460375 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5149" for this suite. @ 10/19/24 13:06:56.464
â€¢ [2.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/19/24 13:06:56.472
  I1019 13:06:56.472615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-runtime @ 10/19/24 13:06:56.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:56.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:56.492
  STEP: create the container @ 10/19/24 13:06:56.494
  W1019 13:06:56.501453      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/19/24 13:06:56.501
  E1019 13:06:57.116820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:06:58.117361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/19/24 13:06:58.52
  STEP: the container should be terminated @ 10/19/24 13:06:58.524
  STEP: the termination message should be set @ 10/19/24 13:06:58.524
  I1019 13:06:58.524901 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/19/24 13:06:58.524
  I1019 13:06:58.542377 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1768" for this suite. @ 10/19/24 13:06:58.547
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 10/19/24 13:06:58.556
  I1019 13:06:58.556045 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename limitrange @ 10/19/24 13:06:58.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:06:58.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:06:58.581
  STEP: Creating a LimitRange @ 10/19/24 13:06:58.583
  STEP: Setting up watch @ 10/19/24 13:06:58.583
  STEP: Submitting a LimitRange @ 10/19/24 13:06:58.688
  STEP: Verifying LimitRange creation was observed @ 10/19/24 13:06:58.696
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/19/24 13:06:58.696
  I1019 13:06:58.699079 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1019 13:06:58.699102 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/19/24 13:06:58.699
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/19/24 13:06:58.704
  I1019 13:06:58.709326 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1019 13:06:58.709349 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/19/24 13:06:58.709
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/19/24 13:06:58.717
  I1019 13:06:58.720983 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1019 13:06:58.721008 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/19/24 13:06:58.721
  STEP: Failing to create a Pod with more than max resources @ 10/19/24 13:06:58.722
  STEP: Updating a LimitRange @ 10/19/24 13:06:58.723
  STEP: Verifying LimitRange updating is effective @ 10/19/24 13:06:58.728
  E1019 13:06:59.118423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:00.118570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 10/19/24 13:07:00.733
  STEP: Failing to create a Pod with more than max resources @ 10/19/24 13:07:00.739
  STEP: Deleting a LimitRange @ 10/19/24 13:07:00.741
  STEP: Verifying the LimitRange was deleted @ 10/19/24 13:07:00.75
  E1019 13:07:01.119291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:02.119500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:03.120408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:04.121187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:05.121288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:05.756373 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/19/24 13:07:05.756
  I1019 13:07:05.767950 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6513" for this suite. @ 10/19/24 13:07:05.778
â€¢ [7.230 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/19/24 13:07:05.786
  I1019 13:07:05.786656 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 13:07:05.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:05.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:05.812
  E1019 13:07:06.122363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:07.122469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:08.123367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:09.123454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:10.123941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:11.124056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:07:11.878
  I1019 13:07:11.882974 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod client-envvars-038f1442-b734-4eeb-8d74-e9dc8858c652 container env3cont: <nil>
  STEP: delete the pod @ 10/19/24 13:07:11.891
  I1019 13:07:11.908972 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3424" for this suite. @ 10/19/24 13:07:11.913
â€¢ [6.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/19/24 13:07:11.925
  I1019 13:07:11.925595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 13:07:11.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:11.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:11.948
  STEP: Creating simple DaemonSet "daemon-set" @ 10/19/24 13:07:11.971
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/19/24 13:07:11.976
  I1019 13:07:11.982332 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:11.982364 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:11.988846 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:07:11.988866 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 13:07:12.124103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:12.983342 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:12.983373 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:12.987937 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1019 13:07:12.987957 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  E1019 13:07:13.125198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:13.981819 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:13.982030 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:13.986249 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:07:13.986284 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/19/24 13:07:13.99
  I1019 13:07:14.014151 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:14.014417 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:14.017838 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1019 13:07:14.018011 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  E1019 13:07:14.126048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:15.013825 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:15.013871 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:15.018057 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1019 13:07:15.018218 20 fixtures.go:130] Node ip-172-31-3-204 is running 0 daemon pod, expected 1
  E1019 13:07:15.127106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:16.014033 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:16.014081 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:16.018637 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:07:16.018657 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/19/24 13:07:16.022
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4496, will wait for the garbage collector to delete the pods @ 10/19/24 13:07:16.022
  I1019 13:07:16.085064 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.654211ms
  E1019 13:07:16.127442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:16.185642 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.574758ms
  E1019 13:07:17.128050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:17.491349 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:07:17.491382 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1019 13:07:17.495399 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32927"},"items":null}

  I1019 13:07:17.499447 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32927"},"items":null}

  I1019 13:07:17.515600 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4496" for this suite. @ 10/19/24 13:07:17.52
â€¢ [5.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 10/19/24 13:07:17.528
  I1019 13:07:17.528456 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:07:17.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:17.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:17.553
  STEP: Creating configMap with name configmap-test-volume-71c7f56b-de62-4395-a463-b42a033f094a @ 10/19/24 13:07:17.555
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:07:17.56
  E1019 13:07:18.128898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:19.129286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:20.129422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:21.130364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:07:21.587
  I1019 13:07:21.592418 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-b5aaa7fa-8ceb-424e-a450-02965547698c container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:07:21.599
  I1019 13:07:21.616852 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2154" for this suite. @ 10/19/24 13:07:21.621
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 10/19/24 13:07:21.63
  I1019 13:07:21.630206 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 13:07:21.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:21.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:21.655
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/19/24 13:07:21.656
  I1019 13:07:21.666757 20 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9958  d18dc302-a9a5-4c2f-8a35-32a4f6b429d0 32967 0 2024-10-19 13:07:21 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-10-19 13:07:21 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9zngq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9zngq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1019 13:07:22.131038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:23.131445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/19/24 13:07:23.677
  I1019 13:07:23.677242 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9958 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 13:07:23.677260 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 13:07:23.677749 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 13:07:23.677809 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9958/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/19/24 13:07:23.721
  I1019 13:07:23.721088 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9958 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 13:07:23.721105 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 13:07:23.721554 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 13:07:23.721592 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9958/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1019 13:07:23.765125 20 dns.go:423] Deleting pod test-dns-nameservers...
  I1019 13:07:23.779401 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9958" for this suite. @ 10/19/24 13:07:23.783
â€¢ [2.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 10/19/24 13:07:23.791
  I1019 13:07:23.791529 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:07:23.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:23.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:23.811
  STEP: Setting up server cert @ 10/19/24 13:07:23.84
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:07:24.092
  STEP: Deploying the webhook pod @ 10/19/24 13:07:24.102
  STEP: Wait for the deployment to be ready @ 10/19/24 13:07:24.115
  I1019 13:07:24.126981 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:07:24.132027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:25.132190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:26.132756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:07:26.139
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:07:26.151
  E1019 13:07:27.133295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:27.151499 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/19/24 13:07:27.159
  I1019 13:07:27.206980 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8570" for this suite. @ 10/19/24 13:07:27.211
  STEP: Destroying namespace "webhook-markers-3057" for this suite. @ 10/19/24 13:07:27.221
â€¢ [3.438 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 10/19/24 13:07:27.229
  I1019 13:07:27.229399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 13:07:27.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:27.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:27.25
  STEP: Creating a pod to test substitution in volume subpath @ 10/19/24 13:07:27.252
  E1019 13:07:28.133395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:29.133486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:07:29.272
  I1019 13:07:29.276939 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod var-expansion-9ff79ea9-a0df-4718-876c-1d6b8f12bced container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 13:07:29.29
  I1019 13:07:29.308241 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-261" for this suite. @ 10/19/24 13:07:29.311
â€¢ [2.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 10/19/24 13:07:29.32
  I1019 13:07:29.320579 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename events @ 10/19/24 13:07:29.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:29.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:29.343
  STEP: creating a test event @ 10/19/24 13:07:29.345
  STEP: listing all events in all namespaces @ 10/19/24 13:07:29.35
  STEP: patching the test event @ 10/19/24 13:07:29.354
  STEP: fetching the test event @ 10/19/24 13:07:29.362
  STEP: updating the test event @ 10/19/24 13:07:29.366
  STEP: getting the test event @ 10/19/24 13:07:29.378
  STEP: deleting the test event @ 10/19/24 13:07:29.381
  STEP: listing all events in all namespaces @ 10/19/24 13:07:29.391
  I1019 13:07:29.396007 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9335" for this suite. @ 10/19/24 13:07:29.4
â€¢ [0.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 10/19/24 13:07:29.409
  I1019 13:07:29.409247 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 13:07:29.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:29.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:29.429
  STEP: Creating simple DaemonSet "daemon-set" @ 10/19/24 13:07:29.455
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/19/24 13:07:29.462
  I1019 13:07:29.465433 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:29.465467 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:29.469169 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:07:29.469190 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 13:07:30.133585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:30.467748 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:30.467791 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:30.472316 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1019 13:07:30.472336 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 13:07:31.134010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:31.468091 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:31.468155 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:07:31.472585 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:07:31.472602 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/19/24 13:07:31.478
  I1019 13:07:31.483061 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/19/24 13:07:31.483
  I1019 13:07:31.492946 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/19/24 13:07:31.492
  I1019 13:07:31.494146 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1019 13:07:31.494212 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.494347 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.494464 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.494533 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.494556 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-7592 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1019 13:07:31.494565 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/19/24 13:07:31.494
  STEP: watching for the daemon set status to be patched @ 10/19/24 13:07:31.501
  I1019 13:07:31.502321 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1019 13:07:31.502398 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.502463 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.502516 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.502712 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.502734 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-7592 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1019 13:07:31.502798 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1019 13:07:31.502814 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-7592 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1019 13:07:31.502824 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/19/24 13:07:31.505
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7592, will wait for the garbage collector to delete the pods @ 10/19/24 13:07:31.505
  I1019 13:07:31.569543 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.719099ms
  I1019 13:07:31.670500 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.950842ms
  E1019 13:07:32.134252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:07:32.976315 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:07:32.976351 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1019 13:07:32.980503 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33241"},"items":null}

  I1019 13:07:32.984898 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33241"},"items":null}

  I1019 13:07:32.999514 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7592" for this suite. @ 10/19/24 13:07:33.003
â€¢ [3.603 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 10/19/24 13:07:33.012
  I1019 13:07:33.012343 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption @ 10/19/24 13:07:33.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:07:33.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:07:33.036
  I1019 13:07:33.053817 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1019 13:07:33.134635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:34.134742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:35.134813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:36.135027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:37.135966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:38.136242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:39.136378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:40.136458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:41.136884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:42.136995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:43.137882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:44.138272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:45.139289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:46.139493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:47.140430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:48.140610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:49.141066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:50.141196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:51.141970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:52.142100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:53.143115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:54.143740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:55.143795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:56.144336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:57.145056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:58.145263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:07:59.145828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:00.147310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:01.148319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:02.148660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:03.149492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:04.149735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:05.150439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:06.150574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:07.150931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:08.151074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:09.151175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:10.151377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:11.151965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:12.152076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:13.152419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:14.152528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:15.152727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:16.152826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:17.152897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:18.153087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:19.153935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:20.154083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:21.154661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:22.154776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:23.154843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:24.155319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:25.155699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:26.155882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:27.156254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:28.156403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:29.156879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:30.157408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:31.158149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:32.158349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:08:33.058588 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/19/24 13:08:33.063
  I1019 13:08:33.063052 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/19/24 13:08:33.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:08:33.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:08:33.092
  STEP: Finding an available node @ 10/19/24 13:08:33.094
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/19/24 13:08:33.094
  E1019 13:08:33.159282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:34.159457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/19/24 13:08:35.118
  I1019 13:08:35.131715 20 preemption.go:585] found a healthy node: ip-172-31-84-96
  E1019 13:08:35.159430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:36.160368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:37.165969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:38.166723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:39.166856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:40.167599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:41.167801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:08:41.203061 20 preemption.go:708] pods created so far: [1 1 1]
  I1019 13:08:41.203082 20 preemption.go:709] length of pods created so far: 3
  E1019 13:08:42.168728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:43.168864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:08:43.216492 20 preemption.go:726] pods created so far: [2 2 1]
  E1019 13:08:44.169578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:45.169732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:46.169851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:47.169956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:48.170108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:49.170482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:50.170720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:08:50.306592 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1401" for this suite. @ 10/19/24 13:08:50.31
  I1019 13:08:50.319772 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3817" for this suite. @ 10/19/24 13:08:50.324
â€¢ [77.319 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 10/19/24 13:08:50.331
  I1019 13:08:50.331260 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/19/24 13:08:50.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:08:50.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:08:50.354
  STEP: create the container to handle the HTTPGet hook request. @ 10/19/24 13:08:50.359
  E1019 13:08:51.170842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:52.171106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/19/24 13:08:52.384
  E1019 13:08:53.171273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:54.171585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/19/24 13:08:54.404
  STEP: delete the pod with lifecycle hook @ 10/19/24 13:08:54.425
  E1019 13:08:55.171770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:56.171873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:08:56.443822 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7224" for this suite. @ 10/19/24 13:08:56.448
â€¢ [6.124 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 10/19/24 13:08:56.455
  I1019 13:08:56.455346 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:08:56.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:08:56.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:08:56.476
  STEP: creating service multiprotocol-test in namespace services-1213 @ 10/19/24 13:08:56.478
  STEP: creating pod pod1 in namespace services-1213 @ 10/19/24 13:08:56.489
  STEP: Creating pod pod1 in namespace services-1213 @ 10/19/24 13:08:56.489
  E1019 13:08:57.171984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:08:58.172044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1213 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 10/19/24 13:08:58.515
  I1019 13:08:58.529303 20 service.go:4392] successfully validated that service multiprotocol-test in namespace services-1213 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 10/19/24 13:08:58.529
  I1019 13:08:58.529363 20 resource.go:361] Creating new exec pod
  E1019 13:08:59.172991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:00.173091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:00.544146 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
  I1019 13:09:00.630847 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [tcp/http] succeeded!\n"
  I1019 13:09:00.630890 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 13:09:00.631024 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.57 80'
  E1019 13:09:01.173886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:02.174069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:03.174170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:04.174439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:04.710667 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [udp/*] succeeded!\n"
  I1019 13:09:04.710706 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 10/19/24 13:09:04.71
  I1019 13:09:04.721787 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
  I1019 13:09:04.807012 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [tcp/http] succeeded!\n"
  I1019 13:09:04.807054 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 13:09:04.807158 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.57 80'
  E1019 13:09:05.175360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:06.175540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:07.176380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:08.176493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:08.889855 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [udp/*] succeeded!\n"
  I1019 13:09:08.889915 20 builder.go:147] stdout: ""
  I1019 13:09:08.889979 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.57 80'
  E1019 13:09:09.177380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:10.177572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:11.177666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:12.177796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:12.970760 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [udp/*] succeeded!\n"
  I1019 13:09:12.970817 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 10/19/24 13:09:12.97
  I1019 13:09:12.980974 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.57 80'
  E1019 13:09:13.177936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:14.178034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:15.178868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:16.179058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:17.077317 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [udp/*] succeeded!\n"
  I1019 13:09:17.077355 20 builder.go:147] stdout: "pod1"
  I1019 13:09:17.077448 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
  E1019 13:09:17.179228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:18.179497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:19.157159 20 builder.go:135] rc: 1
  I1019 13:09:19.157215 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.57 80
  nc: connect to 10.152.183.57 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1019 13:09:19.157287 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
  E1019 13:09:19.179648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:20.180507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:21.180901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:21.240923 20 builder.go:135] rc: 1
  I1019 13:09:21.240989 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.57 80
  nc: connect to 10.152.183.57 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1019 13:09:21.241059 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
  E1019 13:09:22.181360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:23.181837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:23.320882 20 builder.go:135] rc: 1
  I1019 13:09:23.320960 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-1213 exec execpod4lv7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.57 80
  nc: connect to 10.152.183.57 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1019 13:09:23.321188 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1213" for this suite. @ 10/19/24 13:09:23.325
â€¢ [26.880 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 10/19/24 13:09:23.335
  I1019 13:09:23.335803 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:09:23.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:23.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:23.36
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 13:09:23.362
  E1019 13:09:24.182006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:25.182541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:26.183376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:27.184367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:09:27.391
  I1019 13:09:27.395237 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod downwardapi-volume-e7a23b71-0fff-4d2e-9b07-e679339ede95 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 13:09:27.405
  I1019 13:09:27.427208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1438" for this suite. @ 10/19/24 13:09:27.432
â€¢ [4.105 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 10/19/24 13:09:27.44
  I1019 13:09:27.440643 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:09:27.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:27.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:27.46
  STEP: Creating configMap with name projected-configmap-test-volume-da3eb4a3-ab76-468d-84f0-ef0c0feeff81 @ 10/19/24 13:09:27.461
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:09:27.468
  E1019 13:09:28.185332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:29.185691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:30.185840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:31.185947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:09:31.494
  I1019 13:09:31.498743 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-projected-configmaps-b53f2ae8-a832-456f-b3f8-900a9f916f71 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:09:31.506
  I1019 13:09:31.523355 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3102" for this suite. @ 10/19/24 13:09:31.527
â€¢ [4.097 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 10/19/24 13:09:31.537
  I1019 13:09:31.537672 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename namespaces @ 10/19/24 13:09:31.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:31.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:31.558
  STEP: Creating a test namespace @ 10/19/24 13:09:31.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:31.582
  STEP: Creating a pod in the namespace @ 10/19/24 13:09:31.583
  STEP: Waiting for the pod to have running status @ 10/19/24 13:09:31.592
  E1019 13:09:32.186080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:33.186870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/19/24 13:09:33.604
  STEP: Waiting for the namespace to be removed. @ 10/19/24 13:09:33.611
  E1019 13:09:34.187295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:35.188169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:36.188306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:37.188376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:38.188527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:39.189291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:40.190267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:41.191044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:42.191810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:43.192290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:44.192396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/19/24 13:09:44.617
  STEP: Verifying there are no pods in the namespace @ 10/19/24 13:09:44.638
  I1019 13:09:44.645263 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2247" for this suite. @ 10/19/24 13:09:44.65
  STEP: Destroying namespace "nsdeletetest-6160" for this suite. @ 10/19/24 13:09:44.658
  I1019 13:09:44.661730 20 framework.go:370] Namespace nsdeletetest-6160 was already deleted
  STEP: Destroying namespace "nsdeletetest-592" for this suite. @ 10/19/24 13:09:44.661
â€¢ [13.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 10/19/24 13:09:44.669
  I1019 13:09:44.669343 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 13:09:44.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:44.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:44.691
  I1019 13:09:44.737257 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  W1019 13:09:44.737868      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0008bc740 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1019 13:09:45.192662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:46.192944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:47.193272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1019 13:09:47.274259      20 warnings.go:70] unknown field "alpha"
  W1019 13:09:47.274278      20 warnings.go:70] unknown field "beta"
  W1019 13:09:47.274282      20 warnings.go:70] unknown field "delta"
  W1019 13:09:47.274285      20 warnings.go:70] unknown field "epsilon"
  W1019 13:09:47.274287      20 warnings.go:70] unknown field "gamma"
  I1019 13:09:47.824047 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1104" for this suite. @ 10/19/24 13:09:47.828
â€¢ [3.168 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 10/19/24 13:09:47.837
  I1019 13:09:47.837896 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:09:47.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:47.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:47.859
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 13:09:47.861
  E1019 13:09:48.193503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:49.194358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:50.195349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:51.196360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:09:51.887
  I1019 13:09:51.890559 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-0277d861-7051-4e90-b601-4c0cef468493 container client-container: <nil>
  STEP: delete the pod @ 10/19/24 13:09:51.904
  I1019 13:09:51.927448 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5560" for this suite. @ 10/19/24 13:09:51.932
â€¢ [4.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 10/19/24 13:09:51.941
  I1019 13:09:51.941440 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename endpointslice @ 10/19/24 13:09:51.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:51.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:51.966
  I1019 13:09:51.978888 20 endpointslice.go:1045] Endpoints addresses: [172.31.4.205 172.31.83.159] , ports: [6443]
  I1019 13:09:51.978931 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.4.205 172.31.83.159] , ports: [6443]
  I1019 13:09:51.979110 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3709" for this suite. @ 10/19/24 13:09:51.982
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 10/19/24 13:09:51.992
  I1019 13:09:51.992524 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:09:51.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:52.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:52.013
  STEP: Setting up server cert @ 10/19/24 13:09:52.036
  E1019 13:09:52.197173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:09:52.241
  STEP: Deploying the webhook pod @ 10/19/24 13:09:52.251
  STEP: Wait for the deployment to be ready @ 10/19/24 13:09:52.264
  I1019 13:09:52.274151 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:09:53.197350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:54.197516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:09:54.287
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:09:54.299
  E1019 13:09:55.198292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:09:55.300560 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/19/24 13:09:55.31
  STEP: verifying the validating webhook match conditions @ 10/19/24 13:09:55.319
  STEP: updating the validating webhook match conditions @ 10/19/24 13:09:55.323
  STEP: verifying the validating webhook match conditions @ 10/19/24 13:09:55.331
  I1019 13:09:55.383693 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8771" for this suite. @ 10/19/24 13:09:55.387
  STEP: Destroying namespace "webhook-markers-563" for this suite. @ 10/19/24 13:09:55.397
â€¢ [3.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 10/19/24 13:09:55.412
  I1019 13:09:55.412641 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename chunking @ 10/19/24 13:09:55.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:09:55.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:09:55.435
  STEP: creating a large number of resources @ 10/19/24 13:09:55.438
  E1019 13:09:56.198973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:57.200034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:58.200970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:09:59.201200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:00.201482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:01.201734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:02.202050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:03.202106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:04.202803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:05.203479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:06.204474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:07.205106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:08.205950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:09.206357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:10.206396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:11.207430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:12.207506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 10/19/24 13:10:13.121
  I1019 13:10:13.169582 20 chunking.go:163] Retrieved 40/40 results with rv 34608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 10/19/24 13:10:13.169
  E1019 13:10:13.207844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:14.207971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:15.208181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:16.208378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:17.208622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:18.208935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:19.209944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:20.210122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:21.210290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:22.210462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:23.211021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:24.211289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:25.211403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:26.211617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:27.211802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:28.212081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:29.212281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:30.212377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:31.212595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:32.212687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:10:33.175811 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:10:33.213090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:34.213374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:35.213470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:36.213815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:37.213912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:38.214238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:39.214270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:40.215345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:41.215415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:42.215502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:43.215720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:44.215848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:45.216350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:46.216601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:47.216799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:48.217150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:49.217337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:50.217558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:51.217756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:52.217936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:10:53.176254 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:10:53.218461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:54.218594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:55.218923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:56.219125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:57.219339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:58.219602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:10:59.219767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:00.219971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:01.220333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:02.221331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:03.221447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:04.221624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:05.221708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:06.222580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:07.222728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:08.222972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:09.223177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:10.223522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:11.223615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:12.223887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:11:13.175323 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:11:13.224468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:14.224585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:15.224772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:16.225636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:17.226328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:18.226426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:19.226618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:20.226745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:21.226885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:22.226957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:23.227251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:24.227397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:25.227505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:26.227701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:27.227893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:28.228288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:29.228418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:30.228680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:31.228771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:32.229325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:11:33.175829 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:11:33.230094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:34.230242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:35.230434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:36.230643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:37.230843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:38.231065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:39.231268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:40.231465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:41.232322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:42.233018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:43.233555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:44.234320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:45.234615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:46.235322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:47.236324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:48.236534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:49.236951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:50.237321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:51.237669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:52.237795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:11:53.175258 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:11:53.238747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:54.238928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:55.239209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:56.239328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:57.239439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:58.239651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:11:59.239772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:00.239964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:01.240351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:02.240518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:03.240966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:04.241193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:05.241659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:06.242358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:07.243397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:08.243910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:09.244329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:10.245320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:11.245498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:12.246377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:12:13.175695 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:12:13.246892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:14.247096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:15.247277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:16.247464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:17.247646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:18.247911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:19.248036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:20.248258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:21.248396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:22.249422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:23.249856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:24.250156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:25.250288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:26.250479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:27.250572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:28.251056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:29.251280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:30.251467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:31.251686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:32.251827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:12:33.177878 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:12:33.252196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:34.252308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:35.252497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:36.252685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:37.252774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:38.253070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:39.253574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:40.253677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:41.254330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:42.255325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:43.255614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:44.255796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:45.255975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:46.256214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:47.256422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:48.257481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:49.257590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:50.257776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:51.257958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:52.258777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:12:53.176424 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:12:53.259712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:54.260337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:55.260553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:56.260783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:57.261333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:58.261674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:12:59.261915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:00.262104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:01.262259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:02.262386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:03.262471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:04.262885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:05.263880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:06.263978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:07.264337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:08.264527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:09.264625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:10.264839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:11.265324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:12.266316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:13:13.175744 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:13:13.266981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:14.267118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:15.267353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:16.267456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:17.267648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:18.268002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:19.268688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:20.268860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:21.268982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:22.269201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:23.269535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:24.269743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:25.269856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:26.270051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:27.270362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:28.270645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:29.270863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:30.271070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:31.271297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:32.272355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:13:33.176027 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:13:33.273287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:34.273377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:35.274308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:36.274439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:37.274520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:38.275050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:39.275244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:40.275340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:41.275549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:42.276337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:43.276787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:44.277040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:45.277252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:46.277448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:47.277657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:48.278570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:49.278772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:50.279007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:51.279271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:52.279424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:13:53.176106 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:13:53.280444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:54.280645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:55.280752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:56.280932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:57.281316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:58.282020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:13:59.282266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:00.282438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:01.282513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:02.282620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:03.283024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:04.283678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:05.283989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:06.283992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:07.284305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:08.285225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:09.285462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:10.285660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:11.285900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:12.286087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:14:13.176395 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:14:13.286701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:14.287342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:15.287442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:16.287631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:17.288433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:18.288978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:19.289098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:20.289308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:21.289520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:22.289786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:23.290246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:24.290613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:25.290866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:26.291024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:27.291246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:28.292316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:29.293345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:30.293466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:31.294328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:32.295341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:14:33.175083 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:14:33.295415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:34.296331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:35.296582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:36.296678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:37.296887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:38.296957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:39.297320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:40.297564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:41.297756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:42.298014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:43.298700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:44.298919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:45.299126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:46.299357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:47.299542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:48.300021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:49.300237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:50.300303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:51.300411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:52.300639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:14:53.176248 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:14:53.301523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:54.302367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:55.302479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:56.302534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:57.302720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:58.303025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:14:59.303150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:00.303303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:01.304329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:02.305317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:03.305415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:04.305588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:05.305792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:06.306039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:07.306382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:08.306594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:09.306799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:10.306996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:11.307216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:12.307407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:15:13.176118 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:15:13.308420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:14.308674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:15.308865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:16.309916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:17.310102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:18.310241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:19.310431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:20.310533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:21.310738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:22.310929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:23.311335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:24.311582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:25.311782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:26.311971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:27.312244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:28.313062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:29.313185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:30.313268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:31.314327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:32.314432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:15:33.176721 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:15:33.315012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:34.315345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:35.316326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:36.317340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:37.317525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:38.317947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:39.318170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:40.318307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:41.319327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:42.319513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:43.320200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:44.320416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:45.320606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:46.320865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:47.321072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:48.321409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:49.322348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:50.322439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:51.322617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:52.322719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:15:53.176420 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:15:53.322813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:54.323325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:55.323498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:56.324325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:57.325345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:58.325651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:15:59.325848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:00.325945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:01.326156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:02.326403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:03.326500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:04.326740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:05.327237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:06.327195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:07.327460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:08.327578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:09.327772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:10.327987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:11.328277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:12.328528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:16:13.175286 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:16:13.329518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:14.330331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:15.330583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:16.330779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:17.331330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:18.332102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:19.332314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:20.332507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:21.332641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:22.333424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:23.333466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:24.334326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:25.335337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:26.335542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:27.335797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:28.336571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:29.336821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:30.337068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:31.337267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:32.337400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:16:33.176225 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:16:33.337548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:34.337792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:35.338409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:36.338645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:37.338843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:38.338986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:39.339206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:40.339281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:41.339477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:42.340327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:43.340705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:44.341364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:45.341442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:46.341547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:47.341725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:48.341932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:49.342658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:50.342741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:51.342834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:52.343027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:16:53.174923 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:16:53.343281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:54.343317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:55.344365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:56.345319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:57.345501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:58.345813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:16:59.346397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:00.347341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:01.347520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:02.347739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:03.348055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:04.348180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:05.348278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:06.348336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:07.349350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:08.350060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:09.350184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:10.350275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:11.351332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:12.351923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:17:13.175658 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:17:13.352969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:14.353426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:15.353534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:16.354325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:17.355340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:18.355479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:19.355682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:20.355871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:21.356053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:22.356261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:23.356563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:24.356756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:25.356956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:26.357162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:27.357358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:28.357721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:29.357858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:30.358346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:31.359326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:32.359503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:17:33.175787 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:17:33.360204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:34.360439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:35.361366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:36.361489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:37.362399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:38.362519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:39.362611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:40.362700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:41.362873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:42.363816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:43.363894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:44.364320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:45.365322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:46.365502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:47.365674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:48.365787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:49.365988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:50.366435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:51.366512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:52.366706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:17:53.175651 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:17:53.367173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:54.367377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:55.367555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:56.367736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:57.367925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:58.368268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:17:59.368454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:00.369335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:01.370334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:02.370371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:03.370475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:04.371328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:05.371779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:06.372023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:07.372436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:08.373036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:09.373278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:10.373364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:11.374349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:12.374442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:18:13.176569 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:18:13.374864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:14.374968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:15.375424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:16.375615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:17.376331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:18.376514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:19.376696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:20.376882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:21.377895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:22.378078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:23.378336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:24.378531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:25.378786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:26.379018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:27.379233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:28.379495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:29.379593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:30.379792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:31.380398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:32.380520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:18:33.175566 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:18:33.381070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:34.381229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:35.381425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:36.381620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:37.381860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:38.382338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:39.382584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:40.383655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:41.383756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:42.384378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:43.385059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:44.385197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:45.385380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:46.385485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:47.385739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:48.386719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:49.386900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:50.387355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:51.387567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:52.387755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:18:53.176472 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:18:53.388830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:54.388933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:55.389017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:56.389230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:57.389427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:58.390062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:18:59.390210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:00.390311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:01.390447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:02.390641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:03.391635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:04.392714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:05.392776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:06.392949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:07.393032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:08.393145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:09.393288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:10.394354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:11.394550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:12.395340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:19:13.176328 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:19:13.395755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:14.395970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:15.396581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:16.396752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:17.397047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:18.397592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:19.397799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:20.397919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:21.398397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:22.398547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:23.399500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:24.400465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:25.400594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:26.400674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:27.400788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:28.400891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:29.401020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:30.401274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:31.402340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:32.402551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:19:33.175584 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1019 13:19:33.402896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:34.403445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:35.403535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:36.403610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:37.404394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:38.405076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:39.405264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:40.405456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:41.405678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:42.406360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:43.406527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:44.406769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:45.406966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:46.407211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:47.407291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:48.407399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:49.407646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:50.407842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:51.408076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:52.408276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:19:53.175445 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1019 13:19:53.175479 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 10/19/24 13:19:53.175
  STEP: retrieving all remaining pages @ 10/19/24 13:19:53.18
  I1019 13:19:53.185115 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1019 13:19:53.190008 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1019 13:19:53.193987 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1019 13:19:53.198583 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1019 13:19:53.202821 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1019 13:19:53.206177 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1019 13:19:53.210367 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1019 13:19:53.214757 20 chunking.go:221] Retrieved 40/40 results with rv 35716 and continue 
  I1019 13:19:53.214882 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-107" for this suite. @ 10/19/24 13:19:53.218
â€¢ [597.814 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 10/19/24 13:19:53.227
  I1019 13:19:53.227477 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 13:19:53.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:19:53.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:19:53.25
  STEP: Creating a test externalName service @ 10/19/24 13:19:53.252
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8954.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8954.svc.cluster.local; sleep 1; done
   @ 10/19/24 13:19:53.258
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8954.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8954.svc.cluster.local; sleep 1; done
   @ 10/19/24 13:19:53.258
  STEP: creating a pod to probe DNS @ 10/19/24 13:19:53.258
  STEP: submitting the pod to kubernetes @ 10/19/24 13:19:53.258
  E1019 13:19:53.409361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:54.409600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 13:19:55.282
  STEP: looking for the results for each expected name from probers @ 10/19/24 13:19:55.286
  I1019 13:19:55.296694 20 dns_common.go:552] DNS probes using dns-test-f47505b7-d4dc-4b40-849c-0696b940b2a2 succeeded

  STEP: changing the externalName to bar.example.com @ 10/19/24 13:19:55.296
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8954.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8954.svc.cluster.local; sleep 1; done
   @ 10/19/24 13:19:55.305
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8954.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8954.svc.cluster.local; sleep 1; done
   @ 10/19/24 13:19:55.305
  STEP: creating a second pod to probe DNS @ 10/19/24 13:19:55.305
  STEP: submitting the pod to kubernetes @ 10/19/24 13:19:55.305
  E1019 13:19:55.410504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:56.410683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 13:19:57.323
  STEP: looking for the results for each expected name from probers @ 10/19/24 13:19:57.328
  I1019 13:19:57.334206 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8954.svc.cluster.local from pod  dns-8954/dns-test-4bf39a07-17c6-4838-94a3-783872aa8a06 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1019 13:19:57.341758 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8954.svc.cluster.local from pod  dns-8954/dns-test-4bf39a07-17c6-4838-94a3-783872aa8a06 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1019 13:19:57.341795 20 dns_common.go:489] Lookups using dns-8954/dns-test-4bf39a07-17c6-4838-94a3-783872aa8a06 failed for: [wheezy_udp@dns-test-service-3.dns-8954.svc.cluster.local jessie_udp@dns-test-service-3.dns-8954.svc.cluster.local]

  I1019 13:19:57.360784 20 dns_common.go:495] Pod client logs for webserver: 
  I1019 13:19:57.367308 20 dns_common.go:495] Pod client logs for querier: 
  I1019 13:19:57.374293 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1019 13:19:57.411556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:58.411959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:19:59.412058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:00.412158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:01.412266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:02.338214 20 dns_common.go:552] DNS probes using dns-test-4bf39a07-17c6-4838-94a3-783872aa8a06 succeeded

  STEP: changing the service to type=ClusterIP @ 10/19/24 13:20:02.338
  W1019 13:20:02.353910      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8954.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8954.svc.cluster.local; sleep 1; done
   @ 10/19/24 13:20:02.353
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8954.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8954.svc.cluster.local; sleep 1; done
   @ 10/19/24 13:20:02.353
  STEP: creating a third pod to probe DNS @ 10/19/24 13:20:02.354
  STEP: submitting the pod to kubernetes @ 10/19/24 13:20:02.358
  E1019 13:20:02.413053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:03.413937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 13:20:04.378
  STEP: looking for the results for each expected name from probers @ 10/19/24 13:20:04.382
  I1019 13:20:04.393405 20 dns_common.go:552] DNS probes using dns-test-2b849627-66f1-46a5-ae1f-f0fb19165e0e succeeded

  STEP: deleting the pod @ 10/19/24 13:20:04.393
  STEP: deleting the pod @ 10/19/24 13:20:04.407
  E1019 13:20:04.414505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/19/24 13:20:04.422
  STEP: deleting the test externalName service @ 10/19/24 13:20:04.437
  I1019 13:20:04.453667 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8954" for this suite. @ 10/19/24 13:20:04.457
â€¢ [11.237 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 10/19/24 13:20:04.464
  I1019 13:20:04.464933 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:20:04.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:04.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:04.487
  STEP: Creating configMap with name configmap-test-volume-map-b9db4ebb-8c59-4248-9294-3a0379090d1e @ 10/19/24 13:20:04.489
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:20:04.494
  E1019 13:20:05.414801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:06.414903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:07.414966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:08.415039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:20:08.516
  I1019 13:20:08.521324 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-9d3fc972-84f3-469a-80be-3ca95cbac10d container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:20:08.539
  I1019 13:20:08.556675 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2696" for this suite. @ 10/19/24 13:20:08.561
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 10/19/24 13:20:08.569
  I1019 13:20:08.570009 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:20:08.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:08.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:08.593
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/19/24 13:20:08.594
  I1019 13:20:08.594837 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-306 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1019 13:20:08.646382 20 builder.go:146] stderr: ""
  I1019 13:20:08.646410 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/19/24 13:20:08.646
  I1019 13:20:08.646482 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-306 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1019 13:20:08.694742 20 builder.go:146] stderr: ""
  I1019 13:20:08.694772 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/19/24 13:20:08.694
  I1019 13:20:08.698639 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-306 delete pods e2e-test-httpd-pod'
  E1019 13:20:09.415177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:10.105370 20 builder.go:146] stderr: ""
  I1019 13:20:10.105407 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1019 13:20:10.105580 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-306" for this suite. @ 10/19/24 13:20:10.109
â€¢ [1.547 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 10/19/24 13:20:10.117
  I1019 13:20:10.117688 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 13:20:10.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:10.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:10.141
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/19/24 13:20:10.143
  I1019 13:20:10.144169 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:20:10.415355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:11.416272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:12.416623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:13.417260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:14.418048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/19/24 13:20:15.06
  I1019 13:20:15.060704 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:20:15.418313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:16.259598 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:20:16.418636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:17.419149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:18.419779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:19.420719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:20.420980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:21.137390 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4098" for this suite. @ 10/19/24 13:20:21.145
â€¢ [11.036 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 10/19/24 13:20:21.153
  I1019 13:20:21.153400 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename apf @ 10/19/24 13:20:21.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:21.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:21.17
  STEP: getting /apis @ 10/19/24 13:20:21.174
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/19/24 13:20:21.178
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/19/24 13:20:21.179
  STEP: creating @ 10/19/24 13:20:21.18
  STEP: getting @ 10/19/24 13:20:21.197
  STEP: listing @ 10/19/24 13:20:21.201
  STEP: watching @ 10/19/24 13:20:21.205
  I1019 13:20:21.205760 20 flowcontrol.go:620] starting watch
  STEP: patching @ 10/19/24 13:20:21.206
  STEP: updating @ 10/19/24 13:20:21.212
  I1019 13:20:21.220311 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 10/19/24 13:20:21.22
  STEP: patching /status @ 10/19/24 13:20:21.224
  STEP: updating /status @ 10/19/24 13:20:21.23
  STEP: deleting @ 10/19/24 13:20:21.239
  STEP: deleting a collection @ 10/19/24 13:20:21.255
  I1019 13:20:21.279596 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7786" for this suite. @ 10/19/24 13:20:21.284
â€¢ [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 10/19/24 13:20:21.292
  I1019 13:20:21.292970 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/19/24 13:20:21.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:21.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:21.313
  I1019 13:20:21.315396 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:20:21.421370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:22.421897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:23.422233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:24.423147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:25.423910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:26.424196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:27.425209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:27.551240 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9505" for this suite. @ 10/19/24 13:20:27.555
â€¢ [6.272 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 10/19/24 13:20:27.565
  I1019 13:20:27.565262 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:20:27.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:27.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:27.582
  STEP: Creating the pod @ 10/19/24 13:20:27.585
  E1019 13:20:28.426161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:29.426373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:30.138405 20 pod_client.go:173] Successfully updated pod "labelsupdate8191c5c2-37d8-4c66-80a1-807ebd8f8509"
  E1019 13:20:30.426692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:31.426914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:32.158076 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6319" for this suite. @ 10/19/24 13:20:32.163
â€¢ [4.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 10/19/24 13:20:32.171
  I1019 13:20:32.171266 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:20:32.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:32.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:32.189
  STEP: Creating configMap with name configmap-test-volume-map-047b91c5-ecad-4ff0-a3f1-a3802fe57fc9 @ 10/19/24 13:20:32.192
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:20:32.196
  E1019 13:20:32.427748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:33.428715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:34.428818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:35.428994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:20:36.223
  I1019 13:20:36.227751 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-configmaps-0374a1f8-df47-4fd4-8c58-d0d1a4b4ba33 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:20:36.236
  I1019 13:20:36.258084 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-117" for this suite. @ 10/19/24 13:20:36.262
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 10/19/24 13:20:36.271
  I1019 13:20:36.271569 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename csi-storageclass @ 10/19/24 13:20:36.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:36.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:36.289
  STEP: Creating a StorageClass @ 10/19/24 13:20:36.292
  STEP: Get StorageClass "e2e-p8jb6" @ 10/19/24 13:20:36.297
  STEP: Patching the StorageClass "e2e-p8jb6" @ 10/19/24 13:20:36.301
  STEP: Delete StorageClass "e2e-p8jb6" @ 10/19/24 13:20:36.307
  STEP: Confirm deletion of StorageClass "e2e-p8jb6" @ 10/19/24 13:20:36.315
  STEP: Create a replacement StorageClass @ 10/19/24 13:20:36.319
  STEP: Updating StorageClass "e2e-v2-7jgqh" @ 10/19/24 13:20:36.324
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-7jgqh=updated" @ 10/19/24 13:20:36.333
  STEP: Deleting StorageClass "e2e-v2-7jgqh" via DeleteCollection @ 10/19/24 13:20:36.337
  STEP: Confirm deletion of StorageClass "e2e-v2-7jgqh" @ 10/19/24 13:20:36.347
  I1019 13:20:36.350368 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3573" for this suite. @ 10/19/24 13:20:36.354
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 10/19/24 13:20:36.364
  I1019 13:20:36.364428 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:20:36.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:36.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:36.381
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 13:20:36.383
  E1019 13:20:36.429230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:37.429387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:20:38.403
  I1019 13:20:38.407186 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-e6a1fd8e-2fc1-4035-8d0e-c9e4d253c6aa container client-container: <nil>
  STEP: delete the pod @ 10/19/24 13:20:38.414
  E1019 13:20:38.430040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:20:38.436661 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9687" for this suite. @ 10/19/24 13:20:38.44
â€¢ [2.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 10/19/24 13:20:38.449
  I1019 13:20:38.449546 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:20:38.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:38.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:38.464
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 13:20:38.467
  E1019 13:20:39.430280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:40.430428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:20:40.489
  I1019 13:20:40.493877 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-13e18002-7a53-4422-bb46-8ee8b889ec8d container client-container: <nil>
  STEP: delete the pod @ 10/19/24 13:20:40.502
  I1019 13:20:40.520326 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5802" for this suite. @ 10/19/24 13:20:40.524
â€¢ [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/19/24 13:20:40.534
  I1019 13:20:40.535009 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename watch @ 10/19/24 13:20:40.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:40.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:40.556
  STEP: creating a new configmap @ 10/19/24 13:20:40.558
  STEP: modifying the configmap once @ 10/19/24 13:20:40.566
  STEP: modifying the configmap a second time @ 10/19/24 13:20:40.575
  STEP: deleting the configmap @ 10/19/24 13:20:40.584
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/19/24 13:20:40.593
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/19/24 13:20:40.594
  I1019 13:20:40.594826 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5420  f146f709-017e-4033-8d92-5d07fc0d3427 36644 0 2024-10-19 13:20:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-19 13:20:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 13:20:40.594975 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5420  f146f709-017e-4033-8d92-5d07fc0d3427 36645 0 2024-10-19 13:20:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-19 13:20:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1019 13:20:40.595041 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5420" for this suite. @ 10/19/24 13:20:40.599
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 10/19/24 13:20:40.608
  I1019 13:20:40.608033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/19/24 13:20:40.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:20:40.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:20:40.627
  I1019 13:20:40.629716 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1019 13:20:41.431267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:42.431631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:43.432254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:44.433263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:45.433962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:46.434700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:47.435520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:48.435627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:49.435998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:50.436768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:51.437316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:52.437514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:53.438201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:54.438397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:55.438814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:56.439011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:57.439999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:58.440995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:20:59.441027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:00.441228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:01.442260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:02.442365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:03.443141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:04.443261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:05.444334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:06.444597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:07.445320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:08.445596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:09.446250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:10.446359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:11.447343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:12.447540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:13.447566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:14.447785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:15.448020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:16.448341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:17.448475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:18.448595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:19.448692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:20.448936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:21.449205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:22.449291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:23.450333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:24.450571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:25.450935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:26.451035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:27.451756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:28.452178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:29.452292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:30.453348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:31.453436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:32.454348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:33.455248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:34.455433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:35.456505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:36.456605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:37.457644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:38.458073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:39.458110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:40.458325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:21:40.630892 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1019 13:21:40.636712 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 10/19/24 13:21:40.636
  I1019 13:21:40.858872 20 taints.go:463] Pod1 is running on ip-172-31-84-96. Tainting Node
  E1019 13:21:41.458440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:42.459287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:21:43.085395 20 taints.go:471] Pod2 is running on ip-172-31-84-96. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/19/24 13:21:43.085
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/19/24 13:21:43.095
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/19/24 13:21:43.099
  E1019 13:21:43.460220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:44.460440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:45.461351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:46.461482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:47.462367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:48.462998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:21:49.267512 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1019 13:21:49.463883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:50.463991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:51.464051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:52.464162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:53.464279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:54.464385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:55.464480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:56.464566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:57.464636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:58.465713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:21:59.465904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:00.466384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:01.466470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:02.467331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:03.467449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:04.467659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:05.467844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:06.468096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:07.468239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:08.468578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:22:09.302613 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/19/24 13:22:09.314
  I1019 13:22:09.317438 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3852" for this suite. @ 10/19/24 13:22:09.321
â€¢ [88.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 10/19/24 13:22:09.335
  I1019 13:22:09.335371 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption @ 10/19/24 13:22:09.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:22:09.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:22:09.357
  I1019 13:22:09.378759 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1019 13:22:09.468983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:10.469082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:11.469916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:12.470045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:13.470815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:14.470882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:15.471906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:16.471978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:17.472843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:18.473536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:19.473936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:20.474010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:21.474810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:22.475335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:23.475994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:24.476188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:25.476247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:26.476431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:27.476620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:28.477505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:29.478389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:30.478947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:31.479041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:32.479198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:33.479248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:34.479456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:35.480045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:36.480166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:37.481231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:38.481331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:39.481982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:40.482099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:41.482732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:42.482836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:43.483636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:44.483744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:45.484734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:46.485330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:47.486045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:48.486194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:49.486768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:50.486948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:51.487123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:52.487349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:53.488221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:54.488452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:55.489070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:56.489272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:57.489836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:58.489941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:22:59.490542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:00.490660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:01.491430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:02.491620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:03.492584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:04.492695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:05.493527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:06.494328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:07.495200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:08.496223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:23:09.384042 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 10/19/24 13:23:09.389
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 10/19/24 13:23:09.398
  I1019 13:23:09.410564 20 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 10/19/24 13:23:09.41
  E1019 13:23:09.496814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:10.496945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 10/19/24 13:23:11.421
  I1019 13:23:11.429523 20 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 10/19/24 13:23:11.429
  E1019 13:23:11.497425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:12.497660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 10/19/24 13:23:13.439
  I1019 13:23:13.443346 20 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E1019 13:23:13.498474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:23:13.959479 20 pod_client.go:173] Successfully updated pod "victim-pod"
  I1019 13:23:14.001240 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6249" for this suite. @ 10/19/24 13:23:14.006
â€¢ [64.678 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 10/19/24 13:23:14.013
  I1019 13:23:14.013960 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 13:23:14.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:14.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:14.033
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/19/24 13:23:14.036
  E1019 13:23:14.499409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:15.499697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:16.500360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:17.500486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:23:18.061
  I1019 13:23:18.065652 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-530d969f-f750-4af9-9c45-c99c3bbe1cc3 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:23:18.077
  I1019 13:23:18.100962 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4989" for this suite. @ 10/19/24 13:23:18.105
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 10/19/24 13:23:18.113
  I1019 13:23:18.113923 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 13:23:18.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:18.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:18.133
  I1019 13:23:18.135864 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:23:18.501092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:19.502007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:20.502810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1019 13:23:20.672154      20 warnings.go:70] unknown field "alpha"
  W1019 13:23:20.672174      20 warnings.go:70] unknown field "beta"
  W1019 13:23:20.672177      20 warnings.go:70] unknown field "delta"
  W1019 13:23:20.672180      20 warnings.go:70] unknown field "epsilon"
  W1019 13:23:20.672183      20 warnings.go:70] unknown field "gamma"
  I1019 13:23:21.226798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7320" for this suite. @ 10/19/24 13:23:21.231
â€¢ [3.125 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 10/19/24 13:23:21.238
  I1019 13:23:21.238866 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/19/24 13:23:21.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:21.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:21.259
  STEP: create the container to handle the HTTPGet hook request. @ 10/19/24 13:23:21.265
  E1019 13:23:21.503098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:22.503300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/19/24 13:23:23.291
  E1019 13:23:23.504217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:24.504301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/19/24 13:23:25.313
  E1019 13:23:25.504539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:26.505333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/19/24 13:23:27.331
  I1019 13:23:27.343948 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3880" for this suite. @ 10/19/24 13:23:27.348
â€¢ [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 10/19/24 13:23:27.355
  I1019 13:23:27.355710 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 13:23:27.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:27.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:27.374
  STEP: create the deployment @ 10/19/24 13:23:27.377
  W1019 13:23:27.385298      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/19/24 13:23:27.385
  E1019 13:23:27.506007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 10/19/24 13:23:27.891
  STEP: wait for all rs to be garbage collected @ 10/19/24 13:23:27.9
  STEP: expected 0 rs, got 1 rs @ 10/19/24 13:23:27.907
  STEP: expected 0 pods, got 2 pods @ 10/19/24 13:23:27.912
  STEP: Gathering metrics @ 10/19/24 13:23:28.413
  W1019 13:23:28.419889      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1019 13:23:28.419920 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1019 13:23:28.420063 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-402" for this suite. @ 10/19/24 13:23:28.424
â€¢ [1.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 10/19/24 13:23:28.433
  I1019 13:23:28.433325 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename runtimeclass @ 10/19/24 13:23:28.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:28.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:28.451
  I1019 13:23:28.460641 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-808" for this suite. @ 10/19/24 13:23:28.465
â€¢ [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/19/24 13:23:28.473
  I1019 13:23:28.473961 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 13:23:28.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:28.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:28.491
  STEP: creating the pod @ 10/19/24 13:23:28.494
  STEP: submitting the pod to kubernetes @ 10/19/24 13:23:28.494
  STEP: verifying QOS class is set on the pod @ 10/19/24 13:23:28.504
  E1019 13:23:28.506323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:23:28.511748 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4606" for this suite. @ 10/19/24 13:23:28.518
â€¢ [0.052 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 10/19/24 13:23:28.526
  I1019 13:23:28.526313 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:23:28.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:28.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:28.543
  STEP: Creating configMap with name projected-configmap-test-volume-map-00f2c9cc-c04a-4d8d-a460-a7927cf30447 @ 10/19/24 13:23:28.545
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:23:28.552
  E1019 13:23:29.507375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:30.507498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:23:30.575
  I1019 13:23:30.579893 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-configmaps-12255e6e-31d0-424d-8766-11dc2dbbc56e container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:23:30.586
  I1019 13:23:30.605306 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-980" for this suite. @ 10/19/24 13:23:30.609
â€¢ [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/19/24 13:23:30.618
  I1019 13:23:30.618360 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-runtime @ 10/19/24 13:23:30.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:30.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:30.636
  STEP: create the container @ 10/19/24 13:23:30.638
  W1019 13:23:30.646503      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/19/24 13:23:30.646
  E1019 13:23:31.507611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:32.507783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/19/24 13:23:32.661
  STEP: the container should be terminated @ 10/19/24 13:23:32.665
  STEP: the termination message should be set @ 10/19/24 13:23:32.665
  I1019 13:23:32.665424 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/19/24 13:23:32.665
  I1019 13:23:32.683233 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4881" for this suite. @ 10/19/24 13:23:32.687
â€¢ [2.078 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 10/19/24 13:23:32.696
  I1019 13:23:32.696310 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 13:23:32.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:32.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:32.719
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/19/24 13:23:32.721
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/19/24 13:23:32.721
  STEP: creating a pod to probe DNS @ 10/19/24 13:23:32.721
  STEP: submitting the pod to kubernetes @ 10/19/24 13:23:32.721
  E1019 13:23:33.508356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:34.508456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 13:23:34.744
  STEP: looking for the results for each expected name from probers @ 10/19/24 13:23:34.748
  I1019 13:23:34.766763 20 dns_common.go:527] DNS probes using dns-8546/dns-test-5de4f2e9-387d-4e93-be86-6c76f7cee4ff succeeded

  STEP: deleting the pod @ 10/19/24 13:23:34.766
  I1019 13:23:34.780908 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8546" for this suite. @ 10/19/24 13:23:34.784
â€¢ [2.097 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/19/24 13:23:34.793
  I1019 13:23:34.793246 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/19/24 13:23:34.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:34.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:34.812
  STEP: Creating two CSIDrivers @ 10/19/24 13:23:34.814
  STEP: Getting "inline-driver-9602afb3-e372-4a64-9cff-cafd4838f905" & "inline-driver-4dd7dec3-2e57-44af-aa06-41c10fd02aee" @ 10/19/24 13:23:34.833
  STEP: Patching the CSIDriver "inline-driver-4dd7dec3-2e57-44af-aa06-41c10fd02aee" @ 10/19/24 13:23:34.841
  STEP: Updating the CSIDriver "inline-driver-4dd7dec3-2e57-44af-aa06-41c10fd02aee" @ 10/19/24 13:23:34.848
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7840" @ 10/19/24 13:23:34.859
  STEP: Deleting CSIDriver "inline-driver-9602afb3-e372-4a64-9cff-cafd4838f905" @ 10/19/24 13:23:34.863
  STEP: Confirm deletion of CSIDriver "inline-driver-9602afb3-e372-4a64-9cff-cafd4838f905" @ 10/19/24 13:23:34.871
  STEP: Deleting CSIDriver "inline-driver-4dd7dec3-2e57-44af-aa06-41c10fd02aee" via DeleteCollection @ 10/19/24 13:23:34.875
  STEP: Confirm deletion of CSIDriver "inline-driver-4dd7dec3-2e57-44af-aa06-41c10fd02aee" @ 10/19/24 13:23:34.886
  I1019 13:23:34.890061 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7840" for this suite. @ 10/19/24 13:23:34.895
â€¢ [0.111 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 10/19/24 13:23:34.904
  I1019 13:23:34.904792 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:23:34.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:34.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:34.924
  STEP: Creating configMap with name projected-configmap-test-volume-a89def95-fb7f-4558-bc7e-04688b754cba @ 10/19/24 13:23:34.927
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:23:34.932
  E1019 13:23:35.509355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:36.509556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:37.509688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:38.510201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:23:38.959
  I1019 13:23:38.962832 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-projected-configmaps-95596377-ed6e-48cc-8037-5a0be1ada748 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:23:38.971
  I1019 13:23:38.993057 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6180" for this suite. @ 10/19/24 13:23:38.997
â€¢ [4.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 10/19/24 13:23:39.005
  I1019 13:23:39.005707 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename discovery @ 10/19/24 13:23:39.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:39.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:39.022
  STEP: Setting up server cert @ 10/19/24 13:23:39.026
  STEP: Requesting APIResourceList from "/api/v1" @ 10/19/24 13:23:39.215
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/19/24 13:23:39.217
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/19/24 13:23:39.218
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/19/24 13:23:39.22
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/19/24 13:23:39.221
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/19/24 13:23:39.223
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/19/24 13:23:39.224
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/19/24 13:23:39.226
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/19/24 13:23:39.227
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/19/24 13:23:39.228
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/19/24 13:23:39.228
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/19/24 13:23:39.229
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/19/24 13:23:39.23
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/19/24 13:23:39.231
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/19/24 13:23:39.232
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/19/24 13:23:39.233
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/19/24 13:23:39.234
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/19/24 13:23:39.235
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/19/24 13:23:39.236
  I1019 13:23:39.237318 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-915" for this suite. @ 10/19/24 13:23:39.242
â€¢ [0.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/19/24 13:23:39.25
  I1019 13:23:39.250681 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 13:23:39.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:39.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:39.27
  STEP: Creating secret with name secret-test-map-658a5e2e-cbb4-4d99-9c01-ca1aae05d101 @ 10/19/24 13:23:39.272
  STEP: Creating a pod to test consume secrets @ 10/19/24 13:23:39.279
  E1019 13:23:39.510760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:40.510998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:41.511399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:42.511605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:23:43.306
  I1019 13:23:43.310360 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-secrets-25e8c168-9f30-4572-9e02-888b5e3242a9 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 13:23:43.319
  I1019 13:23:43.339652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7801" for this suite. @ 10/19/24 13:23:43.343
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/19/24 13:23:43.351
  I1019 13:23:43.351974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/19/24 13:23:43.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:43.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:43.368
  STEP: creating a target pod @ 10/19/24 13:23:43.371
  E1019 13:23:43.512527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:44.512633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/19/24 13:23:45.398
  E1019 13:23:45.513104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:46.513296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/19/24 13:23:47.416
  I1019 13:23:47.416390 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1912 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1019 13:23:47.416406 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  I1019 13:23:47.416862 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1019 13:23:47.416907 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1912/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1019 13:23:47.458912 20 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/19/24 13:23:47.467
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/19/24 13:23:47.472
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/19/24 13:23:47.485
  I1019 13:23:47.489583 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1912" for this suite. @ 10/19/24 13:23:47.493
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 10/19/24 13:23:47.502
  I1019 13:23:47.502213 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename apf @ 10/19/24 13:23:47.502
  E1019 13:23:47.513282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:47.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:47.521
  STEP: getting /apis @ 10/19/24 13:23:47.523
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/19/24 13:23:47.527
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/19/24 13:23:47.528
  STEP: creating @ 10/19/24 13:23:47.531
  STEP: getting @ 10/19/24 13:23:47.549
  STEP: listing @ 10/19/24 13:23:47.553
  STEP: watching @ 10/19/24 13:23:47.56
  I1019 13:23:47.560050 20 flowcontrol.go:394] starting watch
  STEP: patching @ 10/19/24 13:23:47.561
  STEP: updating @ 10/19/24 13:23:47.566
  I1019 13:23:47.576953 20 flowcontrol.go:422] waiting for watch events with expected annotations
  I1019 13:23:47.576982 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 10/19/24 13:23:47.577
  STEP: patching /status @ 10/19/24 13:23:47.581
  STEP: updating /status @ 10/19/24 13:23:47.588
  STEP: deleting @ 10/19/24 13:23:47.601
  STEP: deleting a collection @ 10/19/24 13:23:47.617
  I1019 13:23:47.640740 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6783" for this suite. @ 10/19/24 13:23:47.645
â€¢ [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 10/19/24 13:23:47.653
  I1019 13:23:47.653438 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename field-validation @ 10/19/24 13:23:47.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:47.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:47.669
  I1019 13:23:47.672176 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:23:48.514175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:49.514336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1019 13:23:50.206809      20 warnings.go:70] unknown field "alpha"
  W1019 13:23:50.206832      20 warnings.go:70] unknown field "beta"
  W1019 13:23:50.206836      20 warnings.go:70] unknown field "delta"
  W1019 13:23:50.206839      20 warnings.go:70] unknown field "epsilon"
  W1019 13:23:50.206842      20 warnings.go:70] unknown field "gamma"
  E1019 13:23:50.514869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:23:50.755529 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7119" for this suite. @ 10/19/24 13:23:50.76
â€¢ [3.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 10/19/24 13:23:50.769
  I1019 13:23:50.769693 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:23:50.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:50.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:50.79
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 13:23:50.793
  E1019 13:23:51.515353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:52.515483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:23:52.812
  I1019 13:23:52.817167 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-29239336-8311-45e7-a4f0-87f133bffdfc container client-container: <nil>
  STEP: delete the pod @ 10/19/24 13:23:52.824
  I1019 13:23:52.841344 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4747" for this suite. @ 10/19/24 13:23:52.847
â€¢ [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 10/19/24 13:23:52.853
  I1019 13:23:52.853973 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replicaset @ 10/19/24 13:23:52.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:52.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:52.874
  I1019 13:23:52.877210 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-994c84b4-f14a-451e-9ace-79ee09a910aa
  I1019 13:23:52.888428 20 resource.go:87] Pod name my-hostname-basic-994c84b4-f14a-451e-9ace-79ee09a910aa: Found 0 pods out of 1
  E1019 13:23:53.516361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:54.516436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:55.516690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:56.516884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:57.516977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:23:57.893667 20 resource.go:87] Pod name my-hostname-basic-994c84b4-f14a-451e-9ace-79ee09a910aa: Found 1 pods out of 1
  I1019 13:23:57.893700 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-994c84b4-f14a-451e-9ace-79ee09a910aa" is running
  I1019 13:23:57.896973 20 replica_set.go:220] Pod "my-hostname-basic-994c84b4-f14a-451e-9ace-79ee09a910aa-7wcc9" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:23:53 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:23:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:23:53 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:23:53 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:23:52 +0000 UTC Reason: Message:}])
  I1019 13:23:57.896996 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/19/24 13:23:57.897
  I1019 13:23:57.909890 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2310" for this suite. @ 10/19/24 13:23:57.914
â€¢ [5.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 10/19/24 13:23:57.922
  I1019 13:23:57.922682 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:23:57.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:23:57.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:23:57.938
  STEP: Creating configMap with name projected-configmap-test-volume-bf356ff0-ac6a-4f66-8a55-b793ff2e6f58 @ 10/19/24 13:23:57.941
  STEP: Creating a pod to test consume configMaps @ 10/19/24 13:23:57.947
  E1019 13:23:58.517702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:23:59.517912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:00.518822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:01.518947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:24:01.979
  I1019 13:24:01.983256 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-configmaps-db15f4f7-7f1d-497a-9ede-4777aff32cf1 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 13:24:01.99
  I1019 13:24:02.010923 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2518" for this suite. @ 10/19/24 13:24:02.016
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/19/24 13:24:02.024
  I1019 13:24:02.024244 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-runtime @ 10/19/24 13:24:02.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:02.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:02.044
  STEP: create the container @ 10/19/24 13:24:02.046
  W1019 13:24:02.056067      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/19/24 13:24:02.056
  E1019 13:24:02.519057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:03.519202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:04.519365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/19/24 13:24:05.077
  STEP: the container should be terminated @ 10/19/24 13:24:05.082
  STEP: the termination message should be set @ 10/19/24 13:24:05.082
  I1019 13:24:05.082173 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/19/24 13:24:05.082
  I1019 13:24:05.103331 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5610" for this suite. @ 10/19/24 13:24:05.108
â€¢ [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 10/19/24 13:24:05.117
  I1019 13:24:05.117050 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename var-expansion @ 10/19/24 13:24:05.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:05.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:05.138
  STEP: Creating a pod to test substitution in container's args @ 10/19/24 13:24:05.14
  E1019 13:24:05.519420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:06.519547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:07.520567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:08.520704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:24:09.163
  I1019 13:24:09.167436 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod var-expansion-9e96fd93-4210-4e2c-8c1c-c6672676d43a container dapi-container: <nil>
  STEP: delete the pod @ 10/19/24 13:24:09.175
  I1019 13:24:09.191541 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4998" for this suite. @ 10/19/24 13:24:09.196
â€¢ [4.087 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/19/24 13:24:09.204
  I1019 13:24:09.204313 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubelet-test @ 10/19/24 13:24:09.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:09.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:09.222
  E1019 13:24:09.521668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:10.521774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:11.258245 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2608" for this suite. @ 10/19/24 13:24:11.262
â€¢ [2.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 10/19/24 13:24:11.27
  I1019 13:24:11.270831 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replicaset @ 10/19/24 13:24:11.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:11.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:11.288
  STEP: Create a Replicaset @ 10/19/24 13:24:11.294
  STEP: Verify that the required pods have come up. @ 10/19/24 13:24:11.3
  I1019 13:24:11.303279 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1019 13:24:11.522808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:12.523592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:13.523874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:14.523967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:15.524089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:16.307465 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/19/24 13:24:16.307
  STEP: Getting /status @ 10/19/24 13:24:16.307
  I1019 13:24:16.312555 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/19/24 13:24:16.312
  I1019 13:24:16.324077 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/19/24 13:24:16.324
  I1019 13:24:16.325590 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1019 13:24:16.325657 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.325702 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.325835 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.325868 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-7265 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1019 13:24:16.325880 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/19/24 13:24:16.325
  I1019 13:24:16.325902 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1019 13:24:16.333766 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/19/24 13:24:16.333
  I1019 13:24:16.335238 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1019 13:24:16.335306 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.335360 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.335493 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.335508 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-7265 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1019 13:24:16.335573 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1019 13:24:16.335591 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-7265 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1019 13:24:16.335604 20 replica_set.go:729] Replicaset test-rs has a patched status
  I1019 13:24:16.335683 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7265" for this suite. @ 10/19/24 13:24:16.339
â€¢ [5.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 10/19/24 13:24:16.347
  I1019 13:24:16.347534 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename volumeattachment @ 10/19/24 13:24:16.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:16.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:16.366
  STEP: Create VolumeAttachment "va-e2e-h9597" on node "ip-172-31-4-205" @ 10/19/24 13:24:16.373
  STEP: Get VolumeAttachment "va-e2e-h9597" on node "ip-172-31-4-205" @ 10/19/24 13:24:16.377
  STEP: Patch VolumeAttachment "va-e2e-h9597" on node "ip-172-31-4-205" @ 10/19/24 13:24:16.381
  STEP: List VolumeAttachments with "va-e2e-h9597=patched" label @ 10/19/24 13:24:16.387
  STEP: Delete VolumeAttachment "va-e2e-h9597" on node "ip-172-31-4-205" @ 10/19/24 13:24:16.39
  STEP: Confirm deletion of VolumeAttachment "va-e2e-h9597" on node "ip-172-31-4-205" @ 10/19/24 13:24:16.397
  STEP: Create VolumeAttachment "va-e2e-k9kht" on node "ip-172-31-83-159" @ 10/19/24 13:24:16.404
  STEP: Update the VolumeAttachment "va-e2e-k9kht" on node "ip-172-31-83-159" with label "va-e2e=updated" @ 10/19/24 13:24:16.409
  STEP: Create VolumeAttachment "va-e2e-nhf9q" on node "ip-172-31-4-205" @ 10/19/24 13:24:16.425
  STEP: Update the VolumeAttachment "va-e2e-nhf9q" on node "ip-172-31-4-205" with label "va-e2e=updated" @ 10/19/24 13:24:16.431
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/19/24 13:24:16.439
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/19/24 13:24:16.456
  I1019 13:24:16.460296 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1519" for this suite. @ 10/19/24 13:24:16.466
â€¢ [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 10/19/24 13:24:16.474
  I1019 13:24:16.474656 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 13:24:16.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:16.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:16.494
  STEP: create the rc1 @ 10/19/24 13:24:16.504
  STEP: create the rc2 @ 10/19/24 13:24:16.511
  E1019 13:24:16.524751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:17.524829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:18.525003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:19.526894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:20.527691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:21.529255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/19/24 13:24:22.521
  E1019 13:24:22.528293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/19/24 13:24:22.928
  STEP: wait for the rc to be deleted @ 10/19/24 13:24:22.936
  E1019 13:24:23.529236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:24.529442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:25.529679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:26.529781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:27.530311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:27.947498 20 garbage_collector.go:762] 72 pods remaining
  I1019 13:24:27.947579 20 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I1019 13:24:27.947603 20 garbage_collector.go:770] 
  E1019 13:24:28.531243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:29.531347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:30.531408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:31.531595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:32.531700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/19/24 13:24:32.949
  W1019 13:24:32.955592      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1019 13:24:32.955624 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1019 13:24:32.955674 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-464nt" in namespace "gc-8839"
  I1019 13:24:32.970829 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pmc6" in namespace "gc-8839"
  I1019 13:24:32.985650 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pqx7" in namespace "gc-8839"
  I1019 13:24:32.999787 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57gtw" in namespace "gc-8839"
  I1019 13:24:33.013472 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59vkx" in namespace "gc-8839"
  I1019 13:24:33.031002 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qfm5" in namespace "gc-8839"
  I1019 13:24:33.044183 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qx58" in namespace "gc-8839"
  I1019 13:24:33.057304 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62xhg" in namespace "gc-8839"
  I1019 13:24:33.072383 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68scg" in namespace "gc-8839"
  I1019 13:24:33.091508 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69pr6" in namespace "gc-8839"
  I1019 13:24:33.113867 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dsh8" in namespace "gc-8839"
  I1019 13:24:33.136108 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6k5g8" in namespace "gc-8839"
  I1019 13:24:33.153597 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mhpb" in namespace "gc-8839"
  I1019 13:24:33.167622 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75xb8" in namespace "gc-8839"
  I1019 13:24:33.182512 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75z5z" in namespace "gc-8839"
  I1019 13:24:33.199003 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-82lw9" in namespace "gc-8839"
  I1019 13:24:33.216257 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88886" in namespace "gc-8839"
  I1019 13:24:33.232407 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gnft" in namespace "gc-8839"
  I1019 13:24:33.247677 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l2pb" in namespace "gc-8839"
  I1019 13:24:33.264490 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8wshx" in namespace "gc-8839"
  I1019 13:24:33.285839 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9b7mx" in namespace "gc-8839"
  I1019 13:24:33.298044 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9c25k" in namespace "gc-8839"
  I1019 13:24:33.317883 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mlt5" in namespace "gc-8839"
  I1019 13:24:33.343535 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwwtw" in namespace "gc-8839"
  I1019 13:24:33.356178 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c4mlp" in namespace "gc-8839"
  I1019 13:24:33.375353 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c7p7f" in namespace "gc-8839"
  I1019 13:24:33.392396 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjblb" in namespace "gc-8839"
  I1019 13:24:33.408991 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cn7zm" in namespace "gc-8839"
  I1019 13:24:33.430528 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cz574" in namespace "gc-8839"
  I1019 13:24:33.451394 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8pb4" in namespace "gc-8839"
  I1019 13:24:33.468463 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dc5ck" in namespace "gc-8839"
  I1019 13:24:33.487644 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkr6v" in namespace "gc-8839"
  I1019 13:24:33.504085 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmmcl" in namespace "gc-8839"
  I1019 13:24:33.519116 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dpd9k" in namespace "gc-8839"
  E1019 13:24:33.531975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:33.533541 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f25st" in namespace "gc-8839"
  I1019 13:24:33.548854 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fdhjv" in namespace "gc-8839"
  I1019 13:24:33.565963 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq4ck" in namespace "gc-8839"
  I1019 13:24:33.580990 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ft4jz" in namespace "gc-8839"
  I1019 13:24:33.593976 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwdff" in namespace "gc-8839"
  I1019 13:24:33.606844 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fx7xc" in namespace "gc-8839"
  I1019 13:24:33.621458 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g5f4v" in namespace "gc-8839"
  I1019 13:24:33.635049 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g65gw" in namespace "gc-8839"
  I1019 13:24:33.650736 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfrx7" in namespace "gc-8839"
  I1019 13:24:33.667056 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h45hz" in namespace "gc-8839"
  I1019 13:24:33.679348 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hbc4c" in namespace "gc-8839"
  I1019 13:24:33.698358 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrnqz" in namespace "gc-8839"
  I1019 13:24:33.711109 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j7tt7" in namespace "gc-8839"
  I1019 13:24:33.725886 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbwxv" in namespace "gc-8839"
  I1019 13:24:33.739625 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jvs9g" in namespace "gc-8839"
  I1019 13:24:33.755852 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kc6qt" in namespace "gc-8839"
  I1019 13:24:33.770680 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8839" for this suite. @ 10/19/24 13:24:33.776
â€¢ [17.311 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 10/19/24 13:24:33.786
  I1019 13:24:33.786059 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:24:33.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:33.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:33.809
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6336 @ 10/19/24 13:24:33.813
  STEP: changing the ExternalName service to type=ClusterIP @ 10/19/24 13:24:33.821
  STEP: creating replication controller externalname-service in namespace services-6336 @ 10/19/24 13:24:33.835
  I1019 13:24:33.842083      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6336, replica count: 2
  E1019 13:24:34.532554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:35.533059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:36.533300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:36.893769      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 13:24:36.893953 20 resource.go:361] Creating new exec pod
  E1019 13:24:37.533574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:38.534109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:39.534337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:39.910695 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6336 exec execpod7m7f8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1019 13:24:40.002774 20 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1019 13:24:40.002822 20 builder.go:147] stdout: "externalname-service-nt8bz"
  I1019 13:24:40.002896 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6336 exec execpod7m7f8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.31 80'
  I1019 13:24:40.076034 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.31 80\nConnection to 10.152.183.31 80 port [tcp/http] succeeded!\n"
  I1019 13:24:40.076074 20 builder.go:147] stdout: "externalname-service-nt8bz"
  I1019 13:24:40.076178 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1019 13:24:40.099635 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6336" for this suite. @ 10/19/24 13:24:40.104
â€¢ [6.326 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/19/24 13:24:40.111
  I1019 13:24:40.111622 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 13:24:40.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:40.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:40.129
  STEP: Creating secret with name secret-test-e6f5c1a3-c0ba-4086-a3ea-088e0fd6a1b7 @ 10/19/24 13:24:40.151
  STEP: Creating a pod to test consume secrets @ 10/19/24 13:24:40.159
  E1019 13:24:40.535290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:41.535302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:42.536258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:43.536691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:24:44.185
  I1019 13:24:44.190802 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-secrets-47c81ce3-3920-49e8-a4cf-70bec21e230c container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 13:24:44.2
  I1019 13:24:44.218186 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9260" for this suite. @ 10/19/24 13:24:44.222
  STEP: Destroying namespace "secret-namespace-7099" for this suite. @ 10/19/24 13:24:44.231
â€¢ [4.127 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/19/24 13:24:44.238
  I1019 13:24:44.238864 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:24:44.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:44.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:44.257
  STEP: Creating secret with name projected-secret-test-d137d080-fe88-4529-85bf-2df0b601cc5b @ 10/19/24 13:24:44.26
  STEP: Creating a pod to test consume secrets @ 10/19/24 13:24:44.265
  E1019 13:24:44.536792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:45.537713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:46.538802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:47.538914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:24:48.29
  I1019 13:24:48.294212 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-projected-secrets-eecfbfd9-e0ce-4392-a73d-e49a46f7990d container secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 13:24:48.302
  I1019 13:24:48.324357 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1974" for this suite. @ 10/19/24 13:24:48.331
â€¢ [4.102 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 10/19/24 13:24:48.34
  I1019 13:24:48.340809 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:24:48.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:24:48.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:24:48.363
  STEP: Setting up server cert @ 10/19/24 13:24:48.391
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:24:48.5
  STEP: Deploying the webhook pod @ 10/19/24 13:24:48.509
  STEP: Wait for the deployment to be ready @ 10/19/24 13:24:48.523
  I1019 13:24:48.533763 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:24:48.539924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:49.540176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:50.540680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:24:50.546
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:24:50.56
  E1019 13:24:51.541378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:24:51.560581 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/19/24 13:24:51.568
  STEP: create a pod that should be denied by the webhook @ 10/19/24 13:24:51.581
  STEP: create a pod that causes the webhook to hang @ 10/19/24 13:24:51.589
  E1019 13:24:52.542287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:53.543237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:54.543378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:55.544472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:56.544440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:57.544548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:58.544855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:24:59.545342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:00.546327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:01.549282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 10/19/24 13:25:01.596
  STEP: create a configmap that should be admitted by the webhook @ 10/19/24 13:25:01.603
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/19/24 13:25:01.614
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/19/24 13:25:01.625
  STEP: create a namespace that bypass the webhook @ 10/19/24 13:25:01.63
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/19/24 13:25:01.645
  I1019 13:25:01.705027 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9555" for this suite. @ 10/19/24 13:25:01.711
  STEP: Destroying namespace "webhook-markers-8242" for this suite. @ 10/19/24 13:25:01.718
  STEP: Destroying namespace "exempted-namespace-7923" for this suite. @ 10/19/24 13:25:01.727
â€¢ [13.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 10/19/24 13:25:01.738
  I1019 13:25:01.738092 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:25:01.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:25:01.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:25:01.756
  STEP: Creating a pod to test downward API volume plugin @ 10/19/24 13:25:01.758
  E1019 13:25:02.549410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:03.549560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:04.550150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:05.550264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:25:05.789
  I1019 13:25:05.793888 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod downwardapi-volume-8606a51f-5852-42f7-a534-dcfb66fd55dd container client-container: <nil>
  STEP: delete the pod @ 10/19/24 13:25:05.802
  I1019 13:25:05.824027 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2798" for this suite. @ 10/19/24 13:25:05.828
â€¢ [4.099 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/19/24 13:25:05.837
  I1019 13:25:05.837981 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename proxy @ 10/19/24 13:25:05.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:25:05.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:25:05.856
  I1019 13:25:05.859784 20 proxy.go:293] Creating pod...
  E1019 13:25:06.551273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:07.551383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:07.877376 20 proxy.go:317] Creating service...
  I1019 13:25:07.888900 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/DELETE
  I1019 13:25:07.898992 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1019 13:25:07.899030 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/GET
  I1019 13:25:07.902572 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1019 13:25:07.902720 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/HEAD
  I1019 13:25:07.906885 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1019 13:25:07.906907 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/OPTIONS
  I1019 13:25:07.910832 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1019 13:25:07.910853 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/PATCH
  I1019 13:25:07.914023 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1019 13:25:07.914043 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/POST
  I1019 13:25:07.917614 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1019 13:25:07.917629 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/pods/agnhost/proxy/some/path/with/PUT
  I1019 13:25:07.921064 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1019 13:25:07.921086 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/DELETE
  I1019 13:25:07.926534 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1019 13:25:07.926564 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/GET
  I1019 13:25:07.932391 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1019 13:25:07.932406 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/HEAD
  I1019 13:25:07.938516 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1019 13:25:07.938537 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/OPTIONS
  I1019 13:25:07.946286 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1019 13:25:07.946311 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/PATCH
  I1019 13:25:07.954476 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1019 13:25:07.954503 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/POST
  I1019 13:25:07.959964 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1019 13:25:07.959991 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3230/services/test-service/proxy/some/path/with/PUT
  I1019 13:25:07.965433 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1019 13:25:07.965548 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3230" for this suite. @ 10/19/24 13:25:07.969
â€¢ [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 10/19/24 13:25:07.976
  I1019 13:25:07.976736 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 13:25:07.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:25:07.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:25:07.996
  I1019 13:25:08.032169 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"dc2ef6ef-0246-4136-a029-688ff6c3fd67", Controller:(*bool)(0xc000993336), BlockOwnerDeletion:(*bool)(0xc000993337)}}
  I1019 13:25:08.039653 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"71c98546-6c15-4103-b000-636cc883a74c", Controller:(*bool)(0xc000993586), BlockOwnerDeletion:(*bool)(0xc000993587)}}
  I1019 13:25:08.048696 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"1b38f83c-4687-4aae-b6b1-d32104c52465", Controller:(*bool)(0xc0009937d6), BlockOwnerDeletion:(*bool)(0xc0009937d7)}}
  E1019 13:25:08.551405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:09.551616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:10.551742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:11.552062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:12.552181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:13.063223 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-613" for this suite. @ 10/19/24 13:25:13.067
â€¢ [5.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 10/19/24 13:25:13.075
  I1019 13:25:13.075802 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 13:25:13.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:25:13.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:25:13.095
  STEP: Creating service test in namespace statefulset-6518 @ 10/19/24 13:25:13.098
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/19/24 13:25:13.104
  STEP: Creating stateful set ss in namespace statefulset-6518 @ 10/19/24 13:25:13.115
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6518 @ 10/19/24 13:25:13.12
  I1019 13:25:13.124700 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1019 13:25:13.552948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:14.553230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:15.553293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:16.553395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:17.553469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:18.553688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:19.554350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:20.554474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:21.555353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:22.556346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:23.125839 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/19/24 13:25:23.125
  I1019 13:25:23.129863 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 13:25:23.214910 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 13:25:23.214948 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 13:25:23.214964 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 13:25:23.220857 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1019 13:25:23.557374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:24.557572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:25.557679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:26.557793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:27.557872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:28.557890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:29.558074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:30.558396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:31.559412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:32.559931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:33.221351 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1019 13:25:33.221392 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1019 13:25:33.242299 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999982s
  E1019 13:25:33.560784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:34.248004 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.99492837s
  E1019 13:25:34.561397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:35.253618 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.989162535s
  E1019 13:25:35.562032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:36.258784 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.983600464s
  E1019 13:25:36.562379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:37.264313 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.978254521s
  E1019 13:25:37.562511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:38.270263 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.972769685s
  E1019 13:25:38.562612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:39.275917 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.966905357s
  E1019 13:25:39.563189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:40.281731 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.961301936s
  E1019 13:25:40.564101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:41.287853 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.954500869s
  E1019 13:25:41.564255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:42.293951 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 949.171636ms
  E1019 13:25:42.564318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6518 @ 10/19/24 13:25:43.294
  I1019 13:25:43.299681 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 13:25:43.380637 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 13:25:43.380694 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 13:25:43.380708 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 13:25:43.385461 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E1019 13:25:43.565335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:44.566342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:45.566619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:46.566815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:47.567049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:48.567253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:49.567329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:50.567586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:51.567708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:52.567812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:53.386363 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:25:53.386397 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1019 13:25:53.386403 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/19/24 13:25:53.386
  STEP: Scale down will halt with unhealthy stateful pod @ 10/19/24 13:25:53.386
  I1019 13:25:53.394461 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 13:25:53.475440 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 13:25:53.475475 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 13:25:53.475486 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 13:25:53.475527 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1019 13:25:53.560485 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 13:25:53.560519 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 13:25:53.560528 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 13:25:53.560569 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1019 13:25:53.568489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:25:53.645450 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1019 13:25:53.645482 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1019 13:25:53.645491 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1019 13:25:53.645501 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1019 13:25:53.650744 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1019 13:25:54.569049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:55.569228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:56.569437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:57.569650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:58.570033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:25:59.570468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:00.570747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:01.570826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:02.571050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:03.571799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:03.656507 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1019 13:26:03.656538 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1019 13:26:03.656545 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1019 13:26:03.672341 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999796s
  E1019 13:26:04.572330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:04.677691 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995915044s
  E1019 13:26:05.572424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:05.683537 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.989783793s
  E1019 13:26:06.573356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:06.690223 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.98387231s
  E1019 13:26:07.574350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:07.695516 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.977772268s
  E1019 13:26:08.575366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:08.701489 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.972901961s
  E1019 13:26:09.576366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:09.707202 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.966900509s
  E1019 13:26:10.576475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:10.713157 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.960706837s
  E1019 13:26:11.577364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:11.718764 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.954834604s
  E1019 13:26:12.577474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:12.725030 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 948.628458ms
  E1019 13:26:13.578084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6518 @ 10/19/24 13:26:13.725
  I1019 13:26:13.731058 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 13:26:13.807253 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 13:26:13.807288 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 13:26:13.807300 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 13:26:13.807341 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 13:26:13.887162 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 13:26:13.887208 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 13:26:13.887217 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 13:26:13.887264 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=statefulset-6518 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1019 13:26:13.965447 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1019 13:26:13.965484 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1019 13:26:13.965494 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1019 13:26:13.965504 20 rest.go:150] Scaling statefulset ss to 0
  E1019 13:26:14.578283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:15.578520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:16.578655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:17.578920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:18.579280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:19.579426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:20.579617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:21.579854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:22.579983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:23.580106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/19/24 13:26:23.975
  I1019 13:26:23.975654 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6518
  I1019 13:26:23.979577 20 rest.go:150] Scaling statefulset ss to 0
  I1019 13:26:23.987537 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 13:26:23.991965 20 rest.go:88] Deleting statefulset ss
  I1019 13:26:24.007965 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6518" for this suite. @ 10/19/24 13:26:24.014
â€¢ [70.947 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 10/19/24 13:26:24.023
  I1019 13:26:24.023417 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename security-context-test @ 10/19/24 13:26:24.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:24.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:24.041
  E1019 13:26:24.580176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:25.580211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:26.065033 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2557" for this suite. @ 10/19/24 13:26:26.071
â€¢ [2.057 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 10/19/24 13:26:26.08
  I1019 13:26:26.080450 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:26:26.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:26.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:26.102
  STEP: Setting up server cert @ 10/19/24 13:26:26.13
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:26:26.363
  STEP: Deploying the webhook pod @ 10/19/24 13:26:26.371
  STEP: Wait for the deployment to be ready @ 10/19/24 13:26:26.384
  I1019 13:26:26.395874 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:26:26.581163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:27.581294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:26:28.411
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:26:28.424
  E1019 13:26:28.582072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:29.425243 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/19/24 13:26:29.433
  I1019 13:26:29.483486 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9845" for this suite. @ 10/19/24 13:26:29.49
  STEP: Destroying namespace "webhook-markers-5035" for this suite. @ 10/19/24 13:26:29.497
â€¢ [3.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/19/24 13:26:29.506
  I1019 13:26:29.506375 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 13:26:29.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:29.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:29.526
  I1019 13:26:29.573738 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1623" for this suite. @ 10/19/24 13:26:29.578
  E1019 13:26:29.582538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 10/19/24 13:26:29.586
  I1019 13:26:29.586594 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:26:29.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:29.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:29.603
  STEP: Setting up server cert @ 10/19/24 13:26:29.627
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:26:29.74
  STEP: Deploying the webhook pod @ 10/19/24 13:26:29.748
  STEP: Wait for the deployment to be ready @ 10/19/24 13:26:29.76
  I1019 13:26:29.776054 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:26:30.582662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:31.583101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:26:31.79
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:26:31.81
  E1019 13:26:32.583341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:32.810662 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/19/24 13:26:32.819
  STEP: create a configmap that should be updated by the webhook @ 10/19/24 13:26:32.833
  I1019 13:26:32.894016 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-426" for this suite. @ 10/19/24 13:26:32.899
  STEP: Destroying namespace "webhook-markers-5136" for this suite. @ 10/19/24 13:26:32.906
â€¢ [3.330 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/19/24 13:26:32.916
  I1019 13:26:32.916499 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 13:26:32.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:32.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:32.934
  I1019 13:26:32.962739 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1019 13:26:32.968692 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1019 13:26:32.972333 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:32.972370 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:32.976036 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:26:32.976055 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 13:26:33.583543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:33.975387 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:33.975424 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:33.979343 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:26:33.979363 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1019 13:26:33.979377 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1019 13:26:33.990170 20 daemon_set.go:102] Updating DaemonSet daemon-set
  E1019 13:26:34.583531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:35.583616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:36.005568 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1019 13:26:36.017267 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I1019 13:26:36.017298 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1019 13:26:36.024121 20 daemon_set.go:1193] Wrong image for pod: daemon-set-crj6j. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1019 13:26:36.024206 20 daemon_set.go:1198] Pod daemon-set-crj6j is not available
  I1019 13:26:36.027819 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:36.027841 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 13:26:36.584351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:37.028746 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:37.028781 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1019 13:26:37.585217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:38.021862 20 daemon_set.go:1198] Pod daemon-set-7qzwl is not available
  I1019 13:26:38.026426 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:26:38.026458 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/19/24 13:26:38.035
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7821, will wait for the garbage collector to delete the pods @ 10/19/24 13:26:38.035
  I1019 13:26:38.098242 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.741871ms
  I1019 13:26:38.199063 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.820006ms
  E1019 13:26:38.585444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:39.585469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:40.004742 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:26:40.004781 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1019 13:26:40.009411 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41800"},"items":null}

  I1019 13:26:40.012759 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41800"},"items":null}

  I1019 13:26:40.028742 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7821" for this suite. @ 10/19/24 13:26:40.033
â€¢ [7.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 10/19/24 13:26:40.041
  I1019 13:26:40.041248 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 13:26:40.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:40.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:40.06
  I1019 13:26:40.062729 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:26:40.586050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/19/24 13:26:41.345
  I1019 13:26:41.345414 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-9028 --namespace=crd-publish-openapi-9028 create -f -'
  E1019 13:26:41.587116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:42.587332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:43.425772 20 builder.go:146] stderr: ""
  I1019 13:26:43.425810 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4526-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1019 13:26:43.425860 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-9028 --namespace=crd-publish-openapi-9028 delete e2e-test-crd-publish-openapi-4526-crds test-cr'
  I1019 13:26:43.478765 20 builder.go:146] stderr: ""
  I1019 13:26:43.478810 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4526-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1019 13:26:43.478849 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-9028 --namespace=crd-publish-openapi-9028 apply -f -'
  I1019 13:26:43.533668 20 builder.go:146] stderr: ""
  I1019 13:26:43.533704 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4526-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1019 13:26:43.533742 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-9028 --namespace=crd-publish-openapi-9028 delete e2e-test-crd-publish-openapi-4526-crds test-cr'
  E1019 13:26:43.588174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:43.594181 20 builder.go:146] stderr: ""
  I1019 13:26:43.594213 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4526-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/19/24 13:26:43.594
  I1019 13:26:43.594302 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-9028 explain e2e-test-crd-publish-openapi-4526-crds'
  I1019 13:26:43.636219 20 builder.go:146] stderr: ""
  I1019 13:26:43.636262 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4526-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1019 13:26:44.588980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:26:44.837929 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9028" for this suite. @ 10/19/24 13:26:44.844
â€¢ [4.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 10/19/24 13:26:44.859
  I1019 13:26:44.859453 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:26:44.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:44.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:44.882
  STEP: creating the pod @ 10/19/24 13:26:44.884
  I1019 13:26:44.884898 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 create -f -'
  I1019 13:26:45.032155 20 builder.go:146] stderr: ""
  I1019 13:26:45.032270 20 builder.go:147] stdout: "pod/pause created\n"
  E1019 13:26:45.589371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:46.589610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/19/24 13:26:47.043
  I1019 13:26:47.043354 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 label pods pause testing-label=testing-label-value'
  I1019 13:26:47.094440 20 builder.go:146] stderr: ""
  I1019 13:26:47.094480 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/19/24 13:26:47.094
  I1019 13:26:47.094553 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 get pod pause -L testing-label'
  I1019 13:26:47.137917 20 builder.go:146] stderr: ""
  I1019 13:26:47.137958 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/19/24 13:26:47.137
  I1019 13:26:47.138052 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 label pods pause testing-label-'
  I1019 13:26:47.190521 20 builder.go:146] stderr: ""
  I1019 13:26:47.190566 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/19/24 13:26:47.19
  I1019 13:26:47.190639 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 get pod pause -L testing-label'
  I1019 13:26:47.233576 20 builder.go:146] stderr: ""
  I1019 13:26:47.233618 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/19/24 13:26:47.233
  I1019 13:26:47.233793 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 delete --grace-period=0 --force -f -'
  I1019 13:26:47.288877 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:26:47.288914 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1019 13:26:47.288959 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 get rc,svc -l name=pause --no-headers'
  I1019 13:26:47.338385 20 builder.go:146] stderr: "No resources found in kubectl-9982 namespace.\n"
  I1019 13:26:47.338422 20 builder.go:147] stdout: ""
  I1019 13:26:47.338469 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9982 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1019 13:26:47.381237 20 builder.go:146] stderr: ""
  I1019 13:26:47.381289 20 builder.go:147] stdout: ""
  I1019 13:26:47.381398 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9982" for this suite. @ 10/19/24 13:26:47.387
â€¢ [2.536 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/19/24 13:26:47.395
  I1019 13:26:47.395373 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename cronjob @ 10/19/24 13:26:47.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:26:47.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:26:47.418
  STEP: Creating a cronjob @ 10/19/24 13:26:47.42
  STEP: Ensuring more than one job is running at a time @ 10/19/24 13:26:47.426
  E1019 13:26:47.590186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:48.590289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:49.590670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:50.591051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:51.591268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:52.591423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:53.591542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:54.591753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:55.591816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:56.592045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:57.592778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:58.592892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:26:59.592990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:00.593184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:01.593254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:02.593299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:03.593555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:04.594362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:05.594911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:06.595036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:07.595831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:08.595941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:09.596882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:10.596999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:11.597709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:12.597834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:13.598351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:14.598546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:15.599086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:16.599229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:17.599773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:18.599874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:19.600563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:20.600828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:21.601254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:22.601497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:23.601661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:24.602332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:25.602969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:26.603255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:27.604115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:28.605115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:29.605619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:30.605809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:31.606348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:32.606535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:33.607383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:34.607623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:35.608338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:36.608532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:37.609517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:38.610358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:39.610775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:40.610903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:41.611496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:42.612477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:43.613322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:44.614331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:45.615044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:46.615172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:47.616181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:48.616732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:49.617779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:50.617997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:51.618096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:52.618296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:53.619045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:54.619207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:55.619793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:56.619925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:57.620035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:58.620310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:27:59.620937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:00.621192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/19/24 13:28:01.432
  STEP: Removing cronjob @ 10/19/24 13:28:01.436
  I1019 13:28:01.444266 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9309" for this suite. @ 10/19/24 13:28:01.448
â€¢ [74.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 10/19/24 13:28:01.456
  I1019 13:28:01.456051 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 13:28:01.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:01.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:01.481
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/19/24 13:28:01.483
  E1019 13:28:01.621654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:02.621708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:03.621803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:04.621905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:28:05.507
  I1019 13:28:05.511422 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod pod-5b909931-19c4-47ea-addd-70da6332fdaa container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:28:05.534
  I1019 13:28:05.556515 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1489" for this suite. @ 10/19/24 13:28:05.56
â€¢ [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 10/19/24 13:28:05.572
  I1019 13:28:05.572317 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:28:05.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:05.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:05.606
  STEP: creating a collection of services @ 10/19/24 13:28:05.608
  I1019 13:28:05.608569 20 service.go:3655] Creating e2e-svc-a-k5c4s
  E1019 13:28:05.622625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:05.626173 20 service.go:3655] Creating e2e-svc-b-zn9w9
  I1019 13:28:05.638714 20 service.go:3655] Creating e2e-svc-c-rfrb4
  STEP: deleting service collection @ 10/19/24 13:28:05.655
  I1019 13:28:05.698836 20 service.go:3690] Collection of services has been deleted
  I1019 13:28:05.698945 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3230" for this suite. @ 10/19/24 13:28:05.703
â€¢ [0.139 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 10/19/24 13:28:05.711
  I1019 13:28:05.711668 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 13:28:05.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:05.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:05.733
  STEP: Counting existing ResourceQuota @ 10/19/24 13:28:05.735
  E1019 13:28:06.623319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:07.623406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:08.624349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:09.625054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:10.625305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/19/24 13:28:10.74
  STEP: Ensuring resource quota status is calculated @ 10/19/24 13:28:10.745
  E1019 13:28:11.625419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:12.625515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:12.749842 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3390" for this suite. @ 10/19/24 13:28:12.754
â€¢ [7.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/19/24 13:28:12.762
  I1019 13:28:12.762519 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/19/24 13:28:12.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:12.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:12.787
  STEP: Creating 50 configmaps @ 10/19/24 13:28:12.789
  STEP: Creating RC which spawns configmap-volume pods @ 10/19/24 13:28:13.035
  I1019 13:28:13.153290 20 resource.go:87] Pod name wrapped-volume-race-6a21a11f-c5c7-443c-991a-b8cdc37f8136: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/19/24 13:28:13.153
  E1019 13:28:13.626292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:14.626725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 10/19/24 13:28:15.21
  I1019 13:28:15.226116 20 resource.go:87] Pod name wrapped-volume-race-3660c6ba-b243-4e30-ae62-acdafd101626: Found 0 pods out of 5
  E1019 13:28:15.627012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:16.627236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:17.627512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:18.627791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:19.628009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:20.233899 20 resource.go:87] Pod name wrapped-volume-race-3660c6ba-b243-4e30-ae62-acdafd101626: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/19/24 13:28:20.233
  STEP: Creating RC which spawns configmap-volume pods @ 10/19/24 13:28:20.259
  I1019 13:28:20.273331 20 resource.go:87] Pod name wrapped-volume-race-be12cb52-9f32-4ac5-a9ab-3f21f1b991ac: Found 0 pods out of 5
  E1019 13:28:20.628892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:21.629841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:22.630045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:23.630192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:24.630383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:25.282218 20 resource.go:87] Pod name wrapped-volume-race-be12cb52-9f32-4ac5-a9ab-3f21f1b991ac: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/19/24 13:28:25.282
  STEP: deleting ReplicationController wrapped-volume-race-be12cb52-9f32-4ac5-a9ab-3f21f1b991ac in namespace emptydir-wrapper-6996, will wait for the garbage collector to delete the pods @ 10/19/24 13:28:25.303
  I1019 13:28:25.368784 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-be12cb52-9f32-4ac5-a9ab-3f21f1b991ac took: 10.839609ms
  I1019 13:28:25.469468 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-be12cb52-9f32-4ac5-a9ab-3f21f1b991ac pods took: 100.670738ms
  E1019 13:28:25.630906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:26.631832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3660c6ba-b243-4e30-ae62-acdafd101626 in namespace emptydir-wrapper-6996, will wait for the garbage collector to delete the pods @ 10/19/24 13:28:27.17
  I1019 13:28:27.236369 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-3660c6ba-b243-4e30-ae62-acdafd101626 took: 10.898492ms
  I1019 13:28:27.337434 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-3660c6ba-b243-4e30-ae62-acdafd101626 pods took: 101.059209ms
  E1019 13:28:27.632151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:28.632819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-6a21a11f-c5c7-443c-991a-b8cdc37f8136 in namespace emptydir-wrapper-6996, will wait for the garbage collector to delete the pods @ 10/19/24 13:28:29.037
  I1019 13:28:29.102647 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-6a21a11f-c5c7-443c-991a-b8cdc37f8136 took: 10.015281ms
  I1019 13:28:29.203427 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-6a21a11f-c5c7-443c-991a-b8cdc37f8136 pods took: 100.776096ms
  E1019 13:28:29.633441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:30.633743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/19/24 13:28:31.004
  I1019 13:28:31.399381 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6996" for this suite. @ 10/19/24 13:28:31.403
â€¢ [18.650 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 10/19/24 13:28:31.412
  I1019 13:28:31.412491 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-webhook @ 10/19/24 13:28:31.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:31.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:31.438
  STEP: Setting up server cert @ 10/19/24 13:28:31.44
  E1019 13:28:31.634033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/19/24 13:28:31.669
  STEP: Deploying the custom resource conversion webhook pod @ 10/19/24 13:28:31.679
  STEP: Wait for the deployment to be ready @ 10/19/24 13:28:31.693
  I1019 13:28:31.705233 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1019 13:28:32.634175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:33.634470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:28:33.719
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:28:33.734
  E1019 13:28:34.634555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:34.734813 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1019 13:28:34.743672 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:28:35.634807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:36.635341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/19/24 13:28:37.296
  STEP: v2 custom resource should be converted @ 10/19/24 13:28:37.3
  E1019 13:28:37.635956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:37.868499 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3188" for this suite. @ 10/19/24 13:28:37.873
â€¢ [6.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 10/19/24 13:28:37.881
  I1019 13:28:37.881724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:28:37.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:37.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:37.904
  STEP: Setting up server cert @ 10/19/24 13:28:37.936
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:28:38.197
  STEP: Deploying the webhook pod @ 10/19/24 13:28:38.205
  STEP: Wait for the deployment to be ready @ 10/19/24 13:28:38.218
  I1019 13:28:38.229296 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:28:38.636823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:39.637814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:28:40.244
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:28:40.257
  E1019 13:28:40.637977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:28:41.258780 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/19/24 13:28:41.268
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/19/24 13:28:41.281
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/19/24 13:28:41.287
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/19/24 13:28:41.299
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/19/24 13:28:41.311
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/19/24 13:28:41.319
  I1019 13:28:41.379593 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-524" for this suite. @ 10/19/24 13:28:41.385
  STEP: Destroying namespace "webhook-markers-9923" for this suite. @ 10/19/24 13:28:41.394
â€¢ [3.521 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 10/19/24 13:28:41.402
  I1019 13:28:41.402988 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename namespaces @ 10/19/24 13:28:41.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:41.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:41.428
  STEP: Updating Namespace "namespaces-8561" @ 10/19/24 13:28:41.429
  I1019 13:28:41.440055 20 namespace.go:389] Namespace "namespaces-8561" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"5399414b-5582-40e4-9a58-391ee53a2143", "kubernetes.io/metadata.name":"namespaces-8561", "namespaces-8561":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1019 13:28:41.440157 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8561" for this suite. @ 10/19/24 13:28:41.444
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 10/19/24 13:28:41.453
  I1019 13:28:41.453911 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 13:28:41.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:41.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:41.474
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/19/24 13:28:41.476
  E1019 13:28:41.638291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:42.638411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:28:43.498
  I1019 13:28:43.503071 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-ab396d87-f244-48f3-9942-8518fb93f1e2 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:28:43.523
  I1019 13:28:43.540493 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2081" for this suite. @ 10/19/24 13:28:43.543
â€¢ [2.097 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 10/19/24 13:28:43.551
  I1019 13:28:43.551334 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption @ 10/19/24 13:28:43.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:28:43.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:28:43.576
  I1019 13:28:43.594055 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1019 13:28:43.639124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:44.639372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:45.639519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:46.639511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:47.640321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:48.641324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:49.641785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:50.642753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:51.642955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:52.643256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:53.643622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:54.643733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:55.643754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:56.644341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:57.644767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:58.645274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:28:59.645681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:00.645870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:01.646382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:02.646680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:03.647308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:04.647517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:05.648234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:06.648521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:07.649590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:08.649699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:09.649947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:10.650060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:11.650932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:12.651164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:13.651724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:14.651975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:15.652555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:16.653575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:17.654107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:18.654287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:19.654513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:20.654621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:21.655099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:22.655264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:23.655438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:24.656342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:25.656802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:26.656941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:27.657711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:28.658009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:29.658603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:30.658788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:31.659695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:32.659873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:33.659989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:34.660207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:35.660779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:36.660899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:37.661671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:38.661760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:39.662690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:40.663674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:41.663976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:42.664332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:29:43.599427 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/19/24 13:29:43.603
  I1019 13:29:43.603877 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/19/24 13:29:43.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:29:43.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:29:43.63
  I1019 13:29:43.646992 20 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1019 13:29:43.650948 20 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  E1019 13:29:43.664349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:29:43.731618 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-910" for this suite. @ 10/19/24 13:29:43.735
  I1019 13:29:43.744458 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2930" for this suite. @ 10/19/24 13:29:43.747
â€¢ [60.205 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 10/19/24 13:29:43.756
  I1019 13:29:43.756166 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename dns @ 10/19/24 13:29:43.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:29:43.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:29:43.777
  STEP: Creating a test headless service @ 10/19/24 13:29:43.779
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1402 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1402;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1402 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1402;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1402.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1402.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1402.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1402.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1402.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1402.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1402.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1402.svc;check="$$(dig +notcp +noall +answer +search 136.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.136_udp@PTR;check="$$(dig +tcp +noall +answer +search 136.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.136_tcp@PTR;sleep 1; done
   @ 10/19/24 13:29:43.799
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1402 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1402;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1402 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1402;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1402.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1402.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1402.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1402.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1402.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1402.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1402.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1402.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1402.svc;check="$$(dig +notcp +noall +answer +search 136.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.136_udp@PTR;check="$$(dig +tcp +noall +answer +search 136.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.136_tcp@PTR;sleep 1; done
   @ 10/19/24 13:29:43.799
  STEP: creating a pod to probe DNS @ 10/19/24 13:29:43.799
  STEP: submitting the pod to kubernetes @ 10/19/24 13:29:43.799
  E1019 13:29:44.665020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:45.665351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/19/24 13:29:45.824
  STEP: looking for the results for each expected name from probers @ 10/19/24 13:29:45.828
  I1019 13:29:45.835110 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.839216 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.844149 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1402 from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.848755 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1402 from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.852361 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.857391 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.862212 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.866149 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.890400 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.894266 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.899710 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1402 from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.904665 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1402 from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.908688 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.913662 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.918385 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.922383 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1402.svc from pod dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40: the server could not find the requested resource (get pods dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40)
  I1019 13:29:45.940992 20 dns_common.go:489] Lookups using dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1402 wheezy_tcp@dns-test-service.dns-1402 wheezy_udp@dns-test-service.dns-1402.svc wheezy_tcp@dns-test-service.dns-1402.svc wheezy_udp@_http._tcp.dns-test-service.dns-1402.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1402.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1402 jessie_tcp@dns-test-service.dns-1402 jessie_udp@dns-test-service.dns-1402.svc jessie_tcp@dns-test-service.dns-1402.svc jessie_udp@_http._tcp.dns-test-service.dns-1402.svc jessie_tcp@_http._tcp.dns-test-service.dns-1402.svc]

  I1019 13:29:45.949833 20 dns_common.go:495] Pod client logs for webserver: 
  I1019 13:29:45.957606 20 dns_common.go:495] Pod client logs for querier: 
  I1019 13:29:45.965094 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1019 13:29:46.665918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:47.666044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:48.666315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:49.666566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:50.666780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:29:50.942174 20 dns_common.go:527] DNS probes using dns-1402/dns-test-0a7197de-1a7f-4ffd-a5d5-bcdf3dffed40 succeeded

  STEP: deleting the pod @ 10/19/24 13:29:50.942
  STEP: deleting the test service @ 10/19/24 13:29:50.967
  STEP: deleting the test headless service @ 10/19/24 13:29:50.994
  I1019 13:29:51.011590 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1402" for this suite. @ 10/19/24 13:29:51.016
â€¢ [7.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 10/19/24 13:29:51.027
  I1019 13:29:51.027464 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:29:51.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:29:51.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:29:51.047
  STEP: creating all guestbook components @ 10/19/24 13:29:51.049
  I1019 13:29:51.049333 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1019 13:29:51.049453 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 create -f -'
  I1019 13:29:51.138252 20 builder.go:146] stderr: ""
  I1019 13:29:51.138290 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1019 13:29:51.138335 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1019 13:29:51.138428 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 create -f -'
  I1019 13:29:51.226905 20 builder.go:146] stderr: ""
  I1019 13:29:51.227176 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1019 13:29:51.227243 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1019 13:29:51.227299 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 create -f -'
  I1019 13:29:51.314994 20 builder.go:146] stderr: ""
  I1019 13:29:51.315032 20 builder.go:147] stdout: "service/frontend created\n"
  I1019 13:29:51.315185 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1019 13:29:51.315364 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 create -f -'
  I1019 13:29:51.384048 20 builder.go:146] stderr: ""
  I1019 13:29:51.384097 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1019 13:29:51.384199 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1019 13:29:51.384268 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 create -f -'
  I1019 13:29:51.480164 20 builder.go:146] stderr: ""
  I1019 13:29:51.480201 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1019 13:29:51.480295 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1019 13:29:51.480369 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 create -f -'
  I1019 13:29:51.543898 20 builder.go:146] stderr: ""
  I1019 13:29:51.543940 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/19/24 13:29:51.543
  I1019 13:29:51.543981 20 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E1019 13:29:51.667700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:52.667719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:53.667863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:54.667987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:29:55.668205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:29:56.595254 20 kubectl.go:2276] Waiting for frontend to serve content.
  I1019 13:29:56.608811 20 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1019 13:29:56.621105 20 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/19/24 13:29:56.631
  I1019 13:29:56.631213 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 delete --grace-period=0 --force -f -'
  E1019 13:29:56.668601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:29:56.699292 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:29:56.699331 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/19/24 13:29:56.699
  I1019 13:29:56.699434 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 delete --grace-period=0 --force -f -'
  I1019 13:29:56.764345 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:29:56.764378 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/19/24 13:29:56.764
  I1019 13:29:56.764479 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 delete --grace-period=0 --force -f -'
  I1019 13:29:56.827041 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:29:56.827097 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/19/24 13:29:56.827
  I1019 13:29:56.827248 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 delete --grace-period=0 --force -f -'
  I1019 13:29:56.876640 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:29:56.876675 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/19/24 13:29:56.876
  I1019 13:29:56.876827 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 delete --grace-period=0 --force -f -'
  I1019 13:29:56.933370 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:29:56.933416 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/19/24 13:29:56.933
  I1019 13:29:56.933633 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-9008 delete --grace-period=0 --force -f -'
  I1019 13:29:57.001944 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1019 13:29:57.002027 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1019 13:29:57.002525 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9008" for this suite. @ 10/19/24 13:29:57.008
â€¢ [5.991 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 10/19/24 13:29:57.018
  I1019 13:29:57.018438 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/19/24 13:29:57.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:29:57.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:29:57.041
  STEP: creating a policy with variables @ 10/19/24 13:29:57.064
  STEP: waiting until the marker is denied @ 10/19/24 13:29:57.083
  E1019 13:29:57.669238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 10/19/24 13:29:57.696
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/19/24 13:29:57.71
  I1019 13:29:57.762033 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5519" for this suite. @ 10/19/24 13:29:57.766
â€¢ [0.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 10/19/24 13:29:57.777
  I1019 13:29:57.777185 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 13:29:57.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:29:57.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:29:57.8
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/19/24 13:29:57.801
  I1019 13:29:57.802021 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:29:58.669443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:29:59.067557 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:29:59.669700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:00.670032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:01.670355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:02.671082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:03.671340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:30:04.004856 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5105" for this suite. @ 10/19/24 13:30:04.026
â€¢ [6.265 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 10/19/24 13:30:04.042
  I1019 13:30:04.042805 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubectl @ 10/19/24 13:30:04.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:04.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:04.063
  STEP: create deployment with httpd image @ 10/19/24 13:30:04.066
  I1019 13:30:04.066298 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-3135 create -f -'
  I1019 13:30:04.131802 20 builder.go:146] stderr: ""
  I1019 13:30:04.131833 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/19/24 13:30:04.131
  I1019 13:30:04.131969 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-3135 diff -f -'
  I1019 13:30:04.213615 20 builder.go:135] rc: 1
  I1019 13:30:04.213696 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=kubectl-3135 delete -f -'
  I1019 13:30:04.263096 20 builder.go:146] stderr: ""
  I1019 13:30:04.263150 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1019 13:30:04.263298 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3135" for this suite. @ 10/19/24 13:30:04.268
â€¢ [0.234 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/19/24 13:30:04.276
  I1019 13:30:04.276946 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename kubelet-test @ 10/19/24 13:30:04.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:04.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:04.294
  E1019 13:30:04.671441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:05.671554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:06.671795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:07.671834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:30:08.318650 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3486" for this suite. @ 10/19/24 13:30:08.322
â€¢ [4.055 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/19/24 13:30:08.331
  I1019 13:30:08.331543 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 13:30:08.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:08.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:08.35
  STEP: creating the pod @ 10/19/24 13:30:08.353
  STEP: setting up watch @ 10/19/24 13:30:08.353
  STEP: submitting the pod to kubernetes @ 10/19/24 13:30:08.457
  STEP: verifying the pod is in kubernetes @ 10/19/24 13:30:08.469
  STEP: verifying pod creation was observed @ 10/19/24 13:30:08.473
  E1019 13:30:08.671967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:09.672000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/19/24 13:30:10.488
  STEP: verifying pod deletion was observed @ 10/19/24 13:30:10.497
  E1019 13:30:10.672782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:30:11.298303 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7316" for this suite. @ 10/19/24 13:30:11.302
â€¢ [2.980 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/19/24 13:30:11.311
  I1019 13:30:11.311383 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename subpath @ 10/19/24 13:30:11.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:11.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:11.329
  STEP: Setting up data @ 10/19/24 13:30:11.331
  STEP: Creating pod pod-subpath-test-configmap-wx9w @ 10/19/24 13:30:11.34
  STEP: Creating a pod to test atomic-volume-subpath @ 10/19/24 13:30:11.34
  E1019 13:30:11.673686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:12.674382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:13.674565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:14.674681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:15.674763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:16.674856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:17.675355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:18.675437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:19.675557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:20.675662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:21.676439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:22.676686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:23.676758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:24.676953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:25.677724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:26.677933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:27.678117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:28.678372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:29.678520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:30.679326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:31.679886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:32.680405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:33.680449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:34.681271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:30:35.424
  I1019 13:30:35.428187 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-subpath-test-configmap-wx9w container test-container-subpath-configmap-wx9w: <nil>
  STEP: delete the pod @ 10/19/24 13:30:35.439
  STEP: Deleting pod pod-subpath-test-configmap-wx9w @ 10/19/24 13:30:35.462
  I1019 13:30:35.462721 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-wx9w" in namespace "subpath-2403"
  I1019 13:30:35.466821 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2403" for this suite. @ 10/19/24 13:30:35.47
â€¢ [24.169 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 10/19/24 13:30:35.48
  I1019 13:30:35.480880 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename runtimeclass @ 10/19/24 13:30:35.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:35.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:35.502
  I1019 13:30:35.537762 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8613" for this suite. @ 10/19/24 13:30:35.544
â€¢ [0.071 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 10/19/24 13:30:35.551
  I1019 13:30:35.551881 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename podtemplate @ 10/19/24 13:30:35.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:35.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:35.571
  STEP: Create a pod template @ 10/19/24 13:30:35.574
  STEP: Replace a pod template @ 10/19/24 13:30:35.58
  I1019 13:30:35.591049 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1019 13:30:35.591202 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7348" for this suite. @ 10/19/24 13:30:35.595
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 10/19/24 13:30:35.602
  I1019 13:30:35.602731 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 13:30:35.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:35.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:35.621
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/19/24 13:30:35.623
  E1019 13:30:35.681824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:36.682098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:30:37.645
  I1019 13:30:37.649634 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-bd7f2acf-fee6-4cd3-8708-9cf146895187 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:30:37.657
  I1019 13:30:37.673571 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5195" for this suite. @ 10/19/24 13:30:37.678
  E1019 13:30:37.682083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [2.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/19/24 13:30:37.686
  I1019 13:30:37.686941 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename subjectreview @ 10/19/24 13:30:37.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:37.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:37.705
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8349" @ 10/19/24 13:30:37.708
  I1019 13:30:37.712573 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8349:e2e"
  I1019 13:30:37.712647 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8349"}
  I1019 13:30:37.712657 20 subjectreviews.go:71] saUID: "39c364df-3c50-4fb0-bf0b-73719a95ea98"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8349:e2e" @ 10/19/24 13:30:37.712
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8349:e2e" @ 10/19/24 13:30:37.712
  I1019 13:30:37.714125 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8349:e2e" api 'list' configmaps in "subjectreview-8349" namespace @ 10/19/24 13:30:37.714
  I1019 13:30:37.715332 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8349:e2e" @ 10/19/24 13:30:37.715
  I1019 13:30:37.716779 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1019 13:30:37.716789 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1019 13:30:37.716861 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8349" for this suite. @ 10/19/24 13:30:37.721
â€¢ [0.043 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 10/19/24 13:30:37.729
  I1019 13:30:37.729681 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:30:37.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:37.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:37.751
  STEP: Setting up server cert @ 10/19/24 13:30:37.774
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:30:38.091
  STEP: Deploying the webhook pod @ 10/19/24 13:30:38.102
  STEP: Wait for the deployment to be ready @ 10/19/24 13:30:38.114
  I1019 13:30:38.125331 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:30:38.682253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:39.682674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:30:40.14
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:30:40.156
  E1019 13:30:40.682765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:30:41.157245 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/19/24 13:30:41.241
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/19/24 13:30:41.27
  STEP: Deleting the collection of validation webhooks @ 10/19/24 13:30:41.294
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/19/24 13:30:41.368
  I1019 13:30:41.444858 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3805" for this suite. @ 10/19/24 13:30:41.451
  STEP: Destroying namespace "webhook-markers-916" for this suite. @ 10/19/24 13:30:41.461
â€¢ [3.741 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 10/19/24 13:30:41.471
  I1019 13:30:41.471451 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:30:41.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:41.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:41.491
  I1019 13:30:41.537763 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3946" for this suite. @ 10/19/24 13:30:41.542
â€¢ [0.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 10/19/24 13:30:41.55
  I1019 13:30:41.550701 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename namespaces @ 10/19/24 13:30:41.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:41.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:41.57
  STEP: Creating a test namespace @ 10/19/24 13:30:41.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:41.586
  STEP: Creating a service in the namespace @ 10/19/24 13:30:41.588
  STEP: Deleting the namespace @ 10/19/24 13:30:41.602
  STEP: Waiting for the namespace to be removed. @ 10/19/24 13:30:41.614
  E1019 13:30:41.682847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:42.683564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:43.683802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:44.684523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:45.684777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:46.685508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/19/24 13:30:47.62
  STEP: Verifying there is no service in the namespace @ 10/19/24 13:30:47.636
  I1019 13:30:47.640262 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4257" for this suite. @ 10/19/24 13:30:47.644
  STEP: Destroying namespace "nsdeletetest-821" for this suite. @ 10/19/24 13:30:47.651
  I1019 13:30:47.654703 20 framework.go:370] Namespace nsdeletetest-821 was already deleted
  STEP: Destroying namespace "nsdeletetest-9184" for this suite. @ 10/19/24 13:30:47.654
â€¢ [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 10/19/24 13:30:47.663
  I1019 13:30:47.663588 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replicaset @ 10/19/24 13:30:47.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:47.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:47.68
  STEP: Create a ReplicaSet @ 10/19/24 13:30:47.682
  E1019 13:30:47.686353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verify that the required pods have come up @ 10/19/24 13:30:47.687
  I1019 13:30:47.692306 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E1019 13:30:48.687223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:49.687415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:50.687664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:51.687806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:52.687882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:30:52.697456 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/19/24 13:30:52.697
  I1019 13:30:52.701232 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/19/24 13:30:52.701
  STEP: DeleteCollection of the ReplicaSets @ 10/19/24 13:30:52.705
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/19/24 13:30:52.716
  I1019 13:30:52.722821 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7661" for this suite. @ 10/19/24 13:30:52.727
â€¢ [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/19/24 13:30:52.737
  I1019 13:30:52.738008 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-pred @ 10/19/24 13:30:52.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:30:52.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:30:52.765
  I1019 13:30:52.768121 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1019 13:30:52.776183 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1019 13:30:52.780064 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-96 before test
  I1019 13:30:52.785113 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-97rgd from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.785153 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:30:52.785160 20 predicates.go:957] calico-node-6m9fv from kube-system started at 2024-10-19 12:00:10 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.785166 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:30:52.785173 20 predicates.go:957] coredns-5b4857d7c8-cz9tq from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.785177 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1019 13:30:52.785183 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7stxf from kube-system started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.785188 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1019 13:30:52.785194 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-ts7gc from kube-system started at 2024-10-19 11:55:31 +0000 UTC (2 container statuses recorded)
  I1019 13:30:52.785199 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1019 13:30:52.785204 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1019 13:30:52.785212 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-xllmt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.785217 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1019 13:30:52.785223 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-zcjrt from kubernetes-dashboard started at 2024-10-19 11:55:31 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.785229 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1019 13:30:52.785240 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-fzrn7 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:30:52.785245 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:30:52.785301 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:30:52.785312 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-204 before test
  I1019 13:30:52.791343 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-4f8gv from ingress-nginx-kubernetes-worker started at 2024-10-19 11:55:35 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.791443 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:30:52.791499 20 predicates.go:957] calico-node-f8b2r from kube-system started at 2024-10-19 12:00:31 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.791508 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:30:52.791515 20 predicates.go:957] sonobuoy-e2e-job-2d9fcc7a8e884827 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:30:52.791520 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1019 13:30:52.791629 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:30:52.791636 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-ffz26 from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:30:52.791641 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:30:52.791646 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1019 13:30:52.791652 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-84-96 before test
  I1019 13:30:52.799044 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hks6j from ingress-nginx-kubernetes-worker started at 2024-10-19 13:22:09 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.799067 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1019 13:30:52.799076 20 predicates.go:957] calico-node-d9qdc from kube-system started at 2024-10-19 11:59:30 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.799082 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1019 13:30:52.799088 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-19 12:05:01 +0000 UTC (1 container statuses recorded)
  I1019 13:30:52.799094 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1019 13:30:52.799101 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dce41fe598094b69-d46rj from sonobuoy started at 2024-10-19 12:05:03 +0000 UTC (2 container statuses recorded)
  I1019 13:30:52.799106 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1019 13:30:52.799112 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/19/24 13:30:52.799
  E1019 13:30:53.688010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:54.688632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/19/24 13:30:54.824
  STEP: Trying to apply a random label on the found node. @ 10/19/24 13:30:54.845
  STEP: verifying the node has the label kubernetes.io/e2e-80951a44-45ec-40d7-9be4-2c73040026dd 95 @ 10/19/24 13:30:54.854
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/19/24 13:30:54.86
  E1019 13:30:55.688783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:56.688913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.84.96 on the node which pod4 resides and expect not scheduled @ 10/19/24 13:30:56.878
  E1019 13:30:57.689099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:58.689329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:30:59.689604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:00.689720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:01.689809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:02.689938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:03.690051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:04.690195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:05.690429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:06.690551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:07.690745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:08.691064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:09.692085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:10.692649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:11.693517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:12.694360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:13.695223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:14.695324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:15.695417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:16.695523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:17.695632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:18.695830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:19.696289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:20.697346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:21.697575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:22.697763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:23.698342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:24.698496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:25.698647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:26.698775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:27.698836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:28.699116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:29.699966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:30.700104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:31.700375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:32.700508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:33.700605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:34.700713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:35.701438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:36.701556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:37.701684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:38.701806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:39.701964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:40.702060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:41.702391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:42.703365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:43.704359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:44.704463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:45.704823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:46.705021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:47.706015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:48.706179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:49.706363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:50.706539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:51.707530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:52.707621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:53.708085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:54.708284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:55.709356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:56.710372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:57.710481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:58.711547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:31:59.711736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:00.711852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:01.711958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:02.712183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:03.712418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:04.712758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:05.713537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:06.714350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:07.715348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:08.715459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:09.716370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:10.716493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:11.716615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:12.716742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:13.717255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:14.717467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:15.717634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:16.717722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:17.718672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:18.718830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:19.719522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:20.719751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:21.720524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:22.720606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:23.721368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:24.721490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:25.722439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:26.722537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:27.723576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:28.723851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:29.724373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:30.725355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:31.726104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:32.726333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:33.726434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:34.726549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:35.727382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:36.727590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:37.728654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:38.728882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:39.728976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:40.729197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:41.729358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:42.730325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:43.730423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:44.730638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:45.730756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:46.730954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:47.731034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:48.731339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:49.732344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:50.732442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:51.733087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:52.733281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:53.734200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:54.734267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:55.735437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:56.735548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:57.736250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:58.736281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:32:59.737082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:00.737221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:01.737263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:02.737431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:03.737534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:04.737746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:05.738326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:06.738548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:07.738657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:08.738931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:09.739746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:10.739881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:11.740591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:12.740732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:13.741065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:14.741240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:15.741798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:16.741983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:17.742257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:18.743102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:19.743751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:20.744326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:21.744975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:22.745119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:23.745258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:24.745384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:25.746062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:26.746356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:27.746990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:28.747358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:29.748146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:30.748320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:31.749249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:32.749431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:33.750216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:34.750434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:35.750951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:36.751068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:37.751260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:38.751490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:39.752333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:40.753337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:41.754101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:42.754267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:43.755002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:44.755101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:45.756118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:46.756267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:47.756418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:48.756536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:49.756651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:50.756863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:51.756973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:52.757357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:53.758246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:54.758497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:55.759076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:56.759280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:57.759807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:58.759923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:33:59.760219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:00.760285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:01.761071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:02.761349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:03.762183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:04.762365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:05.763338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:06.763442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:07.764087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:08.764262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:09.765017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:10.765170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:11.765376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:12.766327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:13.767259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:14.767362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:15.767906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:16.768198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:17.768345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:18.768593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:19.769331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:20.769441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:21.770006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:22.770125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:23.771279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:24.771553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:25.771927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:26.772069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:27.772214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:28.772973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:29.773031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:30.773234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:31.773916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:32.774324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:33.774417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:34.775356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:35.776404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:36.776636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:37.777346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:38.778851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:39.779710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:40.779926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:41.780461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:42.780617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:43.781407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:44.781597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:45.781680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:46.781922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:47.782042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:48.782264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:49.783323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:50.783428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:51.784324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:52.784423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:53.784520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:54.785327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:55.785864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:56.786064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:57.786936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:58.787280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:34:59.788202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:00.788281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:01.788982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:02.789331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:03.789524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:04.789628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:05.790515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:06.790616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:07.791626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:08.792413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:09.793447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:10.793550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:11.793670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:12.793742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:13.794248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:14.794300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:15.794395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:16.794479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:17.795503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:18.795600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:19.796342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:20.796540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:21.796935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:22.797358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:23.797647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:24.797771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:25.797883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:26.798108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:27.798866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:28.799064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:29.799759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:30.799862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:31.800523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:32.800735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:33.801801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:34.801908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:35.802521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:36.802596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:37.803636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:38.803716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:39.804591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:40.804684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:41.807859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:42.805750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:43.806739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:44.806863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:45.807674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:46.808344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:47.809112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:48.809403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:49.809468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:50.809572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:51.811651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:52.810337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:53.811059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:54.811290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:55.812354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:56.812456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-80951a44-45ec-40d7-9be4-2c73040026dd off the node ip-172-31-84-96 @ 10/19/24 13:35:56.887
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-80951a44-45ec-40d7-9be4-2c73040026dd @ 10/19/24 13:35:56.901
  I1019 13:35:56.906351 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5643" for this suite. @ 10/19/24 13:35:56.912
â€¢ [304.182 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 10/19/24 13:35:56.92
  I1019 13:35:56.920060 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 13:35:56.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:35:56.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:35:56.938
  I1019 13:35:56.959637 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1019 13:35:56.959657 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1019 13:35:56.968318 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I1019 13:35:56.968337 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1019 13:35:56.974479 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1019 13:35:56.974498 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1019 13:35:56.981095 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1019 13:35:56.981111 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1019 13:35:56.991182 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1019 13:35:56.991205 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1019 13:35:57.000221 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1019 13:35:57.000239 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1019 13:35:57.010009 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1019 13:35:57.010026 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1019 13:35:57.019664 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1019 13:35:57.019687 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1019 13:35:57.025931 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1019 13:35:57.025951 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1019 13:35:57.026037 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2759" for this suite. @ 10/19/24 13:35:57.032
â€¢ [0.123 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 10/19/24 13:35:57.043
  I1019 13:35:57.043388 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/19/24 13:35:57.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:35:57.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:35:57.066
  I1019 13:35:57.069330 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:35:57.813220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:35:58.095194 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1541" for this suite. @ 10/19/24 13:35:58.099
â€¢ [1.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 10/19/24 13:35:58.107
  I1019 13:35:58.107773 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename emptydir @ 10/19/24 13:35:58.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:35:58.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:35:58.126
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/19/24 13:35:58.129
  E1019 13:35:58.813888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:35:59.813961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:36:00.15
  I1019 13:36:00.154312 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-37796f08-076a-4ce5-8713-cf2668c14d09 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:36:00.174
  I1019 13:36:00.195268 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4181" for this suite. @ 10/19/24 13:36:00.199
â€¢ [2.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 10/19/24 13:36:00.207
  I1019 13:36:00.207188 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename security-context @ 10/19/24 13:36:00.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:36:00.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:36:00.226
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/19/24 13:36:00.228
  E1019 13:36:00.814351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:01.816331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:36:02.248
  I1019 13:36:02.256394 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod security-context-6e2b192d-8ec7-4648-9eec-b164501077d0 container test-container: <nil>
  STEP: delete the pod @ 10/19/24 13:36:02.265
  I1019 13:36:02.285410 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2543" for this suite. @ 10/19/24 13:36:02.289
â€¢ [2.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 10/19/24 13:36:02.299
  I1019 13:36:02.299777 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:36:02.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:36:02.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:36:02.321
  STEP: Creating the pod @ 10/19/24 13:36:02.323
  E1019 13:36:02.816441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:03.816533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:04.816761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:36:04.873453 20 pod_client.go:173] Successfully updated pod "annotationupdatefe5fc976-6499-4cf5-a4a0-96880e955776"
  E1019 13:36:05.816904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:06.817083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:07.817162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:08.817499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:36:08.899278 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-762" for this suite. @ 10/19/24 13:36:08.904
â€¢ [6.614 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/19/24 13:36:08.914
  I1019 13:36:08.914220 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename init-container @ 10/19/24 13:36:08.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:36:08.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:36:08.931
  STEP: creating the pod @ 10/19/24 13:36:08.934
  I1019 13:36:08.934251 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1019 13:36:09.818348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:10.818460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:11.819338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:12.819319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:13.819494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:14.820356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:15.820474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:16.820673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:17.820874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:18.821198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:19.821393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:20.821605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:21.821862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:22.822349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:23.823376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:24.824371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:25.825324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:26.826385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:27.826558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:28.827034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:29.827264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:30.827510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:31.828530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:32.828586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:33.828928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:34.829105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:35.829252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:36.829447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:37.829672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:38.830005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:39.829924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:40.830113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:41.830349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:42.830522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:43.830765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:44.831016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:45.831265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:46.831455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:36:47.726612 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-da4e9dbe-65d7-4cbf-9259-63508d749a42", GenerateName:"", Namespace:"init-container-8442", SelfLink:"", UID:"9a65cebf-0ca3-45bc-9928-334c7c5f29fc", ResourceVersion:"45334", Generation:0, CreationTimestamp:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"934230352"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052c8078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 19, 13, 36, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052c8120), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-2sjkw", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00107a740), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2sjkw", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2sjkw", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2sjkw", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00401c2d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-3-204", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000b4a280), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00401c360)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00401c380)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00401c388), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00401c38c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00560a7f0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 19, 13, 36, 10, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.3.204", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.3.204"}}, PodIP:"192.168.21.231", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.21.231"}}, StartTime:time.Date(2024, time.October, 19, 13, 36, 8, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003b63f0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003b65b0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://a41315b15a0607832717cad866316f895f4c22625f2adba9de645efaf30e4412", Started:(*bool)(0xc00401c43a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2sjkw", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00560a810)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00107a7a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00401c44d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2sjkw", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00560a820)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00107a780), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00401c40f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2sjkw", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00560a800)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1019 13:36:47.727160 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8442" for this suite. @ 10/19/24 13:36:47.732
â€¢ [38.826 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 10/19/24 13:36:47.739
  I1019 13:36:47.739973 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename statefulset @ 10/19/24 13:36:47.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:36:47.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:36:47.761
  STEP: Creating service test in namespace statefulset-1792 @ 10/19/24 13:36:47.763
  STEP: Looking for a node to schedule stateful set and pod @ 10/19/24 13:36:47.767
  STEP: Creating pod with conflicting port in namespace statefulset-1792 @ 10/19/24 13:36:47.774
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1792 @ 10/19/24 13:36:47.788
  E1019 13:36:47.832071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:48.832480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1792 @ 10/19/24 13:36:49.8
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1792 @ 10/19/24 13:36:49.812
  E1019 13:36:49.833466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:36:49.837785 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-1792, name: ss-0, uid: e07a1003-1e2d-4642-ab82-5e4872f2f7ab, status phase: Pending. Waiting for statefulset controller to delete.
  I1019 13:36:49.858900 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-1792, name: ss-0, uid: e07a1003-1e2d-4642-ab82-5e4872f2f7ab, status phase: Failed. Waiting for statefulset controller to delete.
  I1019 13:36:49.881291 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-1792, name: ss-0, uid: e07a1003-1e2d-4642-ab82-5e4872f2f7ab, status phase: Failed. Waiting for statefulset controller to delete.
  I1019 13:36:49.887904 20 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-1792
  STEP: Removing pod with conflicting port in namespace statefulset-1792 @ 10/19/24 13:36:49.887
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1792 and will be in running state @ 10/19/24 13:36:49.904
  E1019 13:36:50.834346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:51.836305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:36:51.914912 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1792
  I1019 13:36:51.918831 20 rest.go:150] Scaling statefulset ss to 0
  E1019 13:36:52.836409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:53.836605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:54.836872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:55.837167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:56.837422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:57.837643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:58.838055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:36:59.838174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:00.838363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:01.838622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:37:01.936403 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1019 13:37:01.940609 20 rest.go:88] Deleting statefulset ss
  I1019 13:37:01.958420 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1792" for this suite. @ 10/19/24 13:37:01.962
â€¢ [14.230 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 10/19/24 13:37:01.97
  I1019 13:37:01.970167 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replication-controller @ 10/19/24 13:37:01.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:37:01.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:37:01.988
  STEP: Creating replication controller my-hostname-basic-73099718-aeeb-4c51-87e4-ecdfc1a8d1ec @ 10/19/24 13:37:01.99
  I1019 13:37:02.001265 20 resource.go:87] Pod name my-hostname-basic-73099718-aeeb-4c51-87e4-ecdfc1a8d1ec: Found 0 pods out of 1
  E1019 13:37:02.838742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:03.839089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:04.839236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:05.839359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:06.839462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:37:07.005752 20 resource.go:87] Pod name my-hostname-basic-73099718-aeeb-4c51-87e4-ecdfc1a8d1ec: Found 1 pods out of 1
  I1019 13:37:07.005789 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-73099718-aeeb-4c51-87e4-ecdfc1a8d1ec" are running
  I1019 13:37:07.010013 20 rc.go:523] Pod "my-hostname-basic-73099718-aeeb-4c51-87e4-ecdfc1a8d1ec-5b6z4" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:37:02 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:37:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:37:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:37:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-19 13:37:02 +0000 UTC Reason: Message:}])
  I1019 13:37:07.010036 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/19/24 13:37:07.01
  I1019 13:37:07.023797 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9456" for this suite. @ 10/19/24 13:37:07.027
â€¢ [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 10/19/24 13:37:07.035
  I1019 13:37:07.035434 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 13:37:07.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:37:07.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:37:07.051
  E1019 13:37:07.839526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:08.840344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:09.841410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:10.841609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:11.842902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:12.842588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:13.843370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:14.843474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:15.844463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:16.845354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:17.845495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:18.846541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:19.847571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:20.847740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:21.848517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:22.848631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:23.849351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:24.849449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:25.849544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:26.849610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:27.850352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:28.851341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:37:29.138759 20 container_probe.go:92] Container started at 2024-10-19 13:37:07 +0000 UTC, pod became ready at 2024-10-19 13:37:27 +0000 UTC
  I1019 13:37:29.138870 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8326" for this suite. @ 10/19/24 13:37:29.143
â€¢ [22.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 10/19/24 13:37:29.151
  I1019 13:37:29.151591 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:37:29.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:37:29.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:37:29.169
  STEP: creating a Service @ 10/19/24 13:37:29.177
  STEP: watching for the Service to be added @ 10/19/24 13:37:29.194
  I1019 13:37:29.196230 20 service.go:3445] Found Service test-service-hscqp in namespace services-8248 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30386}]
  I1019 13:37:29.196255 20 service.go:3452] Service test-service-hscqp created
  STEP: Getting /status @ 10/19/24 13:37:29.196
  I1019 13:37:29.201656 20 service.go:3463] Service test-service-hscqp has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/19/24 13:37:29.201
  STEP: watching for the Service to be patched @ 10/19/24 13:37:29.207
  I1019 13:37:29.209178 20 service.go:3486] observed Service test-service-hscqp in namespace services-8248 with annotations: map[] & LoadBalancer: {[]}
  I1019 13:37:29.209201 20 service.go:3489] Found Service test-service-hscqp in namespace services-8248 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003e71e60 []}]}
  I1019 13:37:29.209211 20 service.go:3496] Service test-service-hscqp has service status patched
  STEP: updating the ServiceStatus @ 10/19/24 13:37:29.209
  I1019 13:37:29.220101 20 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/19/24 13:37:29.22
  I1019 13:37:29.221529 20 service.go:3527] Observed Service test-service-hscqp in namespace services-8248 with annotations: map[] & Conditions: []
  I1019 13:37:29.221547 20 service.go:3538] Observed Service test-service-hscqp in namespace services-8248 with annotations: map[patchedstatus:true] & Conditions: []
  I1019 13:37:29.221570 20 service.go:3534] Found Service test-service-hscqp in namespace services-8248 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1019 13:37:29.221578 20 service.go:3545] Service test-service-hscqp has service status updated
  STEP: patching the service @ 10/19/24 13:37:29.221
  STEP: watching for the Service to be patched @ 10/19/24 13:37:29.233
  I1019 13:37:29.235320 20 service.go:3568] observed Service test-service-hscqp in namespace services-8248 with labels: map[test-service-static:true]
  I1019 13:37:29.235344 20 service.go:3568] observed Service test-service-hscqp in namespace services-8248 with labels: map[test-service-static:true]
  I1019 13:37:29.235404 20 service.go:3568] observed Service test-service-hscqp in namespace services-8248 with labels: map[test-service-static:true]
  I1019 13:37:29.235418 20 service.go:3571] Found Service test-service-hscqp in namespace services-8248 with labels: map[test-service:patched test-service-static:true]
  I1019 13:37:29.235427 20 service.go:3578] Service test-service-hscqp patched
  STEP: deleting the service @ 10/19/24 13:37:29.235
  STEP: watching for the Service to be deleted @ 10/19/24 13:37:29.257
  I1019 13:37:29.258327 20 service.go:3602] Observed event: ADDED
  I1019 13:37:29.258343 20 service.go:3602] Observed event: MODIFIED
  I1019 13:37:29.258352 20 service.go:3602] Observed event: MODIFIED
  I1019 13:37:29.258410 20 service.go:3602] Observed event: MODIFIED
  I1019 13:37:29.258432 20 service.go:3598] Found Service test-service-hscqp in namespace services-8248 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1019 13:37:29.258440 20 service.go:3607] Service test-service-hscqp deleted
  I1019 13:37:29.258537 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8248" for this suite. @ 10/19/24 13:37:29.263
â€¢ [0.119 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/19/24 13:37:29.27
  I1019 13:37:29.270931 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:37:29.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:37:29.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:37:29.29
  STEP: Creating secret with name s-test-opt-del-f103d743-18d2-4e9e-a326-63ef73b8c72a @ 10/19/24 13:37:29.295
  STEP: Creating secret with name s-test-opt-upd-266c0b3d-989d-4b28-bb77-5d388cc23fa6 @ 10/19/24 13:37:29.302
  STEP: Creating the pod @ 10/19/24 13:37:29.307
  E1019 13:37:29.851451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:30.851558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f103d743-18d2-4e9e-a326-63ef73b8c72a @ 10/19/24 13:37:31.358
  STEP: Updating secret s-test-opt-upd-266c0b3d-989d-4b28-bb77-5d388cc23fa6 @ 10/19/24 13:37:31.366
  STEP: Creating secret with name s-test-opt-create-a769d475-9c89-4223-963d-e01b994d6e71 @ 10/19/24 13:37:31.372
  STEP: waiting to observe update in volume @ 10/19/24 13:37:31.377
  E1019 13:37:31.852369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:32.852473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:33.852572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:34.852671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:35.853252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:36.853391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:37.853471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:38.854334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:39.854705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:40.854808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:41.854917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:42.855023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:43.855793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:44.855930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:45.856044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:46.856189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:47.856283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:48.856453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:49.857448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:50.857584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:51.858356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:52.858539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:53.858662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:54.858758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:55.859360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:56.859480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:57.859592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:58.859710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:37:59.859817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:00.859957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:01.861311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:02.861468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:03.862349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:04.862905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:05.863466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:06.864369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:07.865017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:08.865093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:09.866045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:10.866121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:11.866485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:12.866605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:13.867383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:14.867471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:15.867555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:16.867644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:17.868346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:18.868467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:19.868567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:20.868659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:21.869103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:22.869293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:23.870265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:24.870482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:25.871413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:26.871443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:27.872269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:28.872622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:29.873519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:30.873615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:31.874324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:32.874453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:33.874898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:34.875036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:38:35.706911 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3676" for this suite. @ 10/19/24 13:38:35.712
â€¢ [66.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 10/19/24 13:38:35.721
  I1019 13:38:35.721072 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:38:35.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:38:35.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:38:35.74
  STEP: Setting up server cert @ 10/19/24 13:38:35.768
  E1019 13:38:35.875224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:38:36.172
  STEP: Deploying the webhook pod @ 10/19/24 13:38:36.183
  STEP: Wait for the deployment to be ready @ 10/19/24 13:38:36.198
  I1019 13:38:36.205756 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1019 13:38:36.875600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:37.875696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:38:38.22
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:38:38.235
  E1019 13:38:38.875999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:38:39.235867 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/19/24 13:38:39.246
  STEP: create the configmap with a random name @ 10/19/24 13:38:39.262
  STEP: verify the configmap is mutated @ 10/19/24 13:38:39.274
  STEP: create the configmap with 'skip-me' name @ 10/19/24 13:38:39.274
  I1019 13:38:39.337108 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9595" for this suite. @ 10/19/24 13:38:39.344
  STEP: Destroying namespace "webhook-markers-3881" for this suite. @ 10/19/24 13:38:39.352
â€¢ [3.639 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/19/24 13:38:39.36
  I1019 13:38:39.360275 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename tables @ 10/19/24 13:38:39.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:38:39.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:38:39.378
  I1019 13:38:39.384004 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-357" for this suite. @ 10/19/24 13:38:39.387
â€¢ [0.035 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 10/19/24 13:38:39.395
  I1019 13:38:39.395690 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replicaset @ 10/19/24 13:38:39.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:38:39.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:38:39.415
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/19/24 13:38:39.418
  E1019 13:38:39.876714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:40.876806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 10/19/24 13:38:41.444
  STEP: Then the orphan pod is adopted @ 10/19/24 13:38:41.451
  E1019 13:38:41.876938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 10/19/24 13:38:42.46
  I1019 13:38:42.465454 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/19/24 13:38:42.477
  E1019 13:38:42.877654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:38:43.489516 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5992" for this suite. @ 10/19/24 13:38:43.494
â€¢ [4.107 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/19/24 13:38:43.502
  I1019 13:38:43.502862 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename projected @ 10/19/24 13:38:43.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:38:43.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:38:43.521
  STEP: Creating projection with secret that has name projected-secret-test-map-d103939e-f275-409b-a1ad-71979aa09d05 @ 10/19/24 13:38:43.525
  STEP: Creating a pod to test consume secrets @ 10/19/24 13:38:43.53
  E1019 13:38:43.878360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:44.878432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:45.878904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:46.879021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:38:47.556
  I1019 13:38:47.560996 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-projected-secrets-5a185af4-ba6f-4774-8c79-7129ef580724 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/19/24 13:38:47.569
  I1019 13:38:47.589323 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9519" for this suite. @ 10/19/24 13:38:47.593
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/19/24 13:38:47.601
  I1019 13:38:47.601797 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename subpath @ 10/19/24 13:38:47.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:38:47.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:38:47.621
  STEP: Setting up data @ 10/19/24 13:38:47.626
  STEP: Creating pod pod-subpath-test-projected-j8j4 @ 10/19/24 13:38:47.639
  STEP: Creating a pod to test atomic-volume-subpath @ 10/19/24 13:38:47.639
  E1019 13:38:47.879117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:48.879207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:49.880028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:50.880208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:51.880325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:52.880437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:53.880857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:54.880959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:55.881958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:56.882074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:57.882797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:58.882918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:38:59.883748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:00.884078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:01.884290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:02.885355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:03.885454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:04.886491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:05.887171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:06.887293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:07.887404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:08.887495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:09.888017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:10.888081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:39:11.727
  I1019 13:39:11.732355 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-subpath-test-projected-j8j4 container test-container-subpath-projected-j8j4: <nil>
  STEP: delete the pod @ 10/19/24 13:39:11.741
  STEP: Deleting pod pod-subpath-test-projected-j8j4 @ 10/19/24 13:39:11.758
  I1019 13:39:11.758049 20 delete.go:62] Deleting pod "pod-subpath-test-projected-j8j4" in namespace "subpath-6649"
  I1019 13:39:11.762472 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6649" for this suite. @ 10/19/24 13:39:11.766
â€¢ [24.175 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 10/19/24 13:39:11.776
  I1019 13:39:11.776725 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 13:39:11.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:39:11.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:39:11.799
  STEP: Creating pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581 @ 10/19/24 13:39:11.801
  E1019 13:39:11.888851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:12.889124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 13:39:13.825
  I1019 13:39:13.829702 20 container_probe.go:1749] Initial restart count of pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 is 0
  I1019 13:39:13.834164 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:13.889335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:14.889468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:15.839559 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:15.889734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:16.889948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:17.845509 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:17.890631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:18.891012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:19.850855 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:19.892003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:20.892123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:21.856252 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:21.892424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:22.892606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:23.861258 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:23.893417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:24.893518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:25.866340 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:25.894489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:26.894643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:27.872341 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:27.895487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:28.895633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:29.878548 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:29.896652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:30.896801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:31.884498 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:31.897596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:32.897803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:33.889422 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:33.898595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:34.898727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:35.895341 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:35.899437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:36.899607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:37.899630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:37.900049 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:38.899782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:39.899897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:39.906171 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:40.900015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:41.900258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:41.911519 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:42.900520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:43.900643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:43.917638 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:44.900757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:45.900977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:45.923290 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:46.901407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:47.901524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:47.929656 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:48.901659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:49.901768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:49.934855 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:50.901886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:51.902074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:51.940542 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:52.903066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:53.903293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:53.946996 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:54.904379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:55.905346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:55.952164 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:56.905454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:57.905572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:57.957331 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:39:58.906347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:39:59.906486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:39:59.963283 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:00.906630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:01.907401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:01.969441 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:02.908481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:03.908569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:03.976033 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:04.909032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:05.909119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:05.981463 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:06.909262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:07.909300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:07.986268 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:08.910386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:09.910492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:09.991298 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:10.910608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:11.910728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:11.998407 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:12.910854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:13.911233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:14.004474 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:14.911460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:15.911560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:16.015064 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:16.911808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:17.911917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:18.020084 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:18.912053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:19.912186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:20.025818 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:20.912594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:21.913457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:22.031388 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:22.914291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:23.915323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:24.037186 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:24.915448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:25.915536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:26.042739 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:26.915650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:27.915761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:28.048985 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:28.915842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:29.915985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:30.054564 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:30.916205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:31.916351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:32.061559 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:32.916519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:33.916580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:34.066391 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:34.917299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:35.917394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:36.071565 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:36.917451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:37.917686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:38.077711 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:38.917986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:39.917975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:40.084416 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:40.917995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:41.918201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:42.090594 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:42.918292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:43.918593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:44.096948 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:44.918712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:45.918921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:46.101937 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:46.919035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:47.919163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:48.108164 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:48.919554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:49.920340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:50.113769 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:50.921334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:51.921504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:52.120355 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:52.922187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:53.922268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:54.125517 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:54.923322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:55.923414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:56.131494 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:56.924333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:57.924417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:40:58.136512 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:40:58.925357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:40:59.925474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:00.142360 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:00.926316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:01.927321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:02.148445 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:02.927358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:03.927442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:04.154600 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:04.927489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:05.927564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:06.160205 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:06.927679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:07.927779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:08.165784 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:08.928384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:09.928558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:10.171267 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:10.928994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:11.929231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:12.177647 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:12.929305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:13.929483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:14.182366 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:14.929649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:15.929767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:16.188714 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:16.930516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:17.930635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:18.194692 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:18.931372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:19.931472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:20.199936 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:20.931749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:21.931867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:22.205664 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:22.931961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:23.932176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:24.211838 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:24.932290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:25.932398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:26.218533 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:26.933154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:27.933306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:28.224630 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:28.934361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:29.934458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:30.229642 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:30.935368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:31.936238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:32.237217 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:32.936349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:33.936649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:34.242214 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:34.936798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:35.936913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:36.247194 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:36.937420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:37.937529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:38.253666 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:38.937596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:39.937698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:40.259515 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:40.937838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:41.937943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:42.265397 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:42.938061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:43.938205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:44.271657 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:44.938310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:45.939369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:46.277487 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:46.940285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:47.940681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:48.283615 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:48.941315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:49.941423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:50.288383 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:50.941568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:51.941682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:52.295160 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:52.941841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:53.942028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:54.300906 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:54.942382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:55.942481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:56.307244 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:56.942872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:57.942966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:41:58.312001 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:41:58.943757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:41:59.943852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:00.317977 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:00.944362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:01.944458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:02.324148 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:02.944553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:03.944665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:04.330547 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:04.944755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:05.945364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:06.335546 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:06.946357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:07.946712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:08.341852 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:08.947617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:09.947809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:10.347767 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:10.947978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:11.948168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:12.354382 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:12.949214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:13.949309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:14.359457 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:14.950179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:15.950388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:16.365280 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:16.951257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:17.951472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:18.371894 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:18.951510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:19.951729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:20.377294 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:20.951851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:21.952001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:22.382946 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:22.952849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:23.952948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:24.388452 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:24.953044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:25.953178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:26.394395 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:26.954042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:27.954175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:28.400638 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:28.954398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:29.955365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:30.406037 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:30.955460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:31.955575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:32.411180 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:32.956353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:33.956459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:34.417015 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:34.956575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:35.956940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:36.422595 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:36.957234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:37.957466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:38.428432 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:38.957766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:39.957964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:40.434064 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:40.958682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:41.958794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:42.438935 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:42.959564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:43.959666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:44.445256 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:44.959782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:45.959987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:46.451204 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:46.960804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:47.960938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:48.456771 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:48.961079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:49.961642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:50.461603 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:50.961737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:51.961930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:52.467510 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:52.962024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:53.962257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:54.473823 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:54.963006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:55.963113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:56.479527 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:56.964074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:57.964261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:42:58.485152 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:42:58.965320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:42:59.966314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:00.491112 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:00.966445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:01.966647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:02.497256 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:02.966748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:03.966863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:04.502314 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:04.966890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:05.967086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:06.508200 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:06.967891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:07.968094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:08.513741 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:08.968333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:09.968526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:10.519790 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:10.969403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:11.969534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:12.525930 20 container_probe.go:1759] Get pod test-webserver-25127f33-98d4-497f-9bbb-d928a16a99e5 in namespace container-probe-4581
  E1019 13:43:12.970471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:13.971339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/19/24 13:43:14.526
  I1019 13:43:14.541234 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4581" for this suite. @ 10/19/24 13:43:14.545
â€¢ [242.777 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 10/19/24 13:43:14.554
  I1019 13:43:14.554476 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename daemonsets @ 10/19/24 13:43:14.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:14.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:14.58
  STEP: Creating simple DaemonSet "daemon-set" @ 10/19/24 13:43:14.603
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/19/24 13:43:14.61
  I1019 13:43:14.616678 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:43:14.616705 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:43:14.621653 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1019 13:43:14.621673 20 fixtures.go:130] Node ip-172-31-22-96 is running 0 daemon pod, expected 1
  E1019 13:43:14.972185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:15.615256 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-4-205 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:43:15.615297 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-83-159 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1019 13:43:15.618908 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1019 13:43:15.618929 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/19/24 13:43:15.623
  STEP: DeleteCollection of the DaemonSets @ 10/19/24 13:43:15.627
  STEP: Verify that ReplicaSets have been deleted @ 10/19/24 13:43:15.639
  I1019 13:43:15.654180 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46643"},"items":null}

  I1019 13:43:15.661482 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46647"},"items":[{"metadata":{"name":"daemon-set-dwflg","generateName":"daemon-set-","namespace":"daemonsets-609","uid":"b0cd8e9c-29da-499a-b35e-1959bed06f72","resourceVersion":"46646","creationTimestamp":"2024-10-19T13:43:14Z","deletionTimestamp":"2024-10-19T13:43:45Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"87956613-a1eb-4751-8c4c-88bfa675ad78","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-19T13:43:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"87956613-a1eb-4751-8c4c-88bfa675ad78\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-19T13:43:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.21.237\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8pg5p","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8pg5p","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-204","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-204"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:14Z"}],"hostIP":"172.31.3.204","hostIPs":[{"ip":"172.31.3.204"}],"podIP":"192.168.21.237","podIPs":[{"ip":"192.168.21.237"}],"startTime":"2024-10-19T13:43:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-19T13:43:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9f550b254d0c3f6c2a3d48c1f0940e3841f49b62c34be60b6ac7933619b1da2f","started":true,"volumeMounts":[{"name":"kube-api-access-8pg5p","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ndd6h","generateName":"daemon-set-","namespace":"daemonsets-609","uid":"8078697f-a20f-45e4-81d5-97f06d134053","resourceVersion":"46645","creationTimestamp":"2024-10-19T13:43:14Z","deletionTimestamp":"2024-10-19T13:43:45Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"87956613-a1eb-4751-8c4c-88bfa675ad78","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-19T13:43:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"87956613-a1eb-4751-8c4c-88bfa675ad78\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-19T13:43:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.243.147\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vthmv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vthmv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-96","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-96"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:14Z"}],"hostIP":"172.31.22.96","hostIPs":[{"ip":"172.31.22.96"}],"podIP":"192.168.243.147","podIPs":[{"ip":"192.168.243.147"}],"startTime":"2024-10-19T13:43:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-19T13:43:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2b4714c780a6a527eda64324c5fe1cf1b343f153d84a8be4f78296f8dccc82a2","started":true,"volumeMounts":[{"name":"kube-api-access-vthmv","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-x85pj","generateName":"daemon-set-","namespace":"daemonsets-609","uid":"ce60780b-80e2-4d7c-945e-28f78e7f9946","resourceVersion":"46647","creationTimestamp":"2024-10-19T13:43:14Z","deletionTimestamp":"2024-10-19T13:43:45Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"87956613-a1eb-4751-8c4c-88bfa675ad78","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-19T13:43:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"87956613-a1eb-4751-8c4c-88bfa675ad78\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-19T13:43:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.73.95\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4tk9p","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4tk9p","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-84-96","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-84-96"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-19T13:43:14Z"}],"hostIP":"172.31.84.96","hostIPs":[{"ip":"172.31.84.96"}],"podIP":"192.168.73.95","podIPs":[{"ip":"192.168.73.95"}],"startTime":"2024-10-19T13:43:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-19T13:43:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://710805a846daf2e41ec5c2d96f807728528bfbae9d7e9bd88ee27c51b6ea8c33","started":true,"volumeMounts":[{"name":"kube-api-access-4tk9p","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1019 13:43:15.677396 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-609" for this suite. @ 10/19/24 13:43:15.681
â€¢ [1.135 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 10/19/24 13:43:15.689
  I1019 13:43:15.689768 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename configmap @ 10/19/24 13:43:15.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:15.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:15.707
  STEP: Creating configMap that has name configmap-test-emptyKey-b2a73437-9076-47f1-8810-5c4dac52a73e @ 10/19/24 13:43:15.71
  I1019 13:43:15.711798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5176" for this suite. @ 10/19/24 13:43:15.715
â€¢ [0.032 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 10/19/24 13:43:15.722
  I1019 13:43:15.722106 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:43:15.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:15.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:15.74
  STEP: creating service in namespace services-6748 @ 10/19/24 13:43:15.743
  STEP: creating service affinity-nodeport in namespace services-6748 @ 10/19/24 13:43:15.743
  STEP: creating replication controller affinity-nodeport in namespace services-6748 @ 10/19/24 13:43:15.761
  I1019 13:43:15.769992      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6748, replica count: 3
  E1019 13:43:15.973076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:16.973593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:17.973695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:18.821862      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1019 13:43:18.835938 20 resource.go:361] Creating new exec pod
  E1019 13:43:18.974171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:19.974284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:20.974894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:21.855347 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6748 exec execpod-affinityfwfpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1019 13:43:21.947617 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1019 13:43:21.947661 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 13:43:21.947743 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6748 exec execpod-affinityfwfpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  E1019 13:43:21.975143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:22.024878 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [tcp/http] succeeded!\n"
  I1019 13:43:22.024916 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 13:43:22.024991 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6748 exec execpod-affinityfwfpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.204 31600'
  I1019 13:43:22.106687 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.204 31600\nConnection to 172.31.3.204 31600 port [tcp/*] succeeded!\n"
  I1019 13:43:22.106729 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 13:43:22.106801 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6748 exec execpod-affinityfwfpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.96 31600'
  I1019 13:43:22.189235 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.96 31600\nConnection to 172.31.22.96 31600 port [tcp/*] succeeded!\n"
  I1019 13:43:22.189278 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1019 13:43:22.189345 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=services-6748 exec execpod-affinityfwfpq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.96:31600/ ; done'
  I1019 13:43:22.343409 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.96:31600/\n"
  I1019 13:43:22.343464 20 builder.go:147] stdout: "\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m\naffinity-nodeport-w9m4m"
  I1019 13:43:22.343479 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343487 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343493 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343499 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343508 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343514 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343519 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343524 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343531 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343538 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343549 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343554 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343559 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343593 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343599 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343604 20 service.go:242] Received response from host: affinity-nodeport-w9m4m
  I1019 13:43:22.343713 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6748, will wait for the garbage collector to delete the pods @ 10/19/24 13:43:22.36
  I1019 13:43:22.425791 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 9.620666ms
  I1019 13:43:22.526195 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.399193ms
  E1019 13:43:22.975225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:23.975891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:24.975962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:25.655335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6748" for this suite. @ 10/19/24 13:43:25.659
â€¢ [9.946 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/19/24 13:43:25.668
  I1019 13:43:25.668107 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename containers @ 10/19/24 13:43:25.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:25.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:25.688
  E1019 13:43:25.976069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:26.976316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:27.731758 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5593" for this suite. @ 10/19/24 13:43:27.736
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 10/19/24 13:43:27.744
  I1019 13:43:27.744930 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename replicaset @ 10/19/24 13:43:27.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:27.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:27.762
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/19/24 13:43:27.764
  I1019 13:43:27.774538 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1019 13:43:27.976922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:28.977060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:29.977308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:30.978211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:31.978403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:32.782665 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/19/24 13:43:32.782
  STEP: getting scale subresource @ 10/19/24 13:43:32.782
  STEP: updating a scale subresource @ 10/19/24 13:43:32.786
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/19/24 13:43:32.792
  STEP: Patch a scale subresource @ 10/19/24 13:43:32.796
  I1019 13:43:32.810147 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7445" for this suite. @ 10/19/24 13:43:32.813
â€¢ [5.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 10/19/24 13:43:32.825
  I1019 13:43:32.825070 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/19/24 13:43:32.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:32.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:32.844
  STEP: create the container to handle the HTTPGet hook request. @ 10/19/24 13:43:32.85
  E1019 13:43:32.979448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:33.979561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/19/24 13:43:34.876
  E1019 13:43:34.979756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:35.979873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/19/24 13:43:36.899
  E1019 13:43:36.980261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:37.980354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/19/24 13:43:38.919
  I1019 13:43:38.938373 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8872" for this suite. @ 10/19/24 13:43:38.942
â€¢ [6.126 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 10/19/24 13:43:38.951
  I1019 13:43:38.951655 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/19/24 13:43:38.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:38.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:38.969
  I1019 13:43:38.975108 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4983" for this suite. @ 10/19/24 13:43:38.979
  E1019 13:43:38.980336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [0.036 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 10/19/24 13:43:38.987
  I1019 13:43:38.987972 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename job @ 10/19/24 13:43:38.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:39.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:39.003
  STEP: Creating Indexed job @ 10/19/24 13:43:39.006
  STEP: Ensuring job reaches completions @ 10/19/24 13:43:39.012
  E1019 13:43:39.980460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:40.981362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:41.981488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:42.981607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:43.982522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:44.982680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:45.982765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:46.982855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:47.983791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:48.983878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 10/19/24 13:43:49.022
  I1019 13:43:49.026495 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9506" for this suite. @ 10/19/24 13:43:49.031
â€¢ [10.051 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 10/19/24 13:43:49.039
  I1019 13:43:49.039036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 13:43:49.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:43:49.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:43:49.059
  STEP: Creating pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420 @ 10/19/24 13:43:49.061
  E1019 13:43:49.984293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:50.984386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 13:43:51.082
  I1019 13:43:51.086257 20 container_probe.go:1749] Initial restart count of pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 is 0
  I1019 13:43:51.090568 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:43:51.984487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:52.985369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:53.096147 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:43:53.986282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:54.986333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:55.102005 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:43:55.986408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:56.986564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:57.107222 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:43:57.987121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:43:58.987306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:43:59.113173 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:43:59.987415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:00.987506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:01.118614 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:01.987598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:02.987692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:03.124072 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:03.987817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:04.987928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:05.129762 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:05.988678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:06.988912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:07.135329 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:07.989263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:08.989469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:09.141354 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:09.989598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:10.989743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:11.146522 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  I1019 13:44:11.146554 20 container_probe.go:1763] Restart count of pod container-probe-1420/liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 is now 1 (20.060262309s elapsed)
  E1019 13:44:11.990395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:12.990614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:13.151953 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:13.990755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:14.990867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:15.156986 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:15.991927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:16.992202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:17.162748 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:17.992616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:18.992713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:19.167437 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:19.993670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:20.993768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:21.173541 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:21.994289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:22.994387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:23.178249 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:23.995362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:24.995463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:25.184397 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:25.995574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:26.995664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:27.189727 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:27.996364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:28.996546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:29.195105 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:29.996723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:30.996845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:31.200019 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  I1019 13:44:31.200064 20 container_probe.go:1763] Restart count of pod container-probe-1420/liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 is now 2 (40.113773224s elapsed)
  E1019 13:44:31.997906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:32.998114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:33.206423 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:33.998293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:34.998413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:35.211790 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:35.998520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:36.998673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:37.217489 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:37.999301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:38.999689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:39.223006 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:39.999858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:41.000078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:41.227680 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:42.000267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:43.000453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:43.233335 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:44.001264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:45.001489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:45.239944 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:46.001606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:47.002375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:47.245399 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:48.003249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:49.003352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:49.250794 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:50.003453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:51.004323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:51.256360 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  I1019 13:44:51.256396 20 container_probe.go:1763] Restart count of pod container-probe-1420/liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 is now 3 (1m0.17010447s elapsed)
  E1019 13:44:52.005205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:53.005271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:53.261466 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:54.005324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:55.006329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:55.266423 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:56.007299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:57.007501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:57.271215 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:44:58.007989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:44:59.008323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:44:59.277687 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:00.008484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:01.008737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:01.283431 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:02.009234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:03.009430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:03.289388 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:04.010119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:05.010366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:05.294010 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:06.010482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:07.010699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:07.298923 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:08.011754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:09.011857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:09.304179 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:10.011945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:11.012720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:11.309284 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  I1019 13:45:11.309316 20 container_probe.go:1763] Restart count of pod container-probe-1420/liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 is now 4 (1m20.223025128s elapsed)
  E1019 13:45:12.012819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:13.013666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:13.314636 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:14.014256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:15.014359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:15.320881 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:16.014448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:17.014527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:17.328066 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:18.015359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:19.015484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:19.333686 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:20.016375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:21.016587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:21.339208 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:22.016706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:23.016814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:23.345614 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:24.017292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:25.017496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:25.350492 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:26.017686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:27.017902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:27.355545 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:28.018241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:29.018506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:29.361077 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:30.018796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:31.018946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:31.366300 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:32.019048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:33.019212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:33.372394 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:34.020214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:35.020426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:35.377618 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:36.021385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:37.021539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:37.383409 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:38.022104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:39.022458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:39.389424 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:40.022588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:41.023410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:41.398929 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:42.024364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:43.024465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:43.405606 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:44.025288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:45.025386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:45.410951 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:46.026358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:47.026464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:47.417460 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:48.027116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:49.027331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:49.422327 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:50.028079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:51.028330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:51.428926 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:52.028558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:53.028797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:53.435517 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:54.028953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:55.029073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:55.441409 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:56.029201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:57.029277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:57.447023 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:45:58.029702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:45:59.030024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:45:59.452693 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:00.030208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:01.030403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:01.457416 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:02.031156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:03.031378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:03.463310 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:04.031515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:05.032361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:05.470003 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:06.032486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:07.032574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:07.475901 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:08.033434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:09.034329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:09.482517 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:10.035199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:11.035361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:11.487899 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:12.035491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:13.035567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:13.493681 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:14.036292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:15.036390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:15.499474 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:16.037083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:17.037317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:17.505811 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:18.037430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:19.037696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:19.511526 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  E1019 13:46:20.037808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:21.038027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:21.516863 20 container_probe.go:1759] Get pod liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 in namespace container-probe-1420
  I1019 13:46:21.516897 20 container_probe.go:1763] Restart count of pod container-probe-1420/liveness-fb150628-9771-447d-9d6d-fe1e531c82e0 is now 5 (2m30.430606061s elapsed)
  STEP: deleting the pod @ 10/19/24 13:46:21.516
  I1019 13:46:21.533002 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1420" for this suite. @ 10/19/24 13:46:21.537
â€¢ [152.507 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 10/19/24 13:46:21.546
  I1019 13:46:21.546031 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 13:46:21.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:21.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:21.563
  I1019 13:46:21.572014 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-3410"
  I1019 13:46:21.579263 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-3410"
  E1019 13:46:22.039002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 10/19/24 13:46:22.08
  I1019 13:46:22.084847 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-3410"
  I1019 13:46:22.090916 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-3410"
  STEP: waiting for the root ca configmap reconciled @ 10/19/24 13:46:22.591
  I1019 13:46:22.596508 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-3410"
  I1019 13:46:22.596617 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3410" for this suite. @ 10/19/24 13:46:22.6
â€¢ [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 10/19/24 13:46:22.609
  I1019 13:46:22.609611 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pv @ 10/19/24 13:46:22.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:22.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:22.63
  STEP: Creating initial PV and PVC @ 10/19/24 13:46:22.633
  I1019 13:46:22.633061 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4193" @ 10/19/24 13:46:22.646
  STEP: Listing PVCs in namespace "pv-4193" @ 10/19/24 13:46:22.651
  STEP: Reading "pvc-dx5hh" Status @ 10/19/24 13:46:22.655
  STEP: Reading "pv-4193-rl9vz" Status @ 10/19/24 13:46:22.659
  STEP: Patching "pvc-dx5hh" Status @ 10/19/24 13:46:22.666
  STEP: Patching "pv-4193-rl9vz" Status @ 10/19/24 13:46:22.673
  STEP: Updating "pvc-dx5hh" Status @ 10/19/24 13:46:22.678
  STEP: Updating "pv-4193-rl9vz" Status @ 10/19/24 13:46:22.687
  I1019 13:46:22.719414 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1019 13:46:22.719444 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-dx5hh"
  I1019 13:46:22.726681 20 pv.go:193] Deleting PersistentVolume "pv-4193-rl9vz"
  I1019 13:46:22.736337 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4193" for this suite. @ 10/19/24 13:46:22.74
â€¢ [0.139 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 10/19/24 13:46:22.748
  I1019 13:46:22.748259 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename gc @ 10/19/24 13:46:22.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:22.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:22.769
  STEP: create the rc @ 10/19/24 13:46:22.771
  W1019 13:46:22.779495      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1019 13:46:23.039982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:24.040111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:25.040307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:26.040510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:27.040599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/19/24 13:46:27.785
  STEP: wait for all pods to be garbage collected @ 10/19/24 13:46:27.791
  E1019 13:46:28.041451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:29.041638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:30.041832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:31.041939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:32.042661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/19/24 13:46:32.8
  W1019 13:46:32.806655      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1019 13:46:32.806685 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1019 13:46:32.806814 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1987" for this suite. @ 10/19/24 13:46:32.811
â€¢ [10.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/19/24 13:46:32.819
  I1019 13:46:32.819788 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 13:46:32.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:32.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:32.838
  STEP: Create set of pods @ 10/19/24 13:46:32.841
  I1019 13:46:32.854739 20 pods.go:871] created test-pod-1
  I1019 13:46:32.863219 20 pods.go:871] created test-pod-2
  I1019 13:46:32.871950 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/19/24 13:46:32.871
  E1019 13:46:33.043372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:34.043479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 10/19/24 13:46:34.909
  I1019 13:46:34.914085 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1019 13:46:35.044282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:35.915454 20 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E1019 13:46:36.044686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:36.915567 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2588" for this suite. @ 10/19/24 13:46:36.919
â€¢ [4.108 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 10/19/24 13:46:36.927
  I1019 13:46:36.927650 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename resourcequota @ 10/19/24 13:46:36.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:36.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:36.946
  STEP: Creating a ResourceQuota with terminating scope @ 10/19/24 13:46:36.948
  STEP: Ensuring ResourceQuota status is calculated @ 10/19/24 13:46:36.955
  E1019 13:46:37.045346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:38.045502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 10/19/24 13:46:38.961
  STEP: Ensuring ResourceQuota status is calculated @ 10/19/24 13:46:38.966
  E1019 13:46:39.045769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:40.045710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 10/19/24 13:46:40.972
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/19/24 13:46:40.986
  E1019 13:46:41.046016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:42.046154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/19/24 13:46:42.992
  E1019 13:46:43.046888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:44.047202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/19/24 13:46:44.998
  STEP: Ensuring resource quota status released the pod usage @ 10/19/24 13:46:45.014
  E1019 13:46:45.047697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:46.047767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 10/19/24 13:46:47.02
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/19/24 13:46:47.033
  E1019 13:46:47.048363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:48.048506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/19/24 13:46:49.039
  E1019 13:46:49.049302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:50.049534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/19/24 13:46:51.044
  E1019 13:46:51.050075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released the pod usage @ 10/19/24 13:46:51.064
  E1019 13:46:52.050326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:53.050578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:53.069558 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8974" for this suite. @ 10/19/24 13:46:53.074
â€¢ [16.156 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 10/19/24 13:46:53.083
  I1019 13:46:53.083792 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/19/24 13:46:53.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:53.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:53.103
  I1019 13:46:53.105813 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  E1019 13:46:54.050716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/19/24 13:46:54.388
  I1019 13:46:54.388311 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8290 --namespace=crd-publish-openapi-8290 create -f -'
  E1019 13:46:55.051451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:56.051650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:56.454849 20 builder.go:146] stderr: ""
  I1019 13:46:56.454888 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2513-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1019 13:46:56.454944 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8290 --namespace=crd-publish-openapi-8290 delete e2e-test-crd-publish-openapi-2513-crds test-cr'
  I1019 13:46:56.516761 20 builder.go:146] stderr: ""
  I1019 13:46:56.516807 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2513-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1019 13:46:56.516847 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8290 --namespace=crd-publish-openapi-8290 apply -f -'
  I1019 13:46:56.572807 20 builder.go:146] stderr: ""
  I1019 13:46:56.572846 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2513-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1019 13:46:56.572885 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8290 --namespace=crd-publish-openapi-8290 delete e2e-test-crd-publish-openapi-2513-crds test-cr'
  I1019 13:46:56.623151 20 builder.go:146] stderr: ""
  I1019 13:46:56.623186 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2513-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/19/24 13:46:56.623
  I1019 13:46:56.623259 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2405403938 --namespace=crd-publish-openapi-8290 explain e2e-test-crd-publish-openapi-2513-crds'
  I1019 13:46:56.665411 20 builder.go:146] stderr: ""
  I1019 13:46:56.665477 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2513-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1019 13:46:57.051784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:46:57.958632 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8290" for this suite. @ 10/19/24 13:46:57.965
â€¢ [4.891 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/19/24 13:46:57.974
  I1019 13:46:57.974727 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename deployment @ 10/19/24 13:46:57.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:46:57.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:46:57.993
  I1019 13:46:58.010111 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E1019 13:46:58.052356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:46:59.052470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:00.053502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:01.053625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:02.053716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:03.018003 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/19/24 13:47:03.018
  I1019 13:47:03.018074 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/19/24 13:47:03.029
  I1019 13:47:03.044350 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5309",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0385677-dffc-427c-8385-198767d49ad0",
      ResourceVersion: (string) (len=5) "47895",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864942423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  E1019 13:47:03.054094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:03.054576 20 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5309",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a166a8c-3ff1-4b86-9d9a-fe478d2f7614",
      ResourceVersion: (string) (len=5) "47897",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864942423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c0385677-dffc-427c-8385-198767d49ad0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 30 33 38 35 36  37 37 2d 64 66 66 63 2d  |\"c0385677-dffc-|
              00000120  34 32 37 63 2d 38 33 38  35 2d 31 39 38 37 36 37  |427c-8385-198767|
              00000130  64 34 39 61 64 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d49ad0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 13:47:03.054996 20 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1019 13:47:03.055528 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5309",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f5f912d-4d80-4cd9-a5c7-6fc657eac821",
      ResourceVersion: (string) (len=5) "47896",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864942418,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c0385677-dffc-427c-8385-198767d49ad0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 30 33 38 35 36 37  |"uid\":\"c038567|
              00000040  37 2d 64 66 66 63 2d 34  32 37 63 2d 38 33 38 35  |7-dffc-427c-8385|
              00000050  2d 31 39 38 37 36 37 64  34 39 61 64 30 5c 22 7d  |-198767d49ad0\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1019 13:47:03.060771 20 deployment.go:67] Pod "test-cleanup-controller-xfdcz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-xfdcz",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5309",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c51ba77e-c18f-42ad-ac20-cb744683da2b",
      ResourceVersion: (string) (len=5) "47883",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864942418,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "4f5f912d-4d80-4cd9-a5c7-6fc657eac821",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 66 35 66 39 31 32 64  |uid\":\"4f5f912d|
              00000080  2d 34 64 38 30 2d 34 63  64 39 2d 61 35 63 37 2d  |-4d80-4cd9-a5c7-|
              00000090  36 66 63 36 35 37 65 61  63 38 32 31 5c 22 7d 22  |6fc657eac821\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 33  2e 31 32 31 5c 22 7d 22  |2.168.73.121\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9m8zr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9m8zr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-84-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.84.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.84.96"
        }
      },
      PodIP: (string) (len=14) "192.168.73.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.73.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864942418,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864942418,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://54883e250141aa15db0af4c1bafff904b7688d7647db6429dce747a0aae16524",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9m8zr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 13:47:03.061895 20 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-7zh47" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-7zh47",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-5309",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1eb7dd68-f169-41cc-ab42-fcd0263ed398",
      ResourceVersion: (string) (len=5) "47901",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864942423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "5a166a8c-3ff1-4b86-9d9a-fe478d2f7614",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  31 36 36 61 38 63 2d 33  |d\":\"5a166a8c-3|
              00000090  66 66 31 2d 34 62 38 36  2d 39 64 39 61 2d 66 65  |ff1-4b86-9d9a-fe|
              000000a0  34 37 38 64 32 66 37 36  31 34 5c 22 7d 22 3a 7b  |478d2f7614\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tj649",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tj649",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864942423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1019 13:47:03.062557 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5309" for this suite. @ 10/19/24 13:47:03.068
â€¢ [5.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 10/19/24 13:47:03.078
  I1019 13:47:03.078528 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename downward-api @ 10/19/24 13:47:03.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:47:03.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:47:03.096
  STEP: Creating the pod @ 10/19/24 13:47:03.143
  E1019 13:47:04.054349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:05.054420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:05.693422 20 pod_client.go:173] Successfully updated pod "labelsupdate5669d46f-231e-434e-b0c4-a41a3ecc80ba"
  E1019 13:47:06.055346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:07.055535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:08.055702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:09.056359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:09.719476 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6564" for this suite. @ 10/19/24 13:47:09.724
â€¢ [6.654 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 10/19/24 13:47:09.732
  I1019 13:47:09.732985 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename svcaccounts @ 10/19/24 13:47:09.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:47:09.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:47:09.751
  STEP: Creating a pod to test service account token:  @ 10/19/24 13:47:09.753
  E1019 13:47:10.056958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:11.057036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:12.057726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:13.057835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:47:13.778
  I1019 13:47:13.782001 20 output.go:196] Trying to get logs from node ip-172-31-3-204 pod test-pod-431c8028-837e-48c2-9c6d-b4fd77809003 container agnhost-container: <nil>
  STEP: delete the pod @ 10/19/24 13:47:13.795
  I1019 13:47:13.816322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-850" for this suite. @ 10/19/24 13:47:13.821
â€¢ [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 10/19/24 13:47:13.829
  I1019 13:47:13.829457 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename container-probe @ 10/19/24 13:47:13.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:47:13.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:47:13.847
  STEP: Creating pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046 @ 10/19/24 13:47:13.849
  E1019 13:47:14.058181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:15.058374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/19/24 13:47:15.867
  I1019 13:47:15.872159 20 container_probe.go:1749] Initial restart count of pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf is 0
  I1019 13:47:15.876745 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:16.059170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:17.059294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:17.882447 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:18.059794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:19.060091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:19.888201 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:20.060536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:21.060743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:21.893911 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:22.061209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:23.061412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:23.898541 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:24.061811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:25.061898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:25.904360 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:26.062641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:27.062735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:27.910887 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:28.063147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:29.063269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:29.915896 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:30.064204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:31.064276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:31.921676 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:32.064930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:33.065327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:33.926831 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:34.066022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:35.066199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:35.932716 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:36.067024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:37.067173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:37.938350 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:38.067572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:39.067730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:39.944110 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:40.068327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:41.068447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:41.950829 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:42.069086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:43.069302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:43.956018 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:44.070254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:45.070506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:45.961951 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:46.071261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:47.071386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:47.968357 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:48.071573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:49.071672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:49.974243 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:50.072395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:51.072508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:51.980389 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:52.073580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:53.074334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:53.986200 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:54.075337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:55.075444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:55.991862 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:56.076162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:57.076264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:47:57.997715 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:47:58.076850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:47:59.076967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:48:00.002570 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:48:00.077861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:01.078086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:48:02.009339 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:48:02.078558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:03.078777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:48:04.014391 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  E1019 13:48:04.079531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:05.079676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:48:06.020526 20 container_probe.go:1759] Get pod busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf in namespace container-probe-2046
  I1019 13:48:06.020562 20 container_probe.go:1763] Restart count of pod container-probe-2046/busybox-00c8a1df-bfde-44e3-80ea-19de58e611cf is now 1 (50.148381646s elapsed)
  STEP: deleting the pod @ 10/19/24 13:48:06.02
  I1019 13:48:06.035901 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2046" for this suite. @ 10/19/24 13:48:06.04
â€¢ [52.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 10/19/24 13:48:06.048
  I1019 13:48:06.048081 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename webhook @ 10/19/24 13:48:06.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:48:06.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:48:06.065
  E1019 13:48:06.080432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/19/24 13:48:06.091
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/19/24 13:48:06.246
  STEP: Deploying the webhook pod @ 10/19/24 13:48:06.254
  STEP: Wait for the deployment to be ready @ 10/19/24 13:48:06.269
  I1019 13:48:06.276749 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1019 13:48:07.080596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:08.080715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/19/24 13:48:08.29
  STEP: Verifying the service has paired with the endpoint @ 10/19/24 13:48:08.303
  E1019 13:48:09.080831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:48:09.304197 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1019 13:48:09.312968 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1174-crds.webhook.example.com via the AdmissionRegistration API @ 10/19/24 13:48:09.823
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/19/24 13:48:09.837
  E1019 13:48:10.081605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:11.081815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:12.081903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:48:12.435219 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-39" for this suite. @ 10/19/24 13:48:12.44
  STEP: Destroying namespace "webhook-markers-8704" for this suite. @ 10/19/24 13:48:12.448
â€¢ [6.407 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 10/19/24 13:48:12.455
  I1019 13:48:12.455582 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename services @ 10/19/24 13:48:12.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:48:12.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:48:12.476
  STEP: fetching services @ 10/19/24 13:48:12.478
  I1019 13:48:12.483371 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2927" for this suite. @ 10/19/24 13:48:12.488
â€¢ [0.040 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 10/19/24 13:48:12.496
  I1019 13:48:12.496201 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename sched-preemption @ 10/19/24 13:48:12.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:48:12.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:48:12.513
  I1019 13:48:12.531423 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1019 13:48:13.082011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:14.082268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:15.082996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:16.083759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:17.084374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:18.084436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:19.084619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:20.085330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:21.086338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:22.086636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:23.086716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:24.087090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:25.087224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:26.087534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:27.087718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:28.088468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:29.089389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:30.089494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:31.090565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:32.090782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:33.091805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:34.092039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:35.092175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:36.093027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:37.093119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:38.093262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:39.093359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:40.094369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:41.095321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:42.096324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:43.097095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:44.097263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:45.097321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:46.097436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:47.098321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:48.098556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:49.098667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:50.098868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:51.098888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:52.099074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:53.099571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:54.099679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:55.099730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:56.099931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:57.100164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:58.100344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:48:59.100554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:00.100781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:01.101056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:02.101263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:03.101965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:04.102336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:05.103324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:06.104326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:07.105322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:08.105446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:09.105567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:10.105791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:11.106003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:12.106218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:49:12.537030 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/19/24 13:49:12.541
  I1019 13:49:12.563772 20 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1019 13:49:12.571644 20 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1019 13:49:12.590092 20 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1019 13:49:12.599495 20 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1019 13:49:12.618432 20 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1019 13:49:12.624308 20 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/19/24 13:49:12.624
  E1019 13:49:13.106327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:14.106511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/19/24 13:49:14.658
  E1019 13:49:15.106668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:16.106778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:17.106899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:18.106980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:49:18.756563 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7327" for this suite. @ 10/19/24 13:49:18.761
â€¢ [66.273 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/19/24 13:49:18.769
  I1019 13:49:18.769546 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename subpath @ 10/19/24 13:49:18.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:49:18.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:49:18.789
  STEP: Setting up data @ 10/19/24 13:49:18.792
  STEP: Creating pod pod-subpath-test-secret-phkw @ 10/19/24 13:49:18.803
  STEP: Creating a pod to test atomic-volume-subpath @ 10/19/24 13:49:18.803
  E1019 13:49:19.107066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:20.107188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:21.107311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:22.107415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:23.108107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:24.108297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:25.108412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:26.108549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:27.109370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:28.109493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:29.110147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:30.110369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:31.110494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:32.110608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:33.111100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:34.111420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:35.112119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:36.112347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:37.113222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:38.113656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:39.114589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:40.114675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:41.114760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:42.114855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/19/24 13:49:42.889
  I1019 13:49:42.893946 20 output.go:196] Trying to get logs from node ip-172-31-84-96 pod pod-subpath-test-secret-phkw container test-container-subpath-secret-phkw: <nil>
  STEP: delete the pod @ 10/19/24 13:49:42.909
  STEP: Deleting pod pod-subpath-test-secret-phkw @ 10/19/24 13:49:42.927
  I1019 13:49:42.927384 20 delete.go:62] Deleting pod "pod-subpath-test-secret-phkw" in namespace "subpath-7782"
  I1019 13:49:42.931648 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7782" for this suite. @ 10/19/24 13:49:42.936
â€¢ [24.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/19/24 13:49:42.944
  I1019 13:49:42.944708 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename pods @ 10/19/24 13:49:42.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:49:42.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:49:42.962
  STEP: creating the pod @ 10/19/24 13:49:42.965
  STEP: submitting the pod to kubernetes @ 10/19/24 13:49:42.965
  E1019 13:49:43.115256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1019 13:49:44.115298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/19/24 13:49:44.992
  STEP: updating the pod @ 10/19/24 13:49:44.997
  E1019 13:49:45.115514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1019 13:49:45.511953 20 pod_client.go:173] Successfully updated pod "pod-update-70e6d1dd-0771-420e-802f-2a6926669ec3"
  STEP: verifying the updated pod is in kubernetes @ 10/19/24 13:49:45.516
  I1019 13:49:45.520339 20 pods.go:391] Pod update OK
  I1019 13:49:45.520484 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4162" for this suite. @ 10/19/24 13:49:45.525
â€¢ [2.588 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 10/19/24 13:49:45.532
  I1019 13:49:45.532827 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/19/24 13:49:45.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:49:45.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:49:45.55
  STEP: getting /apis @ 10/19/24 13:49:45.559
  STEP: getting /apis/admissionregistration.k8s.io @ 10/19/24 13:49:45.561
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/19/24 13:49:45.562
  STEP: creating @ 10/19/24 13:49:45.563
  STEP: getting @ 10/19/24 13:49:45.582
  STEP: listing @ 10/19/24 13:49:45.589
  STEP: watching @ 10/19/24 13:49:45.593
  I1019 13:49:45.593773 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 10/19/24 13:49:45.596
  STEP: updating @ 10/19/24 13:49:45.608
  I1019 13:49:45.642454 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I1019 13:49:45.642490 20 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I1019 13:49:45.642525 20 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 10/19/24 13:49:45.642
  STEP: patching /status @ 10/19/24 13:49:45.647
  STEP: updating /status @ 10/19/24 13:49:45.654
  STEP: deleting @ 10/19/24 13:49:45.664
  STEP: deleting a collection @ 10/19/24 13:49:45.681
  I1019 13:49:45.706571 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6260" for this suite. @ 10/19/24 13:49:45.71
â€¢ [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 10/19/24 13:49:45.719
  I1019 13:49:45.719376 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2405403938
  STEP: Building a namespace api object, basename secrets @ 10/19/24 13:49:45.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/19/24 13:49:45.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/19/24 13:49:45.737
  STEP: creating a secret @ 10/19/24 13:49:45.739
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/19/24 13:49:45.743
  STEP: patching the secret @ 10/19/24 13:49:45.748
  STEP: deleting the secret using a LabelSelector @ 10/19/24 13:49:45.759
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/19/24 13:49:45.768
  I1019 13:49:45.772785 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8444" for this suite. @ 10/19/24 13:49:45.777
â€¢ [0.065 seconds]
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1019 13:49:45.784622 20 suites.go:34] Running AfterSuite actions on node 1
  I1019 13:49:45.784638 20 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.027 seconds]
------------------------------

Ran 404 of 6603 Specs in 6272.366 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h44m33.208808018s
Test Suite Passed
