  I1214 12:21:05.711862      19 e2e.go:109] Starting e2e run "8420a829-76bd-4c29-9657-9f38c00725dc" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1734178865 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1214 12:21:05.835388 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:21:05.836886 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1214 12:21:05.862937 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1214 12:21:05.866460 19 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1214 12:21:05.866494 19 e2e.go:245] e2e test version: v1.31.4
  I1214 12:21:05.867478 19 e2e.go:254] kube-apiserver version: v1.31.4
  I1214 12:21:05.867599 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:21:05.870487 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.035 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 12/14/24 12:21:05.98
  I1214 12:21:05.980848 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:21:05.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:05.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:05.999
  STEP: Setting up server cert @ 12/14/24 12:21:06.023
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:21:06.194
  STEP: Deploying the webhook pod @ 12/14/24 12:21:06.202
  STEP: Wait for the deployment to be ready @ 12/14/24 12:21:06.215
  I1214 12:21:06.222274 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1214 12:21:08.234297 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 21, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 21, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 21, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 21, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/14/24 12:21:10.238
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:21:10.254
  I1214 12:21:11.254959 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/14/24 12:21:11.329
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/14/24 12:21:11.361
  STEP: Deleting the collection of validation webhooks @ 12/14/24 12:21:11.387
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/14/24 12:21:11.44
  I1214 12:21:11.486357 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4967" for this suite. @ 12/14/24 12:21:11.489
  STEP: Destroying namespace "webhook-markers-4044" for this suite. @ 12/14/24 12:21:11.499
• [5.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/14/24 12:21:11.504
  I1214 12:21:11.504609 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/14/24 12:21:11.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:11.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:11.519
  STEP: getting /apis @ 12/14/24 12:21:11.527
  STEP: getting /apis/admissionregistration.k8s.io @ 12/14/24 12:21:11.53
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/14/24 12:21:11.531
  STEP: creating @ 12/14/24 12:21:11.532
  STEP: getting @ 12/14/24 12:21:11.547
  STEP: listing @ 12/14/24 12:21:11.552
  STEP: watching @ 12/14/24 12:21:11.555
  I1214 12:21:11.555734 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/14/24 12:21:11.556
  STEP: updating @ 12/14/24 12:21:11.561
  I1214 12:21:11.568889 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/14/24 12:21:11.568
  STEP: deleting a collection @ 12/14/24 12:21:11.58
  I1214 12:21:11.601356 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6192" for this suite. @ 12/14/24 12:21:11.604
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/14/24 12:21:11.613
  I1214 12:21:11.613786 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sysctl @ 12/14/24 12:21:11.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:11.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:11.635
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/14/24 12:21:11.637
  I1214 12:21:11.642040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1766" for this suite. @ 12/14/24 12:21:11.646
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/14/24 12:21:11.653
  I1214 12:21:11.653369 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename events @ 12/14/24 12:21:11.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:11.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:11.671
  STEP: creating a test event @ 12/14/24 12:21:11.674
  STEP: listing all events in all namespaces @ 12/14/24 12:21:11.68
  STEP: patching the test event @ 12/14/24 12:21:11.691
  STEP: fetching the test event @ 12/14/24 12:21:11.699
  STEP: updating the test event @ 12/14/24 12:21:11.702
  STEP: getting the test event @ 12/14/24 12:21:11.711
  STEP: deleting the test event @ 12/14/24 12:21:11.714
  STEP: listing all events in all namespaces @ 12/14/24 12:21:11.721
  I1214 12:21:11.743443 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5453" for this suite. @ 12/14/24 12:21:11.749
• [0.105 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/14/24 12:21:11.758
  I1214 12:21:11.758251 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 12:21:11.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:11.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:11.79
  STEP: creating a Deployment @ 12/14/24 12:21:11.802
  I1214 12:21:11.802077 19 deployment.go:507] Creating simple deployment test-deployment-kk42n
  I1214 12:21:11.815351 19 deployment.go:222] deployment "test-deployment-kk42n" doesn't have the required revision set
  I1214 12:21:13.827323 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 21, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 21, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 21, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 21, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-kk42n-f4dbbbf74\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 12/14/24 12:21:15.836
  I1214 12:21:15.841004 19 deployment.go:532] Deployment test-deployment-kk42n has Conditions: [{Available True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kk42n-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/14/24 12:21:15.841
  I1214 12:21:15.852167 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 21, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 21, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 21, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 21, 11, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-kk42n-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/14/24 12:21:15.852
  I1214 12:21:15.853782 19 deployment.go:579] Observed &Deployment event: ADDED
  I1214 12:21:15.853850 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kk42n-f4dbbbf74"}
  I1214 12:21:15.853937 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1214 12:21:15.853948 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kk42n-f4dbbbf74"}
  I1214 12:21:15.853957 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1214 12:21:15.854037 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1214 12:21:15.854161 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1214 12:21:15.854178 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-kk42n-f4dbbbf74" is progressing.}
  I1214 12:21:15.854243 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1214 12:21:15.854257 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1214 12:21:15.854295 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kk42n-f4dbbbf74" has successfully progressed.}
  I1214 12:21:15.854374 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1214 12:21:15.854392 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1214 12:21:15.854413 19 deployment.go:575] Observed Deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kk42n-f4dbbbf74" has successfully progressed.}
  I1214 12:21:15.854424 19 deployment.go:572] Found Deployment test-deployment-kk42n in namespace deployment-4152 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1214 12:21:15.854447 19 deployment.go:583] Deployment test-deployment-kk42n has an updated status
  STEP: patching the Statefulset Status @ 12/14/24 12:21:15.854
  I1214 12:21:15.854472 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1214 12:21:15.860948 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/14/24 12:21:15.86
  I1214 12:21:15.862603 19 deployment.go:616] Observed &Deployment event: ADDED
  I1214 12:21:15.862631 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kk42n-f4dbbbf74"}
  I1214 12:21:15.862692 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1214 12:21:15.862703 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kk42n-f4dbbbf74"}
  I1214 12:21:15.862712 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1214 12:21:15.862765 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1214 12:21:15.862865 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1214 12:21:15.862888 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:11 +0000 UTC 2024-12-14 12:21:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-kk42n-f4dbbbf74" is progressing.}
  I1214 12:21:15.862950 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1214 12:21:15.862962 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1214 12:21:15.862971 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kk42n-f4dbbbf74" has successfully progressed.}
  I1214 12:21:15.863057 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1214 12:21:15.863073 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1214 12:21:15.863081 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-14 12:21:15 +0000 UTC 2024-12-14 12:21:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kk42n-f4dbbbf74" has successfully progressed.}
  I1214 12:21:15.863089 19 deployment.go:612] Observed deployment test-deployment-kk42n in namespace deployment-4152 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1214 12:21:15.863174 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1214 12:21:15.863201 19 deployment.go:609] Found deployment test-deployment-kk42n in namespace deployment-4152 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1214 12:21:15.863209 19 deployment.go:620] Deployment test-deployment-kk42n has a patched status
  I1214 12:21:15.869309 19 deployment.go:633] Deployment "test-deployment-kk42n":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-kk42n",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4152",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da1e28e1-3605-465d-89fd-9fb1208efc3d",
      ResourceVersion: (string) (len=4) "5094",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-kk42n-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 12:21:15.874823 19 deployment.go:39] New ReplicaSet "test-deployment-kk42n-f4dbbbf74" of Deployment "test-deployment-kk42n":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-kk42n-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4152",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "876c30a6-ef0d-4319-ab4b-c145b8b110b4",
      ResourceVersion: (string) (len=4) "5089",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-kk42n",
          UID: (types.UID) (len=36) "da1e28e1-3605-465d-89fd-9fb1208efc3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 61 31  |k:{\"uid\":\"da1|
              00000120  65 32 38 65 31 2d 33 36  30 35 2d 34 36 35 64 2d  |e28e1-3605-465d-|
              00000130  38 39 66 64 2d 39 66 62  31 32 30 38 65 66 63 33  |89fd-9fb1208efc3|
              00000140  64 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |d\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:21:15.880098 19 deployment.go:67] Pod "test-deployment-kk42n-f4dbbbf74-9pcm4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-kk42n-f4dbbbf74-9pcm4",
      GenerateName: (string) (len=32) "test-deployment-kk42n-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-4152",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af585a3a-8bae-42f1-a2ce-f824cbbb5956",
      ResourceVersion: (string) (len=4) "5088",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-kk42n-f4dbbbf74",
          UID: (types.UID) (len=36) "876c30a6-ef0d-4319-ab4b-c145b8b110b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 37 36 63 33 30 61  36 2d 65 66 30 64 2d 34  |"876c30a6-ef0d-4|
              000000a0  33 31 39 2d 61 62 34 62  2d 63 31 34 35 62 38 62  |319-ab4b-c145b8b|
              000000b0  31 31 30 62 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |110b4\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 33 32 5c 22 7d  |2.168.249.132\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mb49w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mb49w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869775674,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://77d29818ee66ecc3c6dcf814713d810e34d3a864eda6beee1a0143a26e7f677f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mb49w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:21:15.881227 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4152" for this suite. @ 12/14/24 12:21:15.886
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/14/24 12:21:15.895
  I1214 12:21:15.895664 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename subpath @ 12/14/24 12:21:15.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:15.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:15.91
  STEP: Setting up data @ 12/14/24 12:21:15.914
  STEP: Creating pod pod-subpath-test-configmap-66g9 @ 12/14/24 12:21:15.921
  STEP: Creating a pod to test atomic-volume-subpath @ 12/14/24 12:21:15.921
  STEP: Saw pod success @ 12/14/24 12:21:46.009
  I1214 12:21:46.011792 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-subpath-test-configmap-66g9 container test-container-subpath-configmap-66g9: <nil>
  STEP: delete the pod @ 12/14/24 12:21:46.033
  STEP: Deleting pod pod-subpath-test-configmap-66g9 @ 12/14/24 12:21:46.053
  I1214 12:21:46.053236 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-66g9" in namespace "subpath-8140"
  I1214 12:21:46.057097 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8140" for this suite. @ 12/14/24 12:21:46.06
• [30.170 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/14/24 12:21:46.066
  I1214 12:21:46.066077 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/14/24 12:21:46.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:46.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:46.086
  STEP: Cleaning up the secret @ 12/14/24 12:21:48.118
  STEP: Cleaning up the configmap @ 12/14/24 12:21:48.124
  STEP: Cleaning up the pod @ 12/14/24 12:21:48.131
  I1214 12:21:48.142375 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4944" for this suite. @ 12/14/24 12:21:48.145
• [2.087 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 12/14/24 12:21:48.152
  I1214 12:21:48.152991 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 12:21:48.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:48.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:48.169
  STEP: apply creating a deployment @ 12/14/24 12:21:48.171
  I1214 12:21:48.188435 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8873" for this suite. @ 12/14/24 12:21:48.192
• [0.046 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/14/24 12:21:48.199
  I1214 12:21:48.199438 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename lease-test @ 12/14/24 12:21:48.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:48.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:48.218
  I1214 12:21:48.273254 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6845" for this suite. @ 12/14/24 12:21:48.276
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 12/14/24 12:21:48.281
  I1214 12:21:48.281577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 12:21:48.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:48.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:48.302
  STEP: Counting existing ResourceQuota @ 12/14/24 12:21:48.304
  STEP: Creating a ResourceQuota @ 12/14/24 12:21:53.309
  STEP: Ensuring resource quota status is calculated @ 12/14/24 12:21:53.321
  STEP: Creating a Service @ 12/14/24 12:21:55.325
  STEP: Creating a NodePort Service @ 12/14/24 12:21:55.344
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/14/24 12:21:55.372
  STEP: Ensuring resource quota status captures service creation @ 12/14/24 12:21:55.397
  STEP: Deleting Services @ 12/14/24 12:21:57.401
  STEP: Ensuring resource quota status released usage @ 12/14/24 12:21:57.436
  I1214 12:21:59.440592 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5484" for this suite. @ 12/14/24 12:21:59.443
• [11.169 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/14/24 12:21:59.451
  I1214 12:21:59.451239 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:21:59.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:21:59.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:21:59.468
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/14/24 12:21:59.471
  STEP: Saw pod success @ 12/14/24 12:22:03.491
  I1214 12:22:03.495547 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-2836990f-e6ab-4d1e-a10d-90787c580aa5 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:22:03.511
  I1214 12:22:03.525789 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9587" for this suite. @ 12/14/24 12:22:03.528
• [4.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/14/24 12:22:03.535
  I1214 12:22:03.535300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 12:22:03.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:03.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:03.553
  STEP: creating the pod @ 12/14/24 12:22:03.556
  STEP: submitting the pod to kubernetes @ 12/14/24 12:22:03.556
  STEP: verifying the pod is in kubernetes @ 12/14/24 12:22:05.576
  STEP: updating the pod @ 12/14/24 12:22:05.58
  I1214 12:22:06.093350 19 pod_client.go:173] Successfully updated pod "pod-update-cf5fe954-a4c2-4485-92c6-590cf173c787"
  STEP: verifying the updated pod is in kubernetes @ 12/14/24 12:22:06.097
  I1214 12:22:06.102195 19 pods.go:391] Pod update OK
  I1214 12:22:06.102293 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4001" for this suite. @ 12/14/24 12:22:06.105
• [2.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 12/14/24 12:22:06.11
  I1214 12:22:06.110944 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 12:22:06.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:06.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:06.131
  STEP: Creating a job @ 12/14/24 12:22:06.134
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/14/24 12:22:06.14
  STEP: patching /status @ 12/14/24 12:22:08.147
  STEP: updating /status @ 12/14/24 12:22:08.154
  STEP: get /status @ 12/14/24 12:22:08.162
  I1214 12:22:08.166670 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-994" for this suite. @ 12/14/24 12:22:08.171
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/14/24 12:22:08.18
  I1214 12:22:08.180883 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename podtemplate @ 12/14/24 12:22:08.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:08.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:08.195
  STEP: Create set of pod templates @ 12/14/24 12:22:08.198
  I1214 12:22:08.202216 19 podtemplates.go:143] created test-podtemplate-1
  I1214 12:22:08.207216 19 podtemplates.go:143] created test-podtemplate-2
  I1214 12:22:08.213398 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/14/24 12:22:08.213
  STEP: delete collection of pod templates @ 12/14/24 12:22:08.215
  I1214 12:22:08.215977 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/14/24 12:22:08.233
  I1214 12:22:08.233220 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1214 12:22:08.236274 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3072" for this suite. @ 12/14/24 12:22:08.239
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 12/14/24 12:22:08.249
  I1214 12:22:08.249271 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-webhook @ 12/14/24 12:22:08.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:08.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:08.269
  STEP: Setting up server cert @ 12/14/24 12:22:08.271
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/14/24 12:22:08.399
  STEP: Deploying the custom resource conversion webhook pod @ 12/14/24 12:22:08.406
  STEP: Wait for the deployment to be ready @ 12/14/24 12:22:08.42
  I1214 12:22:08.431043 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:22:10.443
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:22:10.459
  I1214 12:22:11.459548 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1214 12:22:11.467724 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Creating a v1 custom resource @ 12/14/24 12:22:14.024
  STEP: v2 custom resource should be converted @ 12/14/24 12:22:14.028
  I1214 12:22:14.581900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1287" for this suite. @ 12/14/24 12:22:14.588
• [6.351 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/14/24 12:22:14.599
  I1214 12:22:14.599623 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename security-context-test @ 12/14/24 12:22:14.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:14.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:14.617
  I1214 12:22:18.646368 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2668" for this suite. @ 12/14/24 12:22:18.65
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 12/14/24 12:22:18.657
  I1214 12:22:18.658003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-pred @ 12/14/24 12:22:18.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:18.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:18.683
  I1214 12:22:18.685892 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1214 12:22:18.693424 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1214 12:22:18.696049 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-132 before test
  I1214 12:22:18.700380 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-94l4m from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.700395 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 12:22:18.700408 19 predicates.go:957] calico-node-bblb4 from kube-system started at 2024-12-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.700452 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 12:22:18.700459 19 predicates.go:957] coredns-5b4857d7c8-dcvw5 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.700464 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1214 12:22:18.700470 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-rlqv5 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.700476 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1214 12:22:18.700483 19 predicates.go:957] busybox-readonly-false-cf4a2298-6f63-4c86-8557-5f3c5e7e4221 from security-context-test-2668 started at 2024-12-14 12:22:14 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.700491 19 predicates.go:959] 	Container busybox-readonly-false-cf4a2298-6f63-4c86-8557-5f3c5e7e4221 ready: false, restart count 0
  I1214 12:22:18.700498 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-jq925 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 12:22:18.700504 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 12:22:18.700510 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 12:22:18.700567 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-38-181 before test
  I1214 12:22:18.705983 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9k94x from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.706039 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 12:22:18.706049 19 predicates.go:957] calico-node-vjktq from kube-system started at 2024-12-14 12:16:23 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.706068 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 12:22:18.706074 19 predicates.go:957] kube-state-metrics-5d7bdccd49-gkxkr from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.706079 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1214 12:22:18.706085 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-p9vf9 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (2 container statuses recorded)
  I1214 12:22:18.706090 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1214 12:22:18.706095 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1214 12:22:18.706101 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-gcbn8 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.706105 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1214 12:22:18.706111 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-bg8kl from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 12:22:18.706116 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 12:22:18.706120 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 12:22:18.706154 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I1214 12:22:18.710495 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-59bh9 from ingress-nginx-kubernetes-worker started at 2024-12-14 12:12:11 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.710516 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 12:22:18.710523 19 predicates.go:957] calico-node-jcqlh from kube-system started at 2024-12-14 12:16:34 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.710528 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 12:22:18.710534 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-14 12:20:03 +0000 UTC (1 container statuses recorded)
  I1214 12:22:18.710540 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1214 12:22:18.710545 19 predicates.go:957] sonobuoy-e2e-job-f6a2dbd00a5f4548 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 12:22:18.710549 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1214 12:22:18.710553 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 12:22:18.710559 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-tfgzf from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 12:22:18.710563 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 12:22:18.710568 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-20-132 @ 12/14/24 12:22:18.723
  STEP: verifying the node has the label node ip-172-31-38-181 @ 12/14/24 12:22:18.736
  STEP: verifying the node has the label node ip-172-31-5-183 @ 12/14/24 12:22:18.748
  I1214 12:22:18.762338 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-59bh9 requesting resource cpu=0m on Node ip-172-31-5-183
  I1214 12:22:18.762370 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-94l4m requesting resource cpu=0m on Node ip-172-31-20-132
  I1214 12:22:18.762383 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-9k94x requesting resource cpu=0m on Node ip-172-31-38-181
  I1214 12:22:18.762391 19 predicates.go:372] Pod calico-node-bblb4 requesting resource cpu=250m on Node ip-172-31-20-132
  I1214 12:22:18.762398 19 predicates.go:372] Pod calico-node-jcqlh requesting resource cpu=250m on Node ip-172-31-5-183
  I1214 12:22:18.762406 19 predicates.go:372] Pod calico-node-vjktq requesting resource cpu=250m on Node ip-172-31-38-181
  I1214 12:22:18.762412 19 predicates.go:372] Pod coredns-5b4857d7c8-dcvw5 requesting resource cpu=100m on Node ip-172-31-20-132
  I1214 12:22:18.762418 19 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-gkxkr requesting resource cpu=0m on Node ip-172-31-38-181
  I1214 12:22:18.762425 19 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-p9vf9 requesting resource cpu=5m on Node ip-172-31-38-181
  I1214 12:22:18.762431 19 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-rlqv5 requesting resource cpu=0m on Node ip-172-31-20-132
  I1214 12:22:18.762436 19 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-gcbn8 requesting resource cpu=0m on Node ip-172-31-38-181
  I1214 12:22:18.762442 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-5-183
  I1214 12:22:18.762447 19 predicates.go:372] Pod sonobuoy-e2e-job-f6a2dbd00a5f4548 requesting resource cpu=0m on Node ip-172-31-5-183
  I1214 12:22:18.762453 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-bg8kl requesting resource cpu=0m on Node ip-172-31-38-181
  I1214 12:22:18.762459 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-jq925 requesting resource cpu=0m on Node ip-172-31-20-132
  I1214 12:22:18.762465 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-tfgzf requesting resource cpu=0m on Node ip-172-31-5-183
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/14/24 12:22:18.762
  I1214 12:22:18.762499 19 predicates.go:382] Creating a pod which consumes cpu=1221m on Node ip-172-31-38-181
  I1214 12:22:18.773958 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-5-183
  I1214 12:22:18.782233 19 predicates.go:382] Creating a pod which consumes cpu=1155m on Node ip-172-31-20-132
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/14/24 12:22:20.809
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da.18110a8e87a939ea], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9462/filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da to ip-172-31-5-183] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da.18110a8ea45bee51], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da.18110a8ea511cda4], Reason = [Created], Message = [Created container filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da.18110a8ea745b671], Reason = [Started], Message = [Started container filler-pod-9b73e7ce-0317-4d65-ac55-09e433b4d3da] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b.18110a8e86e09caa], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9462/filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b to ip-172-31-38-181] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b.18110a8ea3df09b3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b.18110a8ea4e237b7], Reason = [Created], Message = [Created container filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b.18110a8ea750751c], Reason = [Started], Message = [Started container filler-pod-e279ce7a-458a-48eb-a157-3c875cef029b] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6.18110a8e88025d59], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9462/filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6 to ip-172-31-20-132] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6.18110a8ea4b98539], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6.18110a8ea5be4206], Reason = [Created], Message = [Created container filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6.18110a8ea837914c], Reason = [Started], Message = [Started container filler-pod-ebf5e4d8-017b-40b0-a64c-210e6fcd8bb6] @ 12/14/24 12:22:20.812
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18110a8f007bf393], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 12/14/24 12:22:20.826
  STEP: removing the label node off the node ip-172-31-20-132 @ 12/14/24 12:22:21.822
  STEP: verifying the node doesn't have the label node @ 12/14/24 12:22:21.835
  STEP: removing the label node off the node ip-172-31-38-181 @ 12/14/24 12:22:21.842
  STEP: verifying the node doesn't have the label node @ 12/14/24 12:22:21.855
  STEP: removing the label node off the node ip-172-31-5-183 @ 12/14/24 12:22:21.858
  STEP: verifying the node doesn't have the label node @ 12/14/24 12:22:21.869
  I1214 12:22:21.873410 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9462" for this suite. @ 12/14/24 12:22:21.878
• [3.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/14/24 12:22:21.885
  I1214 12:22:21.885813 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 12:22:21.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:21.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:21.908
  STEP: Creating a pod to test substitution in container's command @ 12/14/24 12:22:21.91
  STEP: Saw pod success @ 12/14/24 12:22:23.927
  I1214 12:22:23.929615 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod var-expansion-51f265a3-635c-4deb-a1fa-dc9df5b79cfe container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 12:22:23.937
  I1214 12:22:23.955694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3830" for this suite. @ 12/14/24 12:22:23.959
• [2.080 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/14/24 12:22:23.965
  I1214 12:22:23.965600 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replication-controller @ 12/14/24 12:22:23.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:23.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:23.985
  I1214 12:22:23.987946 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/14/24 12:22:25
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/14/24 12:22:25.006
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/14/24 12:22:26.015
  I1214 12:22:26.025138 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/14/24 12:22:26.025
  I1214 12:22:27.033257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4428" for this suite. @ 12/14/24 12:22:27.037
• [3.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/14/24 12:22:27.043
  I1214 12:22:27.043562 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:22:27.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:27.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:27.066
  STEP: Creating secret with name s-test-opt-del-0811957c-4c18-4f51-9ed8-cb96ecfea27c @ 12/14/24 12:22:27.076
  STEP: Creating secret with name s-test-opt-upd-bc387d7b-f7e8-4b1a-a649-82603fc7e22e @ 12/14/24 12:22:27.081
  STEP: Creating the pod @ 12/14/24 12:22:27.09
  STEP: Deleting secret s-test-opt-del-0811957c-4c18-4f51-9ed8-cb96ecfea27c @ 12/14/24 12:22:29.135
  STEP: Updating secret s-test-opt-upd-bc387d7b-f7e8-4b1a-a649-82603fc7e22e @ 12/14/24 12:22:29.143
  STEP: Creating secret with name s-test-opt-create-f551cc69-df31-46cc-914a-828e48d729de @ 12/14/24 12:22:29.149
  STEP: waiting to observe update in volume @ 12/14/24 12:22:29.155
  I1214 12:22:33.192443 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1417" for this suite. @ 12/14/24 12:22:33.196
• [6.159 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/14/24 12:22:33.202
  I1214 12:22:33.202814 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:22:33.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:33.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:33.222
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/14/24 12:22:33.224
  STEP: Saw pod success @ 12/14/24 12:22:39.254
  I1214 12:22:39.257373 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-3bdd9d90-5958-41ff-91c5-775ef6589125 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:22:39.272
  I1214 12:22:39.290482 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1573" for this suite. @ 12/14/24 12:22:39.293
• [6.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 12/14/24 12:22:39.298
  I1214 12:22:39.298710 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 12:22:39.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:39.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:39.316
  STEP: creating service nodeport-test with type=NodePort in namespace services-7230 @ 12/14/24 12:22:39.318
  STEP: creating replication controller nodeport-test in namespace services-7230 @ 12/14/24 12:22:39.333
  I1214 12:22:39.343563      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-7230, replica count: 2
  I1214 12:22:42.394117      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 12:22:42.394159 19 resource.go:361] Creating new exec pod
  I1214 12:22:45.411335 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1214 12:22:45.505881 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1214 12:22:45.505936 19 builder.go:147] stdout: ""
  I1214 12:22:46.411393 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1214 12:22:46.493065 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1214 12:22:46.493108 19 builder.go:147] stdout: "nodeport-test-2klkv"
  I1214 12:22:46.493208 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.28 80'
  I1214 12:22:46.578633 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.28 80\nConnection to 10.152.183.28 80 port [tcp/http] succeeded!\n"
  I1214 12:22:46.578685 19 builder.go:147] stdout: "nodeport-test-lktbh"
  I1214 12:22:46.578791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.38.181 31979'
  I1214 12:22:46.656617 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.38.181 31979\nConnection to 172.31.38.181 31979 port [tcp/*] succeeded!\n"
  I1214 12:22:46.656673 19 builder.go:147] stdout: "nodeport-test-lktbh"
  I1214 12:22:46.656830 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.132 31979'
  I1214 12:22:46.737804 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.132 31979\nConnection to 172.31.20.132 31979 port [tcp/*] succeeded!\n"
  I1214 12:22:46.737847 19 builder.go:147] stdout: ""
  I1214 12:22:47.656940 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.132 31979'
  I1214 12:22:47.736609 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.132 31979\nConnection to 172.31.20.132 31979 port [tcp/*] succeeded!\n"
  I1214 12:22:47.736659 19 builder.go:147] stdout: ""
  I1214 12:22:48.656961 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7230 exec execpodmdt7q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.132 31979'
  I1214 12:22:48.737580 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.132 31979\nConnection to 172.31.20.132 31979 port [tcp/*] succeeded!\n"
  I1214 12:22:48.737621 19 builder.go:147] stdout: "nodeport-test-2klkv"
  I1214 12:22:48.737760 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7230" for this suite. @ 12/14/24 12:22:48.741
• [9.450 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 12/14/24 12:22:48.749
  I1214 12:22:48.749379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 12:22:48.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:48.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:48.768
  STEP: creating Agnhost RC @ 12/14/24 12:22:48.772
  I1214 12:22:48.772754 19 kubectl.go:1537] namespace kubectl-1148
  I1214 12:22:48.772808 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1148 create -f -'
  I1214 12:22:48.866712 19 builder.go:146] stderr: ""
  I1214 12:22:48.866760 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/14/24 12:22:48.866
  I1214 12:22:49.871356 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 12:22:49.871387 19 framework.go:733] Found 1 / 1
  I1214 12:22:49.871401 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1214 12:22:49.875688 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 12:22:49.875716 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1214 12:22:49.875722 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-1148 
  I1214 12:22:49.875772 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1148 logs agnhost-primary-78zrm agnhost-primary'
  I1214 12:22:49.925515 19 builder.go:146] stderr: ""
  I1214 12:22:49.925571 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/14/24 12:22:49.925
  I1214 12:22:49.925660 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1148 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1214 12:22:49.984690 19 builder.go:146] stderr: ""
  I1214 12:22:49.984737 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I1214 12:22:49.993369 19 utils.go:1203] Service rm2 in namespace kubectl-1148 found.
  STEP: exposing service @ 12/14/24 12:22:52.001
  I1214 12:22:52.002054 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1148 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1214 12:22:52.054523 19 builder.go:146] stderr: ""
  I1214 12:22:52.054568 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I1214 12:22:52.059591 19 utils.go:1203] Service rm3 in namespace kubectl-1148 found.
  I1214 12:22:54.064737 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1148" for this suite. @ 12/14/24 12:22:54.07
• [5.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/14/24 12:22:54.078
  I1214 12:22:54.078203 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename namespaces @ 12/14/24 12:22:54.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:54.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:54.101
  STEP: Read namespace status @ 12/14/24 12:22:54.104
  I1214 12:22:54.109385 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/14/24 12:22:54.109
  I1214 12:22:54.119151 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/14/24 12:22:54.119
  I1214 12:22:54.128244 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1214 12:22:54.128351 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-898" for this suite. @ 12/14/24 12:22:54.131
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 12/14/24 12:22:54.137
  I1214 12:22:54.137818 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 12:22:54.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:54.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:54.156
  STEP: creating the pod @ 12/14/24 12:22:54.159
  I1214 12:22:54.160100 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 create -f -'
  I1214 12:22:54.243099 19 builder.go:146] stderr: ""
  I1214 12:22:54.243138 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/14/24 12:22:56.255
  I1214 12:22:56.255305 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 label pods pause testing-label=testing-label-value'
  I1214 12:22:56.326162 19 builder.go:146] stderr: ""
  I1214 12:22:56.326197 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/14/24 12:22:56.326
  I1214 12:22:56.326288 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 get pod pause -L testing-label'
  I1214 12:22:56.369705 19 builder.go:146] stderr: ""
  I1214 12:22:56.369757 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/14/24 12:22:56.369
  I1214 12:22:56.369830 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 label pods pause testing-label-'
  I1214 12:22:56.418521 19 builder.go:146] stderr: ""
  I1214 12:22:56.418556 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/14/24 12:22:56.418
  I1214 12:22:56.418827 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 get pod pause -L testing-label'
  I1214 12:22:56.460926 19 builder.go:146] stderr: ""
  I1214 12:22:56.460962 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/14/24 12:22:56.461
  I1214 12:22:56.461124 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 delete --grace-period=0 --force -f -'
  I1214 12:22:56.518629 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:22:56.518664 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1214 12:22:56.518713 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 get rc,svc -l name=pause --no-headers'
  I1214 12:22:56.565239 19 builder.go:146] stderr: "No resources found in kubectl-2211 namespace.\n"
  I1214 12:22:56.565279 19 builder.go:147] stdout: ""
  I1214 12:22:56.565323 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2211 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1214 12:22:56.612301 19 builder.go:146] stderr: ""
  I1214 12:22:56.612348 19 builder.go:147] stdout: ""
  I1214 12:22:56.612485 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2211" for this suite. @ 12/14/24 12:22:56.619
• [2.493 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/14/24 12:22:56.63
  I1214 12:22:56.630667 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 12:22:56.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:22:56.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:22:56.654
  STEP: Creating configMap configmap-5548/configmap-test-06437010-ed97-4e35-8295-eaee854e5072 @ 12/14/24 12:22:56.658
  STEP: Creating a pod to test consume configMaps @ 12/14/24 12:22:56.665
  STEP: Saw pod success @ 12/14/24 12:23:02.702
  I1214 12:23:02.707427 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-7fabbc44-9465-42e9-9b1a-8168a9c6a22b container env-test: <nil>
  STEP: delete the pod @ 12/14/24 12:23:02.714
  I1214 12:23:02.732375 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5548" for this suite. @ 12/14/24 12:23:02.735
• [6.114 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/14/24 12:23:02.744
  I1214 12:23:02.744375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename runtimeclass @ 12/14/24 12:23:02.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:02.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:02.765
  STEP: getting /apis @ 12/14/24 12:23:02.767
  STEP: getting /apis/node.k8s.io @ 12/14/24 12:23:02.77
  STEP: getting /apis/node.k8s.io/v1 @ 12/14/24 12:23:02.771
  STEP: creating @ 12/14/24 12:23:02.772
  STEP: watching @ 12/14/24 12:23:02.788
  I1214 12:23:02.788534 19 runtimeclass.go:275] starting watch
  STEP: getting @ 12/14/24 12:23:02.792
  STEP: listing @ 12/14/24 12:23:02.794
  STEP: patching @ 12/14/24 12:23:02.798
  STEP: updating @ 12/14/24 12:23:02.802
  I1214 12:23:02.807760 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/14/24 12:23:02.807
  STEP: deleting a collection @ 12/14/24 12:23:02.819
  I1214 12:23:02.832908 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-840" for this suite. @ 12/14/24 12:23:02.835
• [0.097 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/14/24 12:23:02.841
  I1214 12:23:02.841910 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:23:02.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:02.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:02.86
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 12:23:02.862
  STEP: Saw pod success @ 12/14/24 12:23:06.886
  I1214 12:23:06.890230 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-43ca0e2d-0883-4e46-94e1-c7b29041d8f2 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 12:23:06.897
  I1214 12:23:06.915262 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8756" for this suite. @ 12/14/24 12:23:06.918
• [4.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/14/24 12:23:06.926
  I1214 12:23:06.926665 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename watch @ 12/14/24 12:23:06.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:06.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:06.949
  STEP: creating a new configmap @ 12/14/24 12:23:06.951
  STEP: modifying the configmap once @ 12/14/24 12:23:06.955
  STEP: modifying the configmap a second time @ 12/14/24 12:23:06.963
  STEP: deleting the configmap @ 12/14/24 12:23:06.972
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/14/24 12:23:06.977
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/14/24 12:23:06.978
  I1214 12:23:06.978973 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1637  fff97d13-2b08-4087-9d0f-149c9d1528c5 6382 0 2024-12-14 12:23:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-14 12:23:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 12:23:06.979112 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1637  fff97d13-2b08-4087-9d0f-149c9d1528c5 6384 0 2024-12-14 12:23:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-14 12:23:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 12:23:06.979187 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1637" for this suite. @ 12/14/24 12:23:06.982
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/14/24 12:23:06.991
  I1214 12:23:06.991869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:23:06.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:07.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:07.012
  STEP: Creating the pod @ 12/14/24 12:23:07.014
  I1214 12:23:09.563217 19 pod_client.go:173] Successfully updated pod "labelsupdate889230ef-9fab-4f5d-bc05-5b0aa4aa9975"
  I1214 12:23:11.578593 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2476" for this suite. @ 12/14/24 12:23:11.583
• [4.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/14/24 12:23:11.589
  I1214 12:23:11.589966 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:23:11.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:11.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:11.611
  STEP: Creating configMap with name projected-configmap-test-volume-map-3eedf64d-e6eb-40c5-843d-587a9650b0f5 @ 12/14/24 12:23:11.613
  STEP: Creating a pod to test consume configMaps @ 12/14/24 12:23:11.618
  STEP: Saw pod success @ 12/14/24 12:23:15.639
  I1214 12:23:15.642539 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-03c3cda2-ee0d-4030-b560-d810b2c40212 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 12:23:15.649
  I1214 12:23:15.667776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-182" for this suite. @ 12/14/24 12:23:15.672
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/14/24 12:23:15.679
  I1214 12:23:15.679046 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/14/24 12:23:15.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:15.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:15.774
  STEP: mirroring a new custom Endpoint @ 12/14/24 12:23:15.814
  I1214 12:23:15.824726 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/14/24 12:23:17.829
  I1214 12:23:17.841334 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/14/24 12:23:19.846
  I1214 12:23:19.859074 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1214 12:23:21.862979 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2543" for this suite. @ 12/14/24 12:23:21.866
• [6.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 12/14/24 12:23:21.87
  I1214 12:23:21.870990 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:23:21.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:21.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:21.891
  STEP: Setting up server cert @ 12/14/24 12:23:21.915
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:23:22.047
  STEP: Deploying the webhook pod @ 12/14/24 12:23:22.055
  STEP: Wait for the deployment to be ready @ 12/14/24 12:23:22.068
  I1214 12:23:22.076624 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:23:24.089
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:23:24.1
  I1214 12:23:25.101649 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1214 12:23:25.108700 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7682-crds.webhook.example.com via the AdmissionRegistration API @ 12/14/24 12:23:25.621
  STEP: Creating a custom resource while v1 is storage version @ 12/14/24 12:23:25.634
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/14/24 12:23:27.667
  STEP: Patching the custom resource while v2 is storage version @ 12/14/24 12:23:27.678
  I1214 12:23:28.279126 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2853" for this suite. @ 12/14/24 12:23:28.282
  STEP: Destroying namespace "webhook-markers-5669" for this suite. @ 12/14/24 12:23:28.292
• [6.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/14/24 12:23:28.3
  I1214 12:23:28.300384 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 12:23:28.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:28.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:28.32
  STEP: creating a Pod with a static label @ 12/14/24 12:23:28.327
  STEP: watching for Pod to be ready @ 12/14/24 12:23:28.335
  I1214 12:23:28.337515 19 pods.go:945] observed Pod pod-test in namespace pods-498 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1214 12:23:28.343860 19 pods.go:945] observed Pod pod-test in namespace pods-498 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  }]
  I1214 12:23:28.370431 19 pods.go:945] observed Pod pod-test in namespace pods-498 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  }]
  I1214 12:23:28.924754 19 pods.go:948] Found Pod pod-test in namespace pods-498 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 12:23:28 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/14/24 12:23:28.93
  STEP: getting the Pod and ensuring that it's patched @ 12/14/24 12:23:28.94
  STEP: replacing the Pod's status Ready condition to False @ 12/14/24 12:23:28.943
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/14/24 12:23:28.955
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/14/24 12:23:28.955
  STEP: watching for the Pod to be deleted @ 12/14/24 12:23:28.965
  I1214 12:23:28.967501 19 pods.go:1058] observed event type MODIFIED
  I1214 12:23:30.926302 19 pods.go:1058] observed event type MODIFIED
  I1214 12:23:31.076840 19 pods.go:1058] observed event type MODIFIED
  I1214 12:23:31.934930 19 pods.go:1058] observed event type MODIFIED
  I1214 12:23:31.946341 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-498" for this suite. @ 12/14/24 12:23:31.95
• [3.658 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 12/14/24 12:23:31.958
  I1214 12:23:31.958627 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 12:23:31.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:31.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:31.982
  STEP: Creating simple DaemonSet "daemon-set" @ 12/14/24 12:23:32.005
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/14/24 12:23:32.01
  I1214 12:23:32.013813 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:32.013844 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:32.017609 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:23:32.017629 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 12:23:33.016673 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:33.016720 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:33.019509 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1214 12:23:33.019528 19 fixtures.go:130] Node ip-172-31-38-181 is running 0 daemon pod, expected 1
  I1214 12:23:34.015829 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:34.015885 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:34.019937 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1214 12:23:34.019958 19 fixtures.go:130] Node ip-172-31-38-181 is running 0 daemon pod, expected 1
  I1214 12:23:35.015272 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:35.015359 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:35.018931 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1214 12:23:35.018952 19 fixtures.go:130] Node ip-172-31-38-181 is running 0 daemon pod, expected 1
  I1214 12:23:36.016992 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:36.017064 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:36.021479 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1214 12:23:36.021501 19 fixtures.go:130] Node ip-172-31-38-181 is running 0 daemon pod, expected 1
  I1214 12:23:37.014608 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:37.014650 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:23:37.017093 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 12:23:37.017115 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/14/24 12:23:37.02
  I1214 12:23:37.023783 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/14/24 12:23:37.023
  I1214 12:23:37.035309 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/14/24 12:23:37.035
  I1214 12:23:37.036682 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1214 12:23:37.036752 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.036816 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.036943 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.037009 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.037079 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.037156 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3192 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1214 12:23:37.037169 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/14/24 12:23:37.037
  STEP: watching for the daemon set status to be patched @ 12/14/24 12:23:37.042
  I1214 12:23:37.044281 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1214 12:23:37.044351 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.044449 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.044502 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.044553 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.044659 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.044676 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3192 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1214 12:23:37.044749 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1214 12:23:37.044764 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3192 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1214 12:23:37.044772 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/14/24 12:23:37.052
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3192, will wait for the garbage collector to delete the pods @ 12/14/24 12:23:37.052
  I1214 12:23:37.112103 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.053139ms
  I1214 12:23:37.212644 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.537446ms
  I1214 12:23:43.917397 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:23:43.917429 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1214 12:23:43.920223 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6797"},"items":null}

  I1214 12:23:43.924354 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6797"},"items":null}

  I1214 12:23:43.936405 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3192" for this suite. @ 12/14/24 12:23:43.94
• [11.989 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/14/24 12:23:43.947
  I1214 12:23:43.947437 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename apf @ 12/14/24 12:23:43.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:43.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:43.968
  STEP: getting /apis @ 12/14/24 12:23:43.971
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/14/24 12:23:43.973
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/14/24 12:23:43.974
  STEP: creating @ 12/14/24 12:23:43.975
  STEP: getting @ 12/14/24 12:23:43.99
  STEP: listing @ 12/14/24 12:23:43.993
  STEP: watching @ 12/14/24 12:23:43.995
  I1214 12:23:43.995904 19 flowcontrol.go:620] starting watch
  STEP: patching @ 12/14/24 12:23:43.996
  STEP: updating @ 12/14/24 12:23:44.002
  I1214 12:23:44.009717 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/14/24 12:23:44.009
  STEP: patching /status @ 12/14/24 12:23:44.014
  STEP: updating /status @ 12/14/24 12:23:44.021
  STEP: deleting @ 12/14/24 12:23:44.03
  STEP: deleting a collection @ 12/14/24 12:23:44.043
  I1214 12:23:44.061956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5603" for this suite. @ 12/14/24 12:23:44.065
• [0.124 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/14/24 12:23:44.071
  I1214 12:23:44.071828 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 12:23:44.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:23:44.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:23:44.09
  I1214 12:23:44.101255 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1214 12:23:49.106670 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/14/24 12:23:49.106
  I1214 12:23:49.106735 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1214 12:23:51.112065 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1214 12:23:51.122710 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1214 12:23:53.130878 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1214 12:23:53.139618 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1214 12:23:53.145916 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1214 12:23:53.155088 19 deployment.go:313] Updating deployment test-rollover-deployment
  I1214 12:23:53.155131 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1214 12:23:55.171741 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1214 12:23:55.179407 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1214 12:23:55.185161 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1214 12:23:55.185208 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:23:57.193333 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1214 12:23:57.193391 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:23:59.195398 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1214 12:23:59.195454 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:24:01.193054 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1214 12:24:01.193108 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:24:03.193541 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1214 12:24:03.193596 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 23, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:24:05.195086 19 deployment.go:94] 
  I1214 12:24:05.195133 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I1214 12:24:05.205004 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9392d808-2958-4ca5-b5d3-8b153f990050",
      ResourceVersion: (string) (len=4) "6975",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 12:24:05.210049 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5c8569f-439e-4521-9dfc-847f1f3bb978",
      ResourceVersion: (string) (len=4) "6965",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775833,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9392d808-2958-4ca5-b5d3-8b153f990050",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 33 39 32 64 38  30 38 2d 32 39 35 38 2d  |\"9392d808-2958-|
              00000120  34 63 61 35 2d 62 35 64  33 2d 38 62 31 35 33 66  |4ca5-b5d3-8b153f|
              00000130  39 39 30 30 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |990050\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:24:05.210506 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1214 12:24:05.210710 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ffe57bb-27fc-4d76-ade4-2dd519332a2a",
      ResourceVersion: (string) (len=4) "6974",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9392d808-2958-4ca5-b5d3-8b153f990050",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 33 39 32 64 38 30 38  2d 32 39 35 38 2d 34 63  |9392d808-2958-4c|
              000000c0  61 35 2d 62 35 64 33 2d  38 62 31 35 33 66 39 39  |a5-b5d3-8b153f99|
              000000d0  30 30 35 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |0050\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:24:05.211358 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d650be04-8c90-4c96-9ae1-16779c1d9f82",
      ResourceVersion: (string) (len=4) "6926",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9392d808-2958-4ca5-b5d3-8b153f990050",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 33 39 32 64 38  30 38 2d 32 39 35 38 2d  |\"9392d808-2958-|
              00000120  34 63 61 35 2d 62 35 64  33 2d 38 62 31 35 33 66  |4ca5-b5d3-8b153f|
              00000130  39 39 30 30 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |990050\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:24:05.215227 19 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-s88t4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-s88t4",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-9833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09d24dcb-9b55-4fb6-bc61-26c793991dd3",
      ResourceVersion: (string) (len=4) "6943",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775833,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "d5c8569f-439e-4521-9dfc-847f1f3bb978",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 38 35 36 39 66 2d 34  |d\":\"d5c8569f-4|
              00000090  33 39 65 2d 34 35 32 31  2d 39 64 66 63 2d 38 34  |39e-4521-9dfc-84|
              000000a0  37 66 31 66 33 62 62 39  37 38 5c 22 7d 22 3a 7b  |7f1f3bb978\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 37 35 5c 22 7d 22  |2.168.127.75\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29crx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29crx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869775833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=14) "192.168.127.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.127.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869775833,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869775833,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://868645543e15d60fc7f7c744213a1ad468c22e0f8469fb3198fd263496d23ed0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-29crx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:24:05.216242 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9833" for this suite. @ 12/14/24 12:24:05.22
• [21.157 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 12/14/24 12:24:05.229
  I1214 12:24:05.229333 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 12:24:05.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:24:05.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:24:05.249
  STEP: Creating a test headless service @ 12/14/24 12:24:05.252
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2505.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2505.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2505.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2505.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_udp@PTR;check="$$(dig +tcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_tcp@PTR;sleep 1; done
   @ 12/14/24 12:24:05.269
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2505.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2505.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2505.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2505.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2505.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_udp@PTR;check="$$(dig +tcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_tcp@PTR;sleep 1; done
   @ 12/14/24 12:24:05.269
  STEP: creating a pod to probe DNS @ 12/14/24 12:24:05.269
  STEP: submitting the pod to kubernetes @ 12/14/24 12:24:05.269
  STEP: retrieving the pod @ 12/14/24 12:24:11.301
  STEP: looking for the results for each expected name from probers @ 12/14/24 12:24:11.305
  I1214 12:24:11.310184 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.315166 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.319301 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.322693 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.343856 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.347226 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.352067 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.355670 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local from pod dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810: the server could not find the requested resource (get pods dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810)
  I1214 12:24:11.370391 19 dns_common.go:489] Lookups using dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810 failed for: [wheezy_udp@dns-test-service.dns-2505.svc.cluster.local wheezy_tcp@dns-test-service.dns-2505.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local jessie_udp@dns-test-service.dns-2505.svc.cluster.local jessie_tcp@dns-test-service.dns-2505.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2505.svc.cluster.local]

  I1214 12:24:11.378494 19 dns_common.go:495] Pod client logs for webserver: 
  I1214 12:24:11.383825 19 dns_common.go:495] Pod client logs for querier: 
  I1214 12:24:11.390204 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1214 12:24:16.372615 19 dns_common.go:527] DNS probes using dns-2505/dns-test-b116d54e-0bcb-430d-8e4f-934947cd7810 succeeded

  STEP: deleting the pod @ 12/14/24 12:24:16.372
  STEP: deleting the test service @ 12/14/24 12:24:16.387
  STEP: deleting the test headless service @ 12/14/24 12:24:16.408
  I1214 12:24:16.423590 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2505" for this suite. @ 12/14/24 12:24:16.426
• [11.205 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/14/24 12:24:16.434
  I1214 12:24:16.434070 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 12:24:16.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:24:16.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:24:16.451
  I1214 12:24:16.454614 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: creating the pod @ 12/14/24 12:24:16.455
  STEP: submitting the pod to kubernetes @ 12/14/24 12:24:16.455
  I1214 12:24:18.488781 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8155" for this suite. @ 12/14/24 12:24:18.492
• [2.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 12/14/24 12:24:18.499
  I1214 12:24:18.499983 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 12:24:18.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:24:18.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:24:18.517
  STEP: Creating a ResourceQuota @ 12/14/24 12:24:18.52
  STEP: Getting a ResourceQuota @ 12/14/24 12:24:18.526
  STEP: Updating a ResourceQuota @ 12/14/24 12:24:18.529
  STEP: Verifying a ResourceQuota was modified @ 12/14/24 12:24:18.535
  STEP: Deleting a ResourceQuota @ 12/14/24 12:24:18.538
  STEP: Verifying the deleted ResourceQuota @ 12/14/24 12:24:18.545
  I1214 12:24:18.547807 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8205" for this suite. @ 12/14/24 12:24:18.553
• [0.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/14/24 12:24:18.566
  I1214 12:24:18.566474 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename cronjob @ 12/14/24 12:24:18.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:24:18.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:24:18.589
  STEP: Creating a ReplaceConcurrent cronjob @ 12/14/24 12:24:18.594
  STEP: Ensuring a job is scheduled @ 12/14/24 12:24:18.602
  STEP: Ensuring exactly one is scheduled @ 12/14/24 12:25:00.608
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/14/24 12:25:00.612
  STEP: Ensuring the job is replaced with a new one @ 12/14/24 12:25:00.615
  STEP: Removing cronjob @ 12/14/24 12:26:00.619
  I1214 12:26:00.627336 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4486" for this suite. @ 12/14/24 12:26:00.633
• [102.077 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/14/24 12:26:00.643
  I1214 12:26:00.643086 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:26:00.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:26:00.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:26:00.664
  STEP: Creating secret with name s-test-opt-del-86137a05-dfb6-44d5-9143-134fce407c01 @ 12/14/24 12:26:00.669
  STEP: Creating secret with name s-test-opt-upd-9c86f045-bc33-4e90-a126-3441adccd818 @ 12/14/24 12:26:00.675
  STEP: Creating the pod @ 12/14/24 12:26:00.679
  STEP: Deleting secret s-test-opt-del-86137a05-dfb6-44d5-9143-134fce407c01 @ 12/14/24 12:26:02.781
  STEP: Updating secret s-test-opt-upd-9c86f045-bc33-4e90-a126-3441adccd818 @ 12/14/24 12:26:02.787
  STEP: Creating secret with name s-test-opt-create-22659ac4-d139-4936-bfe6-716b3269740b @ 12/14/24 12:26:02.791
  STEP: waiting to observe update in volume @ 12/14/24 12:26:02.797
  I1214 12:27:23.157586 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2663" for this suite. @ 12/14/24 12:27:23.162
• [82.527 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/14/24 12:27:23.169
  I1214 12:27:23.169678 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:27:23.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:23.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:23.189
  STEP: Creating projection with secret that has name secret-emptykey-test-c8ea014b-04e5-41f0-b51f-5e4eca6d9257 @ 12/14/24 12:27:23.191
  I1214 12:27:23.193148 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8494" for this suite. @ 12/14/24 12:27:23.196
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 12/14/24 12:27:23.203
  I1214 12:27:23.203552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 12:27:23.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:23.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:23.221
  STEP: Creating a job @ 12/14/24 12:27:23.224
  STEP: Ensuring active pods == parallelism @ 12/14/24 12:27:23.23
  STEP: delete a job @ 12/14/24 12:27:25.236
  STEP: deleting Job.batch foo in namespace job-5537, will wait for the garbage collector to delete the pods @ 12/14/24 12:27:25.236
  I1214 12:27:25.300219 19 resources.go:139] Deleting Job.batch foo took: 8.212871ms
  I1214 12:27:25.401162 19 resources.go:163] Terminating Job.batch foo pods took: 100.938227ms
  STEP: Ensuring job was deleted @ 12/14/24 12:27:26.401
  I1214 12:27:26.406197 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5537" for this suite. @ 12/14/24 12:27:26.409
• [3.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/14/24 12:27:26.415
  I1214 12:27:26.415366 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:27:26.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:26.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:26.433
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/14/24 12:27:26.435
  STEP: Saw pod success @ 12/14/24 12:27:30.455
  I1214 12:27:30.457970 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-68bee11b-0f13-4358-8814-b893b356870b container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:27:30.478
  I1214 12:27:30.496957 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9789" for this suite. @ 12/14/24 12:27:30.5
• [4.090 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/14/24 12:27:30.505
  I1214 12:27:30.505904 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replication-controller @ 12/14/24 12:27:30.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:30.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:30.525
  STEP: Creating replication controller my-hostname-basic-24662a75-d1aa-431d-bef7-252a6d68eff5 @ 12/14/24 12:27:30.527
  I1214 12:27:30.539885 19 resource.go:87] Pod name my-hostname-basic-24662a75-d1aa-431d-bef7-252a6d68eff5: Found 0 pods out of 1
  I1214 12:27:35.544095 19 resource.go:87] Pod name my-hostname-basic-24662a75-d1aa-431d-bef7-252a6d68eff5: Found 1 pods out of 1
  I1214 12:27:35.544130 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-24662a75-d1aa-431d-bef7-252a6d68eff5" are running
  I1214 12:27:35.546844 19 rc.go:523] Pod "my-hostname-basic-24662a75-d1aa-431d-bef7-252a6d68eff5-79wsx" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:27:31 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:27:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:27:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:27:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:27:30 +0000 UTC Reason: Message:}])
  I1214 12:27:35.546870 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/14/24 12:27:35.546
  I1214 12:27:35.557265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2383" for this suite. @ 12/14/24 12:27:35.56
• [5.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/14/24 12:27:35.567
  I1214 12:27:35.567976 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 12:27:35.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:35.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:35.585
  STEP: Creating configMap with name configmap-test-upd-2d93c503-cdc5-4153-8b42-179c94fc1b9a @ 12/14/24 12:27:35.591
  STEP: Creating the pod @ 12/14/24 12:27:35.596
  STEP: Waiting for pod with text data @ 12/14/24 12:27:37.612
  STEP: Waiting for pod with binary data @ 12/14/24 12:27:37.627
  I1214 12:27:37.635507 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3847" for this suite. @ 12/14/24 12:27:37.64
• [2.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 12/14/24 12:27:37.647
  I1214 12:27:37.647148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:27:37.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:37.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:37.672
  STEP: Setting up server cert @ 12/14/24 12:27:37.701
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:27:38.016
  STEP: Deploying the webhook pod @ 12/14/24 12:27:38.023
  STEP: Wait for the deployment to be ready @ 12/14/24 12:27:38.039
  I1214 12:27:38.047043 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:27:40.059
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:27:40.072
  I1214 12:27:41.073133 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/14/24 12:27:41.081
  STEP: create a configmap that should be updated by the webhook @ 12/14/24 12:27:41.093
  I1214 12:27:41.153262 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5608" for this suite. @ 12/14/24 12:27:41.159
  STEP: Destroying namespace "webhook-markers-4989" for this suite. @ 12/14/24 12:27:41.166
• [3.527 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/14/24 12:27:41.175
  I1214 12:27:41.175117 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename namespaces @ 12/14/24 12:27:41.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:41.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:41.193
  STEP: Updating Namespace "namespaces-4554" @ 12/14/24 12:27:41.195
  I1214 12:27:41.205325 19 namespace.go:389] Namespace "namespaces-4554" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8420a829-76bd-4c29-9657-9f38c00725dc", "kubernetes.io/metadata.name":"namespaces-4554", "namespaces-4554":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1214 12:27:41.205434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4554" for this suite. @ 12/14/24 12:27:41.208
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/14/24 12:27:41.214
  I1214 12:27:41.214014 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/14/24 12:27:41.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:41.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:41.234
  STEP: create the container to handle the HTTPGet hook request. @ 12/14/24 12:27:41.24
  STEP: create the pod with lifecycle hook @ 12/14/24 12:27:43.261
  STEP: delete the pod with lifecycle hook @ 12/14/24 12:27:45.28
  STEP: check prestop hook @ 12/14/24 12:27:47.298
  I1214 12:27:47.304937 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7985" for this suite. @ 12/14/24 12:27:47.309
• [6.102 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 12/14/24 12:27:47.315
  I1214 12:27:47.315663 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption @ 12/14/24 12:27:47.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:27:47.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:27:47.342
  I1214 12:27:47.361729 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1214 12:28:47.368186 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 12/14/24 12:28:47.371
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 12/14/24 12:28:47.38
  I1214 12:28:47.396233 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 12/14/24 12:28:47.396
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 12/14/24 12:28:49.407
  I1214 12:28:49.412718 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 12/14/24 12:28:49.412
  STEP: Verifying the pod has the pod disruption condition @ 12/14/24 12:28:51.421
  I1214 12:28:51.424653 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1214 12:28:51.938800 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I1214 12:28:51.973872 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5668" for this suite. @ 12/14/24 12:28:51.976
• [64.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 12/14/24 12:28:51.984
  I1214 12:28:51.984162 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 12:28:51.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:28:52.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:28:52.003
  STEP: validating api versions @ 12/14/24 12:28:52.006
  I1214 12:28:52.006106 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-2559 api-versions'
  I1214 12:28:52.046135 19 builder.go:146] stderr: ""
  I1214 12:28:52.046177 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1214 12:28:52.046295 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2559" for this suite. @ 12/14/24 12:28:52.051
• [0.076 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/14/24 12:28:52.059
  I1214 12:28:52.059922 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-runtime @ 12/14/24 12:28:52.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:28:52.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:28:52.179
  STEP: create the container @ 12/14/24 12:28:52.181
  W1214 12:28:52.190148      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/14/24 12:28:52.19
  STEP: get the container status @ 12/14/24 12:28:55.241
  STEP: the container should be terminated @ 12/14/24 12:28:55.244
  STEP: the termination message should be set @ 12/14/24 12:28:55.244
  I1214 12:28:55.244275 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/14/24 12:28:55.244
  I1214 12:28:55.304612 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4883" for this suite. @ 12/14/24 12:28:55.308
• [3.255 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/14/24 12:28:55.315
  I1214 12:28:55.315132 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename aggregator @ 12/14/24 12:28:55.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:28:55.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:28:55.334
  I1214 12:28:55.336422 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Registering the sample API server. @ 12/14/24 12:28:55.336
  I1214 12:28:55.509891 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1214 12:28:55.536829 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1214 12:28:57.587808 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:28:59.592872 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:01.592541 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:03.593790 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:05.594210 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:07.593226 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:09.593415 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:11.592399 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:13.592257 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:15.593352 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:17.592656 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 14, 12, 28, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1214 12:29:19.714394 19 aggregator.go:755] Waited 113.396673ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/14/24 12:29:19.745
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/14/24 12:29:19.749
  STEP: List APIServices @ 12/14/24 12:29:19.757
  I1214 12:29:19.764459 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/14/24 12:29:19.764
  I1214 12:29:19.782444 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/14/24 12:29:19.782
  I1214 12:29:19.795429 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 14, 12, 29, 19, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/14/24 12:29:19.795
  I1214 12:29:19.799578 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-14 12:29:19 +0000 UTC Passed all checks passed}
  I1214 12:29:19.799626 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1214 12:29:19.799636 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/14/24 12:29:19.799
  I1214 12:29:19.810468 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-955299924" @ 12/14/24 12:29:19.81
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/14/24 12:29:19.822
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/14/24 12:29:19.829
  STEP: Patch APIService Status @ 12/14/24 12:29:19.832
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/14/24 12:29:19.839
  I1214 12:29:19.844064 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-14 12:29:19 +0000 UTC Passed all checks passed}
  I1214 12:29:19.844216 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1214 12:29:19.844252 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1214 12:29:19.844368 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/14/24 12:29:19.844
  STEP: Confirm that the generated APIService has been deleted @ 12/14/24 12:29:19.855
  I1214 12:29:19.855208 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1214 12:29:19.859338 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1214 12:29:19.859368 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1214 12:29:19.966850 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9263" for this suite. @ 12/14/24 12:29:19.969
• [24.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/14/24 12:29:19.975
  I1214 12:29:19.975164 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename cronjob @ 12/14/24 12:29:19.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:29:19.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:29:19.997
  STEP: Creating a ForbidConcurrent cronjob @ 12/14/24 12:29:19.999
  STEP: Ensuring a job is scheduled @ 12/14/24 12:29:20.006
  STEP: Ensuring exactly one is scheduled @ 12/14/24 12:30:02.01
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/14/24 12:30:02.013
  STEP: Ensuring no more jobs are scheduled @ 12/14/24 12:30:02.017
  STEP: Removing cronjob @ 12/14/24 12:30:02.021
  I1214 12:30:02.027911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9141" for this suite. @ 12/14/24 12:30:02.031
• [42.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/14/24 12:30:02.039
  I1214 12:30:02.039976 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:30:02.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:30:02.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:30:02.057
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/14/24 12:30:02.06
  STEP: Saw pod success @ 12/14/24 12:30:06.085
  I1214 12:30:06.090331 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-1af8e004-71dc-4f86-9bc3-ad35547e6270 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:30:06.109
  I1214 12:30:06.129320 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4323" for this suite. @ 12/14/24 12:30:06.132
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 12/14/24 12:30:06.141
  I1214 12:30:06.141740 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 12:30:06.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:30:06.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:30:06.16
  STEP: Creating a test headless service @ 12/14/24 12:30:06.162
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3695 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3695;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3695 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3695;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3695.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3695.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3695.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3695.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3695.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3695.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3695.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3695.svc;check="$$(dig +notcp +noall +answer +search 47.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.47_udp@PTR;check="$$(dig +tcp +noall +answer +search 47.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.47_tcp@PTR;sleep 1; done
   @ 12/14/24 12:30:06.182
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3695 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3695;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3695 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3695;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3695.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3695.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3695.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3695.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3695.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3695.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3695.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3695.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3695.svc;check="$$(dig +notcp +noall +answer +search 47.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.47_udp@PTR;check="$$(dig +tcp +noall +answer +search 47.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.47_tcp@PTR;sleep 1; done
   @ 12/14/24 12:30:06.182
  STEP: creating a pod to probe DNS @ 12/14/24 12:30:06.182
  STEP: submitting the pod to kubernetes @ 12/14/24 12:30:06.182
  STEP: retrieving the pod @ 12/14/24 12:30:12.217
  STEP: looking for the results for each expected name from probers @ 12/14/24 12:30:12.22
  I1214 12:30:12.224006 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.228875 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.232378 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3695 from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.235144 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3695 from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.239637 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.242983 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.246326 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.250755 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.267625 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.271611 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.274915 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3695 from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.278735 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3695 from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.283677 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.287646 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.290451 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.294867 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3695.svc from pod dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722: the server could not find the requested resource (get pods dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722)
  I1214 12:30:12.307159 19 dns_common.go:489] Lookups using dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3695 wheezy_tcp@dns-test-service.dns-3695 wheezy_udp@dns-test-service.dns-3695.svc wheezy_tcp@dns-test-service.dns-3695.svc wheezy_udp@_http._tcp.dns-test-service.dns-3695.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3695.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3695 jessie_tcp@dns-test-service.dns-3695 jessie_udp@dns-test-service.dns-3695.svc jessie_tcp@dns-test-service.dns-3695.svc jessie_udp@_http._tcp.dns-test-service.dns-3695.svc jessie_tcp@_http._tcp.dns-test-service.dns-3695.svc]

  I1214 12:30:12.311645 19 dns_common.go:495] Pod client logs for webserver: 
  I1214 12:30:12.318593 19 dns_common.go:495] Pod client logs for querier: 
  I1214 12:30:12.323621 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1214 12:30:17.310330 19 dns_common.go:527] DNS probes using dns-3695/dns-test-60e93e18-9aa4-407f-9ba6-e29b37aec722 succeeded

  STEP: deleting the pod @ 12/14/24 12:30:17.31
  STEP: deleting the test service @ 12/14/24 12:30:17.329
  STEP: deleting the test headless service @ 12/14/24 12:30:17.348
  I1214 12:30:17.365900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3695" for this suite. @ 12/14/24 12:30:17.368
• [11.235 seconds]
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/14/24 12:30:17.377
  I1214 12:30:17.377277 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 12:30:17.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:30:17.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:30:17.396
  STEP: Creating pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110 @ 12/14/24 12:30:17.398
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 12:30:19.417
  I1214 12:30:19.421713 19 container_probe.go:1749] Initial restart count of pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb is 0
  I1214 12:30:19.425117 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:21.430496 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:23.435241 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:25.440273 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:27.446460 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:29.450883 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:31.455395 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:33.461377 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:35.467709 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:37.472608 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:39.477242 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:41.482791 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:43.486925 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:45.491009 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:47.497409 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:49.502899 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:51.509599 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:53.514328 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:55.520889 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:57.526194 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:30:59.532795 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:31:01.538798 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:31:03.544667 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:31:05.549186 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:31:07.554295 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:31:09.558891 19 container_probe.go:1759] Get pod busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb in namespace container-probe-5110
  I1214 12:31:09.558930 19 container_probe.go:1763] Restart count of pod container-probe-5110/busybox-64708566-b2c7-4ede-b1c3-c64bdca6f5eb is now 1 (50.137176648s elapsed)
  STEP: deleting the pod @ 12/14/24 12:31:09.559
  I1214 12:31:09.581405 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5110" for this suite. @ 12/14/24 12:31:09.588
• [52.219 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/14/24 12:31:09.596
  I1214 12:31:09.596091 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replicaset @ 12/14/24 12:31:09.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:31:09.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:31:09.618
  STEP: Create a Replicaset @ 12/14/24 12:31:09.63
  STEP: Verify that the required pods have come up. @ 12/14/24 12:31:09.64
  I1214 12:31:09.643592 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1214 12:31:14.647010 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/14/24 12:31:14.647
  STEP: Getting /status @ 12/14/24 12:31:14.647
  I1214 12:31:14.649723 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/14/24 12:31:14.649
  I1214 12:31:14.658473 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/14/24 12:31:14.658
  I1214 12:31:14.659835 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1214 12:31:14.659902 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.659961 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.660067 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.660091 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8521 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1214 12:31:14.660105 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/14/24 12:31:14.66
  I1214 12:31:14.660129 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1214 12:31:14.667507 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/14/24 12:31:14.667
  I1214 12:31:14.668888 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1214 12:31:14.668969 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.669057 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.669220 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.669235 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8521 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1214 12:31:14.669292 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1214 12:31:14.669308 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8521 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1214 12:31:14.669318 19 replica_set.go:729] Replicaset test-rs has a patched status
  I1214 12:31:14.669404 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8521" for this suite. @ 12/14/24 12:31:14.672
• [5.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/14/24 12:31:14.679
  I1214 12:31:14.679067 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replicaset @ 12/14/24 12:31:14.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:31:14.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:31:14.699
  STEP: Create a ReplicaSet @ 12/14/24 12:31:14.702
  STEP: Verify that the required pods have come up @ 12/14/24 12:31:14.707
  I1214 12:31:14.710006 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1214 12:31:19.715844 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/14/24 12:31:19.715
  I1214 12:31:19.718428 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/14/24 12:31:19.718
  STEP: DeleteCollection of the ReplicaSets @ 12/14/24 12:31:19.721
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/14/24 12:31:19.731
  I1214 12:31:19.736307 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1031" for this suite. @ 12/14/24 12:31:19.741
• [5.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/14/24 12:31:19.753
  I1214 12:31:19.754129 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:31:19.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:31:19.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:31:19.787
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/14/24 12:31:19.792
  STEP: Saw pod success @ 12/14/24 12:31:21.815
  I1214 12:31:21.818559 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-3d5753f9-d9c1-4c12-873e-bd7c622802da container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:31:21.829
  I1214 12:31:21.851385 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3274" for this suite. @ 12/14/24 12:31:21.854
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/14/24 12:31:21.86
  I1214 12:31:21.860901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replication-controller @ 12/14/24 12:31:21.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:31:21.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:31:21.879
  STEP: Creating ReplicationController "e2e-rc-mppw5" @ 12/14/24 12:31:21.882
  I1214 12:31:21.889694 19 rc.go:792] Get Replication Controller "e2e-rc-mppw5" to confirm replicas
  I1214 12:31:22.890077 19 rc.go:792] Get Replication Controller "e2e-rc-mppw5" to confirm replicas
  I1214 12:31:22.893934 19 rc.go:801] Found 1 replicas for "e2e-rc-mppw5" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-mppw5" @ 12/14/24 12:31:22.893
  STEP: Updating a scale subresource @ 12/14/24 12:31:22.898
  STEP: Verifying replicas where modified for replication controller "e2e-rc-mppw5" @ 12/14/24 12:31:22.903
  I1214 12:31:22.903656 19 rc.go:792] Get Replication Controller "e2e-rc-mppw5" to confirm replicas
  I1214 12:31:23.904072 19 rc.go:792] Get Replication Controller "e2e-rc-mppw5" to confirm replicas
  I1214 12:31:23.907735 19 rc.go:801] Found 2 replicas for "e2e-rc-mppw5" replication controller
  I1214 12:31:23.907915 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7239" for this suite. @ 12/14/24 12:31:23.913
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 12/14/24 12:31:23.92
  I1214 12:31:23.920053 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 12:31:23.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:31:23.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:31:23.938
  STEP: Discovering how many secrets are in namespace by default @ 12/14/24 12:31:23.941
  STEP: Counting existing ResourceQuota @ 12/14/24 12:31:28.944
  STEP: Creating a ResourceQuota @ 12/14/24 12:31:33.949
  STEP: Ensuring resource quota status is calculated @ 12/14/24 12:31:33.953
  STEP: Creating a Secret @ 12/14/24 12:31:35.958
  STEP: Ensuring resource quota status captures secret creation @ 12/14/24 12:31:35.97
  STEP: Deleting a secret @ 12/14/24 12:31:37.976
  STEP: Ensuring resource quota status released usage @ 12/14/24 12:31:37.982
  I1214 12:31:39.987614 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-624" for this suite. @ 12/14/24 12:31:39.992
• [16.080 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/14/24 12:31:39.999
  I1214 12:31:39.999835 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename subpath @ 12/14/24 12:31:40
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:31:40.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:31:40.021
  STEP: Setting up data @ 12/14/24 12:31:40.023
  STEP: Creating pod pod-subpath-test-secret-sph7 @ 12/14/24 12:31:40.033
  STEP: Creating a pod to test atomic-volume-subpath @ 12/14/24 12:31:40.033
  STEP: Saw pod success @ 12/14/24 12:32:02.104
  I1214 12:32:02.108641 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-subpath-test-secret-sph7 container test-container-subpath-secret-sph7: <nil>
  STEP: delete the pod @ 12/14/24 12:32:02.119
  STEP: Deleting pod pod-subpath-test-secret-sph7 @ 12/14/24 12:32:02.137
  I1214 12:32:02.137620 19 delete.go:62] Deleting pod "pod-subpath-test-secret-sph7" in namespace "subpath-4746"
  I1214 12:32:02.140044 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4746" for this suite. @ 12/14/24 12:32:02.142
• [22.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/14/24 12:32:02.151
  I1214 12:32:02.151345 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 12:32:02.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:02.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:02.167
  I1214 12:32:02.170726 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I1214 12:32:02.182173 19 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 12/14/24 12:32:04.198
  STEP: updating a scale subresource @ 12/14/24 12:32:04.201
  STEP: verifying the deployment Spec.Replicas was modified @ 12/14/24 12:32:04.208
  STEP: Patch a scale subresource @ 12/14/24 12:32:04.214
  I1214 12:32:04.257175 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a77652cc-86e0-4a81-b2eb-7e8b6227e73c",
      ResourceVersion: (string) (len=4) "9259",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 12:32:04.262071 19 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "299c2fdd-f080-4310-933d-1835902e13dc",
      ResourceVersion: (string) (len=4) "9261",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a77652cc-86e0-4a81-b2eb-7e8b6227e73c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 37 37 36 35 32  63 63 2d 38 36 65 30 2d  |\"a77652cc-86e0-|
              00000120  34 61 38 31 2d 62 32 65  62 2d 37 65 38 62 36 32  |4a81-b2eb-7e8b62|
              00000130  32 37 65 37 33 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |27e73c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:32:04.276997 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-6jmth" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-6jmth",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b9f19b6-05d0-4873-984e-9ee25bd060a7",
      ResourceVersion: (string) (len=4) "9262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "299c2fdd-f080-4310-933d-1835902e13dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  39 63 32 66 64 64 2d 66  |d\":\"299c2fdd-f|
              00000090  30 38 30 2d 34 33 31 30  2d 39 33 33 64 2d 31 38  |080-4310-933d-18|
              000000a0  33 35 39 30 32 65 31 33  64 63 5c 22 7d 22 3a 7b  |35902e13dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7kz8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7kz8k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7kz8k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:32:04.278322 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-gxhnc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-gxhnc",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1654e863-9509-43fe-8682-9a89c2d4a358",
      ResourceVersion: (string) (len=4) "9245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "299c2fdd-f080-4310-933d-1835902e13dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  39 63 32 66 64 64 2d 66  |d\":\"299c2fdd-f|
              00000090  30 38 30 2d 34 33 31 30  2d 39 33 33 64 2d 31 38  |080-4310-933d-18|
              000000a0  33 35 39 30 32 65 31 33  64 63 5c 22 7d 22 3a 7b  |35902e13dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 36 34 5c 22 7d  |2.168.249.164\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnqlg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnqlg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869776322,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0839d3431d555087ec02af8f895be2d305e498a487adc34160f86cd70d19e4e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dnqlg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:32:04.279453 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-rvg49" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-rvg49",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef5932a5-1880-4d26-bdc0-593424ecca60",
      ResourceVersion: (string) (len=4) "9264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "299c2fdd-f080-4310-933d-1835902e13dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  39 63 32 66 64 64 2d 66  |d\":\"299c2fdd-f|
              00000090  30 38 30 2d 34 33 31 30  2d 39 33 33 64 2d 31 38  |080-4310-933d-18|
              000000a0  33 35 39 30 32 65 31 33  64 63 5c 22 7d 22 3a 7b  |35902e13dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tnh6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tnh6w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:32:04.282790 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9898" for this suite. @ 12/14/24 12:32:04.297
• [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 12/14/24 12:32:04.307
  I1214 12:32:04.307733 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:32:04.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:04.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:04.329
  STEP: Setting up server cert @ 12/14/24 12:32:04.351
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:32:04.625
  STEP: Deploying the webhook pod @ 12/14/24 12:32:04.634
  STEP: Wait for the deployment to be ready @ 12/14/24 12:32:04.647
  I1214 12:32:04.656277 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:32:06.668
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:32:06.684
  I1214 12:32:07.685145 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/14/24 12:32:07.695
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/14/24 12:32:07.71
  I1214 12:32:07.710884 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:32:07.763012 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1677" for this suite. @ 12/14/24 12:32:07.766
  STEP: Destroying namespace "webhook-markers-234" for this suite. @ 12/14/24 12:32:07.774
• [3.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/14/24 12:32:07.782
  I1214 12:32:07.782730 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 12:32:07.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:07.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:07.798
  STEP: Creating a pod to test substitution in volume subpath @ 12/14/24 12:32:07.802
  STEP: Saw pod success @ 12/14/24 12:32:11.828
  I1214 12:32:11.831263 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod var-expansion-6a2f7bb8-2834-42ec-8452-f500db6dfeca container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 12:32:11.838
  I1214 12:32:11.856322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7764" for this suite. @ 12/14/24 12:32:11.861
• [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/14/24 12:32:11.869
  I1214 12:32:11.869293 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:32:11.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:11.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:11.887
  STEP: creating a secret @ 12/14/24 12:32:11.89
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/14/24 12:32:11.893
  STEP: patching the secret @ 12/14/24 12:32:11.898
  STEP: deleting the secret using a LabelSelector @ 12/14/24 12:32:11.906
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/14/24 12:32:11.914
  I1214 12:32:11.918733 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1786" for this suite. @ 12/14/24 12:32:11.922
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/14/24 12:32:11.928
  I1214 12:32:11.928719 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/14/24 12:32:11.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:11.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:11.951
  STEP: fetching the /apis discovery document @ 12/14/24 12:32:11.953
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/14/24 12:32:11.955
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/14/24 12:32:11.955
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/14/24 12:32:11.955
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/14/24 12:32:11.956
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/14/24 12:32:11.956
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/14/24 12:32:11.957
  I1214 12:32:11.957154 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-813" for this suite. @ 12/14/24 12:32:11.96
• [0.037 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/14/24 12:32:11.965
  I1214 12:32:11.965405 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 12:32:11.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:11.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:11.987
  STEP: creating the pod @ 12/14/24 12:32:11.989
  STEP: waiting for pod running @ 12/14/24 12:32:11.999
  STEP: creating a file in subpath @ 12/14/24 12:32:14.007
  I1214 12:32:14.011628 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9603 PodName:var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:32:14.011649 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:32:14.012108 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:32:14.012157 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9603/pods/var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/14/24 12:32:14.056
  I1214 12:32:14.059841 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9603 PodName:var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:32:14.059869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:32:14.060306 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:32:14.060356 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9603/pods/var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/14/24 12:32:14.095
  I1214 12:32:14.609014 19 pod_client.go:173] Successfully updated pod "var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a"
  STEP: waiting for annotated pod running @ 12/14/24 12:32:14.609
  STEP: deleting the pod gracefully @ 12/14/24 12:32:14.614
  I1214 12:32:14.614162 19 delete.go:62] Deleting pod "var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a" in namespace "var-expansion-9603"
  I1214 12:32:14.622331 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-144a1fe9-a8c2-44d7-8115-3b942190273a" to be fully deleted
  I1214 12:32:46.711262 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9603" for this suite. @ 12/14/24 12:32:46.716
• [34.759 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/14/24 12:32:46.724
  I1214 12:32:46.724287 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 12:32:46.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:46.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:46.743
  I1214 12:32:46.757038 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1214 12:32:51.760426 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/14/24 12:32:51.76
  I1214 12:32:51.760512 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/14/24 12:32:51.769
  I1214 12:32:53.822164 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9747",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5ba9d7e-44ab-4f02-99c0-ab1a0ee3f86b",
      ResourceVersion: (string) (len=4) "9650",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776371,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 12:32:53.827254 19 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9747",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a439d5c0-c661-4cbc-9086-b621a5c418ec",
      ResourceVersion: (string) (len=4) "9640",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776371,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d5ba9d7e-44ab-4f02-99c0-ab1a0ee3f86b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 62 61 39 64  37 65 2d 34 34 61 62 2d  |\"d5ba9d7e-44ab-|
              00000120  34 66 30 32 2d 39 39 63  30 2d 61 62 31 61 30 65  |4f02-99c0-ab1a0e|
              00000130  65 33 66 38 36 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e3f86b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:32:53.831480 19 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-k85ns" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-k85ns",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-9747",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a089db2f-2108-43b9-ac6a-7be0225d3e6f",
      ResourceVersion: (string) (len=4) "9639",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776371,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "a439d5c0-c661-4cbc-9086-b621a5c418ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  33 39 64 35 63 30 2d 63  |d\":\"a439d5c0-c|
              00000090  36 36 31 2d 34 63 62 63  2d 39 30 38 36 2d 62 36  |661-4cbc-9086-b6|
              000000a0  32 31 61 35 63 34 31 38  65 63 5c 22 7d 22 3a 7b  |21a5c418ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 31 31 5c 22 7d  |2.168.197.211\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g62hb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g62hb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776371,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776371,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869776372,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://ad1af0a23facb5f00fb812340a3f19959e8e47197273058bd701872cd78627df",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g62hb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:32:53.832519 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9747" for this suite. @ 12/14/24 12:32:53.836
• [7.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/14/24 12:32:53.845
  I1214 12:32:53.845865 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 12:32:53.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:53.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:53.864
  STEP: Creating a pod to test downward api env vars @ 12/14/24 12:32:53.866
  STEP: Saw pod success @ 12/14/24 12:32:57.889
  I1214 12:32:57.891734 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downward-api-3a855398-4ac0-4d8d-ae2d-17e5df7e6fc5 container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 12:32:57.903
  I1214 12:32:57.922006 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9476" for this suite. @ 12/14/24 12:32:57.926
• [4.087 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/14/24 12:32:57.932
  I1214 12:32:57.932824 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/14/24 12:32:57.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:32:57.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:32:57.949
  I1214 12:32:57.951774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:33:04.154339 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3170" for this suite. @ 12/14/24 12:33:04.158
• [6.233 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/14/24 12:33:04.166
  I1214 12:33:04.166212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:33:04.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:33:04.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:33:04.186
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-4508c204-00e8-47a7-9603-7fa84f9e6205 @ 12/14/24 12:33:04.191
  STEP: Creating the pod @ 12/14/24 12:33:04.195
  STEP: Updating configmap projected-configmap-test-upd-4508c204-00e8-47a7-9603-7fa84f9e6205 @ 12/14/24 12:33:06.226
  STEP: waiting to observe update in volume @ 12/14/24 12:33:06.232
  I1214 12:34:36.640662 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3943" for this suite. @ 12/14/24 12:34:36.644
• [92.486 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/14/24 12:34:36.652
  I1214 12:34:36.652555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename apf @ 12/14/24 12:34:36.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:34:36.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:34:36.669
  STEP: getting /apis @ 12/14/24 12:34:36.672
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/14/24 12:34:36.675
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/14/24 12:34:36.676
  STEP: creating @ 12/14/24 12:34:36.677
  STEP: getting @ 12/14/24 12:34:36.694
  STEP: listing @ 12/14/24 12:34:36.697
  STEP: watching @ 12/14/24 12:34:36.703
  I1214 12:34:36.703767 19 flowcontrol.go:394] starting watch
  STEP: patching @ 12/14/24 12:34:36.704
  STEP: updating @ 12/14/24 12:34:36.709
  I1214 12:34:36.719258 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 12/14/24 12:34:36.719
  STEP: patching /status @ 12/14/24 12:34:36.722
  STEP: updating /status @ 12/14/24 12:34:36.728
  STEP: deleting @ 12/14/24 12:34:36.759
  STEP: deleting a collection @ 12/14/24 12:34:36.774
  I1214 12:34:36.794568 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7142" for this suite. @ 12/14/24 12:34:36.797
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/14/24 12:34:36.806
  I1214 12:34:36.806490 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:34:36.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:34:36.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:34:36.826
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 12:34:36.828
  STEP: Saw pod success @ 12/14/24 12:34:40.855
  I1214 12:34:40.858847 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-8d039f60-284c-4c29-8f67-0f43d94ab2e8 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 12:34:40.869
  I1214 12:34:40.890397 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1846" for this suite. @ 12/14/24 12:34:40.893
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/14/24 12:34:40.901
  I1214 12:34:40.901081 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:34:40.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:34:40.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:34:40.92
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/14/24 12:34:40.922
  STEP: Saw pod success @ 12/14/24 12:34:42.941
  I1214 12:34:42.944546 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-f8760fc5-5dc4-4ab2-a5f6-943abcf0ac48 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:34:42.949
  I1214 12:34:42.966895 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2685" for this suite. @ 12/14/24 12:34:42.97
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 12/14/24 12:34:42.978
  I1214 12:34:42.978572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:34:42.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:34:42.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:34:42.997
  STEP: Setting up server cert @ 12/14/24 12:34:43.023
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:34:43.143
  STEP: Deploying the webhook pod @ 12/14/24 12:34:43.152
  STEP: Wait for the deployment to be ready @ 12/14/24 12:34:43.166
  I1214 12:34:43.180992 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:34:45.191
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:34:45.203
  I1214 12:34:46.204134 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/14/24 12:34:46.277
  STEP: Creating a configMap that should be mutated @ 12/14/24 12:34:46.286
  STEP: Deleting the collection of validation webhooks @ 12/14/24 12:34:46.31
  STEP: Creating a configMap that should not be mutated @ 12/14/24 12:34:46.362
  I1214 12:34:46.417291 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5200" for this suite. @ 12/14/24 12:34:46.42
  STEP: Destroying namespace "webhook-markers-4432" for this suite. @ 12/14/24 12:34:46.429
• [3.458 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/14/24 12:34:46.436
  I1214 12:34:46.436642 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 12:34:46.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:34:46.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:34:46.453
  STEP: Creating pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085 @ 12/14/24 12:34:46.455
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 12:34:48.474
  I1214 12:34:48.477694 19 container_probe.go:1749] Initial restart count of pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c is 0
  I1214 12:34:48.481932 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:34:50.485828 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:34:52.491745 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:34:54.496682 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:34:56.503468 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:34:58.507748 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:00.512463 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:02.516820 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:04.520819 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:06.525410 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:08.532673 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:10.536778 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:12.542933 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:14.548068 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:16.554284 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:18.558973 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:20.565916 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:22.570622 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:24.575948 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:26.581390 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:28.587365 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:30.593817 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:32.597819 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:34.601901 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:36.606954 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:38.612480 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:40.616265 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:42.619988 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:44.625006 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:46.630977 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:48.636636 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:50.643141 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:52.647266 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:54.651901 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:56.656463 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:35:58.663400 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:00.670225 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:02.676424 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:04.682887 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:06.688479 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:08.694690 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:10.701605 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:12.710632 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:14.716955 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:16.722781 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:18.727655 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:20.733613 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:22.739415 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:24.747841 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:26.753834 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:28.758425 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:30.765079 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:32.769561 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:34.774789 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:36.779927 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:38.785066 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:40.789228 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:42.793289 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:44.798182 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:46.804592 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:48.810646 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:50.817550 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:52.822115 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:54.828895 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:56.836792 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:36:58.841902 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:00.848380 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:02.852750 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:04.860112 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:06.865216 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:08.870710 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:10.875293 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:12.880785 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:14.886126 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:16.893116 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:18.898851 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:20.904959 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:22.909278 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:24.914863 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:26.920424 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:28.925828 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:30.932219 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:32.937529 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:34.942797 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:36.947194 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:38.952141 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:40.956572 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:42.961445 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:44.967573 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:46.973960 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:48.978627 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:50.984640 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:52.989731 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:54.995405 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:57.000071 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:37:59.006560 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:01.011662 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:03.017881 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:05.021718 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:07.026247 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:09.032119 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:11.037181 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:13.042861 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:15.047841 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:17.053537 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:19.058439 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:21.064287 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:23.068542 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:25.074194 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:27.080134 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:29.085853 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:31.092367 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:33.097337 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:35.102797 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:37.107364 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:39.111505 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:41.116574 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:43.120905 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:45.125206 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  I1214 12:38:47.131591 19 container_probe.go:1759] Get pod busybox-d0a122dc-c45b-4bed-847b-d822d039e48c in namespace container-probe-9085
  STEP: deleting the pod @ 12/14/24 12:38:49.132
  I1214 12:38:49.147563 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9085" for this suite. @ 12/14/24 12:38:49.154
• [242.726 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/14/24 12:38:49.162
  I1214 12:38:49.162278 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 12:38:49.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:38:49.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:38:49.176
  I1214 12:38:49.180399 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1214 12:38:49.189882 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1214 12:38:54.197186 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/14/24 12:38:54.197
  I1214 12:38:54.197257 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1214 12:38:54.203848 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1214 12:38:54.210681 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1214 12:38:56.219292 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1214 12:38:56.222767 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1214 12:38:56.231687 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b91c5a59-dec5-4a0c-ab4e-92b494c61a2f",
      ResourceVersion: (string) (len=5) "10776",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 12:38:56.236559 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bdae8c9-1174-4ad3-a29a-69feb10b02a9",
      ResourceVersion: (string) (len=5) "10765",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b91c5a59-dec5-4a0c-ab4e-92b494c61a2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 39 31 63 35 61  35 39 2d 64 65 63 35 2d  |\"b91c5a59-dec5-|
              00000120  34 61 30 63 2d 61 62 34  65 2d 39 32 62 34 39 34  |4a0c-ab4e-92b494|
              00000130  63 36 31 61 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c61a2f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:38:56.237012 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1214 12:38:56.237367 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75579a6c-d9dd-4b2b-ac6a-4ecb5167f4ac",
      ResourceVersion: (string) (len=5) "10775",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b91c5a59-dec5-4a0c-ab4e-92b494c61a2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 39 31 63 35 61 35  |"uid\":\"b91c5a5|
              000000b0  39 2d 64 65 63 35 2d 34  61 30 63 2d 61 62 34 65  |9-dec5-4a0c-ab4e|
              000000c0  2d 39 32 62 34 39 34 63  36 31 61 32 66 5c 22 7d  |-92b494c61a2f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 12:38:56.242866 19 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-tfk2n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-tfk2n",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc9434e8-f8dc-48b4-8547-565a96dc10cc",
      ResourceVersion: (string) (len=5) "10764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "8bdae8c9-1174-4ad3-a29a-69feb10b02a9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  64 61 65 38 63 39 2d 31  |d\":\"8bdae8c9-1|
              00000090  31 37 34 2d 34 61 64 33  2d 61 32 39 61 2d 36 39  |174-4ad3-a29a-69|
              000000a0  66 65 62 31 30 62 30 32  61 39 5c 22 7d 22 3a 7b  |feb10b02a9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 31 34 5c 22 7d  |2.168.197.214\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vtt8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vtt8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869776734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869776734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869776734,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://297c8e21f96aff3209431805a6d984c7ed6213f0af7fa6be519e9f8033bd5e84",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5vtt8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 12:38:56.244137 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4944" for this suite. @ 12/14/24 12:38:56.247
• [7.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 12/14/24 12:38:56.255
  I1214 12:38:56.255626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 12:38:56.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:38:56.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:38:56.276
  STEP: creating service in namespace services-7843 @ 12/14/24 12:38:56.279
  STEP: creating service affinity-clusterip in namespace services-7843 @ 12/14/24 12:38:56.279
  STEP: creating replication controller affinity-clusterip in namespace services-7843 @ 12/14/24 12:38:56.29
  I1214 12:38:56.301538      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7843, replica count: 3
  I1214 12:38:59.353094      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 12:38:59.360695 19 resource.go:361] Creating new exec pod
  I1214 12:39:02.376519 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7843 exec execpod-affinityzmvwh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1214 12:39:02.464645 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1214 12:39:02.464686 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 12:39:02.464769 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7843 exec execpod-affinityzmvwh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.203 80'
  I1214 12:39:02.548219 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.203 80\nConnection to 10.152.183.203 80 port [tcp/http] succeeded!\n"
  I1214 12:39:02.548260 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 12:39:02.548337 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-7843 exec execpod-affinityzmvwh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.203:80/ ; done'
  I1214 12:39:02.701610 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.203:80/\n"
  I1214 12:39:02.701660 19 builder.go:147] stdout: "\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j\naffinity-clusterip-8rt9j"
  I1214 12:39:02.701672 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701695 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701702 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701710 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701715 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701721 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701726 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701732 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701738 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701742 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701747 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701753 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701766 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701772 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701777 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701782 19 service.go:242] Received response from host: affinity-clusterip-8rt9j
  I1214 12:39:02.701852 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7843, will wait for the garbage collector to delete the pods @ 12/14/24 12:39:02.717
  I1214 12:39:02.781425 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.439427ms
  I1214 12:39:02.881586 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.159205ms
  I1214 12:39:05.601932 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7843" for this suite. @ 12/14/24 12:39:05.607
• [9.359 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/14/24 12:39:05.614
  I1214 12:39:05.614375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:39:05.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:39:05.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:39:05.631
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/14/24 12:39:05.633
  STEP: Saw pod success @ 12/14/24 12:39:09.66
  I1214 12:39:09.663933 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-79e5b0e1-52f3-4be4-ac0a-158b7b45a672 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:39:09.68
  I1214 12:39:09.699592 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3962" for this suite. @ 12/14/24 12:39:09.702
• [4.095 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 12/14/24 12:39:09.709
  I1214 12:39:09.709691 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename disruption @ 12/14/24 12:39:09.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:39:09.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:39:09.729
  STEP: Creating a kubernetes client @ 12/14/24 12:39:09.731
  I1214 12:39:09.731449 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename disruption-2 @ 12/14/24 12:39:09.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:39:09.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:39:09.748
  STEP: Waiting for the pdb to be processed @ 12/14/24 12:39:09.754
  STEP: Waiting for the pdb to be processed @ 12/14/24 12:39:11.763
  STEP: Waiting for the pdb to be processed @ 12/14/24 12:39:13.773
  STEP: listing a collection of PDBs across all namespaces @ 12/14/24 12:39:15.777
  STEP: listing a collection of PDBs in namespace disruption-3417 @ 12/14/24 12:39:15.782
  STEP: deleting a collection of PDBs @ 12/14/24 12:39:15.785
  STEP: Waiting for the PDB collection to be deleted @ 12/14/24 12:39:15.798
  I1214 12:39:15.801782 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2621" for this suite. @ 12/14/24 12:39:15.804
  I1214 12:39:15.812125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3417" for this suite. @ 12/14/24 12:39:15.816
• [6.116 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/14/24 12:39:15.825
  I1214 12:39:15.825555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename cronjob @ 12/14/24 12:39:15.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:39:15.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:39:15.846
  STEP: Creating a suspended cronjob @ 12/14/24 12:39:15.848
  STEP: Ensuring no jobs are scheduled @ 12/14/24 12:39:15.855
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/14/24 12:44:15.855
  STEP: Removing cronjob @ 12/14/24 12:44:15.859
  I1214 12:44:15.867999 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6308" for this suite. @ 12/14/24 12:44:15.872
• [300.054 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/14/24 12:44:15.88
  I1214 12:44:15.880073 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 12:44:15.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:44:15.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:44:15.9
  I1214 12:44:15.905529 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-274"
  I1214 12:44:15.911742 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-274"
  STEP: waiting for a new root ca configmap created @ 12/14/24 12:44:16.412
  I1214 12:44:16.417817 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-274"
  I1214 12:44:16.422699 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-274"
  STEP: waiting for the root ca configmap reconciled @ 12/14/24 12:44:16.923
  I1214 12:44:16.928579 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-274"
  I1214 12:44:16.928692 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-274" for this suite. @ 12/14/24 12:44:16.932
• [1.061 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/14/24 12:44:16.941
  I1214 12:44:16.941352 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:44:16.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:44:16.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:44:16.958
  STEP: Creating secret with name secret-test-3adb8ecb-5a3a-4300-88cd-c74baf4cfccd @ 12/14/24 12:44:16.96
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:44:16.966
  STEP: Saw pod success @ 12/14/24 12:44:20.987
  I1214 12:44:20.989975 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-94950d18-dc0b-46e8-9fc2-a3b1e451c0c1 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:44:21.004
  I1214 12:44:21.021125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8447" for this suite. @ 12/14/24 12:44:21.025
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/14/24 12:44:21.031
  I1214 12:44:21.031947 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename tables @ 12/14/24 12:44:21.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:44:21.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:44:21.051
  I1214 12:44:21.055920 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4319" for this suite. @ 12/14/24 12:44:21.058
• [0.033 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 12/14/24 12:44:21.065
  I1214 12:44:21.065340 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:44:21.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:44:21.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:44:21.083
  STEP: Setting up server cert @ 12/14/24 12:44:21.111
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:44:21.345
  STEP: Deploying the webhook pod @ 12/14/24 12:44:21.355
  STEP: Wait for the deployment to be ready @ 12/14/24 12:44:21.373
  I1214 12:44:21.384901 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:44:23.399
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:44:23.413
  I1214 12:44:24.414711 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/14/24 12:44:24.423
  STEP: create a pod that should be denied by the webhook @ 12/14/24 12:44:24.439
  STEP: create a pod that causes the webhook to hang @ 12/14/24 12:44:24.448
  STEP: create a configmap that should be denied by the webhook @ 12/14/24 12:44:34.455
  STEP: create a configmap that should be admitted by the webhook @ 12/14/24 12:44:34.491
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/14/24 12:44:34.502
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/14/24 12:44:34.511
  STEP: create a namespace that bypass the webhook @ 12/14/24 12:44:34.516
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/14/24 12:44:34.531
  I1214 12:44:34.593030 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8148" for this suite. @ 12/14/24 12:44:34.598
  STEP: Destroying namespace "webhook-markers-1160" for this suite. @ 12/14/24 12:44:34.606
  STEP: Destroying namespace "exempted-namespace-2438" for this suite. @ 12/14/24 12:44:34.614
• [13.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/14/24 12:44:34.621
  I1214 12:44:34.621445 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 12:44:34.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:44:34.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:44:34.639
  STEP: Creating pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015 @ 12/14/24 12:44:34.641
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 12:44:36.658
  I1214 12:44:36.662090 19 container_probe.go:1749] Initial restart count of pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 is 0
  I1214 12:44:36.665391 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:38.671608 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:40.676248 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:42.681579 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:44.686400 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:46.691159 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:48.696159 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:50.702054 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:52.707720 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:54.712104 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:56.718865 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:44:58.725549 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:00.732178 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:02.737177 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:04.743554 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:06.748106 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:08.754854 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:10.760327 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:12.767077 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:14.772484 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:16.778922 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:18.784686 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:20.791337 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:22.796946 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:24.802614 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:26.808642 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:28.813144 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:30.818295 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:32.823285 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:34.829495 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:36.834078 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:38.840383 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:40.845235 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:42.851302 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:44.856088 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:46.860943 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:48.865227 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:50.871172 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:52.876294 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:54.882602 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:56.888531 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:45:58.893212 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:00.898809 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:02.903747 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:04.911047 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:06.915702 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:08.922101 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:10.926513 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:12.933528 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:14.938900 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:16.945221 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:18.950695 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:20.956674 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:22.960974 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:24.967000 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:26.973669 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:28.978919 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:30.985479 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:32.990116 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:34.995576 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:37.006642 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:39.012658 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:41.017513 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:43.023328 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:45.027121 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:47.031661 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:49.037303 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:51.042555 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:53.047053 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:55.052295 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:57.057610 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:46:59.063707 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:01.069282 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:03.073715 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:05.079335 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:07.085960 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:09.091337 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:11.097120 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:13.102411 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:15.107161 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:17.112931 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:19.117642 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:21.121127 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:23.127503 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:25.131881 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:27.136913 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:29.142367 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:31.147571 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:33.152572 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:35.159647 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:37.164636 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:39.171419 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:41.175923 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:43.181738 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:45.186152 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:47.192237 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:49.197615 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:51.203159 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:53.209596 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:55.214705 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:57.220833 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:47:59.224985 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:01.231744 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:03.236237 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:05.242605 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:07.247991 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:09.255250 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:11.260885 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:13.265559 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:15.270826 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:17.275619 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:19.280747 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:21.285771 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:23.292624 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:25.296978 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:27.300802 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:29.305333 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:31.309853 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:33.314622 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  I1214 12:48:35.321211 19 container_probe.go:1759] Get pod liveness-12909d7a-f405-4f62-b682-b8075efe87e4 in namespace container-probe-3015
  STEP: deleting the pod @ 12/14/24 12:48:37.322
  I1214 12:48:37.339367 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3015" for this suite. @ 12/14/24 12:48:37.344
• [242.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/14/24 12:48:37.354
  I1214 12:48:37.354245 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 12:48:37.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:48:37.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:48:37.374
  I1214 12:48:37.376575 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/14/24 12:48:38.832
  I1214 12:48:38.832097 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-5068 --namespace=crd-publish-openapi-5068 create -f -'
  I1214 12:48:40.898215 19 builder.go:146] stderr: ""
  I1214 12:48:40.898254 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2222-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1214 12:48:40.898305 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-5068 --namespace=crd-publish-openapi-5068 delete e2e-test-crd-publish-openapi-2222-crds test-cr'
  I1214 12:48:40.945735 19 builder.go:146] stderr: ""
  I1214 12:48:40.945789 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2222-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1214 12:48:40.945837 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-5068 --namespace=crd-publish-openapi-5068 apply -f -'
  I1214 12:48:41.016714 19 builder.go:146] stderr: ""
  I1214 12:48:41.016759 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2222-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1214 12:48:41.016810 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-5068 --namespace=crd-publish-openapi-5068 delete e2e-test-crd-publish-openapi-2222-crds test-cr'
  I1214 12:48:41.065141 19 builder.go:146] stderr: ""
  I1214 12:48:41.065182 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2222-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/14/24 12:48:41.065
  I1214 12:48:41.065257 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-5068 explain e2e-test-crd-publish-openapi-2222-crds'
  I1214 12:48:41.105847 19 builder.go:146] stderr: ""
  I1214 12:48:41.105954 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2222-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1214 12:48:42.310492 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5068" for this suite. @ 12/14/24 12:48:42.315
• [4.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/14/24 12:48:42.322
  I1214 12:48:42.322854 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename discovery @ 12/14/24 12:48:42.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:48:42.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:48:42.344
  STEP: Setting up server cert @ 12/14/24 12:48:42.346
  I1214 12:48:42.573210 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1214 12:48:42.573984 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1214 12:48:42.574008 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1214 12:48:42.574014 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1214 12:48:42.574033 19 discovery.go:139] Checking APIGroup: apps
  I1214 12:48:42.574688 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1214 12:48:42.574699 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I1214 12:48:42.574706 19 discovery.go:154] apps/v1 matches apps/v1
  I1214 12:48:42.574715 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I1214 12:48:42.575597 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1214 12:48:42.575606 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1214 12:48:42.575611 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1214 12:48:42.575625 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1214 12:48:42.576584 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1214 12:48:42.576602 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1214 12:48:42.576608 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1214 12:48:42.576613 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1214 12:48:42.577201 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1214 12:48:42.577220 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1214 12:48:42.577225 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1214 12:48:42.577230 19 discovery.go:139] Checking APIGroup: autoscaling
  I1214 12:48:42.577782 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1214 12:48:42.577794 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1214 12:48:42.577803 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1214 12:48:42.577808 19 discovery.go:139] Checking APIGroup: batch
  I1214 12:48:42.578318 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1214 12:48:42.578328 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I1214 12:48:42.578334 19 discovery.go:154] batch/v1 matches batch/v1
  I1214 12:48:42.578348 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1214 12:48:42.578959 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1214 12:48:42.578968 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1214 12:48:42.578972 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1214 12:48:42.578978 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1214 12:48:42.579494 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1214 12:48:42.579504 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1214 12:48:42.579509 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1214 12:48:42.579519 19 discovery.go:139] Checking APIGroup: policy
  I1214 12:48:42.580078 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1214 12:48:42.580087 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I1214 12:48:42.580093 19 discovery.go:154] policy/v1 matches policy/v1
  I1214 12:48:42.580108 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1214 12:48:42.580632 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1214 12:48:42.580640 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1214 12:48:42.580645 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1214 12:48:42.580650 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1214 12:48:42.581178 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1214 12:48:42.581190 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1214 12:48:42.581197 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1214 12:48:42.581210 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1214 12:48:42.582046 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1214 12:48:42.582061 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1214 12:48:42.582067 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1214 12:48:42.582072 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1214 12:48:42.582756 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1214 12:48:42.582770 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1214 12:48:42.582776 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1214 12:48:42.582781 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1214 12:48:42.583419 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1214 12:48:42.583428 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1214 12:48:42.583433 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1214 12:48:42.583445 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1214 12:48:42.584468 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1214 12:48:42.584478 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1214 12:48:42.584484 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1214 12:48:42.584490 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I1214 12:48:42.585345 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1214 12:48:42.585354 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1214 12:48:42.585425 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1214 12:48:42.585432 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1214 12:48:42.586216 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1214 12:48:42.586229 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1214 12:48:42.586253 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1214 12:48:42.586264 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1214 12:48:42.587304 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1214 12:48:42.587315 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1214 12:48:42.587321 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1214 12:48:42.587339 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1214 12:48:42.587978 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1214 12:48:42.587986 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1214 12:48:42.587991 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1214 12:48:42.588098 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2978" for this suite. @ 12/14/24 12:48:42.59
• [0.274 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/14/24 12:48:42.597
  I1214 12:48:42.597557 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 12:48:42.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:48:42.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:48:42.613
  STEP: Creating pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326 @ 12/14/24 12:48:42.615
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 12:48:44.633
  I1214 12:48:44.636928 19 container_probe.go:1749] Initial restart count of pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef is 0
  I1214 12:48:44.639965 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:46.645335 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:48.650385 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:50.655108 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:52.661007 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:54.666368 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:56.670657 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:48:58.677053 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:00.682492 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:02.686938 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:04.691324 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:04.691374 19 container_probe.go:1763] Restart count of pod container-probe-3326/liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef is now 1 (20.054409797s elapsed)
  I1214 12:49:06.695561 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:08.700343 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:10.705593 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:12.709831 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:14.715411 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:16.720713 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:18.725076 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:20.730589 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:22.736066 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:24.742612 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:24.742646 19 container_probe.go:1763] Restart count of pod container-probe-3326/liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef is now 2 (40.105687243s elapsed)
  I1214 12:49:26.747459 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:28.751040 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:30.757673 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:32.762107 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:34.766758 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:36.771077 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:38.776011 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:40.780538 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:42.786625 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:44.790499 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:44.790534 19 container_probe.go:1763] Restart count of pod container-probe-3326/liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef is now 3 (1m0.153576972s elapsed)
  I1214 12:49:46.796808 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:48.800688 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:50.806556 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:52.812190 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:54.817857 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:56.822833 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:49:58.826905 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:00.833107 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:02.839765 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:04.846118 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:04.846155 19 container_probe.go:1763] Restart count of pod container-probe-3326/liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef is now 4 (1m20.209197437s elapsed)
  I1214 12:50:06.852037 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:08.857204 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:10.862869 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:12.868663 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:14.872267 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:16.877756 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:18.882995 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:20.887395 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:22.892810 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:24.898271 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:26.905151 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:28.910453 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:30.917129 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:32.922521 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:34.927341 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:36.931833 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:38.936245 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:40.940616 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:42.944656 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:44.949282 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:46.955666 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:48.959976 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:50.965145 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:52.970785 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:54.976633 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:56.982116 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:50:58.988077 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:51:00.992591 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:51:02.997762 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:51:05.005035 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:51:07.011189 19 container_probe.go:1759] Get pod liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef in namespace container-probe-3326
  I1214 12:51:07.011229 19 container_probe.go:1763] Restart count of pod container-probe-3326/liveness-4afe8ae0-9fe2-4877-95b6-981be84e41ef is now 5 (2m22.374271368s elapsed)
  STEP: deleting the pod @ 12/14/24 12:51:07.011
  I1214 12:51:07.027996 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3326" for this suite. @ 12/14/24 12:51:07.032
• [144.441 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/14/24 12:51:07.038
  I1214 12:51:07.038977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:51:07.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:07.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:07.06
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/14/24 12:51:07.062
  STEP: Saw pod success @ 12/14/24 12:51:09.081
  I1214 12:51:09.085416 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-b98ca0ad-e48c-4a4f-a1b1-794440f3ae14 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:51:09.099
  I1214 12:51:09.114158 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8709" for this suite. @ 12/14/24 12:51:09.118
• [2.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/14/24 12:51:09.125
  I1214 12:51:09.125443 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 12:51:09.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:09.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:09.143
  I1214 12:51:09.162384 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1214 12:51:09.170150 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1214 12:51:09.174195 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:09.174222 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:09.177888 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:51:09.177912 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 12:51:10.175725 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:10.175762 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:10.178645 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:51:10.178663 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 12:51:11.176573 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:11.176607 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:11.179500 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 12:51:11.179514 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1214 12:51:11.179527 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1214 12:51:11.189185 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1214 12:51:12.198338 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1214 12:51:12.208460 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1214 12:51:12.208504 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1214 12:51:12.211504 19 daemon_set.go:1193] Wrong image for pod: daemon-set-rg4m6. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1214 12:51:12.211524 19 daemon_set.go:1198] Pod daemon-set-rg4m6 is not available
  I1214 12:51:12.214129 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:12.214156 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:13.217558 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:13.217602 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:14.213305 19 daemon_set.go:1198] Pod daemon-set-66dv7 is not available
  I1214 12:51:14.216077 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:51:14.216105 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/14/24 12:51:14.22
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2766, will wait for the garbage collector to delete the pods @ 12/14/24 12:51:14.22
  I1214 12:51:14.280191 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.117208ms
  I1214 12:51:14.380744 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.544993ms
  I1214 12:51:16.387101 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:51:16.387137 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1214 12:51:16.391171 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12894"},"items":null}

  I1214 12:51:16.394298 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12894"},"items":null}

  I1214 12:51:16.407135 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2766" for this suite. @ 12/14/24 12:51:16.411
• [7.291 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/14/24 12:51:16.416
  I1214 12:51:16.416506 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:51:16.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:16.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:16.439
  STEP: Creating projection with secret that has name projected-secret-test-1794d7b0-9600-4520-8a70-a4a778d81e99 @ 12/14/24 12:51:16.442
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:51:16.447
  STEP: Saw pod success @ 12/14/24 12:51:20.468
  I1214 12:51:20.473174 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-secrets-6c1b0c6c-ba8a-416b-9336-5ac1115cdc97 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:51:20.479
  I1214 12:51:20.493610 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7632" for this suite. @ 12/14/24 12:51:20.496
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 12/14/24 12:51:20.503
  I1214 12:51:20.503467 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename security-context @ 12/14/24 12:51:20.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:20.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:20.522
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/14/24 12:51:20.523
  STEP: Saw pod success @ 12/14/24 12:51:24.545
  I1214 12:51:24.550001 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod security-context-89cf4d10-f77b-4927-b578-98837a6c9b1e container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:51:24.558
  I1214 12:51:24.576677 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8788" for this suite. @ 12/14/24 12:51:24.58
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/14/24 12:51:24.585
  I1214 12:51:24.585272 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:51:24.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:24.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:24.606
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 12:51:24.607
  STEP: Saw pod success @ 12/14/24 12:51:28.629
  I1214 12:51:28.632209 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-b5494da0-9c37-4031-9d39-8e38ac721f62 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 12:51:28.639
  I1214 12:51:28.663577 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5619" for this suite. @ 12/14/24 12:51:28.668
• [4.088 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 12/14/24 12:51:28.673
  I1214 12:51:28.673844 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 12:51:28.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:28.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:28.693
  STEP: Creating a test headless service @ 12/14/24 12:51:28.694
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1740.svc.cluster.local;sleep 1; done
   @ 12/14/24 12:51:28.698
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1740.svc.cluster.local;sleep 1; done
   @ 12/14/24 12:51:28.698
  STEP: creating a pod to probe DNS @ 12/14/24 12:51:28.698
  STEP: submitting the pod to kubernetes @ 12/14/24 12:51:28.698
  STEP: retrieving the pod @ 12/14/24 12:51:30.719
  STEP: looking for the results for each expected name from probers @ 12/14/24 12:51:30.722
  I1214 12:51:30.727428 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.730418 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.735067 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.738452 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.741837 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.746273 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.749911 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.753984 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-1740.svc.cluster.local from pod dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4: the server could not find the requested resource (get pods dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4)
  I1214 12:51:30.754009 19 dns_common.go:489] Lookups using dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1740.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1740.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1740.svc.cluster.local jessie_udp@dns-test-service-2.dns-1740.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1740.svc.cluster.local]

  I1214 12:51:30.761285 19 dns_common.go:495] Pod client logs for webserver: 
  I1214 12:51:30.766427 19 dns_common.go:495] Pod client logs for querier: 
  I1214 12:51:30.772414 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1214 12:51:35.756966 19 dns_common.go:527] DNS probes using dns-1740/dns-test-1c565fcc-f890-4d96-b6f3-e58cf3d695d4 succeeded

  STEP: deleting the pod @ 12/14/24 12:51:35.757
  STEP: deleting the test headless service @ 12/14/24 12:51:35.77
  I1214 12:51:35.785754 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1740" for this suite. @ 12/14/24 12:51:35.789
• [7.122 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/14/24 12:51:35.795
  I1214 12:51:35.795548 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:51:35.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:35.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:35.813
  STEP: Creating projection with secret that has name projected-secret-test-313411bd-32f3-4e3c-9737-13fad34d7d7b @ 12/14/24 12:51:35.815
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:51:35.82
  STEP: Saw pod success @ 12/14/24 12:51:39.839
  I1214 12:51:39.844324 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-secrets-83d032e4-5206-477e-9b3e-1d1578fe03f4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:51:39.851
  I1214 12:51:39.867633 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4391" for this suite. @ 12/14/24 12:51:39.872
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/14/24 12:51:39.88
  I1214 12:51:39.880367 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename watch @ 12/14/24 12:51:39.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:39.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:39.903
  STEP: creating a watch on configmaps @ 12/14/24 12:51:39.904
  STEP: creating a new configmap @ 12/14/24 12:51:39.905
  STEP: modifying the configmap once @ 12/14/24 12:51:39.909
  STEP: closing the watch once it receives two notifications @ 12/14/24 12:51:39.917
  I1214 12:51:39.917363 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4223  992feabd-8a42-4fcc-adb7-088b33535460 13151 0 2024-12-14 12:51:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-14 12:51:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 12:51:39.917466 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4223  992feabd-8a42-4fcc-adb7-088b33535460 13152 0 2024-12-14 12:51:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-14 12:51:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/14/24 12:51:39.917
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/14/24 12:51:39.924
  STEP: deleting the configmap @ 12/14/24 12:51:39.925
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/14/24 12:51:39.931
  I1214 12:51:39.931724 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4223  992feabd-8a42-4fcc-adb7-088b33535460 13153 0 2024-12-14 12:51:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-14 12:51:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 12:51:39.931991 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4223  992feabd-8a42-4fcc-adb7-088b33535460 13154 0 2024-12-14 12:51:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-14 12:51:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 12:51:39.932299 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4223" for this suite. @ 12/14/24 12:51:39.935
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 12/14/24 12:51:39.941
  I1214 12:51:39.941610 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubelet-test @ 12/14/24 12:51:39.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:39.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:39.961
  I1214 12:51:41.991500 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3644" for this suite. @ 12/14/24 12:51:41.995
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/14/24 12:51:42.003
  I1214 12:51:42.003065 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:51:42.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:42.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:42.022
  STEP: Creating projection with secret that has name projected-secret-test-d00c202d-408b-4436-b9a9-3c38b8224b88 @ 12/14/24 12:51:42.023
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:51:42.027
  STEP: Saw pod success @ 12/14/24 12:51:46.051
  I1214 12:51:46.054833 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-projected-secrets-00eaefdc-1dc7-4ba6-bd25-841c0786f082 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:51:46.072
  I1214 12:51:46.090296 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3821" for this suite. @ 12/14/24 12:51:46.093
• [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 12/14/24 12:51:46.099
  I1214 12:51:46.099954 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 12:51:46.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:46.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:46.121
  STEP: Counting existing ResourceQuota @ 12/14/24 12:51:46.122
  STEP: Creating a ResourceQuota @ 12/14/24 12:51:51.126
  STEP: Ensuring resource quota status is calculated @ 12/14/24 12:51:51.134
  STEP: Creating a ReplicationController @ 12/14/24 12:51:53.139
  STEP: Ensuring resource quota status captures replication controller creation @ 12/14/24 12:51:53.151
  STEP: Deleting a ReplicationController @ 12/14/24 12:51:55.156
  STEP: Ensuring resource quota status released usage @ 12/14/24 12:51:55.164
  I1214 12:51:57.170055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8679" for this suite. @ 12/14/24 12:51:57.173
• [11.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/14/24 12:51:57.183
  I1214 12:51:57.183371 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/14/24 12:51:57.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:51:57.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:51:57.203
  STEP: Setting up the test @ 12/14/24 12:51:57.204
  STEP: Creating hostNetwork=false pod @ 12/14/24 12:51:57.204
  STEP: Creating hostNetwork=true pod @ 12/14/24 12:51:59.224
  STEP: Running the test @ 12/14/24 12:52:01.243
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/14/24 12:52:01.243
  I1214 12:52:01.243105 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.243124 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.243552 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.243601 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1214 12:52:01.285329 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.285380 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.285387 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.285824 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.285881 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1214 12:52:01.321928 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.321985 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.321994 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.322452 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.322504 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1214 12:52:01.362109 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.362186 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.362196 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.362836 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.363031 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1214 12:52:01.400493 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/14/24 12:52:01.4
  I1214 12:52:01.400616 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.400625 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.401111 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.401157 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1214 12:52:01.433776 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.433830 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.433839 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.434431 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.434499 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1214 12:52:01.470741 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/14/24 12:52:01.47
  I1214 12:52:01.470824 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.470833 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.471372 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.471425 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1214 12:52:01.515709 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.515779 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.515789 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.516365 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.516419 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1214 12:52:01.556533 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.556581 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.556589 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.557089 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.557136 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1214 12:52:01.589498 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.589557 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8019 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:52:01.589566 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:52:01.590079 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:52:01.590129 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8019/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1214 12:52:01.622339 19 exec_util.go:111] Exec stderr: ""
  I1214 12:52:01.622515 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8019" for this suite. @ 12/14/24 12:52:01.627
• [4.450 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/14/24 12:52:01.632
  I1214 12:52:01.633012 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:52:01.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:52:01.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:52:01.653
  STEP: Creating configMap with name cm-test-opt-del-c3a86cbe-701d-4427-ad49-996ab1f0f902 @ 12/14/24 12:52:01.657
  STEP: Creating configMap with name cm-test-opt-upd-dbb8dbf3-8fa7-49cd-9e80-1b6ab1a56bd4 @ 12/14/24 12:52:01.661
  STEP: Creating the pod @ 12/14/24 12:52:01.665
  STEP: Deleting configmap cm-test-opt-del-c3a86cbe-701d-4427-ad49-996ab1f0f902 @ 12/14/24 12:52:03.707
  STEP: Updating configmap cm-test-opt-upd-dbb8dbf3-8fa7-49cd-9e80-1b6ab1a56bd4 @ 12/14/24 12:52:03.712
  STEP: Creating configMap with name cm-test-opt-create-4ac38dd9-fd50-4359-9cda-3bb674a51b9f @ 12/14/24 12:52:03.718
  STEP: waiting to observe update in volume @ 12/14/24 12:52:03.723
  I1214 12:53:16.065612 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3453" for this suite. @ 12/14/24 12:53:16.07
• [74.445 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/14/24 12:53:16.077
  I1214 12:53:16.077667 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename runtimeclass @ 12/14/24 12:53:16.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:53:16.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:53:16.095
  I1214 12:53:16.103423 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-625" for this suite. @ 12/14/24 12:53:16.106
• [0.036 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/14/24 12:53:16.113
  I1214 12:53:16.113341 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename namespaces @ 12/14/24 12:53:16.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:53:16.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:53:16.134
  STEP: creating a Namespace @ 12/14/24 12:53:16.136
  STEP: patching the Namespace @ 12/14/24 12:53:16.151
  STEP: get the Namespace and ensuring it has the label @ 12/14/24 12:53:16.155
  I1214 12:53:16.160632 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3155" for this suite. @ 12/14/24 12:53:16.163
  STEP: Destroying namespace "nspatchtest-6fb8b8a9-63b9-416d-9398-c7a3f3495555-973" for this suite. @ 12/14/24 12:53:16.17
• [0.064 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/14/24 12:53:16.177
  I1214 12:53:16.177515 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replicaset @ 12/14/24 12:53:16.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:53:16.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:53:16.194
  I1214 12:53:16.196654 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-f29405a4-5a27-44a9-aea2-c9198bb7c0e8
  I1214 12:53:16.206284 19 resource.go:87] Pod name my-hostname-basic-f29405a4-5a27-44a9-aea2-c9198bb7c0e8: Found 0 pods out of 1
  I1214 12:53:21.209653 19 resource.go:87] Pod name my-hostname-basic-f29405a4-5a27-44a9-aea2-c9198bb7c0e8: Found 1 pods out of 1
  I1214 12:53:21.209688 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-f29405a4-5a27-44a9-aea2-c9198bb7c0e8" is running
  I1214 12:53:21.215207 19 replica_set.go:220] Pod "my-hostname-basic-f29405a4-5a27-44a9-aea2-c9198bb7c0e8-qfgn6" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:53:17 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:53:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:53:17 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:53:17 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-14 12:53:16 +0000 UTC Reason: Message:}])
  I1214 12:53:21.215241 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/14/24 12:53:21.215
  I1214 12:53:21.229125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5221" for this suite. @ 12/14/24 12:53:21.232
• [5.063 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/14/24 12:53:21.24
  I1214 12:53:21.240252 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 12:53:21.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:53:21.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:53:21.26
  STEP: creating the pod with failed condition @ 12/14/24 12:53:21.262
  STEP: updating the pod @ 12/14/24 12:55:21.271
  I1214 12:55:21.786384 19 pod_client.go:173] Successfully updated pod "var-expansion-f6d44eb1-5281-4268-9c8c-218cdf43d514"
  STEP: waiting for pod running @ 12/14/24 12:55:21.786
  STEP: deleting the pod gracefully @ 12/14/24 12:55:23.794
  I1214 12:55:23.794118 19 delete.go:62] Deleting pod "var-expansion-f6d44eb1-5281-4268-9c8c-218cdf43d514" in namespace "var-expansion-8603"
  I1214 12:55:23.804391 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-f6d44eb1-5281-4268-9c8c-218cdf43d514" to be fully deleted
  I1214 12:55:55.889227 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8603" for this suite. @ 12/14/24 12:55:55.893
• [154.662 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/14/24 12:55:55.901
  I1214 12:55:55.901909 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 12:55:55.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:55:55.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:55:55.921
  STEP: create the deployment @ 12/14/24 12:55:55.923
  W1214 12:55:55.929162      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/14/24 12:55:55.929
  STEP: delete the deployment @ 12/14/24 12:55:56.433
  STEP: wait for all rs to be garbage collected @ 12/14/24 12:55:56.441
  STEP: expected 0 rs, got 1 rs @ 12/14/24 12:55:56.448
  STEP: expected 0 pods, got 2 pods @ 12/14/24 12:55:56.452
  STEP: Gathering metrics @ 12/14/24 12:55:56.951
  W1214 12:55:56.957387      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1214 12:55:56.957429 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1214 12:55:56.957846 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3528" for this suite. @ 12/14/24 12:55:56.961
• [1.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/14/24 12:55:56.97
  I1214 12:55:56.970664 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:55:56.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:55:56.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:55:56.992
  STEP: Creating configMap with name projected-configmap-test-volume-9cff520d-9f0f-4514-a870-c12011328a64 @ 12/14/24 12:55:56.994
  STEP: Creating a pod to test consume configMaps @ 12/14/24 12:55:56.998
  STEP: Saw pod success @ 12/14/24 12:56:01.016
  I1214 12:56:01.019187 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-configmaps-fd5d4cf9-e6c7-4e3a-b5e7-6a2958e70318 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 12:56:01.032
  I1214 12:56:01.048175 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4773" for this suite. @ 12/14/24 12:56:01.05
• [4.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/14/24 12:56:01.055
  I1214 12:56:01.055834 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:56:01.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:01.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:01.074
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 12:56:01.075
  STEP: Saw pod success @ 12/14/24 12:56:05.105
  I1214 12:56:05.109911 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-5f2cdc68-a353-4bc3-97f3-550aaaef24ae container client-container: <nil>
  STEP: delete the pod @ 12/14/24 12:56:05.115
  I1214 12:56:05.135247 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3020" for this suite. @ 12/14/24 12:56:05.139
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/14/24 12:56:05.147
  I1214 12:56:05.147141 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-runtime @ 12/14/24 12:56:05.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:05.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:05.165
  STEP: create the container @ 12/14/24 12:56:05.166
  W1214 12:56:05.173261      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/14/24 12:56:05.173
  STEP: get the container status @ 12/14/24 12:56:08.192
  STEP: the container should be terminated @ 12/14/24 12:56:08.195
  STEP: the termination message should be set @ 12/14/24 12:56:08.195
  I1214 12:56:08.195790 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/14/24 12:56:08.195
  I1214 12:56:08.209622 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7314" for this suite. @ 12/14/24 12:56:08.213
• [3.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/14/24 12:56:08.219
  I1214 12:56:08.219709 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 12:56:08.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:08.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:08.238
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 12:56:08.24
  STEP: Saw pod success @ 12/14/24 12:56:12.262
  I1214 12:56:12.266504 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-abca2973-bcb8-4ad7-9d0e-c47f82d3804b container client-container: <nil>
  STEP: delete the pod @ 12/14/24 12:56:12.279
  I1214 12:56:12.299098 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9947" for this suite. @ 12/14/24 12:56:12.303
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/14/24 12:56:12.31
  I1214 12:56:12.310496 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 12:56:12.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:12.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:12.329
  I1214 12:56:12.362070 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"9bfac727-9968-4ee5-9062-2d7b33731abb", Controller:(*bool)(0xc00227331e), BlockOwnerDeletion:(*bool)(0xc00227331f)}}
  I1214 12:56:12.369972 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"332f7efb-ae50-4555-a44e-3ae349846c1a", Controller:(*bool)(0xc00227354a), BlockOwnerDeletion:(*bool)(0xc00227354b)}}
  I1214 12:56:12.376898 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"7b4ff0b6-2ab2-4289-a39e-eb75f08eb503", Controller:(*bool)(0xc0048f3c6e), BlockOwnerDeletion:(*bool)(0xc0048f3c6f)}}
  I1214 12:56:17.391520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3295" for this suite. @ 12/14/24 12:56:17.394
• [5.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/14/24 12:56:17.401
  I1214 12:56:17.401712 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:56:17.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:17.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:17.421
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/14/24 12:56:17.423
  STEP: Saw pod success @ 12/14/24 12:56:19.438
  I1214 12:56:19.442186 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-9eaf6cb3-1859-48da-a5d0-5298b4cc01a7 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:56:19.448
  I1214 12:56:19.462775 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8282" for this suite. @ 12/14/24 12:56:19.467
• [2.072 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 12/14/24 12:56:19.473
  I1214 12:56:19.473977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 12:56:19.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:19.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:19.494
  STEP: creating all guestbook components @ 12/14/24 12:56:19.495
  I1214 12:56:19.495692 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1214 12:56:19.495788 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 create -f -'
  I1214 12:56:19.581799 19 builder.go:146] stderr: ""
  I1214 12:56:19.581848 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1214 12:56:19.581896 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1214 12:56:19.581957 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 create -f -'
  I1214 12:56:19.675607 19 builder.go:146] stderr: ""
  I1214 12:56:19.675647 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1214 12:56:19.675688 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1214 12:56:19.675753 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 create -f -'
  I1214 12:56:19.761726 19 builder.go:146] stderr: ""
  I1214 12:56:19.761767 19 builder.go:147] stdout: "service/frontend created\n"
  I1214 12:56:19.761849 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1214 12:56:19.761972 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 create -f -'
  I1214 12:56:19.827194 19 builder.go:146] stderr: ""
  I1214 12:56:19.827229 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1214 12:56:19.827324 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1214 12:56:19.827534 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 create -f -'
  I1214 12:56:19.894680 19 builder.go:146] stderr: ""
  I1214 12:56:19.894720 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1214 12:56:19.894783 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1214 12:56:19.894927 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 create -f -'
  I1214 12:56:19.977447 19 builder.go:146] stderr: ""
  I1214 12:56:19.977483 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/14/24 12:56:19.977
  I1214 12:56:19.977526 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I1214 12:56:25.028712 19 kubectl.go:2276] Waiting for frontend to serve content.
  I1214 12:56:25.042768 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1214 12:56:25.056978 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/14/24 12:56:25.066
  I1214 12:56:25.066373 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I1214 12:56:25.123066 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:56:25.123111 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/14/24 12:56:25.123
  I1214 12:56:25.123227 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I1214 12:56:25.187107 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:56:25.187146 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/14/24 12:56:25.187
  I1214 12:56:25.187286 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I1214 12:56:25.246282 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:56:25.246329 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/14/24 12:56:25.246
  I1214 12:56:25.246461 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I1214 12:56:25.295002 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:56:25.295065 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/14/24 12:56:25.295
  I1214 12:56:25.295205 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I1214 12:56:25.355302 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:56:25.355339 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/14/24 12:56:25.355
  I1214 12:56:25.355592 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I1214 12:56:25.417483 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 12:56:25.417532 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1214 12:56:25.417647 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8150" for this suite. @ 12/14/24 12:56:25.42
• [5.952 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/14/24 12:56:25.425
  I1214 12:56:25.425966 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pod-network-test @ 12/14/24 12:56:25.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:25.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:25.451
  STEP: Performing setup for networking test in namespace pod-network-test-5362 @ 12/14/24 12:56:25.453
  STEP: creating a selector @ 12/14/24 12:56:25.453
  STEP: Creating the service pods in kubernetes @ 12/14/24 12:56:25.453
  I1214 12:56:25.453967 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/14/24 12:56:47.573
  I1214 12:56:49.589159 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1214 12:56:49.589192 19 networking.go:42] Breadth first check of 192.168.249.135 on host 172.31.20.132...
  I1214 12:56:49.591915 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.249.136:9080/dial?request=hostname&protocol=udp&host=192.168.249.135&port=8081&tries=1'] Namespace:pod-network-test-5362 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:56:49.591939 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:56:49.592353 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:56:49.592396 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5362/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.249.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.249.135%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1214 12:56:49.651807 19 utils.go:356] Waiting for responses: map[]
  I1214 12:56:49.651849 19 utils.go:360] reached 192.168.249.135 after 0/1 tries
  I1214 12:56:49.651864 19 networking.go:42] Breadth first check of 192.168.127.92 on host 172.31.38.181...
  I1214 12:56:49.655837 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.249.136:9080/dial?request=hostname&protocol=udp&host=192.168.127.92&port=8081&tries=1'] Namespace:pod-network-test-5362 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:56:49.655864 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:56:49.656329 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:56:49.656373 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5362/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.249.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.127.92%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1214 12:56:49.709074 19 utils.go:356] Waiting for responses: map[]
  I1214 12:56:49.709107 19 utils.go:360] reached 192.168.127.92 after 0/1 tries
  I1214 12:56:49.709117 19 networking.go:42] Breadth first check of 192.168.197.223 on host 172.31.5.183...
  I1214 12:56:49.712768 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.249.136:9080/dial?request=hostname&protocol=udp&host=192.168.197.223&port=8081&tries=1'] Namespace:pod-network-test-5362 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 12:56:49.712794 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:56:49.713205 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 12:56:49.713261 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5362/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.249.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.197.223%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1214 12:56:49.757357 19 utils.go:356] Waiting for responses: map[]
  I1214 12:56:49.757398 19 utils.go:360] reached 192.168.197.223 after 0/1 tries
  I1214 12:56:49.757408 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1214 12:56:49.757497 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5362" for this suite. @ 12/14/24 12:56:49.762
• [24.342 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 12/14/24 12:56:49.767
  I1214 12:56:49.767794 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:56:49.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:49.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:49.789
  STEP: Setting up server cert @ 12/14/24 12:56:49.812
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:56:50.084
  STEP: Deploying the webhook pod @ 12/14/24 12:56:50.093
  STEP: Wait for the deployment to be ready @ 12/14/24 12:56:50.108
  I1214 12:56:50.117515 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:56:52.13
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:56:52.14
  I1214 12:56:53.140296 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/14/24 12:56:53.149
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/14/24 12:56:53.149
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/14/24 12:56:53.149
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/14/24 12:56:53.149
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/14/24 12:56:53.15
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/14/24 12:56:53.15
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/14/24 12:56:53.151
  I1214 12:56:53.187600 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3701" for this suite. @ 12/14/24 12:56:53.19
  STEP: Destroying namespace "webhook-markers-3895" for this suite. @ 12/14/24 12:56:53.199
• [3.438 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 12/14/24 12:56:53.206
  I1214 12:56:53.206436 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 12:56:53.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:53.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:53.226
  I1214 12:56:53.227689 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-9247 version'
  I1214 12:56:53.263667 19 builder.go:146] stderr: ""
  I1214 12:56:53.263715 19 builder.go:147] stdout: "Client Version: v1.31.4\nKustomize Version: v5.4.2\nServer Version: v1.31.4\n"
  I1214 12:56:53.263946 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9247" for this suite. @ 12/14/24 12:56:53.267
• [0.081 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/14/24 12:56:53.287
  I1214 12:56:53.287824 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename prestop @ 12/14/24 12:56:53.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:56:53.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:56:53.306
  STEP: Creating server pod server in namespace prestop-5622 @ 12/14/24 12:56:53.308
  STEP: Waiting for pods to come up. @ 12/14/24 12:56:53.317
  STEP: Creating tester pod tester in namespace prestop-5622 @ 12/14/24 12:56:55.326
  STEP: Deleting pre-stop pod @ 12/14/24 12:56:57.341
  I1214 12:57:02.357411 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/14/24 12:57:02.357
  I1214 12:57:02.373333 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5622" for this suite. @ 12/14/24 12:57:02.377
• [9.099 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 12/14/24 12:57:02.386
  I1214 12:57:02.386723 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 12:57:02.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:02.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:02.409
  I1214 12:57:02.411464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  W1214 12:57:04.949094      19 warnings.go:70] unknown field "alpha"
  W1214 12:57:04.949114      19 warnings.go:70] unknown field "beta"
  W1214 12:57:04.949117      19 warnings.go:70] unknown field "delta"
  W1214 12:57:04.949120      19 warnings.go:70] unknown field "epsilon"
  W1214 12:57:04.949123      19 warnings.go:70] unknown field "gamma"
  I1214 12:57:05.496782 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5496" for this suite. @ 12/14/24 12:57:05.5
• [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/14/24 12:57:05.509
  I1214 12:57:05.509892 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 12:57:05.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:05.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:05.531
  STEP: Creating configMap with name configmap-test-volume-213d6338-bea2-485e-a367-e7d0622e7a4f @ 12/14/24 12:57:05.532
  STEP: Creating a pod to test consume configMaps @ 12/14/24 12:57:05.537
  STEP: Saw pod success @ 12/14/24 12:57:09.56
  I1214 12:57:09.563801 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-configmaps-bb55f36a-f0f5-4140-93e0-1379a3afaa5d container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 12:57:09.582
  I1214 12:57:09.601429 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-840" for this suite. @ 12/14/24 12:57:09.605
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 12/14/24 12:57:09.611
  I1214 12:57:09.611489 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:57:09.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:09.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:09.631
  STEP: Setting up server cert @ 12/14/24 12:57:09.658
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:57:10.252
  STEP: Deploying the webhook pod @ 12/14/24 12:57:10.258
  STEP: Wait for the deployment to be ready @ 12/14/24 12:57:10.272
  I1214 12:57:10.278153 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:57:12.29
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:57:12.302
  I1214 12:57:13.302411 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1214 12:57:13.311464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6444-crds.webhook.example.com via the AdmissionRegistration API @ 12/14/24 12:57:13.821
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/14/24 12:57:13.833
  I1214 12:57:16.412060 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3601" for this suite. @ 12/14/24 12:57:16.416
  STEP: Destroying namespace "webhook-markers-213" for this suite. @ 12/14/24 12:57:16.423
• [6.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/14/24 12:57:16.43
  I1214 12:57:16.430564 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:57:16.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:16.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:16.452
  STEP: Creating secret with name secret-test-cd7f938f-7fe3-4a52-9cb9-341d0683e3d8 @ 12/14/24 12:57:16.454
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:57:16.458
  STEP: Saw pod success @ 12/14/24 12:57:20.483
  I1214 12:57:20.486669 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-eecfb7af-fd78-410f-bffd-0a0f797255d7 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:57:20.502
  I1214 12:57:20.521170 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5079" for this suite. @ 12/14/24 12:57:20.525
• [4.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/14/24 12:57:20.531
  I1214 12:57:20.531653 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 12:57:20.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:20.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:20.554
  STEP: Creating secret with name projected-secret-test-5673ed66-6da6-437b-8517-43fb07aaaed1 @ 12/14/24 12:57:20.555
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:57:20.56
  STEP: Saw pod success @ 12/14/24 12:57:24.584
  I1214 12:57:24.588982 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-d07e1515-8a0d-41c3-92a6-92bcbaf88d9f container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:57:24.595
  I1214 12:57:24.613260 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1838" for this suite. @ 12/14/24 12:57:24.616
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 12/14/24 12:57:24.622
  I1214 12:57:24.622290 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 12:57:24.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:24.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:24.642
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/14/24 12:57:24.643
  I1214 12:57:24.643892 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-9955 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1214 12:57:24.693322 19 builder.go:146] stderr: ""
  I1214 12:57:24.693363 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/14/24 12:57:24.693
  I1214 12:57:24.693443 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-9955 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1214 12:57:24.740472 19 builder.go:146] stderr: ""
  I1214 12:57:24.740521 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/14/24 12:57:24.74
  I1214 12:57:24.743487 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-9955 delete pods e2e-test-httpd-pod'
  I1214 12:57:26.133707 19 builder.go:146] stderr: ""
  I1214 12:57:26.133744 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1214 12:57:26.133924 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9955" for this suite. @ 12/14/24 12:57:26.138
• [1.522 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 12/14/24 12:57:26.144
  I1214 12:57:26.144422 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 12:57:26.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:26.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:26.164
  STEP: Creating Indexed job @ 12/14/24 12:57:26.165
  STEP: Ensuring job reaches completions @ 12/14/24 12:57:26.172
  STEP: Ensuring pods with index for job exist @ 12/14/24 12:57:36.183
  I1214 12:57:36.187519 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7847" for this suite. @ 12/14/24 12:57:36.19
• [10.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/14/24 12:57:36.196
  I1214 12:57:36.196100 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:57:36.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:36.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:36.215
  STEP: Creating secret with name secret-test-4dc14ef7-6bc8-44f9-95c0-b633d0aea422 @ 12/14/24 12:57:36.216
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:57:36.221
  STEP: Saw pod success @ 12/14/24 12:57:40.242
  I1214 12:57:40.246792 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-d823ca17-c950-4bb5-9293-33cb07f304c3 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 12:57:40.254
  I1214 12:57:40.269195 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2987" for this suite. @ 12/14/24 12:57:40.272
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 12/14/24 12:57:40.278
  I1214 12:57:40.278347 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 12:57:40.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:40.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:40.298
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5561 @ 12/14/24 12:57:40.3
  STEP: changing the ExternalName service to type=NodePort @ 12/14/24 12:57:40.304
  STEP: creating replication controller externalname-service in namespace services-5561 @ 12/14/24 12:57:40.324
  I1214 12:57:40.329078      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5561, replica count: 2
  I1214 12:57:43.380854      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 12:57:43.380900 19 resource.go:361] Creating new exec pod
  I1214 12:57:46.403364 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-5561 exec execpodwvz77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1214 12:57:46.501813 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1214 12:57:46.501855 19 builder.go:147] stdout: "externalname-service-85vwl"
  I1214 12:57:46.501943 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-5561 exec execpodwvz77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.205 80'
  I1214 12:57:46.582129 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.205 80\nConnection to 10.152.183.205 80 port [tcp/http] succeeded!\n"
  I1214 12:57:46.582170 19 builder.go:147] stdout: "externalname-service-85vwl"
  I1214 12:57:46.582263 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-5561 exec execpodwvz77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.38.181 30096'
  I1214 12:57:46.664177 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.38.181 30096\nConnection to 172.31.38.181 30096 port [tcp/*] succeeded!\n"
  I1214 12:57:46.664220 19 builder.go:147] stdout: "externalname-service-b7lgv"
  I1214 12:57:46.664320 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-5561 exec execpodwvz77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.132 30096'
  I1214 12:57:46.744066 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.132 30096\nConnection to 172.31.20.132 30096 port [tcp/*] succeeded!\n"
  I1214 12:57:46.744116 19 builder.go:147] stdout: ""
  I1214 12:57:47.664392 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-5561 exec execpodwvz77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.132 30096'
  I1214 12:57:47.748448 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.132 30096\nConnection to 172.31.20.132 30096 port [tcp/*] succeeded!\n"
  I1214 12:57:47.748492 19 builder.go:147] stdout: "externalname-service-b7lgv"
  I1214 12:57:47.748654 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1214 12:57:47.774427 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5561" for this suite. @ 12/14/24 12:57:47.779
• [7.508 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/14/24 12:57:47.786
  I1214 12:57:47.786534 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 12:57:47.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:47.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:47.804
  STEP: creating the pod @ 12/14/24 12:57:47.806
  STEP: submitting the pod to kubernetes @ 12/14/24 12:57:47.806
  STEP: verifying QOS class is set on the pod @ 12/14/24 12:57:47.814
  I1214 12:57:47.817253 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6631" for this suite. @ 12/14/24 12:57:47.822
• [0.045 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 12/14/24 12:57:47.831
  I1214 12:57:47.831677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 12:57:47.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:57:47.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:57:47.853
  STEP: Counting existing ResourceQuota @ 12/14/24 12:57:47.856
  STEP: Creating a ResourceQuota @ 12/14/24 12:57:52.86
  STEP: Ensuring resource quota status is calculated @ 12/14/24 12:57:52.864
  STEP: Creating a Pod that fits quota @ 12/14/24 12:57:54.87
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/14/24 12:57:54.885
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/14/24 12:57:56.89
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/14/24 12:57:56.892
  STEP: Ensuring a pod cannot update its resource requirements @ 12/14/24 12:57:56.893
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/14/24 12:57:56.897
  STEP: Deleting the pod @ 12/14/24 12:57:58.903
  STEP: Ensuring resource quota status released the pod usage @ 12/14/24 12:57:58.92
  I1214 12:58:00.925454 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-626" for this suite. @ 12/14/24 12:58:00.928
• [13.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/14/24 12:58:00.937
  I1214 12:58:00.937869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename containers @ 12/14/24 12:58:00.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:00.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:00.956
  STEP: Creating a pod to test override command @ 12/14/24 12:58:00.958
  STEP: Saw pod success @ 12/14/24 12:58:04.981
  I1214 12:58:04.983943 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod client-containers-97eded81-dd00-47d9-965c-a0180825357a container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 12:58:04.992
  I1214 12:58:05.010607 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-683" for this suite. @ 12/14/24 12:58:05.013
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/14/24 12:58:05.019
  I1214 12:58:05.019334 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-runtime @ 12/14/24 12:58:05.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:05.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:05.039
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/14/24 12:58:05.05
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/14/24 12:58:23.146
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/14/24 12:58:23.149
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/14/24 12:58:23.156
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/14/24 12:58:23.156
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/14/24 12:58:23.178
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/14/24 12:58:26.199
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/14/24 12:58:27.21
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/14/24 12:58:27.218
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/14/24 12:58:27.218
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/14/24 12:58:27.241
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/14/24 12:58:28.248
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/14/24 12:58:30.259
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/14/24 12:58:30.266
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/14/24 12:58:30.266
  I1214 12:58:30.295620 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-671" for this suite. @ 12/14/24 12:58:30.298
• [25.284 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 12/14/24 12:58:30.303
  I1214 12:58:30.303507 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 12:58:30.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:30.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:30.326
  STEP: Setting up server cert @ 12/14/24 12:58:30.346
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 12:58:30.507
  STEP: Deploying the webhook pod @ 12/14/24 12:58:30.516
  STEP: Wait for the deployment to be ready @ 12/14/24 12:58:30.53
  I1214 12:58:30.537560 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 12:58:32.548
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 12:58:32.564
  I1214 12:58:33.565146 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/14/24 12:58:33.572
  STEP: verifying the mutating webhook match conditions @ 12/14/24 12:58:33.585
  STEP: updating the mutating webhook match conditions @ 12/14/24 12:58:33.59
  STEP: verifying the mutating webhook match conditions @ 12/14/24 12:58:33.597
  I1214 12:58:33.641226 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6258" for this suite. @ 12/14/24 12:58:33.645
  STEP: Destroying namespace "webhook-markers-2262" for this suite. @ 12/14/24 12:58:33.653
• [3.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/14/24 12:58:33.663
  I1214 12:58:33.663130 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/14/24 12:58:33.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:33.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:33.685
  I1214 12:58:33.686918 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 12:58:36.738619 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8182" for this suite. @ 12/14/24 12:58:36.742
• [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 12/14/24 12:58:36.755
  I1214 12:58:36.755196 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 12:58:36.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:36.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:36.775
  STEP: Creating a ResourceQuota @ 12/14/24 12:58:36.776
  STEP: Getting a ResourceQuota @ 12/14/24 12:58:36.781
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/14/24 12:58:36.783
  STEP: Patching the ResourceQuota @ 12/14/24 12:58:36.79
  STEP: Deleting a Collection of ResourceQuotas @ 12/14/24 12:58:36.795
  STEP: Verifying the deleted ResourceQuota @ 12/14/24 12:58:36.808
  I1214 12:58:36.810577 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8010" for this suite. @ 12/14/24 12:58:36.813
• [0.064 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/14/24 12:58:36.819
  I1214 12:58:36.819485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 12:58:36.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:36.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:36.837
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 12:58:36.839
  STEP: Saw pod success @ 12/14/24 12:58:38.855
  I1214 12:58:38.859289 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-32dc60b3-0c43-4eae-9080-7204fc654fa5 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 12:58:38.865
  I1214 12:58:38.881073 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5133" for this suite. @ 12/14/24 12:58:38.884
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/14/24 12:58:38.892
  I1214 12:58:38.892583 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 12:58:38.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:38.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:38.909
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/14/24 12:58:38.911
  STEP: Saw pod success @ 12/14/24 12:58:42.937
  I1214 12:58:42.939870 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-2ca26935-f0d9-4bdd-bf90-05a8db3f20da container test-container: <nil>
  STEP: delete the pod @ 12/14/24 12:58:42.945
  I1214 12:58:42.961402 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2744" for this suite. @ 12/14/24 12:58:42.964
• [4.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/14/24 12:58:42.971
  I1214 12:58:42.971559 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 12:58:42.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:42.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:42.992
  STEP: Creating secret with name secret-test-bca462d9-cf7d-486a-aa44-6cadf75d844a @ 12/14/24 12:58:42.993
  STEP: Creating a pod to test consume secrets @ 12/14/24 12:58:42.997
  STEP: Saw pod success @ 12/14/24 12:58:47.015
  I1214 12:58:47.019773 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-b92c088c-19cb-4484-9c3b-75509f5fb3b4 container secret-env-test: <nil>
  STEP: delete the pod @ 12/14/24 12:58:47.026
  I1214 12:58:47.040895 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5044" for this suite. @ 12/14/24 12:58:47.045
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/14/24 12:58:47.051
  I1214 12:58:47.051889 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 12:58:47.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:47.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:47.072
  I1214 12:58:47.091348 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/14/24 12:58:47.095
  I1214 12:58:47.098811 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:47.098838 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:47.103881 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:58:47.103903 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 12:58:48.100538 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:48.100576 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:48.104047 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1214 12:58:48.104069 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 12:58:49.100485 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:49.100523 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:49.104041 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 12:58:49.104062 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/14/24 12:58:49.12
  STEP: Check that daemon pods images are updated. @ 12/14/24 12:58:49.151
  I1214 12:58:49.160483 19 daemon_set.go:1193] Wrong image for pod: daemon-set-fgwd2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:49.160505 19 daemon_set.go:1193] Wrong image for pod: daemon-set-qhxr4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:49.160512 19 daemon_set.go:1193] Wrong image for pod: daemon-set-wfw4s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:49.168582 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:49.168617 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:50.155882 19 daemon_set.go:1198] Pod daemon-set-cqrfq is not available
  I1214 12:58:50.155919 19 daemon_set.go:1193] Wrong image for pod: daemon-set-fgwd2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:50.155926 19 daemon_set.go:1193] Wrong image for pod: daemon-set-qhxr4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:50.158753 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:50.158780 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:51.157055 19 daemon_set.go:1198] Pod daemon-set-7lmbc is not available
  I1214 12:58:51.157088 19 daemon_set.go:1193] Wrong image for pod: daemon-set-qhxr4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:51.160211 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:51.160234 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:52.155916 19 daemon_set.go:1198] Pod daemon-set-7lmbc is not available
  I1214 12:58:52.155944 19 daemon_set.go:1193] Wrong image for pod: daemon-set-qhxr4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1214 12:58:52.159566 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:52.159593 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:53.160647 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:53.160689 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/14/24 12:58:53.16
  I1214 12:58:53.163691 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:53.163725 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 12:58:53.166862 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 12:58:53.166883 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/14/24 12:58:53.18
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-622, will wait for the garbage collector to delete the pods @ 12/14/24 12:58:53.18
  I1214 12:58:53.240813 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.862493ms
  I1214 12:58:53.341411 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.582297ms
  I1214 12:58:55.147246 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 12:58:55.147281 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1214 12:58:55.150110 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16174"},"items":null}

  I1214 12:58:55.153394 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16174"},"items":null}

  I1214 12:58:55.166201 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-622" for this suite. @ 12/14/24 12:58:55.169
• [8.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/14/24 12:58:55.179
  I1214 12:58:55.179139 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename subpath @ 12/14/24 12:58:55.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:58:55.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:58:55.197
  STEP: Setting up data @ 12/14/24 12:58:55.198
  STEP: Creating pod pod-subpath-test-downwardapi-nx2r @ 12/14/24 12:58:55.207
  STEP: Creating a pod to test atomic-volume-subpath @ 12/14/24 12:58:55.207
  STEP: Saw pod success @ 12/14/24 12:59:19.285
  I1214 12:59:19.288711 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-subpath-test-downwardapi-nx2r container test-container-subpath-downwardapi-nx2r: <nil>
  STEP: delete the pod @ 12/14/24 12:59:19.295
  STEP: Deleting pod pod-subpath-test-downwardapi-nx2r @ 12/14/24 12:59:19.315
  I1214 12:59:19.315189 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-nx2r" in namespace "subpath-81"
  I1214 12:59:19.317927 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-81" for this suite. @ 12/14/24 12:59:19.321
• [24.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/14/24 12:59:19.327
  I1214 12:59:19.327899 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 12:59:19.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 12:59:19.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 12:59:19.346
  STEP: Creating pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319 @ 12/14/24 12:59:19.348
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 12:59:21.364
  I1214 12:59:21.367803 19 container_probe.go:1749] Initial restart count of pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df is 0
  I1214 12:59:21.371971 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:23.376650 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:25.383280 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:27.388790 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:29.394389 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:31.400194 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:33.406052 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:35.411112 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:37.416333 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:39.420746 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:41.425196 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:43.431299 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:45.436649 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:47.440753 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:49.445558 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:51.450011 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:53.454445 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:55.460635 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:57.465485 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 12:59:59.471665 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:01.477587 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:03.482345 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:05.487085 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:07.492008 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:09.498548 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:11.503493 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:13.508577 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:15.514605 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:17.520327 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:19.525118 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:21.531910 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:23.537833 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:25.542901 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:27.547197 19 container_probe.go:1759] Get pod test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df in namespace container-probe-6319
  I1214 13:00:27.547235 19 container_probe.go:1763] Restart count of pod container-probe-6319/test-grpc-63919dfa-9c06-4c15-a022-ecc5ccea95df is now 1 (1m6.17940568s elapsed)
  STEP: deleting the pod @ 12/14/24 13:00:27.547
  I1214 13:00:27.558844 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6319" for this suite. @ 12/14/24 13:00:27.562
• [68.243 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/14/24 13:00:27.57
  I1214 13:00:27.570912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:00:27.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:00:27.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:00:27.591
  STEP: Creating configMap with name configmap-test-volume-ed06751b-8e81-4e87-a969-7b046abd5138 @ 12/14/24 13:00:27.592
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:00:27.596
  STEP: Saw pod success @ 12/14/24 13:00:31.619
  I1214 13:00:31.623394 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-configmaps-d63dcbe3-7861-456a-9656-ca7ec24436f1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:00:31.632
  I1214 13:00:31.652966 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6267" for this suite. @ 12/14/24 13:00:31.656
• [4.092 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/14/24 13:00:31.663
  I1214 13:00:31.663447 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/14/24 13:00:31.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:00:31.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:00:31.684
  I1214 13:00:31.686296 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:00:32.706700 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7527" for this suite. @ 12/14/24 13:00:32.71
• [1.054 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/14/24 13:00:32.717
  I1214 13:00:32.717898 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/14/24 13:00:32.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:00:32.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:00:32.738
  I1214 13:00:32.742574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7732" for this suite. @ 12/14/24 13:00:32.747
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/14/24 13:00:32.752
  I1214 13:00:32.752848 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/14/24 13:00:32.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:00:32.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:00:32.768
  I1214 13:00:32.770595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:00:35.878391 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9565" for this suite. @ 12/14/24 13:00:35.882
• [3.138 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/14/24 13:00:35.89
  I1214 13:00:35.890669 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename security-context-test @ 12/14/24 13:00:35.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:00:35.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:00:35.909
  I1214 13:00:37.935271 19 security_context.go:538] Got logs for pod "busybox-privileged-false-748ebf17-6b27-4e78-b459-8e6f2b3a3ab3": "ip: RTNETLINK answers: Operation not permitted\n"
  I1214 13:00:37.935402 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1555" for this suite. @ 12/14/24 13:00:37.939
• [2.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/14/24 13:00:37.949
  I1214 13:00:37.949657 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 13:00:37.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:00:37.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:00:37.969
  STEP: create the rc @ 12/14/24 13:00:37.973
  W1214 13:00:37.977516      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/14/24 13:00:41.981
  STEP: wait for the rc to be deleted @ 12/14/24 13:00:41.992
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/14/24 13:00:46.997
  STEP: Gathering metrics @ 12/14/24 13:01:17.005
  W1214 13:01:17.012048      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1214 13:01:17.012078 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1214 13:01:17.012140 19 delete.go:95] Deleting pod "simpletest.rc-25fvj" in namespace "gc-1685"
  I1214 13:01:17.026609 19 delete.go:95] Deleting pod "simpletest.rc-2nt7t" in namespace "gc-1685"
  I1214 13:01:17.042344 19 delete.go:95] Deleting pod "simpletest.rc-2x6gd" in namespace "gc-1685"
  I1214 13:01:17.054890 19 delete.go:95] Deleting pod "simpletest.rc-49tlf" in namespace "gc-1685"
  I1214 13:01:17.065365 19 delete.go:95] Deleting pod "simpletest.rc-49wpj" in namespace "gc-1685"
  I1214 13:01:17.077192 19 delete.go:95] Deleting pod "simpletest.rc-4r9np" in namespace "gc-1685"
  I1214 13:01:17.090852 19 delete.go:95] Deleting pod "simpletest.rc-4v227" in namespace "gc-1685"
  I1214 13:01:17.102552 19 delete.go:95] Deleting pod "simpletest.rc-5b85w" in namespace "gc-1685"
  I1214 13:01:17.117698 19 delete.go:95] Deleting pod "simpletest.rc-5fns7" in namespace "gc-1685"
  I1214 13:01:17.131229 19 delete.go:95] Deleting pod "simpletest.rc-62wnx" in namespace "gc-1685"
  I1214 13:01:17.146134 19 delete.go:95] Deleting pod "simpletest.rc-6chvk" in namespace "gc-1685"
  I1214 13:01:17.163258 19 delete.go:95] Deleting pod "simpletest.rc-6hn8d" in namespace "gc-1685"
  I1214 13:01:17.175720 19 delete.go:95] Deleting pod "simpletest.rc-6xpqs" in namespace "gc-1685"
  I1214 13:01:17.188553 19 delete.go:95] Deleting pod "simpletest.rc-6zzp6" in namespace "gc-1685"
  I1214 13:01:17.200742 19 delete.go:95] Deleting pod "simpletest.rc-78xnp" in namespace "gc-1685"
  I1214 13:01:17.236347 19 delete.go:95] Deleting pod "simpletest.rc-7bfxt" in namespace "gc-1685"
  I1214 13:01:17.248699 19 delete.go:95] Deleting pod "simpletest.rc-7gtrc" in namespace "gc-1685"
  I1214 13:01:17.267762 19 delete.go:95] Deleting pod "simpletest.rc-897mr" in namespace "gc-1685"
  I1214 13:01:17.278533 19 delete.go:95] Deleting pod "simpletest.rc-8fk7d" in namespace "gc-1685"
  I1214 13:01:17.290430 19 delete.go:95] Deleting pod "simpletest.rc-8v5qq" in namespace "gc-1685"
  I1214 13:01:17.305147 19 delete.go:95] Deleting pod "simpletest.rc-9cmh4" in namespace "gc-1685"
  I1214 13:01:17.319408 19 delete.go:95] Deleting pod "simpletest.rc-b2hnj" in namespace "gc-1685"
  I1214 13:01:17.332301 19 delete.go:95] Deleting pod "simpletest.rc-b78p6" in namespace "gc-1685"
  I1214 13:01:17.349580 19 delete.go:95] Deleting pod "simpletest.rc-b8ktg" in namespace "gc-1685"
  I1214 13:01:17.363941 19 delete.go:95] Deleting pod "simpletest.rc-b9zsz" in namespace "gc-1685"
  I1214 13:01:17.379457 19 delete.go:95] Deleting pod "simpletest.rc-bc4gk" in namespace "gc-1685"
  I1214 13:01:17.392730 19 delete.go:95] Deleting pod "simpletest.rc-bhktz" in namespace "gc-1685"
  I1214 13:01:17.404395 19 delete.go:95] Deleting pod "simpletest.rc-bmlf6" in namespace "gc-1685"
  I1214 13:01:17.417363 19 delete.go:95] Deleting pod "simpletest.rc-bwrwx" in namespace "gc-1685"
  I1214 13:01:17.429507 19 delete.go:95] Deleting pod "simpletest.rc-c7lz7" in namespace "gc-1685"
  I1214 13:01:17.443363 19 delete.go:95] Deleting pod "simpletest.rc-csgzb" in namespace "gc-1685"
  I1214 13:01:17.458538 19 delete.go:95] Deleting pod "simpletest.rc-dblrs" in namespace "gc-1685"
  I1214 13:01:17.470794 19 delete.go:95] Deleting pod "simpletest.rc-dkjr9" in namespace "gc-1685"
  I1214 13:01:17.487167 19 delete.go:95] Deleting pod "simpletest.rc-dlbjw" in namespace "gc-1685"
  I1214 13:01:17.505449 19 delete.go:95] Deleting pod "simpletest.rc-dvrxp" in namespace "gc-1685"
  I1214 13:01:17.520213 19 delete.go:95] Deleting pod "simpletest.rc-f4kzm" in namespace "gc-1685"
  I1214 13:01:17.535035 19 delete.go:95] Deleting pod "simpletest.rc-fqkch" in namespace "gc-1685"
  I1214 13:01:17.549222 19 delete.go:95] Deleting pod "simpletest.rc-fwgn2" in namespace "gc-1685"
  I1214 13:01:17.561284 19 delete.go:95] Deleting pod "simpletest.rc-g829b" in namespace "gc-1685"
  I1214 13:01:17.573343 19 delete.go:95] Deleting pod "simpletest.rc-gdtf9" in namespace "gc-1685"
  I1214 13:01:17.593197 19 delete.go:95] Deleting pod "simpletest.rc-gjhtb" in namespace "gc-1685"
  I1214 13:01:17.609096 19 delete.go:95] Deleting pod "simpletest.rc-h9nk4" in namespace "gc-1685"
  I1214 13:01:17.634233 19 delete.go:95] Deleting pod "simpletest.rc-hqhvr" in namespace "gc-1685"
  I1214 13:01:17.650742 19 delete.go:95] Deleting pod "simpletest.rc-j6bnj" in namespace "gc-1685"
  I1214 13:01:17.667106 19 delete.go:95] Deleting pod "simpletest.rc-jl2z6" in namespace "gc-1685"
  I1214 13:01:17.680309 19 delete.go:95] Deleting pod "simpletest.rc-jqxv9" in namespace "gc-1685"
  I1214 13:01:17.697675 19 delete.go:95] Deleting pod "simpletest.rc-jwmx5" in namespace "gc-1685"
  I1214 13:01:17.720375 19 delete.go:95] Deleting pod "simpletest.rc-k76vj" in namespace "gc-1685"
  I1214 13:01:17.745255 19 delete.go:95] Deleting pod "simpletest.rc-kbgkl" in namespace "gc-1685"
  I1214 13:01:17.761352 19 delete.go:95] Deleting pod "simpletest.rc-kfkn7" in namespace "gc-1685"
  I1214 13:01:17.777889 19 delete.go:95] Deleting pod "simpletest.rc-kjhb5" in namespace "gc-1685"
  I1214 13:01:17.795112 19 delete.go:95] Deleting pod "simpletest.rc-knxqk" in namespace "gc-1685"
  I1214 13:01:17.809385 19 delete.go:95] Deleting pod "simpletest.rc-kr25n" in namespace "gc-1685"
  I1214 13:01:17.824312 19 delete.go:95] Deleting pod "simpletest.rc-lfln5" in namespace "gc-1685"
  I1214 13:01:17.836704 19 delete.go:95] Deleting pod "simpletest.rc-ljrhp" in namespace "gc-1685"
  I1214 13:01:17.855304 19 delete.go:95] Deleting pod "simpletest.rc-lpcnc" in namespace "gc-1685"
  I1214 13:01:17.872935 19 delete.go:95] Deleting pod "simpletest.rc-m54jf" in namespace "gc-1685"
  I1214 13:01:17.883629 19 delete.go:95] Deleting pod "simpletest.rc-m74q9" in namespace "gc-1685"
  I1214 13:01:17.900116 19 delete.go:95] Deleting pod "simpletest.rc-n5qns" in namespace "gc-1685"
  I1214 13:01:17.918264 19 delete.go:95] Deleting pod "simpletest.rc-nczlf" in namespace "gc-1685"
  I1214 13:01:17.932486 19 delete.go:95] Deleting pod "simpletest.rc-nnnvv" in namespace "gc-1685"
  I1214 13:01:17.946900 19 delete.go:95] Deleting pod "simpletest.rc-nq5jx" in namespace "gc-1685"
  I1214 13:01:17.958540 19 delete.go:95] Deleting pod "simpletest.rc-ntp9v" in namespace "gc-1685"
  I1214 13:01:17.973941 19 delete.go:95] Deleting pod "simpletest.rc-p8fd2" in namespace "gc-1685"
  I1214 13:01:17.985849 19 delete.go:95] Deleting pod "simpletest.rc-pjnfz" in namespace "gc-1685"
  I1214 13:01:18.000650 19 delete.go:95] Deleting pod "simpletest.rc-pmw4q" in namespace "gc-1685"
  I1214 13:01:18.019334 19 delete.go:95] Deleting pod "simpletest.rc-qf552" in namespace "gc-1685"
  I1214 13:01:18.032498 19 delete.go:95] Deleting pod "simpletest.rc-qfcc4" in namespace "gc-1685"
  I1214 13:01:18.044526 19 delete.go:95] Deleting pod "simpletest.rc-qgxms" in namespace "gc-1685"
  I1214 13:01:18.062415 19 delete.go:95] Deleting pod "simpletest.rc-qhkd2" in namespace "gc-1685"
  I1214 13:01:18.114789 19 delete.go:95] Deleting pod "simpletest.rc-qwzcp" in namespace "gc-1685"
  I1214 13:01:18.174862 19 delete.go:95] Deleting pod "simpletest.rc-r67gt" in namespace "gc-1685"
  I1214 13:01:18.213916 19 delete.go:95] Deleting pod "simpletest.rc-rgshf" in namespace "gc-1685"
  I1214 13:01:18.265946 19 delete.go:95] Deleting pod "simpletest.rc-rhblq" in namespace "gc-1685"
  I1214 13:01:18.314727 19 delete.go:95] Deleting pod "simpletest.rc-rhqkx" in namespace "gc-1685"
  I1214 13:01:18.361555 19 delete.go:95] Deleting pod "simpletest.rc-rwrgm" in namespace "gc-1685"
  I1214 13:01:18.409182 19 delete.go:95] Deleting pod "simpletest.rc-rzxjk" in namespace "gc-1685"
  I1214 13:01:18.463393 19 delete.go:95] Deleting pod "simpletest.rc-s75ch" in namespace "gc-1685"
  I1214 13:01:18.510803 19 delete.go:95] Deleting pod "simpletest.rc-sfdc7" in namespace "gc-1685"
  I1214 13:01:18.560428 19 delete.go:95] Deleting pod "simpletest.rc-tf5lx" in namespace "gc-1685"
  I1214 13:01:18.608315 19 delete.go:95] Deleting pod "simpletest.rc-tfsg6" in namespace "gc-1685"
  I1214 13:01:18.662531 19 delete.go:95] Deleting pod "simpletest.rc-thg5b" in namespace "gc-1685"
  I1214 13:01:18.714265 19 delete.go:95] Deleting pod "simpletest.rc-thnbl" in namespace "gc-1685"
  I1214 13:01:18.767610 19 delete.go:95] Deleting pod "simpletest.rc-tm6zn" in namespace "gc-1685"
  I1214 13:01:18.830098 19 delete.go:95] Deleting pod "simpletest.rc-tqdhs" in namespace "gc-1685"
  I1214 13:01:18.865773 19 delete.go:95] Deleting pod "simpletest.rc-tz52f" in namespace "gc-1685"
  I1214 13:01:18.914335 19 delete.go:95] Deleting pod "simpletest.rc-tzj6v" in namespace "gc-1685"
  I1214 13:01:18.961557 19 delete.go:95] Deleting pod "simpletest.rc-v2h4p" in namespace "gc-1685"
  I1214 13:01:19.014488 19 delete.go:95] Deleting pod "simpletest.rc-v9k5n" in namespace "gc-1685"
  I1214 13:01:19.064942 19 delete.go:95] Deleting pod "simpletest.rc-vfcfl" in namespace "gc-1685"
  I1214 13:01:19.122347 19 delete.go:95] Deleting pod "simpletest.rc-vfdvh" in namespace "gc-1685"
  I1214 13:01:19.162232 19 delete.go:95] Deleting pod "simpletest.rc-vkqdr" in namespace "gc-1685"
  I1214 13:01:19.209763 19 delete.go:95] Deleting pod "simpletest.rc-w65rx" in namespace "gc-1685"
  I1214 13:01:19.267088 19 delete.go:95] Deleting pod "simpletest.rc-whvzs" in namespace "gc-1685"
  I1214 13:01:19.311227 19 delete.go:95] Deleting pod "simpletest.rc-wksjd" in namespace "gc-1685"
  I1214 13:01:19.364695 19 delete.go:95] Deleting pod "simpletest.rc-wpdjg" in namespace "gc-1685"
  I1214 13:01:19.409344 19 delete.go:95] Deleting pod "simpletest.rc-wqkm5" in namespace "gc-1685"
  I1214 13:01:19.462646 19 delete.go:95] Deleting pod "simpletest.rc-zgpc4" in namespace "gc-1685"
  I1214 13:01:19.509005 19 delete.go:95] Deleting pod "simpletest.rc-zrhqq" in namespace "gc-1685"
  I1214 13:01:19.563942 19 delete.go:95] Deleting pod "simpletest.rc-zv82x" in namespace "gc-1685"
  I1214 13:01:19.610316 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1685" for this suite. @ 12/14/24 13:01:19.658
• [41.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/14/24 13:01:19.706
  I1214 13:01:19.706446 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename chunking @ 12/14/24 13:01:19.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:01:19.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:01:19.741
  STEP: creating a large number of resources @ 12/14/24 13:01:19.755
  STEP: retrieving those results in paged fashion several times @ 12/14/24 13:01:37.415
  I1214 13:01:37.462094 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1214 13:01:37.513700 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1214 13:01:37.563071 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1214 13:01:37.612557 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1214 13:01:37.663894 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1214 13:01:37.713231 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1214 13:01:37.762102 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1214 13:01:37.813454 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1214 13:01:37.863251 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1214 13:01:37.912415 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1214 13:01:37.963625 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1214 13:01:38.013122 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1214 13:01:38.061931 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1214 13:01:38.114587 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1214 13:01:38.162706 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1214 13:01:38.213090 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1214 13:01:38.263503 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1214 13:01:38.314509 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1214 13:01:38.362501 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1214 13:01:38.413488 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1214 13:01:38.462557 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1214 13:01:38.513151 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1214 13:01:38.563310 19 chunking.go:98] Retrieved 17/17 results with rv 19652 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1214 13:01:38.612901 19 chunking.go:98] Retrieved 9/17 results with rv 19652 and continue 
  I1214 13:01:38.663178 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1214 13:01:38.713405 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1214 13:01:38.762293 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1214 13:01:38.812895 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1214 13:01:38.864528 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1214 13:01:38.913327 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1214 13:01:38.962228 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1214 13:01:39.013192 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1214 13:01:39.062433 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1214 13:01:39.112596 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1214 13:01:39.164137 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1214 13:01:39.212047 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1214 13:01:39.261820 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1214 13:01:39.314369 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1214 13:01:39.362688 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1214 13:01:39.413073 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1214 13:01:39.464386 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1214 13:01:39.512946 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1214 13:01:39.563064 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1214 13:01:39.613196 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1214 13:01:39.662685 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1214 13:01:39.712477 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1214 13:01:39.763513 19 chunking.go:98] Retrieved 17/17 results with rv 19654 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1214 13:01:39.812886 19 chunking.go:98] Retrieved 9/17 results with rv 19654 and continue 
  I1214 13:01:39.863064 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1214 13:01:39.913587 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1214 13:01:39.963066 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1214 13:01:40.013259 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1214 13:01:40.063543 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1214 13:01:40.113317 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1214 13:01:40.162538 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1214 13:01:40.214038 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1214 13:01:40.262531 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1214 13:01:40.312578 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1214 13:01:40.363708 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1214 13:01:40.413437 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1214 13:01:40.462829 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1214 13:01:40.513659 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1214 13:01:40.562851 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1214 13:01:40.613010 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1214 13:01:40.663647 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1214 13:01:40.713080 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1214 13:01:40.762492 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1214 13:01:40.814502 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1214 13:01:40.863178 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1214 13:01:40.912235 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1214 13:01:40.963787 19 chunking.go:98] Retrieved 17/17 results with rv 19656 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1214 13:01:41.013359 19 chunking.go:98] Retrieved 9/17 results with rv 19656 and continue 
  STEP: retrieving those results all at once @ 12/14/24 13:01:41.013
  I1214 13:01:41.069528 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9423" for this suite. @ 12/14/24 13:01:41.114
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 12/14/24 13:01:41.166
  I1214 13:01:41.166777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 13:01:41.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:01:41.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:01:41.188
  STEP: Looking for a node to schedule job pod @ 12/14/24 13:01:41.189
  STEP: Creating a job @ 12/14/24 13:01:41.195
  STEP: Ensuring job fails @ 12/14/24 13:01:41.201
  I1214 13:01:45.209066 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7130" for this suite. @ 12/14/24 13:01:45.213
• [4.053 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/14/24 13:01:45.219
  I1214 13:01:45.219617 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replicaset @ 12/14/24 13:01:45.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:01:45.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:01:45.239
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/14/24 13:01:45.242
  I1214 13:01:45.258239 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1214 13:01:50.263659 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/14/24 13:01:50.263
  STEP: getting scale subresource @ 12/14/24 13:01:50.263
  STEP: updating a scale subresource @ 12/14/24 13:01:50.267
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/14/24 13:01:50.274
  STEP: Patch a scale subresource @ 12/14/24 13:01:50.276
  I1214 13:01:50.288478 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1489" for this suite. @ 12/14/24 13:01:50.291
• [5.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/14/24 13:01:50.31
  I1214 13:01:50.310478 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename server-version @ 12/14/24 13:01:50.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:01:50.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:01:50.336
  STEP: Request ServerVersion @ 12/14/24 13:01:50.337
  STEP: Confirm major version @ 12/14/24 13:01:50.338
  I1214 13:01:50.338406 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/14/24 13:01:50.338
  I1214 13:01:50.338436 19 server_version.go:58] cleanMinorVersion: 31
  I1214 13:01:50.338447 19 server_version.go:62] Minor version: 31
  I1214 13:01:50.338537 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7034" for this suite. @ 12/14/24 13:01:50.342
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 12/14/24 13:01:50.351
  I1214 13:01:50.351774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 13:01:50.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:01:50.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:01:50.372
  STEP: Creating a job @ 12/14/24 13:01:50.373
  STEP: Ensuring active pods == parallelism @ 12/14/24 13:01:50.377
  STEP: Orphaning one of the Job's Pods @ 12/14/24 13:01:52.382
  I1214 13:01:52.899266 19 pod_client.go:173] Successfully updated pod "adopt-release-qrkxr"
  STEP: Checking that the Job readopts the Pod @ 12/14/24 13:01:52.899
  STEP: Removing the labels from the Job's Pod @ 12/14/24 13:01:54.907
  I1214 13:01:55.418878 19 pod_client.go:173] Successfully updated pod "adopt-release-qrkxr"
  STEP: Checking that the Job releases the Pod @ 12/14/24 13:01:55.418
  I1214 13:01:57.427445 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6552" for this suite. @ 12/14/24 13:01:57.431
• [7.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/14/24 13:01:57.44
  I1214 13:01:57.440577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/14/24 13:01:57.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:01:57.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:01:57.463
  STEP: creating a target pod @ 12/14/24 13:01:57.465
  STEP: adding an ephemeral container @ 12/14/24 13:01:59.486
  STEP: checking pod container endpoints @ 12/14/24 13:02:01.505
  I1214 13:02:01.505928 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3061 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:02:01.505943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:02:01.506379 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:02:01.506422 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3061/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1214 13:02:01.547824 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/14/24 13:02:01.56
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/14/24 13:02:01.565
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/14/24 13:02:01.575
  I1214 13:02:01.579794 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3061" for this suite. @ 12/14/24 13:02:01.584
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/14/24 13:02:01.593
  I1214 13:02:01.593461 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/14/24 13:02:01.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:01.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:01.611
  STEP: creating the policy @ 12/14/24 13:02:01.618
  STEP: waiting until the marker is denied @ 12/14/24 13:02:01.63
  STEP: testing a replicated Deployment to be allowed @ 12/14/24 13:02:01.941
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/14/24 13:02:01.957
  I1214 13:02:02.007706 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6014" for this suite. @ 12/14/24 13:02:02.01
• [0.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/14/24 13:02:02.023
  I1214 13:02:02.023772 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:02:02.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:02.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:02.045
  STEP: starting the proxy server @ 12/14/24 13:02:02.047
  I1214 13:02:02.047268 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-9696 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/14/24 13:02:02.082
  I1214 13:02:02.087330 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1214 13:02:02.088477 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:45171

  I1214 13:02:02.088507 19 kubectl.go:2229] kubectl proxy stderr: W1214 13:02:02.082157     263 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-9696" for this suite. @ 12/14/24 13:02:02.092
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/14/24 13:02:02.101
  I1214 13:02:02.101227 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:02:02.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:02.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:02.122
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:02:02.124
  STEP: Saw pod success @ 12/14/24 13:02:06.147
  I1214 13:02:06.150485 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-0bd79aaf-5a64-4159-b561-9aa920e18b53 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:02:06.16
  I1214 13:02:06.181157 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7109" for this suite. @ 12/14/24 13:02:06.184
• [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/14/24 13:02:06.191
  I1214 13:02:06.191543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:02:06.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:06.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:06.213
  STEP: Creating configMap with name configmap-test-volume-2f2d2d22-ddc9-4175-ac43-3c0751daf2b6 @ 12/14/24 13:02:06.214
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:02:06.284
  STEP: Saw pod success @ 12/14/24 13:02:08.358
  I1214 13:02:08.362295 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-configmaps-1ea5f85b-c9b7-4b0e-9c9a-1db45734c32a container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:02:08.375
  I1214 13:02:08.392989 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6664" for this suite. @ 12/14/24 13:02:08.396
• [2.214 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/14/24 13:02:08.405
  I1214 13:02:08.405509 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:02:08.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:08.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:08.425
  STEP: Creating configMap with name projected-configmap-test-volume-map-f63a6dce-a5bf-4a47-ae1f-aa2f64fac21d @ 12/14/24 13:02:08.426
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:02:08.429
  STEP: Saw pod success @ 12/14/24 13:02:12.452
  I1214 13:02:12.457153 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-projected-configmaps-a84494e3-ad0d-4a77-9953-1bfbdfa207b9 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:02:12.47
  I1214 13:02:12.485284 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6329" for this suite. @ 12/14/24 13:02:12.489
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/14/24 13:02:12.496
  I1214 13:02:12.496694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename containers @ 12/14/24 13:02:12.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:12.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:12.518
  STEP: Creating a pod to test override arguments @ 12/14/24 13:02:12.52
  STEP: Saw pod success @ 12/14/24 13:02:16.543
  I1214 13:02:16.546432 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod client-containers-5e8d3a2b-eaa5-4f48-8cf9-23a7396e3e52 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:02:16.554
  I1214 13:02:16.571320 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8199" for this suite. @ 12/14/24 13:02:16.574
• [4.083 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/14/24 13:02:16.579
  I1214 13:02:16.579977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:02:16.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:16.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:16.599
  STEP: Creating configMap with name configmap-test-volume-map-5cdd37f9-6c62-49c8-86d7-4f983a258094 @ 12/14/24 13:02:16.601
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:02:16.606
  STEP: Saw pod success @ 12/14/24 13:02:20.627
  I1214 13:02:20.631549 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-configmaps-593cf469-b8e5-4e95-9fb1-9959833f4ea9 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:02:20.639
  I1214 13:02:20.654744 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2310" for this suite. @ 12/14/24 13:02:20.658
• [4.086 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/14/24 13:02:20.666
  I1214 13:02:20.666254 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replicaset @ 12/14/24 13:02:20.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:20.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:20.687
  I1214 13:02:20.701042 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1214 13:02:25.709528 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/14/24 13:02:25.709
  STEP: Scaling up "test-rs" replicaset @ 12/14/24 13:02:25.709
  I1214 13:02:25.718161 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/14/24 13:02:25.718
  I1214 13:02:25.730630 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9708 with ReadyReplicas 1, AvailableReplicas 1
  I1214 13:02:25.743459 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9708 with ReadyReplicas 1, AvailableReplicas 1
  I1214 13:02:25.758875 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9708 with ReadyReplicas 1, AvailableReplicas 1
  I1214 13:02:25.766732 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9708 with ReadyReplicas 1, AvailableReplicas 1
  I1214 13:02:27.021996 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9708 with ReadyReplicas 2, AvailableReplicas 2
  I1214 13:02:27.087603 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9708 with ReadyReplicas 3 found true
  I1214 13:02:27.087835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9708" for this suite. @ 12/14/24 13:02:27.09
• [6.432 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/14/24 13:02:27.098
  I1214 13:02:27.098734 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 13:02:27.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:27.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:27.116
  I1214 13:02:29.137921 19 delete.go:62] Deleting pod "var-expansion-8df2a6fe-4e24-428c-b574-f88ed8bd2217" in namespace "var-expansion-6231"
  I1214 13:02:29.146964 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-8df2a6fe-4e24-428c-b574-f88ed8bd2217" to be fully deleted
  I1214 13:02:31.154972 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6231" for this suite. @ 12/14/24 13:02:31.159
• [4.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/14/24 13:02:31.166
  I1214 13:02:31.166481 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename proxy @ 12/14/24 13:02:31.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:31.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:31.186
  I1214 13:02:31.187860 19 proxy.go:293] Creating pod...
  I1214 13:02:33.207037 19 proxy.go:317] Creating service...
  I1214 13:02:33.217349 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/DELETE
  I1214 13:02:33.224144 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1214 13:02:33.224178 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/GET
  I1214 13:02:33.227611 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1214 13:02:33.227642 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/HEAD
  I1214 13:02:33.231055 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1214 13:02:33.231075 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/OPTIONS
  I1214 13:02:33.240063 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1214 13:02:33.240101 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/PATCH
  I1214 13:02:33.244599 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1214 13:02:33.244631 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/POST
  I1214 13:02:33.247814 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1214 13:02:33.247850 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/pods/agnhost/proxy/some/path/with/PUT
  I1214 13:02:33.252226 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1214 13:02:33.252250 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/DELETE
  I1214 13:02:33.257134 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1214 13:02:33.257162 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/GET
  I1214 13:02:33.261556 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1214 13:02:33.261576 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/HEAD
  I1214 13:02:33.267657 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1214 13:02:33.267677 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/OPTIONS
  I1214 13:02:33.273766 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1214 13:02:33.273793 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/PATCH
  I1214 13:02:33.278800 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1214 13:02:33.278824 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/POST
  I1214 13:02:33.286249 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1214 13:02:33.286276 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5126/services/test-service/proxy/some/path/with/PUT
  I1214 13:02:33.291879 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1214 13:02:33.291992 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5126" for this suite. @ 12/14/24 13:02:33.295
• [2.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 12/14/24 13:02:33.301
  I1214 13:02:33.301760 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-webhook @ 12/14/24 13:02:33.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:33.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:33.32
  STEP: Setting up server cert @ 12/14/24 13:02:33.322
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/14/24 13:02:33.477
  STEP: Deploying the custom resource conversion webhook pod @ 12/14/24 13:02:33.487
  STEP: Wait for the deployment to be ready @ 12/14/24 13:02:33.5
  I1214 13:02:33.508281 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 13:02:35.52
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:02:35.533
  I1214 13:02:36.534067 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1214 13:02:36.542708 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Creating a v1 custom resource @ 12/14/24 13:02:39.092
  STEP: Create a v2 custom resource @ 12/14/24 13:02:39.108
  STEP: List CRs in v1 @ 12/14/24 13:02:39.136
  STEP: List CRs in v2 @ 12/14/24 13:02:39.139
  I1214 13:02:39.689854 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5850" for this suite. @ 12/14/24 13:02:39.692
• [6.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/14/24 13:02:39.704
  I1214 13:02:39.704456 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename subjectreview @ 12/14/24 13:02:39.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:39.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:39.724
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8380" @ 12/14/24 13:02:39.726
  I1214 13:02:39.732138 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8380:e2e"
  I1214 13:02:39.732168 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8380"}
  I1214 13:02:39.732181 19 subjectreviews.go:71] saUID: "bec20bf7-e676-4fc3-a965-454c2c6aa87e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8380:e2e" @ 12/14/24 13:02:39.732
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8380:e2e" @ 12/14/24 13:02:39.732
  I1214 13:02:39.733616 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8380:e2e" api 'list' configmaps in "subjectreview-8380" namespace @ 12/14/24 13:02:39.733
  I1214 13:02:39.734466 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8380:e2e" @ 12/14/24 13:02:39.734
  I1214 13:02:39.735633 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1214 13:02:39.735647 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1214 13:02:39.735798 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8380" for this suite. @ 12/14/24 13:02:39.74
• [0.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/14/24 13:02:39.748
  I1214 13:02:39.748926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 13:02:39.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:39.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:39.771
  STEP: Creating simple DaemonSet "daemon-set" @ 12/14/24 13:02:39.791
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/14/24 13:02:39.795
  I1214 13:02:39.798294 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:39.798330 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:39.800508 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:02:39.800529 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:02:40.801334 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:40.801367 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:40.805698 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:02:40.805715 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:02:41.800885 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:41.800920 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:41.804010 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 13:02:41.804049 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/14/24 13:02:41.808
  I1214 13:02:41.822112 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:41.822143 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:41.825260 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1214 13:02:41.825278 19 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I1214 13:02:42.823921 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:42.824039 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:42.827897 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1214 13:02:42.827944 19 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I1214 13:02:43.824836 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:43.824878 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:02:43.828981 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 13:02:43.829004 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/14/24 13:02:43.832
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9559, will wait for the garbage collector to delete the pods @ 12/14/24 13:02:43.832
  I1214 13:02:43.893652 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.979805ms
  I1214 13:02:43.994089 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.432439ms
  I1214 13:02:45.199864 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:02:45.199910 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1214 13:02:45.202776 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21145"},"items":null}

  I1214 13:02:45.205740 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21145"},"items":null}

  I1214 13:02:45.217833 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9559" for this suite. @ 12/14/24 13:02:45.221
• [5.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/14/24 13:02:45.229
  I1214 13:02:45.229133 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:02:45.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:45.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:45.248
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/14/24 13:02:45.25
  I1214 13:02:45.250660 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:02:46.468917 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:02:51.514097 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2961" for this suite. @ 12/14/24 13:02:51.52
• [6.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/14/24 13:02:51.527
  I1214 13:02:51.527518 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 13:02:51.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:51.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:51.546
  STEP: creating a ServiceAccount @ 12/14/24 13:02:51.548
  STEP: watching for the ServiceAccount to be added @ 12/14/24 13:02:51.555
  STEP: patching the ServiceAccount @ 12/14/24 13:02:51.556
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/14/24 13:02:51.562
  STEP: deleting the ServiceAccount @ 12/14/24 13:02:51.565
  I1214 13:02:51.583603 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7300" for this suite. @ 12/14/24 13:02:51.587
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/14/24 13:02:51.593
  I1214 13:02:51.593714 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:02:51.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:02:51.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:02:51.614
  STEP: Creating service test in namespace statefulset-2433 @ 12/14/24 13:02:51.617
  STEP: Creating statefulset ss in namespace statefulset-2433 @ 12/14/24 13:02:51.623
  I1214 13:02:51.635666 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1214 13:03:01.636192 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/14/24 13:03:01.643
  STEP: updating a scale subresource @ 12/14/24 13:03:01.646
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/14/24 13:03:01.653
  STEP: Patch a scale subresource @ 12/14/24 13:03:01.657
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/14/24 13:03:01.665
  I1214 13:03:01.673170 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2433
  I1214 13:03:01.676006 19 rest.go:150] Scaling statefulset ss to 0
  I1214 13:03:11.690909 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:03:11.694919 19 rest.go:88] Deleting statefulset ss
  I1214 13:03:11.711332 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2433" for this suite. @ 12/14/24 13:03:11.717
• [20.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 12/14/24 13:03:11.726
  I1214 13:03:11.726035 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:03:11.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:03:11.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:03:11.756
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-878 @ 12/14/24 13:03:11.761
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/14/24 13:03:11.787
  STEP: creating service externalsvc in namespace services-878 @ 12/14/24 13:03:11.787
  STEP: creating replication controller externalsvc in namespace services-878 @ 12/14/24 13:03:11.799
  I1214 13:03:11.819447      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-878, replica count: 2
  I1214 13:03:14.871171      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/14/24 13:03:14.877
  I1214 13:03:14.900711 19 resource.go:361] Creating new exec pod
  I1214 13:03:16.918550 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-878 exec execpodzwxxb -- /bin/sh -x -c nslookup nodeport-service.services-878.svc.cluster.local'
  I1214 13:03:17.029508 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-878.svc.cluster.local\n"
  I1214 13:03:17.029573 19 builder.go:147] stdout: "Server:\t\t10.152.183.238\nAddress:\t10.152.183.238#53\n\nnodeport-service.services-878.svc.cluster.local\tcanonical name = externalsvc.services-878.svc.cluster.local.\nName:\texternalsvc.services-878.svc.cluster.local\nAddress: 10.152.183.223\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-878, will wait for the garbage collector to delete the pods @ 12/14/24 13:03:17.029
  I1214 13:03:17.091115 19 resources.go:139] Deleting ReplicationController externalsvc took: 7.265222ms
  I1214 13:03:17.191785 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.668ms
  I1214 13:03:20.309973 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1214 13:03:20.320932 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-878" for this suite. @ 12/14/24 13:03:20.325
• [8.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/14/24 13:03:20.333
  I1214 13:03:20.333317 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:03:20.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:03:20.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:03:20.351
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:03:20.353
  STEP: Saw pod success @ 12/14/24 13:03:22.37
  I1214 13:03:22.375397 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-8542511b-2cd8-432f-be18-08fafc6ad25d container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:03:22.387
  I1214 13:03:22.407961 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8451" for this suite. @ 12/14/24 13:03:22.412
• [2.086 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 12/14/24 13:03:22.419
  I1214 13:03:22.419635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:03:22.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:03:22.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:03:22.436
  STEP: Setting up server cert @ 12/14/24 13:03:22.465
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:03:22.681
  STEP: Deploying the webhook pod @ 12/14/24 13:03:22.691
  STEP: Wait for the deployment to be ready @ 12/14/24 13:03:22.705
  I1214 13:03:22.713909 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 13:03:24.727
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:03:24.735
  I1214 13:03:25.736201 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/14/24 13:03:25.744
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/14/24 13:03:25.758
  STEP: Creating a dummy validating-webhook-configuration object @ 12/14/24 13:03:25.771
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/14/24 13:03:25.78
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/14/24 13:03:25.788
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/14/24 13:03:25.797
  I1214 13:03:25.859334 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7899" for this suite. @ 12/14/24 13:03:25.862
  STEP: Destroying namespace "webhook-markers-6441" for this suite. @ 12/14/24 13:03:25.867
• [3.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/14/24 13:03:25.876
  I1214 13:03:25.876208 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:03:25.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:03:25.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:03:25.895
  STEP: Creating configMap with name projected-configmap-test-volume-30bdeda4-6174-46dc-a1bb-3ece70b12dc0 @ 12/14/24 13:03:25.897
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:03:25.903
  STEP: Saw pod success @ 12/14/24 13:03:29.926
  I1214 13:03:29.929447 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-configmaps-23d5caf3-6089-44f5-a313-753062d229a9 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:03:29.936
  I1214 13:03:29.956803 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9736" for this suite. @ 12/14/24 13:03:29.959
• [4.089 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/14/24 13:03:29.965
  I1214 13:03:29.965398 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 13:03:29.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:03:29.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:03:29.985
  I1214 13:04:30.007213 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6444" for this suite. @ 12/14/24 13:04:30.011
• [60.053 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/14/24 13:04:30.018
  I1214 13:04:30.018278 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:04:30.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:04:30.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:04:30.038
  STEP: set up a multi version CRD @ 12/14/24 13:04:30.04
  I1214 13:04:30.040421 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: mark a version not serverd @ 12/14/24 13:04:33.153
  STEP: check the unserved version gets removed @ 12/14/24 13:04:33.17
  STEP: check the other version is not changed @ 12/14/24 13:04:33.866
  I1214 13:04:36.352975 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8979" for this suite. @ 12/14/24 13:04:36.359
• [6.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 12/14/24 13:04:36.367
  I1214 13:04:36.367931 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:04:36.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:04:36.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:04:36.386
  STEP: creating service endpoint-test2 in namespace services-2702 @ 12/14/24 13:04:36.388
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2702 to expose endpoints map[] @ 12/14/24 13:04:36.4
  I1214 13:04:36.404994 19 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I1214 13:04:37.414761 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2702 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2702 @ 12/14/24 13:04:37.414
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2702 to expose endpoints map[pod1:[80]] @ 12/14/24 13:04:39.437
  I1214 13:04:39.448940 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2702 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/14/24 13:04:39.448
  I1214 13:04:39.449002 19 resource.go:361] Creating new exec pod
  I1214 13:04:42.462161 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-2702 exec execpod55krw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1214 13:04:42.542559 19 builder.go:146] stderr: "+ + nc -v -t -w 2 endpoint-test2 80\necho hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1214 13:04:42.542600 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:04:42.542795 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-2702 exec execpod55krw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.214 80'
  I1214 13:04:42.622946 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.214 80\nConnection to 10.152.183.214 80 port [tcp/http] succeeded!\n"
  I1214 13:04:42.623037 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2702 @ 12/14/24 13:04:42.623
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2702 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/14/24 13:04:44.639
  I1214 13:04:44.651649 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2702 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/14/24 13:04:44.651
  I1214 13:04:45.652656 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-2702 exec execpod55krw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1214 13:04:45.734181 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1214 13:04:45.734232 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:04:45.734309 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-2702 exec execpod55krw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.214 80'
  I1214 13:04:45.807474 19 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.214 80\nConnection to 10.152.183.214 80 port [tcp/http] succeeded!\n"
  I1214 13:04:45.807515 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2702 @ 12/14/24 13:04:45.807
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2702 to expose endpoints map[pod2:[80]] @ 12/14/24 13:04:45.826
  I1214 13:04:45.839425 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2702 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/14/24 13:04:45.839
  I1214 13:04:46.840639 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-2702 exec execpod55krw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1214 13:04:46.920061 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1214 13:04:46.920112 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:04:46.920215 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-2702 exec execpod55krw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.214 80'
  I1214 13:04:46.998390 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.214 80\necho hostName\nConnection to 10.152.183.214 80 port [tcp/http] succeeded!\n"
  I1214 13:04:46.998439 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2702 @ 12/14/24 13:04:46.998
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2702 to expose endpoints map[] @ 12/14/24 13:04:47.01
  I1214 13:04:48.032706 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2702 exposes endpoints map[]
  I1214 13:04:48.049336 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2702" for this suite. @ 12/14/24 13:04:48.053
• [11.691 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 12/14/24 13:04:48.059
  I1214 13:04:48.059327 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 13:04:48.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:04:48.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:04:48.078
  STEP: Creating a ResourceQuota with best effort scope @ 12/14/24 13:04:48.079
  STEP: Ensuring ResourceQuota status is calculated @ 12/14/24 13:04:48.086
  STEP: Creating a ResourceQuota with not best effort scope @ 12/14/24 13:04:50.091
  STEP: Ensuring ResourceQuota status is calculated @ 12/14/24 13:04:50.096
  STEP: Creating a best-effort pod @ 12/14/24 13:04:52.102
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/14/24 13:04:52.114
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/14/24 13:04:54.188
  STEP: Deleting the pod @ 12/14/24 13:04:56.193
  STEP: Ensuring resource quota status released the pod usage @ 12/14/24 13:04:56.208
  STEP: Creating a not best-effort pod @ 12/14/24 13:04:58.212
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/14/24 13:04:58.225
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/14/24 13:05:00.23
  STEP: Deleting the pod @ 12/14/24 13:05:02.235
  STEP: Ensuring resource quota status released the pod usage @ 12/14/24 13:05:02.251
  I1214 13:05:04.257202 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9122" for this suite. @ 12/14/24 13:05:04.26
• [16.210 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/14/24 13:05:04.269
  I1214 13:05:04.269252 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/14/24 13:05:04.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:05:04.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:05:04.289
  STEP: Creating 50 configmaps @ 12/14/24 13:05:04.291
  STEP: Creating RC which spawns configmap-volume pods @ 12/14/24 13:05:04.538
  I1214 13:05:04.644550 19 resource.go:87] Pod name wrapped-volume-race-897b1bc1-6d00-4f71-894e-ae95c9e481f8: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/14/24 13:05:04.644
  STEP: Creating RC which spawns configmap-volume pods @ 12/14/24 13:05:06.699
  I1214 13:05:06.712253 19 resource.go:87] Pod name wrapped-volume-race-43e580dc-17a1-4583-a607-bd6706d3afac: Found 0 pods out of 5
  I1214 13:05:11.718856 19 resource.go:87] Pod name wrapped-volume-race-43e580dc-17a1-4583-a607-bd6706d3afac: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/14/24 13:05:11.718
  STEP: Creating RC which spawns configmap-volume pods @ 12/14/24 13:05:11.741
  I1214 13:05:11.754285 19 resource.go:87] Pod name wrapped-volume-race-6b63cbea-a13f-4835-92ae-a331c7c24e5f: Found 0 pods out of 5
  I1214 13:05:16.765112 19 resource.go:87] Pod name wrapped-volume-race-6b63cbea-a13f-4835-92ae-a331c7c24e5f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/14/24 13:05:16.765
  STEP: deleting ReplicationController wrapped-volume-race-6b63cbea-a13f-4835-92ae-a331c7c24e5f in namespace emptydir-wrapper-4236, will wait for the garbage collector to delete the pods @ 12/14/24 13:05:16.781
  I1214 13:05:16.844361 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-6b63cbea-a13f-4835-92ae-a331c7c24e5f took: 9.013909ms
  I1214 13:05:16.945274 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-6b63cbea-a13f-4835-92ae-a331c7c24e5f pods took: 100.908842ms
  STEP: deleting ReplicationController wrapped-volume-race-43e580dc-17a1-4583-a607-bd6706d3afac in namespace emptydir-wrapper-4236, will wait for the garbage collector to delete the pods @ 12/14/24 13:05:18.545
  I1214 13:05:18.609192 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-43e580dc-17a1-4583-a607-bd6706d3afac took: 9.749926ms
  I1214 13:05:18.709375 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-43e580dc-17a1-4583-a607-bd6706d3afac pods took: 100.168532ms
  STEP: deleting ReplicationController wrapped-volume-race-897b1bc1-6d00-4f71-894e-ae95c9e481f8 in namespace emptydir-wrapper-4236, will wait for the garbage collector to delete the pods @ 12/14/24 13:05:20.51
  I1214 13:05:20.573056 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-897b1bc1-6d00-4f71-894e-ae95c9e481f8 took: 8.485741ms
  I1214 13:05:20.673447 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-897b1bc1-6d00-4f71-894e-ae95c9e481f8 pods took: 100.38662ms
  STEP: Cleaning up the configMaps @ 12/14/24 13:05:21.673
  I1214 13:05:21.986137 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4236" for this suite. @ 12/14/24 13:05:21.99
• [17.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/14/24 13:05:21.996
  I1214 13:05:21.996527 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 13:05:21.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:05:22.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:05:22.015
  I1214 13:05:22.053722 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7079" for this suite. @ 12/14/24 13:05:22.056
• [0.065 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/14/24 13:05:22.061
  I1214 13:05:22.061541 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:05:22.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:05:22.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:05:22.083
  STEP: Create a pod @ 12/14/24 13:05:22.084
  STEP: patching /status @ 12/14/24 13:05:24.101
  I1214 13:05:24.109239 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1214 13:05:24.109364 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4360" for this suite. @ 12/14/24 13:05:24.112
• [2.058 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/14/24 13:05:24.119
  I1214 13:05:24.119572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:05:24.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:05:24.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:05:24.134
  STEP: Creating configMap with name configmap-test-volume-map-be2f6cc0-1951-4bce-9fae-af6c5b3d7f6e @ 12/14/24 13:05:24.136
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:05:24.14
  STEP: Saw pod success @ 12/14/24 13:05:28.162
  I1214 13:05:28.165584 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-e3080339-8218-4f60-a505-bed76b5ce173 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:05:28.181
  I1214 13:05:28.193733 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5519" for this suite. @ 12/14/24 13:05:28.196
• [4.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 12/14/24 13:05:28.202
  I1214 13:05:28.202922 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption @ 12/14/24 13:05:28.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:05:28.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:05:28.218
  I1214 13:05:28.234436 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1214 13:06:28.240245 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/14/24 13:06:28.244
  I1214 13:06:28.267640 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1214 13:06:28.275620 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1214 13:06:28.291966 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1214 13:06:28.303967 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1214 13:06:28.323331 19 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1214 13:06:28.332136 19 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/14/24 13:06:28.332
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/14/24 13:06:30.36
  I1214 13:06:34.463510 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3033" for this suite. @ 12/14/24 13:06:34.466
• [66.270 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/14/24 13:06:34.472
  I1214 13:06:34.472661 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/14/24 13:06:34.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:34.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:34.493
  STEP: Creating two CSIDrivers @ 12/14/24 13:06:34.495
  STEP: Getting "inline-driver-f57e21c8-4394-4cad-91d9-97d3e3d8b103" & "inline-driver-6cc2cfeb-7ff1-4a32-91f3-8210a029a6d9" @ 12/14/24 13:06:34.51
  STEP: Patching the CSIDriver "inline-driver-6cc2cfeb-7ff1-4a32-91f3-8210a029a6d9" @ 12/14/24 13:06:34.516
  STEP: Updating the CSIDriver "inline-driver-6cc2cfeb-7ff1-4a32-91f3-8210a029a6d9" @ 12/14/24 13:06:34.521
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6621" @ 12/14/24 13:06:34.529
  STEP: Deleting CSIDriver "inline-driver-f57e21c8-4394-4cad-91d9-97d3e3d8b103" @ 12/14/24 13:06:34.532
  STEP: Confirm deletion of CSIDriver "inline-driver-f57e21c8-4394-4cad-91d9-97d3e3d8b103" @ 12/14/24 13:06:34.539
  STEP: Deleting CSIDriver "inline-driver-6cc2cfeb-7ff1-4a32-91f3-8210a029a6d9" via DeleteCollection @ 12/14/24 13:06:34.543
  STEP: Confirm deletion of CSIDriver "inline-driver-6cc2cfeb-7ff1-4a32-91f3-8210a029a6d9" @ 12/14/24 13:06:34.555
  I1214 13:06:34.558832 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6621" for this suite. @ 12/14/24 13:06:34.564
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/14/24 13:06:34.57
  I1214 13:06:34.570767 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:06:34.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:34.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:34.59
  STEP: Creating configMap that has name configmap-test-emptyKey-39757a43-54b7-4de8-9fc9-a365310f5cfb @ 12/14/24 13:06:34.592
  I1214 13:06:34.593904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-296" for this suite. @ 12/14/24 13:06:34.596
• [0.031 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/14/24 13:06:34.602
  I1214 13:06:34.602152 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:06:34.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:34.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:34.62
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:06:34.621
  STEP: Saw pod success @ 12/14/24 13:06:38.642
  I1214 13:06:38.645502 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-fa822cc8-0f38-417a-9348-c73638999f76 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:06:38.657
  I1214 13:06:38.675332 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8382" for this suite. @ 12/14/24 13:06:38.679
• [4.084 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/14/24 13:06:38.685
  I1214 13:06:38.685951 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:06:38.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:38.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:38.705
  STEP: Creating configMap with name projected-configmap-test-volume-map-e55c4082-baca-4908-b59b-217dc7efc8f7 @ 12/14/24 13:06:38.707
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:06:38.711
  STEP: Saw pod success @ 12/14/24 13:06:40.728
  I1214 13:06:40.731380 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-configmaps-54790ec3-29c4-4a5b-ab51-2bea4ebc8c6f container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:06:40.737
  I1214 13:06:40.756662 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6828" for this suite. @ 12/14/24 13:06:40.759
• [2.079 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 12/14/24 13:06:40.764
  I1214 13:06:40.764522 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pv @ 12/14/24 13:06:40.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:40.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:40.785
  STEP: Creating initial PV and PVC @ 12/14/24 13:06:40.786
  I1214 13:06:40.786617 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7506" @ 12/14/24 13:06:40.8
  STEP: Listing PVCs in namespace "pv-7506" @ 12/14/24 13:06:40.803
  STEP: Reading "pvc-vkwgx" Status @ 12/14/24 13:06:40.807
  STEP: Reading "pv-7506-jdwxl" Status @ 12/14/24 13:06:40.81
  STEP: Patching "pvc-vkwgx" Status @ 12/14/24 13:06:40.814
  STEP: Patching "pv-7506-jdwxl" Status @ 12/14/24 13:06:40.82
  STEP: Updating "pvc-vkwgx" Status @ 12/14/24 13:06:40.83
  STEP: Updating "pv-7506-jdwxl" Status @ 12/14/24 13:06:40.84
  I1214 13:06:40.848715 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1214 13:06:40.848740 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-vkwgx"
  I1214 13:06:40.864972 19 pv.go:193] Deleting PersistentVolume "pv-7506-jdwxl"
  I1214 13:06:40.870522 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7506" for this suite. @ 12/14/24 13:06:40.873
• [0.116 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 12/14/24 13:06:40.88
  I1214 13:06:40.880311 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:06:40.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:40.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:40.898
  STEP: Setting up server cert @ 12/14/24 13:06:40.921
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:06:41.193
  STEP: Deploying the webhook pod @ 12/14/24 13:06:41.201
  STEP: Wait for the deployment to be ready @ 12/14/24 13:06:41.214
  I1214 13:06:41.228321 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 13:06:43.24
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:06:43.251
  I1214 13:06:44.252143 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/14/24 13:06:44.259
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/14/24 13:06:44.277
  STEP: Creating a configMap that should not be mutated @ 12/14/24 13:06:44.284
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/14/24 13:06:44.296
  STEP: Creating a configMap that should be mutated @ 12/14/24 13:06:44.304
  I1214 13:06:44.362327 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-876" for this suite. @ 12/14/24 13:06:44.365
  STEP: Destroying namespace "webhook-markers-7196" for this suite. @ 12/14/24 13:06:44.373
• [3.502 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/14/24 13:06:44.382
  I1214 13:06:44.382236 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename controllerrevisions @ 12/14/24 13:06:44.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:44.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:44.401
  STEP: Creating DaemonSet "e2e-jl7p2-daemon-set" @ 12/14/24 13:06:44.426
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/14/24 13:06:44.434
  I1214 13:06:44.438379 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:06:44.438422 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:06:44.441720 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-jl7p2-daemon-set: 0
  I1214 13:06:44.441867 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:06:45.439117 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:06:45.439158 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:06:45.441896 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-jl7p2-daemon-set: 0
  I1214 13:06:45.441914 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:06:46.438795 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:06:46.438846 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:06:46.442275 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-jl7p2-daemon-set: 3
  I1214 13:06:46.442291 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-jl7p2-daemon-set
  STEP: Confirm DaemonSet "e2e-jl7p2-daemon-set" successfully created with "daemonset-name=e2e-jl7p2-daemon-set" label @ 12/14/24 13:06:46.446
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-jl7p2-daemon-set" @ 12/14/24 13:06:46.452
  I1214 13:06:46.454899 19 controller_revision.go:162] Located ControllerRevision: "e2e-jl7p2-daemon-set-6f974775"
  STEP: Patching ControllerRevision "e2e-jl7p2-daemon-set-6f974775" @ 12/14/24 13:06:46.457
  I1214 13:06:46.465788 19 controller_revision.go:173] e2e-jl7p2-daemon-set-6f974775 has been patched
  STEP: Create a new ControllerRevision @ 12/14/24 13:06:46.465
  I1214 13:06:46.472490 19 controller_revision.go:191] Created ControllerRevision: e2e-jl7p2-daemon-set-6fcd69fdff
  STEP: Confirm that there are two ControllerRevisions @ 12/14/24 13:06:46.472
  I1214 13:06:46.472552 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1214 13:06:46.475361 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-jl7p2-daemon-set-6f974775" @ 12/14/24 13:06:46.475
  STEP: Confirm that there is only one ControllerRevision @ 12/14/24 13:06:46.48
  I1214 13:06:46.480991 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1214 13:06:46.483673 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-jl7p2-daemon-set-6fcd69fdff" @ 12/14/24 13:06:46.487
  I1214 13:06:46.496802 19 controller_revision.go:220] e2e-jl7p2-daemon-set-6fcd69fdff has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/14/24 13:06:46.496
  W1214 13:06:46.504647      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/14/24 13:06:46.504
  I1214 13:06:46.504743 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1214 13:06:47.505570 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1214 13:06:47.510133 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-jl7p2-daemon-set-6fcd69fdff=updated" @ 12/14/24 13:06:47.51
  STEP: Confirm that there is only one ControllerRevision @ 12/14/24 13:06:47.518
  I1214 13:06:47.518224 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1214 13:06:47.520573 19 controller_revision.go:265] Found 1 ControllerRevisions
  I1214 13:06:47.524700 19 controller_revision.go:246] ControllerRevision "e2e-jl7p2-daemon-set-749f476758" has revision 3
  STEP: Deleting DaemonSet "e2e-jl7p2-daemon-set" @ 12/14/24 13:06:47.527
  STEP: deleting DaemonSet.extensions e2e-jl7p2-daemon-set in namespace controllerrevisions-2318, will wait for the garbage collector to delete the pods @ 12/14/24 13:06:47.528
  I1214 13:06:47.592633 19 resources.go:139] Deleting DaemonSet.extensions e2e-jl7p2-daemon-set took: 11.202812ms
  I1214 13:06:47.693182 19 resources.go:163] Terminating DaemonSet.extensions e2e-jl7p2-daemon-set pods took: 100.544248ms
  I1214 13:06:49.596263 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-jl7p2-daemon-set: 0
  I1214 13:06:49.596294 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-jl7p2-daemon-set
  I1214 13:06:49.599000 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23372"},"items":null}

  I1214 13:06:49.604474 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23372"},"items":null}

  I1214 13:06:49.615702 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2318" for this suite. @ 12/14/24 13:06:49.62
• [5.248 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/14/24 13:06:49.63
  I1214 13:06:49.630697 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename ingressclass @ 12/14/24 13:06:49.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:49.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:49.649
  STEP: getting /apis @ 12/14/24 13:06:49.65
  STEP: getting /apis/networking.k8s.io @ 12/14/24 13:06:49.653
  STEP: getting /apis/networking.k8s.iov1 @ 12/14/24 13:06:49.653
  STEP: creating @ 12/14/24 13:06:49.654
  STEP: getting @ 12/14/24 13:06:49.668
  STEP: listing @ 12/14/24 13:06:49.67
  STEP: watching @ 12/14/24 13:06:49.674
  I1214 13:06:49.674334 19 ingressclass.go:348] starting watch
  STEP: patching @ 12/14/24 13:06:49.674
  STEP: updating @ 12/14/24 13:06:49.679
  I1214 13:06:49.684637 19 ingressclass.go:364] waiting for watch events with expected annotations
  I1214 13:06:49.684738 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/14/24 13:06:49.684
  STEP: deleting a collection @ 12/14/24 13:06:49.695
  I1214 13:06:49.711515 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1260" for this suite. @ 12/14/24 13:06:49.714
• [0.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/14/24 13:06:49.72
  I1214 13:06:49.720802 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 13:06:49.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:49.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:49.741
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/14/24 13:06:49.742
  STEP: Saw pod success @ 12/14/24 13:06:51.758
  I1214 13:06:51.761183 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-c7cc3cf8-0d87-429a-ac6a-581b729a3ea5 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 13:06:51.769
  I1214 13:06:51.787563 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2067" for this suite. @ 12/14/24 13:06:51.79
• [2.079 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/14/24 13:06:51.8
  I1214 13:06:51.800146 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename init-container @ 12/14/24 13:06:51.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:51.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:51.819
  STEP: creating the pod @ 12/14/24 13:06:51.821
  I1214 13:06:51.821442 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1214 13:06:54.739471 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-209" for this suite. @ 12/14/24 13:06:54.742
• [2.950 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/14/24 13:06:54.75
  I1214 13:06:54.750397 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:06:54.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:06:54.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:06:54.767
  STEP: Creating service test in namespace statefulset-8682 @ 12/14/24 13:06:54.769
  STEP: Creating statefulset ss in namespace statefulset-8682 @ 12/14/24 13:06:54.778
  I1214 13:06:54.792638 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1214 13:07:04.795804 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/14/24 13:07:04.801
  STEP: Getting /status @ 12/14/24 13:07:04.812
  I1214 13:07:04.816467 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/14/24 13:07:04.816
  I1214 13:07:04.825890 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/14/24 13:07:04.825
  I1214 13:07:04.827087 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1214 13:07:04.827112 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-8682 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1214 13:07:04.827120 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/14/24 13:07:04.827
  I1214 13:07:04.827150 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1214 13:07:04.834327 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/14/24 13:07:04.834
  I1214 13:07:04.835343 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1214 13:07:04.835394 19 statefulset.go:138] Deleting all statefulset in ns statefulset-8682
  I1214 13:07:04.838267 19 rest.go:150] Scaling statefulset ss to 0
  I1214 13:07:14.853263 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:07:14.858142 19 rest.go:88] Deleting statefulset ss
  I1214 13:07:14.871742 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8682" for this suite. @ 12/14/24 13:07:14.876
• [20.133 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 12/14/24 13:07:14.884
  I1214 13:07:14.884724 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption @ 12/14/24 13:07:14.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:07:14.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:07:14.91
  I1214 13:07:14.924817 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1214 13:08:14.929662 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/14/24 13:08:14.933
  I1214 13:08:14.933113 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/14/24 13:08:14.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:14.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:14.96
  I1214 13:08:14.976714 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1214 13:08:14.979605 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1214 13:08:15.052738 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9636" for this suite. @ 12/14/24 13:08:15.056
  I1214 13:08:15.064952 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4170" for this suite. @ 12/14/24 13:08:15.067
• [60.190 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 12/14/24 13:08:15.074
  I1214 13:08:15.074408 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:08:15.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:15.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:15.095
  STEP: Setting up server cert @ 12/14/24 13:08:15.118
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:08:15.482
  STEP: Deploying the webhook pod @ 12/14/24 13:08:15.493
  STEP: Wait for the deployment to be ready @ 12/14/24 13:08:15.506
  I1214 13:08:15.514307 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 13:08:17.525
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:08:17.536
  I1214 13:08:18.536251 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/14/24 13:08:18.544
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/14/24 13:08:18.557
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/14/24 13:08:18.563
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/14/24 13:08:18.572
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/14/24 13:08:18.582
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/14/24 13:08:18.59
  I1214 13:08:18.634253 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9878" for this suite. @ 12/14/24 13:08:18.637
  STEP: Destroying namespace "webhook-markers-5435" for this suite. @ 12/14/24 13:08:18.643
• [3.574 seconds]
------------------------------
S
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/14/24 13:08:18.648
  I1214 13:08:18.648644 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svc-latency @ 12/14/24 13:08:18.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:18.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:18.669
  I1214 13:08:18.671515 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9712 @ 12/14/24 13:08:18.672
  I1214 13:08:18.681895      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9712, replica count: 1
  I1214 13:08:19.733432      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 13:08:20.733746      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 13:08:20.844735 19 service_latency.go:356] Created: latency-svc-jpngn
  I1214 13:08:20.853975 19 service_latency.go:363] Got endpoints: latency-svc-jpngn [19.600384ms]
  I1214 13:08:20.865578 19 service_latency.go:356] Created: latency-svc-8zb8t
  I1214 13:08:20.870722 19 service_latency.go:356] Created: latency-svc-fcmc8
  I1214 13:08:20.874303 19 service_latency.go:363] Got endpoints: latency-svc-8zb8t [19.952519ms]
  I1214 13:08:20.876982 19 service_latency.go:363] Got endpoints: latency-svc-fcmc8 [22.676181ms]
  I1214 13:08:20.877245 19 service_latency.go:356] Created: latency-svc-rrpj9
  I1214 13:08:20.886482 19 service_latency.go:356] Created: latency-svc-gk4gl
  I1214 13:08:20.887242 19 service_latency.go:363] Got endpoints: latency-svc-rrpj9 [32.776634ms]
  I1214 13:08:20.893375 19 service_latency.go:356] Created: latency-svc-w9r8f
  I1214 13:08:20.894261 19 service_latency.go:363] Got endpoints: latency-svc-gk4gl [39.758734ms]
  I1214 13:08:20.900322 19 service_latency.go:356] Created: latency-svc-vw2jd
  I1214 13:08:20.903517 19 service_latency.go:363] Got endpoints: latency-svc-w9r8f [48.98204ms]
  I1214 13:08:20.907440 19 service_latency.go:363] Got endpoints: latency-svc-vw2jd [52.876485ms]
  I1214 13:08:20.909627 19 service_latency.go:356] Created: latency-svc-47x5x
  I1214 13:08:20.915493 19 service_latency.go:363] Got endpoints: latency-svc-47x5x [60.896662ms]
  I1214 13:08:20.916169 19 service_latency.go:356] Created: latency-svc-bk7n6
  I1214 13:08:20.922539 19 service_latency.go:356] Created: latency-svc-t6r66
  I1214 13:08:20.925587 19 service_latency.go:363] Got endpoints: latency-svc-bk7n6 [70.957472ms]
  I1214 13:08:20.931677 19 service_latency.go:363] Got endpoints: latency-svc-t6r66 [77.018838ms]
  I1214 13:08:20.935721 19 service_latency.go:356] Created: latency-svc-ngp9d
  I1214 13:08:20.943262 19 service_latency.go:363] Got endpoints: latency-svc-ngp9d [88.573964ms]
  I1214 13:08:20.943537 19 service_latency.go:356] Created: latency-svc-m5mm7
  I1214 13:08:20.948363 19 service_latency.go:363] Got endpoints: latency-svc-m5mm7 [93.651273ms]
  I1214 13:08:20.949935 19 service_latency.go:356] Created: latency-svc-h22w5
  I1214 13:08:20.956472 19 service_latency.go:363] Got endpoints: latency-svc-h22w5 [101.73605ms]
  I1214 13:08:20.958682 19 service_latency.go:356] Created: latency-svc-b2lsz
  I1214 13:08:20.965588 19 service_latency.go:363] Got endpoints: latency-svc-b2lsz [110.815752ms]
  I1214 13:08:20.967132 19 service_latency.go:356] Created: latency-svc-6pcpn
  I1214 13:08:20.974084 19 service_latency.go:363] Got endpoints: latency-svc-6pcpn [119.27627ms]
  I1214 13:08:20.974640 19 service_latency.go:356] Created: latency-svc-x8jqh
  I1214 13:08:20.981401 19 service_latency.go:363] Got endpoints: latency-svc-x8jqh [127.067997ms]
  I1214 13:08:20.983655 19 service_latency.go:356] Created: latency-svc-8xsgp
  I1214 13:08:20.987559 19 service_latency.go:363] Got endpoints: latency-svc-8xsgp [113.222556ms]
  I1214 13:08:20.988862 19 service_latency.go:356] Created: latency-svc-dhjkw
  I1214 13:08:20.997555 19 service_latency.go:356] Created: latency-svc-hnxgt
  I1214 13:08:20.997710 19 service_latency.go:363] Got endpoints: latency-svc-dhjkw [120.520461ms]
  I1214 13:08:21.005254 19 service_latency.go:363] Got endpoints: latency-svc-hnxgt [117.988291ms]
  I1214 13:08:21.006008 19 service_latency.go:356] Created: latency-svc-cchsh
  I1214 13:08:21.011602 19 service_latency.go:363] Got endpoints: latency-svc-cchsh [117.305883ms]
  I1214 13:08:21.018303 19 service_latency.go:356] Created: latency-svc-m9mvc
  I1214 13:08:21.019147 19 service_latency.go:356] Created: latency-svc-lhjp9
  I1214 13:08:21.027626 19 service_latency.go:356] Created: latency-svc-77wns
  I1214 13:08:21.028226 19 service_latency.go:363] Got endpoints: latency-svc-lhjp9 [22.921147ms]
  I1214 13:08:21.033998 19 service_latency.go:363] Got endpoints: latency-svc-77wns [118.476332ms]
  I1214 13:08:21.035362 19 service_latency.go:356] Created: latency-svc-6q5q9
  I1214 13:08:21.035392 19 service_latency.go:363] Got endpoints: latency-svc-m9mvc [131.853222ms]
  I1214 13:08:21.044608 19 service_latency.go:363] Got endpoints: latency-svc-6q5q9 [118.994608ms]
  I1214 13:08:21.044615 19 service_latency.go:356] Created: latency-svc-cqf72
  I1214 13:08:21.051168 19 service_latency.go:363] Got endpoints: latency-svc-cqf72 [119.450675ms]
  I1214 13:08:21.055716 19 service_latency.go:356] Created: latency-svc-ksvwv
  I1214 13:08:21.059669 19 service_latency.go:363] Got endpoints: latency-svc-ksvwv [116.308026ms]
  I1214 13:08:21.063234 19 service_latency.go:356] Created: latency-svc-mdh8x
  I1214 13:08:21.070517 19 service_latency.go:363] Got endpoints: latency-svc-mdh8x [122.125889ms]
  I1214 13:08:21.070711 19 service_latency.go:356] Created: latency-svc-fjz55
  I1214 13:08:21.078649 19 service_latency.go:363] Got endpoints: latency-svc-fjz55 [122.147394ms]
  I1214 13:08:21.079656 19 service_latency.go:356] Created: latency-svc-46pqx
  I1214 13:08:21.084564 19 service_latency.go:356] Created: latency-svc-bqksq
  I1214 13:08:21.086606 19 service_latency.go:363] Got endpoints: latency-svc-46pqx [120.987196ms]
  I1214 13:08:21.090361 19 service_latency.go:363] Got endpoints: latency-svc-bqksq [116.255286ms]
  I1214 13:08:21.095417 19 service_latency.go:356] Created: latency-svc-v72sk
  I1214 13:08:21.103081 19 service_latency.go:363] Got endpoints: latency-svc-v72sk [121.650925ms]
  I1214 13:08:21.108290 19 service_latency.go:356] Created: latency-svc-qfxmf
  I1214 13:08:21.110626 19 service_latency.go:363] Got endpoints: latency-svc-qfxmf [123.034525ms]
  I1214 13:08:21.115696 19 service_latency.go:356] Created: latency-svc-85cs6
  I1214 13:08:21.120352 19 service_latency.go:363] Got endpoints: latency-svc-85cs6 [122.617059ms]
  I1214 13:08:21.121758 19 service_latency.go:356] Created: latency-svc-7gxw5
  I1214 13:08:21.131088 19 service_latency.go:363] Got endpoints: latency-svc-7gxw5 [223.61915ms]
  I1214 13:08:21.136181 19 service_latency.go:356] Created: latency-svc-r9hlq
  I1214 13:08:21.142991 19 service_latency.go:363] Got endpoints: latency-svc-r9hlq [131.357755ms]
  I1214 13:08:21.145232 19 service_latency.go:356] Created: latency-svc-h6tsp
  I1214 13:08:21.152933 19 service_latency.go:356] Created: latency-svc-kqdmb
  I1214 13:08:21.153562 19 service_latency.go:363] Got endpoints: latency-svc-h6tsp [125.281538ms]
  I1214 13:08:21.159818 19 service_latency.go:356] Created: latency-svc-2tm98
  I1214 13:08:21.163233 19 service_latency.go:356] Created: latency-svc-9lj5f
  I1214 13:08:21.167247 19 service_latency.go:356] Created: latency-svc-bpqfc
  I1214 13:08:21.177138 19 service_latency.go:356] Created: latency-svc-6b6v9
  I1214 13:08:21.179885 19 service_latency.go:356] Created: latency-svc-xdjcd
  I1214 13:08:21.184105 19 service_latency.go:356] Created: latency-svc-2hg4v
  I1214 13:08:21.193351 19 service_latency.go:356] Created: latency-svc-pn88h
  I1214 13:08:21.197560 19 service_latency.go:356] Created: latency-svc-xhgtd
  I1214 13:08:21.200587 19 service_latency.go:363] Got endpoints: latency-svc-kqdmb [166.540357ms]
  I1214 13:08:21.205231 19 service_latency.go:356] Created: latency-svc-m7kbn
  I1214 13:08:21.212741 19 service_latency.go:356] Created: latency-svc-d9jjd
  I1214 13:08:21.216780 19 service_latency.go:356] Created: latency-svc-mhpbl
  I1214 13:08:21.220339 19 service_latency.go:356] Created: latency-svc-nms2w
  I1214 13:08:21.229624 19 service_latency.go:356] Created: latency-svc-k98lm
  I1214 13:08:21.235580 19 service_latency.go:356] Created: latency-svc-tbbzv
  I1214 13:08:21.239594 19 service_latency.go:356] Created: latency-svc-9svjp
  I1214 13:08:21.252443 19 service_latency.go:363] Got endpoints: latency-svc-2tm98 [217.032472ms]
  I1214 13:08:21.265159 19 service_latency.go:356] Created: latency-svc-ll4k6
  I1214 13:08:21.303682 19 service_latency.go:363] Got endpoints: latency-svc-9lj5f [259.028512ms]
  I1214 13:08:21.316036 19 service_latency.go:356] Created: latency-svc-67x9k
  I1214 13:08:21.351889 19 service_latency.go:363] Got endpoints: latency-svc-bpqfc [300.690029ms]
  I1214 13:08:21.363279 19 service_latency.go:356] Created: latency-svc-lpp94
  I1214 13:08:21.402180 19 service_latency.go:363] Got endpoints: latency-svc-6b6v9 [342.484308ms]
  I1214 13:08:21.414891 19 service_latency.go:356] Created: latency-svc-45xhv
  I1214 13:08:21.453378 19 service_latency.go:363] Got endpoints: latency-svc-xdjcd [382.825732ms]
  I1214 13:08:21.463874 19 service_latency.go:356] Created: latency-svc-cz84n
  I1214 13:08:21.504525 19 service_latency.go:363] Got endpoints: latency-svc-2hg4v [425.706241ms]
  I1214 13:08:21.513756 19 service_latency.go:356] Created: latency-svc-gtcf9
  I1214 13:08:21.552931 19 service_latency.go:363] Got endpoints: latency-svc-pn88h [466.282766ms]
  I1214 13:08:21.568456 19 service_latency.go:356] Created: latency-svc-nvxzb
  I1214 13:08:21.601376 19 service_latency.go:363] Got endpoints: latency-svc-xhgtd [510.97645ms]
  I1214 13:08:21.613480 19 service_latency.go:356] Created: latency-svc-b6zsm
  I1214 13:08:21.653333 19 service_latency.go:363] Got endpoints: latency-svc-m7kbn [550.200273ms]
  I1214 13:08:21.663142 19 service_latency.go:356] Created: latency-svc-bj8tb
  I1214 13:08:21.706130 19 service_latency.go:363] Got endpoints: latency-svc-d9jjd [595.47817ms]
  I1214 13:08:21.718841 19 service_latency.go:356] Created: latency-svc-4bhjz
  I1214 13:08:21.753433 19 service_latency.go:363] Got endpoints: latency-svc-mhpbl [633.043439ms]
  I1214 13:08:21.764387 19 service_latency.go:356] Created: latency-svc-8crrr
  I1214 13:08:21.804479 19 service_latency.go:363] Got endpoints: latency-svc-nms2w [673.349584ms]
  I1214 13:08:21.814106 19 service_latency.go:356] Created: latency-svc-8q6rk
  I1214 13:08:21.851590 19 service_latency.go:363] Got endpoints: latency-svc-k98lm [708.546832ms]
  I1214 13:08:21.864868 19 service_latency.go:356] Created: latency-svc-4t7gn
  I1214 13:08:21.903465 19 service_latency.go:363] Got endpoints: latency-svc-tbbzv [749.85852ms]
  I1214 13:08:21.918615 19 service_latency.go:356] Created: latency-svc-mqb8k
  I1214 13:08:21.953700 19 service_latency.go:363] Got endpoints: latency-svc-9svjp [753.0229ms]
  I1214 13:08:21.962704 19 service_latency.go:356] Created: latency-svc-m4m2g
  I1214 13:08:22.003581 19 service_latency.go:363] Got endpoints: latency-svc-ll4k6 [751.098331ms]
  I1214 13:08:22.014699 19 service_latency.go:356] Created: latency-svc-jz67w
  I1214 13:08:22.051586 19 service_latency.go:363] Got endpoints: latency-svc-67x9k [747.786786ms]
  I1214 13:08:22.064365 19 service_latency.go:356] Created: latency-svc-vhmpk
  I1214 13:08:22.102485 19 service_latency.go:363] Got endpoints: latency-svc-lpp94 [750.505189ms]
  I1214 13:08:22.110672 19 service_latency.go:356] Created: latency-svc-qqlfl
  I1214 13:08:22.153528 19 service_latency.go:363] Got endpoints: latency-svc-45xhv [751.302005ms]
  I1214 13:08:22.168438 19 service_latency.go:356] Created: latency-svc-pgkld
  I1214 13:08:22.203695 19 service_latency.go:363] Got endpoints: latency-svc-cz84n [750.266562ms]
  I1214 13:08:22.217664 19 service_latency.go:356] Created: latency-svc-9tqz2
  I1214 13:08:22.253224 19 service_latency.go:363] Got endpoints: latency-svc-gtcf9 [748.648421ms]
  I1214 13:08:22.262956 19 service_latency.go:356] Created: latency-svc-qjn7f
  I1214 13:08:22.301379 19 service_latency.go:363] Got endpoints: latency-svc-nvxzb [748.377702ms]
  I1214 13:08:22.314967 19 service_latency.go:356] Created: latency-svc-7phdk
  I1214 13:08:22.351611 19 service_latency.go:363] Got endpoints: latency-svc-b6zsm [750.187575ms]
  I1214 13:08:22.364304 19 service_latency.go:356] Created: latency-svc-7fn65
  I1214 13:08:22.405369 19 service_latency.go:363] Got endpoints: latency-svc-bj8tb [751.975963ms]
  I1214 13:08:22.414611 19 service_latency.go:356] Created: latency-svc-mcf98
  I1214 13:08:22.453381 19 service_latency.go:363] Got endpoints: latency-svc-4bhjz [747.199626ms]
  I1214 13:08:22.464219 19 service_latency.go:356] Created: latency-svc-s4r4x
  I1214 13:08:22.503561 19 service_latency.go:363] Got endpoints: latency-svc-8crrr [749.568656ms]
  I1214 13:08:22.514825 19 service_latency.go:356] Created: latency-svc-rc9r5
  I1214 13:08:22.552607 19 service_latency.go:363] Got endpoints: latency-svc-8q6rk [748.075841ms]
  I1214 13:08:22.563707 19 service_latency.go:356] Created: latency-svc-zx4jw
  I1214 13:08:22.603915 19 service_latency.go:363] Got endpoints: latency-svc-4t7gn [752.276466ms]
  I1214 13:08:22.617563 19 service_latency.go:356] Created: latency-svc-2kkwr
  I1214 13:08:22.654307 19 service_latency.go:363] Got endpoints: latency-svc-mqb8k [750.790974ms]
  I1214 13:08:22.665171 19 service_latency.go:356] Created: latency-svc-dv5vm
  I1214 13:08:22.703869 19 service_latency.go:363] Got endpoints: latency-svc-m4m2g [750.121679ms]
  I1214 13:08:22.713808 19 service_latency.go:356] Created: latency-svc-2ltnt
  I1214 13:08:22.753751 19 service_latency.go:363] Got endpoints: latency-svc-jz67w [750.11994ms]
  I1214 13:08:22.765490 19 service_latency.go:356] Created: latency-svc-2vx5l
  I1214 13:08:22.802301 19 service_latency.go:363] Got endpoints: latency-svc-vhmpk [750.664703ms]
  I1214 13:08:22.814987 19 service_latency.go:356] Created: latency-svc-d66kw
  I1214 13:08:22.853650 19 service_latency.go:363] Got endpoints: latency-svc-qqlfl [751.117179ms]
  I1214 13:08:22.862709 19 service_latency.go:356] Created: latency-svc-4gvlg
  I1214 13:08:22.905599 19 service_latency.go:363] Got endpoints: latency-svc-pgkld [752.003679ms]
  I1214 13:08:22.918150 19 service_latency.go:356] Created: latency-svc-52flj
  I1214 13:08:22.953448 19 service_latency.go:363] Got endpoints: latency-svc-9tqz2 [749.399522ms]
  I1214 13:08:22.964002 19 service_latency.go:356] Created: latency-svc-n6g7l
  I1214 13:08:23.002220 19 service_latency.go:363] Got endpoints: latency-svc-qjn7f [748.948294ms]
  I1214 13:08:23.012771 19 service_latency.go:356] Created: latency-svc-9br8b
  I1214 13:08:23.051395 19 service_latency.go:363] Got endpoints: latency-svc-7phdk [749.969683ms]
  I1214 13:08:23.064953 19 service_latency.go:356] Created: latency-svc-fwxg5
  I1214 13:08:23.104271 19 service_latency.go:363] Got endpoints: latency-svc-7fn65 [752.595373ms]
  I1214 13:08:23.115280 19 service_latency.go:356] Created: latency-svc-szvff
  I1214 13:08:23.153735 19 service_latency.go:363] Got endpoints: latency-svc-mcf98 [748.288833ms]
  I1214 13:08:23.162146 19 service_latency.go:356] Created: latency-svc-429qp
  I1214 13:08:23.201749 19 service_latency.go:363] Got endpoints: latency-svc-s4r4x [748.298456ms]
  I1214 13:08:23.215459 19 service_latency.go:356] Created: latency-svc-945w2
  I1214 13:08:23.252415 19 service_latency.go:363] Got endpoints: latency-svc-rc9r5 [748.490676ms]
  I1214 13:08:23.266865 19 service_latency.go:356] Created: latency-svc-plvvm
  I1214 13:08:23.301664 19 service_latency.go:363] Got endpoints: latency-svc-zx4jw [748.916513ms]
  I1214 13:08:23.311451 19 service_latency.go:356] Created: latency-svc-cvkfg
  I1214 13:08:23.354010 19 service_latency.go:363] Got endpoints: latency-svc-2kkwr [750.05503ms]
  I1214 13:08:23.366982 19 service_latency.go:356] Created: latency-svc-rcv9x
  I1214 13:08:23.403410 19 service_latency.go:363] Got endpoints: latency-svc-dv5vm [749.055876ms]
  I1214 13:08:23.414064 19 service_latency.go:356] Created: latency-svc-mn87j
  I1214 13:08:23.450859 19 service_latency.go:363] Got endpoints: latency-svc-2ltnt [746.937533ms]
  I1214 13:08:23.460751 19 service_latency.go:356] Created: latency-svc-cqk5g
  I1214 13:08:23.502319 19 service_latency.go:363] Got endpoints: latency-svc-2vx5l [748.324619ms]
  I1214 13:08:23.516530 19 service_latency.go:356] Created: latency-svc-hc82c
  I1214 13:08:23.554081 19 service_latency.go:363] Got endpoints: latency-svc-d66kw [751.639157ms]
  I1214 13:08:23.565081 19 service_latency.go:356] Created: latency-svc-knwb9
  I1214 13:08:23.603165 19 service_latency.go:363] Got endpoints: latency-svc-4gvlg [749.463025ms]
  I1214 13:08:23.611967 19 service_latency.go:356] Created: latency-svc-nrmg2
  I1214 13:08:23.652828 19 service_latency.go:363] Got endpoints: latency-svc-52flj [747.175963ms]
  I1214 13:08:23.665772 19 service_latency.go:356] Created: latency-svc-z4bsr
  I1214 13:08:23.702859 19 service_latency.go:363] Got endpoints: latency-svc-n6g7l [749.35959ms]
  I1214 13:08:23.713358 19 service_latency.go:356] Created: latency-svc-lrm5l
  I1214 13:08:23.750533 19 service_latency.go:363] Got endpoints: latency-svc-9br8b [748.255228ms]
  I1214 13:08:23.757886 19 service_latency.go:356] Created: latency-svc-cmlcs
  I1214 13:08:23.804769 19 service_latency.go:363] Got endpoints: latency-svc-fwxg5 [753.32688ms]
  I1214 13:08:23.816930 19 service_latency.go:356] Created: latency-svc-fbpzs
  I1214 13:08:23.850130 19 service_latency.go:363] Got endpoints: latency-svc-szvff [745.788309ms]
  I1214 13:08:23.863357 19 service_latency.go:356] Created: latency-svc-4m2sn
  I1214 13:08:23.901658 19 service_latency.go:363] Got endpoints: latency-svc-429qp [747.852343ms]
  I1214 13:08:23.913007 19 service_latency.go:356] Created: latency-svc-h8mpz
  I1214 13:08:23.950920 19 service_latency.go:363] Got endpoints: latency-svc-945w2 [749.109627ms]
  I1214 13:08:23.963994 19 service_latency.go:356] Created: latency-svc-v77xd
  I1214 13:08:24.001565 19 service_latency.go:363] Got endpoints: latency-svc-plvvm [749.102117ms]
  I1214 13:08:24.012456 19 service_latency.go:356] Created: latency-svc-kwvv6
  I1214 13:08:24.051771 19 service_latency.go:363] Got endpoints: latency-svc-cvkfg [750.022955ms]
  I1214 13:08:24.061503 19 service_latency.go:356] Created: latency-svc-pl7r2
  I1214 13:08:24.103419 19 service_latency.go:363] Got endpoints: latency-svc-rcv9x [749.345731ms]
  I1214 13:08:24.116880 19 service_latency.go:356] Created: latency-svc-rcccj
  I1214 13:08:24.153788 19 service_latency.go:363] Got endpoints: latency-svc-mn87j [750.337707ms]
  I1214 13:08:24.165176 19 service_latency.go:356] Created: latency-svc-gv42n
  I1214 13:08:24.204366 19 service_latency.go:363] Got endpoints: latency-svc-cqk5g [753.469876ms]
  I1214 13:08:24.214062 19 service_latency.go:356] Created: latency-svc-g4mwq
  I1214 13:08:24.252157 19 service_latency.go:363] Got endpoints: latency-svc-hc82c [749.762079ms]
  I1214 13:08:24.265794 19 service_latency.go:356] Created: latency-svc-ctpnd
  I1214 13:08:24.303611 19 service_latency.go:363] Got endpoints: latency-svc-knwb9 [749.352882ms]
  I1214 13:08:24.317825 19 service_latency.go:356] Created: latency-svc-zdzx9
  I1214 13:08:24.354047 19 service_latency.go:363] Got endpoints: latency-svc-nrmg2 [750.835644ms]
  I1214 13:08:24.362379 19 service_latency.go:356] Created: latency-svc-fkf2s
  I1214 13:08:24.405911 19 service_latency.go:363] Got endpoints: latency-svc-z4bsr [753.031474ms]
  I1214 13:08:24.418684 19 service_latency.go:356] Created: latency-svc-lrh28
  I1214 13:08:24.454120 19 service_latency.go:363] Got endpoints: latency-svc-lrm5l [751.210669ms]
  I1214 13:08:24.464629 19 service_latency.go:356] Created: latency-svc-jd59t
  I1214 13:08:24.502954 19 service_latency.go:363] Got endpoints: latency-svc-cmlcs [752.27743ms]
  I1214 13:08:24.512577 19 service_latency.go:356] Created: latency-svc-twx6n
  I1214 13:08:24.551547 19 service_latency.go:363] Got endpoints: latency-svc-fbpzs [746.731284ms]
  I1214 13:08:24.565323 19 service_latency.go:356] Created: latency-svc-zk2vb
  I1214 13:08:24.602725 19 service_latency.go:363] Got endpoints: latency-svc-4m2sn [752.54592ms]
  I1214 13:08:24.612748 19 service_latency.go:356] Created: latency-svc-l22mg
  I1214 13:08:24.655622 19 service_latency.go:363] Got endpoints: latency-svc-h8mpz [753.916671ms]
  I1214 13:08:24.666303 19 service_latency.go:356] Created: latency-svc-vqtqc
  I1214 13:08:24.702972 19 service_latency.go:363] Got endpoints: latency-svc-v77xd [751.968776ms]
  I1214 13:08:24.718748 19 service_latency.go:356] Created: latency-svc-c7nm9
  I1214 13:08:24.751040 19 service_latency.go:363] Got endpoints: latency-svc-kwvv6 [749.395824ms]
  I1214 13:08:24.762374 19 service_latency.go:356] Created: latency-svc-z2s9p
  I1214 13:08:24.801888 19 service_latency.go:363] Got endpoints: latency-svc-pl7r2 [750.055376ms]
  I1214 13:08:24.810897 19 service_latency.go:356] Created: latency-svc-wvnl6
  I1214 13:08:24.852467 19 service_latency.go:363] Got endpoints: latency-svc-rcccj [748.996639ms]
  I1214 13:08:24.863887 19 service_latency.go:356] Created: latency-svc-jc5td
  I1214 13:08:24.903417 19 service_latency.go:363] Got endpoints: latency-svc-gv42n [749.577705ms]
  I1214 13:08:24.914402 19 service_latency.go:356] Created: latency-svc-25nlh
  I1214 13:08:24.953066 19 service_latency.go:363] Got endpoints: latency-svc-g4mwq [748.64997ms]
  I1214 13:08:24.962956 19 service_latency.go:356] Created: latency-svc-hzg84
  I1214 13:08:25.001299 19 service_latency.go:363] Got endpoints: latency-svc-ctpnd [749.0925ms]
  I1214 13:08:25.013909 19 service_latency.go:356] Created: latency-svc-tz6pt
  I1214 13:08:25.053236 19 service_latency.go:363] Got endpoints: latency-svc-zdzx9 [749.581467ms]
  I1214 13:08:25.064992 19 service_latency.go:356] Created: latency-svc-2k5jg
  I1214 13:08:25.103863 19 service_latency.go:363] Got endpoints: latency-svc-fkf2s [749.755977ms]
  I1214 13:08:25.112842 19 service_latency.go:356] Created: latency-svc-zlb6n
  I1214 13:08:25.154416 19 service_latency.go:363] Got endpoints: latency-svc-lrh28 [748.329749ms]
  I1214 13:08:25.167604 19 service_latency.go:356] Created: latency-svc-xdzp9
  I1214 13:08:25.203922 19 service_latency.go:363] Got endpoints: latency-svc-jd59t [749.749025ms]
  I1214 13:08:25.217465 19 service_latency.go:356] Created: latency-svc-gzfhs
  I1214 13:08:25.251474 19 service_latency.go:363] Got endpoints: latency-svc-twx6n [748.471606ms]
  I1214 13:08:25.261102 19 service_latency.go:356] Created: latency-svc-f4ws5
  I1214 13:08:25.303206 19 service_latency.go:363] Got endpoints: latency-svc-zk2vb [751.604337ms]
  I1214 13:08:25.317554 19 service_latency.go:356] Created: latency-svc-c7r6j
  I1214 13:08:25.358559 19 service_latency.go:363] Got endpoints: latency-svc-l22mg [755.787512ms]
  I1214 13:08:25.370864 19 service_latency.go:356] Created: latency-svc-zlrm8
  I1214 13:08:25.401730 19 service_latency.go:363] Got endpoints: latency-svc-vqtqc [746.064093ms]
  I1214 13:08:25.411561 19 service_latency.go:356] Created: latency-svc-56w9m
  I1214 13:08:25.450431 19 service_latency.go:363] Got endpoints: latency-svc-c7nm9 [747.385534ms]
  I1214 13:08:25.463873 19 service_latency.go:356] Created: latency-svc-kqckx
  I1214 13:08:25.501726 19 service_latency.go:363] Got endpoints: latency-svc-z2s9p [750.620392ms]
  I1214 13:08:25.514049 19 service_latency.go:356] Created: latency-svc-ft7nz
  I1214 13:08:25.550967 19 service_latency.go:363] Got endpoints: latency-svc-wvnl6 [749.02805ms]
  I1214 13:08:25.560105 19 service_latency.go:356] Created: latency-svc-888dw
  I1214 13:08:25.605385 19 service_latency.go:363] Got endpoints: latency-svc-jc5td [752.87597ms]
  I1214 13:08:25.617185 19 service_latency.go:356] Created: latency-svc-j8rfx
  I1214 13:08:25.653324 19 service_latency.go:363] Got endpoints: latency-svc-25nlh [749.858582ms]
  I1214 13:08:25.663679 19 service_latency.go:356] Created: latency-svc-6qnhm
  I1214 13:08:25.701213 19 service_latency.go:363] Got endpoints: latency-svc-hzg84 [748.066099ms]
  I1214 13:08:25.712084 19 service_latency.go:356] Created: latency-svc-tpj64
  I1214 13:08:25.753562 19 service_latency.go:363] Got endpoints: latency-svc-tz6pt [752.213001ms]
  I1214 13:08:25.768257 19 service_latency.go:356] Created: latency-svc-kvphb
  I1214 13:08:25.855301 19 service_latency.go:363] Got endpoints: latency-svc-zlb6n [751.38476ms]
  I1214 13:08:25.855380 19 service_latency.go:363] Got endpoints: latency-svc-2k5jg [802.101708ms]
  I1214 13:08:25.867352 19 service_latency.go:356] Created: latency-svc-wb5nb
  I1214 13:08:25.870772 19 service_latency.go:356] Created: latency-svc-mjhth
  I1214 13:08:25.904565 19 service_latency.go:363] Got endpoints: latency-svc-xdzp9 [750.081491ms]
  I1214 13:08:25.944855 19 service_latency.go:356] Created: latency-svc-zsrtn
  I1214 13:08:25.950855 19 service_latency.go:363] Got endpoints: latency-svc-gzfhs [746.657554ms]
  I1214 13:08:25.962427 19 service_latency.go:356] Created: latency-svc-kksdf
  I1214 13:08:26.002098 19 service_latency.go:363] Got endpoints: latency-svc-f4ws5 [750.574041ms]
  I1214 13:08:26.010932 19 service_latency.go:356] Created: latency-svc-v67vf
  I1214 13:08:26.053013 19 service_latency.go:363] Got endpoints: latency-svc-c7r6j [749.738546ms]
  I1214 13:08:26.063850 19 service_latency.go:356] Created: latency-svc-r59hs
  I1214 13:08:26.103237 19 service_latency.go:363] Got endpoints: latency-svc-zlrm8 [744.632803ms]
  I1214 13:08:26.113535 19 service_latency.go:356] Created: latency-svc-ck5bc
  I1214 13:08:26.151560 19 service_latency.go:363] Got endpoints: latency-svc-56w9m [749.716365ms]
  I1214 13:08:26.161714 19 service_latency.go:356] Created: latency-svc-xsnfx
  I1214 13:08:26.200336 19 service_latency.go:363] Got endpoints: latency-svc-kqckx [749.859692ms]
  I1214 13:08:26.213723 19 service_latency.go:356] Created: latency-svc-tlf4m
  I1214 13:08:26.256297 19 service_latency.go:363] Got endpoints: latency-svc-ft7nz [754.514844ms]
  I1214 13:08:26.267163 19 service_latency.go:356] Created: latency-svc-mmlnm
  I1214 13:08:26.304466 19 service_latency.go:363] Got endpoints: latency-svc-888dw [753.453266ms]
  I1214 13:08:26.315339 19 service_latency.go:356] Created: latency-svc-gjbr6
  I1214 13:08:26.353695 19 service_latency.go:363] Got endpoints: latency-svc-j8rfx [748.268605ms]
  I1214 13:08:26.370129 19 service_latency.go:356] Created: latency-svc-6r4p5
  I1214 13:08:26.401908 19 service_latency.go:363] Got endpoints: latency-svc-6qnhm [748.53182ms]
  I1214 13:08:26.415813 19 service_latency.go:356] Created: latency-svc-xq4p4
  I1214 13:08:26.451347 19 service_latency.go:363] Got endpoints: latency-svc-tpj64 [750.00487ms]
  I1214 13:08:26.461131 19 service_latency.go:356] Created: latency-svc-xltmj
  I1214 13:08:26.502196 19 service_latency.go:363] Got endpoints: latency-svc-kvphb [748.58767ms]
  I1214 13:08:26.513522 19 service_latency.go:356] Created: latency-svc-m7l8w
  I1214 13:08:26.552616 19 service_latency.go:363] Got endpoints: latency-svc-wb5nb [697.21258ms]
  I1214 13:08:26.563188 19 service_latency.go:356] Created: latency-svc-5w6r2
  I1214 13:08:26.603633 19 service_latency.go:363] Got endpoints: latency-svc-mjhth [748.282031ms]
  I1214 13:08:26.613328 19 service_latency.go:356] Created: latency-svc-qmjrq
  I1214 13:08:26.651329 19 service_latency.go:363] Got endpoints: latency-svc-zsrtn [746.668386ms]
  I1214 13:08:26.663618 19 service_latency.go:356] Created: latency-svc-gprm9
  I1214 13:08:26.702834 19 service_latency.go:363] Got endpoints: latency-svc-kksdf [751.915047ms]
  I1214 13:08:26.713335 19 service_latency.go:356] Created: latency-svc-p2s69
  I1214 13:08:26.753954 19 service_latency.go:363] Got endpoints: latency-svc-v67vf [751.806593ms]
  I1214 13:08:26.762979 19 service_latency.go:356] Created: latency-svc-dxhpj
  I1214 13:08:26.803156 19 service_latency.go:363] Got endpoints: latency-svc-r59hs [750.073607ms]
  I1214 13:08:26.815868 19 service_latency.go:356] Created: latency-svc-25qwd
  I1214 13:08:26.851054 19 service_latency.go:363] Got endpoints: latency-svc-ck5bc [747.759263ms]
  I1214 13:08:26.860686 19 service_latency.go:356] Created: latency-svc-ndxr4
  I1214 13:08:26.901361 19 service_latency.go:363] Got endpoints: latency-svc-xsnfx [749.747062ms]
  I1214 13:08:26.912559 19 service_latency.go:356] Created: latency-svc-sdl5n
  I1214 13:08:26.952305 19 service_latency.go:363] Got endpoints: latency-svc-tlf4m [751.883053ms]
  I1214 13:08:26.965852 19 service_latency.go:356] Created: latency-svc-bvcm2
  I1214 13:08:27.003505 19 service_latency.go:363] Got endpoints: latency-svc-mmlnm [747.162885ms]
  I1214 13:08:27.014189 19 service_latency.go:356] Created: latency-svc-zfhcq
  I1214 13:08:27.055171 19 service_latency.go:363] Got endpoints: latency-svc-gjbr6 [750.658813ms]
  I1214 13:08:27.063930 19 service_latency.go:356] Created: latency-svc-fqrjd
  I1214 13:08:27.101590 19 service_latency.go:363] Got endpoints: latency-svc-6r4p5 [747.849435ms]
  I1214 13:08:27.114493 19 service_latency.go:356] Created: latency-svc-8r472
  I1214 13:08:27.151223 19 service_latency.go:363] Got endpoints: latency-svc-xq4p4 [749.257982ms]
  I1214 13:08:27.162690 19 service_latency.go:356] Created: latency-svc-rjtw5
  I1214 13:08:27.202635 19 service_latency.go:363] Got endpoints: latency-svc-xltmj [750.807242ms]
  I1214 13:08:27.210553 19 service_latency.go:356] Created: latency-svc-gp2nj
  I1214 13:08:27.252807 19 service_latency.go:363] Got endpoints: latency-svc-m7l8w [750.563819ms]
  I1214 13:08:27.263561 19 service_latency.go:356] Created: latency-svc-w8xbc
  I1214 13:08:27.304681 19 service_latency.go:363] Got endpoints: latency-svc-5w6r2 [752.013325ms]
  I1214 13:08:27.316609 19 service_latency.go:356] Created: latency-svc-qzxdp
  I1214 13:08:27.353233 19 service_latency.go:363] Got endpoints: latency-svc-qmjrq [749.548578ms]
  I1214 13:08:27.362496 19 service_latency.go:356] Created: latency-svc-jnd7f
  I1214 13:08:27.402294 19 service_latency.go:363] Got endpoints: latency-svc-gprm9 [750.918765ms]
  I1214 13:08:27.416908 19 service_latency.go:356] Created: latency-svc-mwk4m
  I1214 13:08:27.451586 19 service_latency.go:363] Got endpoints: latency-svc-p2s69 [748.691466ms]
  I1214 13:08:27.461916 19 service_latency.go:356] Created: latency-svc-pqvmh
  I1214 13:08:27.506089 19 service_latency.go:363] Got endpoints: latency-svc-dxhpj [752.076384ms]
  I1214 13:08:27.515397 19 service_latency.go:356] Created: latency-svc-8fc7r
  I1214 13:08:27.554069 19 service_latency.go:363] Got endpoints: latency-svc-25qwd [750.847005ms]
  I1214 13:08:27.569012 19 service_latency.go:356] Created: latency-svc-mccf2
  I1214 13:08:27.601298 19 service_latency.go:363] Got endpoints: latency-svc-ndxr4 [750.185548ms]
  I1214 13:08:27.613692 19 service_latency.go:356] Created: latency-svc-6mglk
  I1214 13:08:27.653580 19 service_latency.go:363] Got endpoints: latency-svc-sdl5n [752.172032ms]
  I1214 13:08:27.663087 19 service_latency.go:356] Created: latency-svc-k28zw
  I1214 13:08:27.703503 19 service_latency.go:363] Got endpoints: latency-svc-bvcm2 [751.157481ms]
  I1214 13:08:27.714307 19 service_latency.go:356] Created: latency-svc-grshv
  I1214 13:08:27.752823 19 service_latency.go:363] Got endpoints: latency-svc-zfhcq [749.266751ms]
  I1214 13:08:27.762798 19 service_latency.go:356] Created: latency-svc-7qvrz
  I1214 13:08:27.803039 19 service_latency.go:363] Got endpoints: latency-svc-fqrjd [747.782779ms]
  I1214 13:08:27.813559 19 service_latency.go:356] Created: latency-svc-wnmjs
  I1214 13:08:27.851502 19 service_latency.go:363] Got endpoints: latency-svc-8r472 [749.847391ms]
  I1214 13:08:27.864929 19 service_latency.go:356] Created: latency-svc-nqhj2
  I1214 13:08:27.901337 19 service_latency.go:363] Got endpoints: latency-svc-rjtw5 [750.062482ms]
  I1214 13:08:27.913259 19 service_latency.go:356] Created: latency-svc-p77tc
  I1214 13:08:27.952833 19 service_latency.go:363] Got endpoints: latency-svc-gp2nj [750.147305ms]
  I1214 13:08:27.961662 19 service_latency.go:356] Created: latency-svc-wgpk7
  I1214 13:08:28.004335 19 service_latency.go:363] Got endpoints: latency-svc-w8xbc [751.480946ms]
  I1214 13:08:28.016009 19 service_latency.go:356] Created: latency-svc-kwfpf
  I1214 13:08:28.053064 19 service_latency.go:363] Got endpoints: latency-svc-qzxdp [748.339479ms]
  I1214 13:08:28.065460 19 service_latency.go:356] Created: latency-svc-w87hg
  I1214 13:08:28.102495 19 service_latency.go:363] Got endpoints: latency-svc-jnd7f [749.217522ms]
  I1214 13:08:28.114091 19 service_latency.go:356] Created: latency-svc-hfxjs
  I1214 13:08:28.153297 19 service_latency.go:363] Got endpoints: latency-svc-mwk4m [750.951695ms]
  I1214 13:08:28.164068 19 service_latency.go:356] Created: latency-svc-sj47c
  I1214 13:08:28.205078 19 service_latency.go:363] Got endpoints: latency-svc-pqvmh [753.445371ms]
  I1214 13:08:28.215581 19 service_latency.go:356] Created: latency-svc-l4w4n
  I1214 13:08:28.253147 19 service_latency.go:363] Got endpoints: latency-svc-8fc7r [747.010479ms]
  I1214 13:08:28.262425 19 service_latency.go:356] Created: latency-svc-5pvxq
  I1214 13:08:28.301520 19 service_latency.go:363] Got endpoints: latency-svc-mccf2 [747.321087ms]
  I1214 13:08:28.316833 19 service_latency.go:356] Created: latency-svc-n8h5w
  I1214 13:08:28.351844 19 service_latency.go:363] Got endpoints: latency-svc-6mglk [750.50328ms]
  I1214 13:08:28.367629 19 service_latency.go:356] Created: latency-svc-2w768
  I1214 13:08:28.403665 19 service_latency.go:363] Got endpoints: latency-svc-k28zw [750.041102ms]
  I1214 13:08:28.412559 19 service_latency.go:356] Created: latency-svc-q4pk5
  I1214 13:08:28.452747 19 service_latency.go:363] Got endpoints: latency-svc-grshv [749.191869ms]
  I1214 13:08:28.463752 19 service_latency.go:356] Created: latency-svc-qmh4h
  I1214 13:08:28.503161 19 service_latency.go:363] Got endpoints: latency-svc-7qvrz [750.281905ms]
  I1214 13:08:28.516201 19 service_latency.go:356] Created: latency-svc-cxwbj
  I1214 13:08:28.551485 19 service_latency.go:363] Got endpoints: latency-svc-wnmjs [748.246093ms]
  I1214 13:08:28.564343 19 service_latency.go:356] Created: latency-svc-8jm9k
  I1214 13:08:28.605566 19 service_latency.go:363] Got endpoints: latency-svc-nqhj2 [754.021039ms]
  I1214 13:08:28.618665 19 service_latency.go:356] Created: latency-svc-6wfjf
  I1214 13:08:28.655709 19 service_latency.go:363] Got endpoints: latency-svc-p77tc [754.321307ms]
  I1214 13:08:28.666286 19 service_latency.go:356] Created: latency-svc-cmphv
  I1214 13:08:28.705494 19 service_latency.go:363] Got endpoints: latency-svc-wgpk7 [752.610562ms]
  I1214 13:08:28.751651 19 service_latency.go:363] Got endpoints: latency-svc-kwfpf [747.273733ms]
  I1214 13:08:28.802936 19 service_latency.go:363] Got endpoints: latency-svc-w87hg [749.819945ms]
  I1214 13:08:28.853745 19 service_latency.go:363] Got endpoints: latency-svc-hfxjs [750.939514ms]
  I1214 13:08:28.903436 19 service_latency.go:363] Got endpoints: latency-svc-sj47c [750.091986ms]
  I1214 13:08:28.953928 19 service_latency.go:363] Got endpoints: latency-svc-l4w4n [748.80489ms]
  I1214 13:08:29.002817 19 service_latency.go:363] Got endpoints: latency-svc-5pvxq [749.157856ms]
  I1214 13:08:29.053733 19 service_latency.go:363] Got endpoints: latency-svc-n8h5w [752.169007ms]
  I1214 13:08:29.102781 19 service_latency.go:363] Got endpoints: latency-svc-2w768 [750.877074ms]
  I1214 13:08:29.151622 19 service_latency.go:363] Got endpoints: latency-svc-q4pk5 [747.907607ms]
  I1214 13:08:29.203936 19 service_latency.go:363] Got endpoints: latency-svc-qmh4h [751.138458ms]
  I1214 13:08:29.253034 19 service_latency.go:363] Got endpoints: latency-svc-cxwbj [749.747506ms]
  I1214 13:08:29.302853 19 service_latency.go:363] Got endpoints: latency-svc-8jm9k [751.31384ms]
  I1214 13:08:29.353874 19 service_latency.go:363] Got endpoints: latency-svc-6wfjf [748.268989ms]
  I1214 13:08:29.401906 19 service_latency.go:363] Got endpoints: latency-svc-cmphv [746.144316ms]
  I1214 13:08:29.402113 19 service_latency.go:114] Latencies: [19.952519ms 22.676181ms 22.921147ms 32.776634ms 39.758734ms 48.98204ms 52.876485ms 60.896662ms 70.957472ms 77.018838ms 88.573964ms 93.651273ms 101.73605ms 110.815752ms 113.222556ms 116.255286ms 116.308026ms 117.305883ms 117.988291ms 118.476332ms 118.994608ms 119.27627ms 119.450675ms 120.520461ms 120.987196ms 121.650925ms 122.125889ms 122.147394ms 122.617059ms 123.034525ms 125.281538ms 127.067997ms 131.357755ms 131.853222ms 166.540357ms 217.032472ms 223.61915ms 259.028512ms 300.690029ms 342.484308ms 382.825732ms 425.706241ms 466.282766ms 510.97645ms 550.200273ms 595.47817ms 633.043439ms 673.349584ms 697.21258ms 708.546832ms 744.632803ms 745.788309ms 746.064093ms 746.144316ms 746.657554ms 746.668386ms 746.731284ms 746.937533ms 747.010479ms 747.162885ms 747.175963ms 747.199626ms 747.273733ms 747.321087ms 747.385534ms 747.759263ms 747.782779ms 747.786786ms 747.849435ms 747.852343ms 747.907607ms 748.066099ms 748.075841ms 748.246093ms 748.255228ms 748.268605ms 748.268989ms 748.282031ms 748.288833ms 748.298456ms 748.324619ms 748.329749ms 748.339479ms 748.377702ms 748.471606ms 748.490676ms 748.53182ms 748.58767ms 748.648421ms 748.64997ms 748.691466ms 748.80489ms 748.916513ms 748.948294ms 748.996639ms 749.02805ms 749.055876ms 749.0925ms 749.102117ms 749.109627ms 749.157856ms 749.191869ms 749.217522ms 749.257982ms 749.266751ms 749.345731ms 749.352882ms 749.35959ms 749.395824ms 749.399522ms 749.463025ms 749.548578ms 749.568656ms 749.577705ms 749.581467ms 749.716365ms 749.738546ms 749.747062ms 749.747506ms 749.749025ms 749.755977ms 749.762079ms 749.819945ms 749.847391ms 749.85852ms 749.858582ms 749.859692ms 749.969683ms 750.00487ms 750.022955ms 750.041102ms 750.05503ms 750.055376ms 750.062482ms 750.073607ms 750.081491ms 750.091986ms 750.11994ms 750.121679ms 750.147305ms 750.185548ms 750.187575ms 750.266562ms 750.281905ms 750.337707ms 750.50328ms 750.505189ms 750.563819ms 750.574041ms 750.620392ms 750.658813ms 750.664703ms 750.790974ms 750.807242ms 750.835644ms 750.847005ms 750.877074ms 750.918765ms 750.939514ms 750.951695ms 751.098331ms 751.117179ms 751.138458ms 751.157481ms 751.210669ms 751.302005ms 751.31384ms 751.38476ms 751.480946ms 751.604337ms 751.639157ms 751.806593ms 751.883053ms 751.915047ms 751.968776ms 751.975963ms 752.003679ms 752.013325ms 752.076384ms 752.169007ms 752.172032ms 752.213001ms 752.276466ms 752.27743ms 752.54592ms 752.595373ms 752.610562ms 752.87597ms 753.0229ms 753.031474ms 753.32688ms 753.445371ms 753.453266ms 753.469876ms 753.916671ms 754.021039ms 754.321307ms 754.514844ms 755.787512ms 802.101708ms]
  I1214 13:08:29.402152 19 service_latency.go:118] 50 %ile: 749.157856ms
  I1214 13:08:29.402159 19 service_latency.go:119] 90 %ile: 752.172032ms
  I1214 13:08:29.402221 19 service_latency.go:120] 99 %ile: 755.787512ms
  I1214 13:08:29.402227 19 service_latency.go:121] Total sample count: 200
  I1214 13:08:29.402404 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9712" for this suite. @ 12/14/24 13:08:29.408
• [10.767 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/14/24 13:08:29.416
  I1214 13:08:29.416272 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 13:08:29.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:29.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:29.434
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/14/24 13:08:29.456
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/14/24 13:08:29.462
  I1214 13:08:29.465279 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:29.465307 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:29.470638 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:08:29.470664 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:08:30.468549 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:30.468590 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:30.472921 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:08:30.472942 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:08:31.467191 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:31.467225 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:31.470831 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 13:08:31.470848 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/14/24 13:08:31.473
  I1214 13:08:31.489536 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:31.489592 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:08:31.492099 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 13:08:31.492114 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/14/24 13:08:31.492
  STEP: Deleting DaemonSet "daemon-set" @ 12/14/24 13:08:32.5
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-791, will wait for the garbage collector to delete the pods @ 12/14/24 13:08:32.5
  I1214 13:08:32.562972 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.677198ms
  I1214 13:08:32.664152 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.151663ms
  I1214 13:08:33.868715 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:08:33.868743 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1214 13:08:33.872509 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24817"},"items":null}

  I1214 13:08:33.875838 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24817"},"items":null}

  I1214 13:08:33.889733 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-791" for this suite. @ 12/14/24 13:08:33.893
• [4.482 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/14/24 13:08:33.898
  I1214 13:08:33.898143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename cronjob @ 12/14/24 13:08:33.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:33.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:33.917
  STEP: Creating a cronjob @ 12/14/24 13:08:33.919
  STEP: creating @ 12/14/24 13:08:33.919
  STEP: getting @ 12/14/24 13:08:33.925
  STEP: listing @ 12/14/24 13:08:33.927
  STEP: watching @ 12/14/24 13:08:33.93
  I1214 13:08:33.930890 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/14/24 13:08:33.931
  STEP: cluster-wide watching @ 12/14/24 13:08:33.934
  I1214 13:08:33.934391 19 cronjob.go:382] starting watch
  STEP: patching @ 12/14/24 13:08:33.935
  STEP: updating @ 12/14/24 13:08:33.939
  I1214 13:08:33.949787 19 cronjob.go:406] waiting for watch events with expected annotations
  I1214 13:08:33.949820 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/14/24 13:08:33.949
  STEP: updating /status @ 12/14/24 13:08:33.955
  STEP: get /status @ 12/14/24 13:08:33.961
  STEP: deleting @ 12/14/24 13:08:33.964
  STEP: deleting a collection @ 12/14/24 13:08:33.98
  I1214 13:08:33.990814 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4858" for this suite. @ 12/14/24 13:08:33.993
• [0.101 seconds]
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/14/24 13:08:33.999
  I1214 13:08:33.999443 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename limitrange @ 12/14/24 13:08:33.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:34.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:34.018
  STEP: Creating LimitRange "e2e-limitrange-t8dfj" in namespace "limitrange-8099" @ 12/14/24 13:08:34.02
  STEP: Creating another limitRange in another namespace @ 12/14/24 13:08:34.024
  I1214 13:08:34.041305 19 limit_range.go:299] Namespace "e2e-limitrange-t8dfj-7076" created
  I1214 13:08:34.041330 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-t8dfj" in namespace "e2e-limitrange-t8dfj-7076"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-t8dfj" @ 12/14/24 13:08:34.047
  I1214 13:08:34.050291 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-t8dfj" in "limitrange-8099" namespace @ 12/14/24 13:08:34.05
  I1214 13:08:34.057663 19 limit_range.go:335] LimitRange "e2e-limitrange-t8dfj" has been patched
  STEP: Delete LimitRange "e2e-limitrange-t8dfj" by Collection with labelSelector: "e2e-limitrange-t8dfj=patched" @ 12/14/24 13:08:34.057
  STEP: Confirm that the limitRange "e2e-limitrange-t8dfj" has been deleted @ 12/14/24 13:08:34.065
  I1214 13:08:34.066042 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1214 13:08:34.069507 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-t8dfj=patched"
  I1214 13:08:34.069529 19 limit_range.go:344] LimitRange "e2e-limitrange-t8dfj" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-t8dfj" @ 12/14/24 13:08:34.069
  I1214 13:08:34.072051 19 limit_range.go:350] Found 1 limitRange
  I1214 13:08:34.072181 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8099" for this suite. @ 12/14/24 13:08:34.076
  STEP: Destroying namespace "e2e-limitrange-t8dfj-7076" for this suite. @ 12/14/24 13:08:34.082
• [0.091 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/14/24 13:08:34.09
  I1214 13:08:34.090637 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 13:08:34.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:34.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:34.107
  I1214 13:08:36.123465 19 delete.go:62] Deleting pod "var-expansion-0d212c97-f2bf-46d4-ac7b-e1290fc2a070" in namespace "var-expansion-5143"
  I1214 13:08:36.133366 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-0d212c97-f2bf-46d4-ac7b-e1290fc2a070" to be fully deleted
  I1214 13:08:38.139377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5143" for this suite. @ 12/14/24 13:08:38.143
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/14/24 13:08:38.151
  I1214 13:08:38.151666 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename watch @ 12/14/24 13:08:38.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:38.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:38.171
  STEP: getting a starting resourceVersion @ 12/14/24 13:08:38.173
  STEP: starting a background goroutine to produce watch events @ 12/14/24 13:08:38.178
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/14/24 13:08:38.178
  I1214 13:08:40.912091 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3633" for this suite. @ 12/14/24 13:08:40.956
• [2.860 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/14/24 13:08:41.011
  I1214 13:08:41.011858 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pod-network-test @ 12/14/24 13:08:41.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:41.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:41.029
  STEP: Performing setup for networking test in namespace pod-network-test-8651 @ 12/14/24 13:08:41.03
  STEP: creating a selector @ 12/14/24 13:08:41.03
  STEP: Creating the service pods in kubernetes @ 12/14/24 13:08:41.03
  I1214 13:08:41.030882 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/14/24 13:08:53.112
  I1214 13:08:55.146275 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1214 13:08:55.146308 19 utils.go:496] Going to poll 192.168.249.179 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1214 13:08:55.149092 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.249.179 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8651 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:08:55.149115 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:08:55.149536 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:08:55.149572 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8651/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.249.179+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1214 13:08:56.192892 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1214 13:08:56.192930 19 utils.go:496] Going to poll 192.168.127.92 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1214 13:08:56.197003 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.127.92 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8651 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:08:56.197045 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:08:56.197445 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:08:56.197511 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8651/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.127.92+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1214 13:08:57.233737 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1214 13:08:57.233812 19 utils.go:496] Going to poll 192.168.197.220 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1214 13:08:57.237247 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.197.220 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8651 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:08:57.237265 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:08:57.237660 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:08:57.237702 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8651/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.197.220+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1214 13:08:58.279971 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1214 13:08:58.280122 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8651" for this suite. @ 12/14/24 13:08:58.284
• [17.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/14/24 13:08:58.29
  I1214 13:08:58.290562 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 13:08:58.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:08:58.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:08:58.31
  STEP: reading a file in the container @ 12/14/24 13:09:00.33
  I1214 13:09:00.330957 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7931 pod-service-account-db8b1669-edf0-4b7f-a1de-1688ad41747b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/14/24 13:09:00.406
  I1214 13:09:00.407088 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7931 pod-service-account-db8b1669-edf0-4b7f-a1de-1688ad41747b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/14/24 13:09:00.49
  I1214 13:09:00.490553 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7931 pod-service-account-db8b1669-edf0-4b7f-a1de-1688ad41747b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1214 13:09:00.564758 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-7931"
  I1214 13:09:00.566205 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7931" for this suite. @ 12/14/24 13:09:00.57
• [2.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 12/14/24 13:09:00.578
  I1214 13:09:00.578600 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:09:00.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:00.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:00.6
  I1214 13:09:00.602558 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 create -f -'
  I1214 13:09:00.686491 19 builder.go:146] stderr: ""
  I1214 13:09:00.686527 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1214 13:09:00.686573 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 create -f -'
  I1214 13:09:00.774331 19 builder.go:146] stderr: ""
  I1214 13:09:00.774378 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/14/24 13:09:00.774
  I1214 13:09:01.778656 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 13:09:01.778687 19 framework.go:733] Found 0 / 1
  I1214 13:09:02.779906 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 13:09:02.779938 19 framework.go:733] Found 1 / 1
  I1214 13:09:02.779951 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1214 13:09:02.782660 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 13:09:02.782682 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1214 13:09:02.782730 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 describe pod agnhost-primary-rt5j8'
  I1214 13:09:02.833682 19 builder.go:146] stderr: ""
  I1214 13:09:02.833737 19 builder.go:147] stdout: "Name:             agnhost-primary-rt5j8\nNamespace:        kubectl-7753\nPriority:         0\nService Account:  default\nNode:             ip-172-31-20-132/172.31.20.132\nStart Time:       Sat, 14 Dec 2024 13:09:00 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.249.178\nIPs:\n  IP:           192.168.249.178\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://8e84c9a844a353c2e392e66fe77cbced2223f31409a34b44e3af06a87b5c1b76\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 14 Dec 2024 13:09:01 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-tgxmf (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-tgxmf:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7753/agnhost-primary-rt5j8 to ip-172-31-20-132\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1214 13:09:02.833790 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 describe rc agnhost-primary'
  I1214 13:09:02.888418 19 builder.go:146] stderr: ""
  I1214 13:09:02.888466 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7753\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-rt5j8\n"
  I1214 13:09:02.888524 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 describe service agnhost-primary'
  I1214 13:09:02.954805 19 builder.go:146] stderr: ""
  I1214 13:09:02.954847 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7753\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.219\nIPs:                      10.152.183.219\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.249.178:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1214 13:09:02.959274 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 describe node ip-172-31-20-132'
  I1214 13:09:03.049105 19 builder.go:146] stderr: ""
  I1214 13:09:03.049199 19 builder.go:147] stdout: "Name:               ip-172-31-20-132\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-20-132\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 14 Dec 2024 11:58:39 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-20-132\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 14 Dec 2024 13:09:02 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 14 Dec 2024 12:16:47 +0000   Sat, 14 Dec 2024 12:16:47 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 14 Dec 2024 13:06:25 +0000   Sat, 14 Dec 2024 11:58:39 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 14 Dec 2024 13:06:25 +0000   Sat, 14 Dec 2024 11:58:39 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 14 Dec 2024 13:06:25 +0000   Sat, 14 Dec 2024 11:58:39 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 14 Dec 2024 13:06:25 +0000   Sat, 14 Dec 2024 12:09:43 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.20.132\n  Hostname:    ip-172-31-20-132\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967652Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865252Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec24a5d8c41175ae9a20c036ed996daf\n  System UUID:                     ec24a5d8-c411-75ae-9a20-c036ed996daf\n  Boot ID:                         c8b5b4b0-b550-44a3-a0de-051b812f593f\n  Kernel Version:                  6.8.0-1019-aws\n  OS Image:                        Ubuntu 22.04.5 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.31.4\n  Kube-Proxy Version:              v1.31.4\nNon-terminated Pods:               (8 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-94l4m           0 (0%)        0 (0%)      0 (0%)           0 (0%)         59m\n  kube-system                      calico-node-bblb4                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         52m\n  kube-system                      coredns-5b4857d7c8-dcvw5                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     73m\n  kubectl-7753                     agnhost-primary-rt5j8                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         3s\n  kubernetes-dashboard             dashboard-metrics-scraper-64757cf48d-rlqv5                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         73m\n  pod-network-test-8651            netserver-0                                                0 (0%)        0 (0%)      0 (0%)           0 (0%)         22s\n  pod-network-test-8651            test-container-pod                                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-jq925    0 (0%)        0 (0%)      0 (0%)           0 (0%)         48m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                350m (17%)  0 (0%)\n  memory             70Mi (0%)   170Mi (2%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 59m   kube-proxy       \n  Normal   Starting                 59m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      59m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  59m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  59m   kubelet          Node ip-172-31-20-132 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    59m   kubelet          Node ip-172-31-20-132 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     59m   kubelet          Node ip-172-31-20-132 status is now: NodeHasSufficientPID\n  Normal   NodeReady                59m   kubelet          Node ip-172-31-20-132 status is now: NodeReady\n  Normal   RegisteredNode           59m   node-controller  Node ip-172-31-20-132 event: Registered Node ip-172-31-20-132 in Controller\n  Normal   RegisteredNode           57m   node-controller  Node ip-172-31-20-132 event: Registered Node ip-172-31-20-132 in Controller\n"
  I1214 13:09:03.049263 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-7753 describe namespace kubectl-7753'
  I1214 13:09:03.102663 19 builder.go:146] stderr: ""
  I1214 13:09:03.102851 19 builder.go:147] stdout: "Name:         kubectl-7753\nLabels:       e2e-framework=kubectl\n              e2e-run=8420a829-76bd-4c29-9657-9f38c00725dc\n              kubernetes.io/metadata.name=kubectl-7753\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1214 13:09:03.103330 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7753" for this suite. @ 12/14/24 13:09:03.107
• [2.536 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/14/24 13:09:03.114
  I1214 13:09:03.114487 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename watch @ 12/14/24 13:09:03.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:03.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:03.133
  STEP: creating a watch on configmaps with label A @ 12/14/24 13:09:03.134
  STEP: creating a watch on configmaps with label B @ 12/14/24 13:09:03.135
  STEP: creating a watch on configmaps with label A or B @ 12/14/24 13:09:03.136
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/14/24 13:09:03.136
  I1214 13:09:03.140282 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26164 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:03.140441 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26164 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/14/24 13:09:03.14
  I1214 13:09:03.149641 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26165 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:03.149784 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26165 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/14/24 13:09:03.149
  I1214 13:09:03.156778 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26166 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:03.156848 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26166 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/14/24 13:09:03.156
  I1214 13:09:03.161571 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26167 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:03.161598 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2364  38861291-a8ad-4f31-b940-5ca831026b23 26167 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/14/24 13:09:03.161
  I1214 13:09:03.166995 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2364  c68feedb-b4b0-475b-8416-1c228b4a4f09 26168 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:03.167097 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2364  c68feedb-b4b0-475b-8416-1c228b4a4f09 26168 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/14/24 13:09:13.168
  I1214 13:09:13.176079 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2364  c68feedb-b4b0-475b-8416-1c228b4a4f09 26283 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:13.176134 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2364  c68feedb-b4b0-475b-8416-1c228b4a4f09 26283 0 2024-12-14 13:09:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-14 13:09:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:09:23.177263 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2364" for this suite. @ 12/14/24 13:09:23.182
• [20.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/14/24 13:09:23.191
  I1214 13:09:23.191709 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/14/24 13:09:23.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:23.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:23.214
  I1214 13:09:23.215846 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:09:23.751641 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7807" for this suite. @ 12/14/24 13:09:23.757
• [0.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/14/24 13:09:23.765
  I1214 13:09:23.765080 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename discovery @ 12/14/24 13:09:23.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:23.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:23.783
  STEP: Setting up server cert @ 12/14/24 13:09:23.786
  STEP: Requesting APIResourceList from "/api/v1" @ 12/14/24 13:09:24.007
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/14/24 13:09:24.008
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/14/24 13:09:24.009
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/14/24 13:09:24.01
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/14/24 13:09:24.01
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/14/24 13:09:24.011
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/14/24 13:09:24.012
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/14/24 13:09:24.012
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/14/24 13:09:24.013
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/14/24 13:09:24.014
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/14/24 13:09:24.014
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/14/24 13:09:24.015
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/14/24 13:09:24.015
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/14/24 13:09:24.016
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/14/24 13:09:24.016
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/14/24 13:09:24.017
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/14/24 13:09:24.018
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/14/24 13:09:24.018
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/14/24 13:09:24.019
  I1214 13:09:24.019984 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-45" for this suite. @ 12/14/24 13:09:24.023
• [0.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/14/24 13:09:24.031
  I1214 13:09:24.031351 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:09:24.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:24.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:24.05
  I1214 13:09:24.090694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5429" for this suite. @ 12/14/24 13:09:24.094
• [0.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/14/24 13:09:24.102
  I1214 13:09:24.102078 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename namespaces @ 12/14/24 13:09:24.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:24.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:24.125
  STEP: Creating namespace "e2e-ns-sjwkf" @ 12/14/24 13:09:24.127
  I1214 13:09:24.144644 19 namespace.go:411] Namespace "e2e-ns-sjwkf-5941" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-sjwkf-5941" @ 12/14/24 13:09:24.144
  I1214 13:09:24.151670 19 namespace.go:434] Namespace "e2e-ns-sjwkf-5941" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-sjwkf-5941" @ 12/14/24 13:09:24.151
  I1214 13:09:24.158090 19 namespace.go:463] Namespace "e2e-ns-sjwkf-5941" has []v1.FinalizerName{"kubernetes"}
  I1214 13:09:24.158220 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1760" for this suite. @ 12/14/24 13:09:24.161
  STEP: Destroying namespace "e2e-ns-sjwkf-5941" for this suite. @ 12/14/24 13:09:24.17
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/14/24 13:09:24.177
  I1214 13:09:24.177066 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 13:09:24.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:24.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:24.198
  I1214 13:09:24.219459 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/14/24 13:09:24.225
  I1214 13:09:24.228951 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:24.228975 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/14/24 13:09:24.228
  I1214 13:09:24.247487 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:24.247522 19 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I1214 13:09:25.249950 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:25.249998 19 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I1214 13:09:26.251103 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1214 13:09:26.251141 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/14/24 13:09:26.254
  I1214 13:09:26.270234 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1214 13:09:26.270270 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1214 13:09:27.271502 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:27.271535 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/14/24 13:09:27.271
  I1214 13:09:27.280995 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:27.281038 19 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I1214 13:09:28.280918 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:28.280948 19 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I1214 13:09:29.280252 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1214 13:09:29.280286 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/14/24 13:09:29.285
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4806, will wait for the garbage collector to delete the pods @ 12/14/24 13:09:29.285
  I1214 13:09:29.345653 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.653757ms
  I1214 13:09:29.446226 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.569528ms
  I1214 13:09:30.850845 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:09:30.850879 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1214 13:09:30.853819 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26471"},"items":null}

  I1214 13:09:30.856578 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26471"},"items":null}

  I1214 13:09:30.878331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4806" for this suite. @ 12/14/24 13:09:30.882
• [6.712 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/14/24 13:09:30.889
  I1214 13:09:30.889474 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:09:30.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:30.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:30.913
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:09:30.915
  STEP: Saw pod success @ 12/14/24 13:09:34.937
  I1214 13:09:34.940644 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-c930ca01-c078-4172-a4d2-eb08aef0a367 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:09:34.956
  I1214 13:09:34.976263 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2550" for this suite. @ 12/14/24 13:09:34.98
• [4.096 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/14/24 13:09:34.985
  I1214 13:09:34.985963 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 13:09:34.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:35.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:35.006
  STEP: Creating secret with name secret-test-map-05e53258-1f8e-46a5-a701-d54e3f065dec @ 12/14/24 13:09:35.007
  STEP: Creating a pod to test consume secrets @ 12/14/24 13:09:35.013
  STEP: Saw pod success @ 12/14/24 13:09:39.035
  I1214 13:09:39.040250 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-5508bc42-e934-40e2-af3e-725fe7ff2647 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:09:39.046
  I1214 13:09:39.061127 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4666" for this suite. @ 12/14/24 13:09:39.064
• [4.084 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/14/24 13:09:39.07
  I1214 13:09:39.070268 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:09:39.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:39.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:39.089
  STEP: Create set of pods @ 12/14/24 13:09:39.091
  I1214 13:09:39.100087 19 pods.go:871] created test-pod-1
  I1214 13:09:39.108860 19 pods.go:871] created test-pod-2
  I1214 13:09:39.114907 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/14/24 13:09:39.114
  STEP: waiting for all pods to be deleted @ 12/14/24 13:09:41.147
  I1214 13:09:41.153416 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1214 13:09:42.152415 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9818" for this suite. @ 12/14/24 13:09:42.157
• [3.094 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 12/14/24 13:09:42.164
  I1214 13:09:42.164585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 13:09:42.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:42.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:42.183
  STEP: apply creating a deployment @ 12/14/24 13:09:42.185
  I1214 13:09:42.196710 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6980" for this suite. @ 12/14/24 13:09:42.199
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/14/24 13:09:42.205
  I1214 13:09:42.205449 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 13:09:42.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:42.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:42.226
  STEP: Creating a pod to test service account token:  @ 12/14/24 13:09:42.227
  STEP: Saw pod success @ 12/14/24 13:09:44.244
  I1214 13:09:44.246818 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod test-pod-2f5e190c-f408-4f6c-95f9-2d858946c524 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:09:44.252
  I1214 13:09:44.269539 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7454" for this suite. @ 12/14/24 13:09:44.275
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 12/14/24 13:09:44.286
  I1214 13:09:44.286177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename disruption @ 12/14/24 13:09:44.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:44.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:44.308
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:09:44.314
  STEP: Updating PodDisruptionBudget status @ 12/14/24 13:09:46.318
  STEP: Waiting for all pods to be running @ 12/14/24 13:09:46.325
  I1214 13:09:46.329682 19 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 12/14/24 13:09:48.331
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:09:48.345
  STEP: Patching PodDisruptionBudget status @ 12/14/24 13:09:48.353
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:09:48.363
  I1214 13:09:48.366460 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8452" for this suite. @ 12/14/24 13:09:48.369
• [4.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/14/24 13:09:48.376
  I1214 13:09:48.376100 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:09:48.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:09:48.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:09:48.393
  STEP: Creating service test in namespace statefulset-4732 @ 12/14/24 13:09:48.395
  STEP: Creating stateful set ss in namespace statefulset-4732 @ 12/14/24 13:09:48.399
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4732 @ 12/14/24 13:09:48.405
  I1214 13:09:48.410388 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1214 13:09:58.410409 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/14/24 13:09:58.41
  I1214 13:09:58.413459 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:09:58.497490 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:09:58.497528 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:09:58.497537 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:09:58.501198 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1214 13:10:08.505251 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:10:08.505292 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1214 13:10:08.523090 19 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I1214 13:10:08.523149 19 resource.go:175] ss-0  ip-172-31-5-183  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:58 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:58 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:48 +0000 UTC  }]
  I1214 13:10:08.523155 19 resource.go:178] 
  I1214 13:10:08.523162 19 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1214 13:10:09.527937 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996043248s
  I1214 13:10:10.532637 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.992177466s
  I1214 13:10:11.537976 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.986651057s
  I1214 13:10:12.543157 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.981706021s
  I1214 13:10:13.549085 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.976098977s
  I1214 13:10:14.554156 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.97094333s
  I1214 13:10:15.558379 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.965973345s
  I1214 13:10:16.565576 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.960779406s
  I1214 13:10:17.570311 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 954.365569ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4732 @ 12/14/24 13:10:18.57
  I1214 13:10:18.574715 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:10:18.656564 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:10:18.656611 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:10:18.656629 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:10:18.656927 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:10:18.737568 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1214 13:10:18.737612 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:10:18.737622 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:10:18.737670 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:10:18.825677 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1214 13:10:18.825724 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:10:18.825735 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:10:18.829326 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:10:18.829353 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:10:18.829359 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/14/24 13:10:18.829
  I1214 13:10:18.834068 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:10:18.923577 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:10:18.923617 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:10:18.923626 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:10:18.923773 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:10:19.004596 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:10:19.004635 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:10:19.004644 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:10:19.004695 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-4732 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:10:19.085960 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:10:19.086004 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:10:19.086014 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:10:19.086039 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1214 13:10:19.089265 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1214 13:10:29.093780 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:10:29.093806 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:10:29.093813 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:10:29.104623 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1214 13:10:29.104674 19 resource.go:175] ss-0  ip-172-31-5-183   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:09:48 +0000 UTC  }]
  I1214 13:10:29.104690 19 resource.go:175] ss-1  ip-172-31-20-132  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:08 +0000 UTC  }]
  I1214 13:10:29.104706 19 resource.go:175] ss-2  ip-172-31-38-181  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-14 13:10:08 +0000 UTC  }]
  I1214 13:10:29.104713 19 resource.go:178] 
  I1214 13:10:29.104718 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1214 13:10:30.108514 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.996382135s
  I1214 13:10:31.115225 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.99259978s
  I1214 13:10:32.119583 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.98583339s
  I1214 13:10:33.123500 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.981632274s
  I1214 13:10:34.128897 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.977671863s
  I1214 13:10:35.133375 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.972180345s
  I1214 13:10:36.137229 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.967822975s
  I1214 13:10:37.140828 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.963866198s
  I1214 13:10:38.146927 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 959.628375ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4732 @ 12/14/24 13:10:39.147
  I1214 13:10:39.152006 19 rest.go:150] Scaling statefulset ss to 0
  I1214 13:10:39.159210 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:10:39.162064 19 statefulset.go:138] Deleting all statefulset in ns statefulset-4732
  I1214 13:10:39.165012 19 rest.go:150] Scaling statefulset ss to 0
  I1214 13:10:39.172902 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:10:39.175805 19 rest.go:88] Deleting statefulset ss
  I1214 13:10:39.188221 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4732" for this suite. @ 12/14/24 13:10:39.192
• [50.823 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/14/24 13:10:39.198
  I1214 13:10:39.198686 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 13:10:39.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:10:39.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:10:39.218
  I1214 13:11:01.296135 19 container_probe.go:92] Container started at 2024-12-14 13:10:39 +0000 UTC, pod became ready at 2024-12-14 13:10:59 +0000 UTC
  I1214 13:11:01.296256 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1711" for this suite. @ 12/14/24 13:11:01.299
• [22.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/14/24 13:11:01.307
  I1214 13:11:01.307330 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:11:01.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:01.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:01.332
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:11:01.334
  STEP: Saw pod success @ 12/14/24 13:11:03.35
  I1214 13:11:03.353220 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-2183f8aa-6b99-4b8d-988c-7041ca773ae9 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:11:03.368
  I1214 13:11:03.386796 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1917" for this suite. @ 12/14/24 13:11:03.389
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/14/24 13:11:03.398
  I1214 13:11:03.398282 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename events @ 12/14/24 13:11:03.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:03.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:03.418
  STEP: Create set of events @ 12/14/24 13:11:03.419
  I1214 13:11:03.424462 19 core_events.go:198] created test-event-1
  I1214 13:11:03.429844 19 core_events.go:198] created test-event-2
  I1214 13:11:03.433370 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/14/24 13:11:03.433
  STEP: delete collection of events @ 12/14/24 13:11:03.437
  I1214 13:11:03.437148 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/14/24 13:11:03.458
  I1214 13:11:03.458575 19 core_events.go:230] requesting list of events to confirm quantity
  I1214 13:11:03.461411 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2849" for this suite. @ 12/14/24 13:11:03.464
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/14/24 13:11:03.472
  I1214 13:11:03.472077 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename init-container @ 12/14/24 13:11:03.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:03.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:03.487
  STEP: creating the pod @ 12/14/24 13:11:03.49
  I1214 13:11:03.490664 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1214 13:11:08.204941 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9445" for this suite. @ 12/14/24 13:11:08.209
• [4.745 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/14/24 13:11:08.217
  I1214 13:11:08.217053 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 13:11:08.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:08.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:08.232
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/14/24 13:11:08.235
  STEP: Saw pod success @ 12/14/24 13:11:10.252
  I1214 13:11:10.255579 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-1bf5cb04-31cc-41b4-af3d-d3acda46b53f container test-container: <nil>
  STEP: delete the pod @ 12/14/24 13:11:10.261
  I1214 13:11:10.280581 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6239" for this suite. @ 12/14/24 13:11:10.283
• [2.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 12/14/24 13:11:10.291
  I1214 13:11:10.291677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:11:10.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:10.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:10.31
  STEP: create deployment with httpd image @ 12/14/24 13:11:10.311
  I1214 13:11:10.311985 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-652 create -f -'
  I1214 13:11:10.374376 19 builder.go:146] stderr: ""
  I1214 13:11:10.374411 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/14/24 13:11:10.374
  I1214 13:11:10.374495 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-652 diff -f -'
  I1214 13:11:14.667836 19 builder.go:135] rc: 1
  I1214 13:11:14.668128 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-652 delete -f -'
  I1214 13:11:14.717421 19 builder.go:146] stderr: ""
  I1214 13:11:14.717465 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1214 13:11:14.717610 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-652" for this suite. @ 12/14/24 13:11:14.722
• [4.438 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 12/14/24 13:11:14.729
  I1214 13:11:14.729777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 13:11:14.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:14.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:14.758
  I1214 13:11:14.760199 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:11:17.838219 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9271" for this suite. @ 12/14/24 13:11:17.841
• [3.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 12/14/24 13:11:17.851
  I1214 13:11:17.851013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:11:17.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:17.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:17.87
  STEP: Setting up server cert @ 12/14/24 13:11:17.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:11:18.143
  STEP: Deploying the webhook pod @ 12/14/24 13:11:18.154
  STEP: Wait for the deployment to be ready @ 12/14/24 13:11:18.168
  I1214 13:11:18.177603 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/14/24 13:11:20.189
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:11:20.202
  I1214 13:11:21.202628 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/14/24 13:11:21.211
  STEP: create the configmap with a random name @ 12/14/24 13:11:21.227
  STEP: verify the configmap is mutated @ 12/14/24 13:11:21.237
  STEP: create the configmap with 'skip-me' name @ 12/14/24 13:11:21.237
  I1214 13:11:21.282651 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-612" for this suite. @ 12/14/24 13:11:21.285
  STEP: Destroying namespace "webhook-markers-7900" for this suite. @ 12/14/24 13:11:21.293
• [3.448 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 12/14/24 13:11:21.298
  I1214 13:11:21.298846 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:11:21.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:21.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:21.316
  STEP: creating an Endpoint @ 12/14/24 13:11:21.32
  STEP: waiting for available Endpoint @ 12/14/24 13:11:21.324
  STEP: listing all Endpoints @ 12/14/24 13:11:21.325
  STEP: updating the Endpoint @ 12/14/24 13:11:21.329
  STEP: fetching the Endpoint @ 12/14/24 13:11:21.335
  STEP: patching the Endpoint @ 12/14/24 13:11:21.337
  STEP: fetching the Endpoint @ 12/14/24 13:11:21.346
  STEP: deleting the Endpoint by Collection @ 12/14/24 13:11:21.349
  STEP: waiting for Endpoint deletion @ 12/14/24 13:11:21.357
  STEP: fetching the Endpoint @ 12/14/24 13:11:21.358
  I1214 13:11:21.360415 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7385" for this suite. @ 12/14/24 13:11:21.364
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/14/24 13:11:21.371
  I1214 13:11:21.371202 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/14/24 13:11:21.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:21.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:21.391
  STEP: getting /apis @ 12/14/24 13:11:21.393
  STEP: getting /apis/storage.k8s.io @ 12/14/24 13:11:21.395
  STEP: getting /apis/storage.k8s.io/v1 @ 12/14/24 13:11:21.397
  STEP: creating @ 12/14/24 13:11:21.398
  STEP: watching @ 12/14/24 13:11:21.419
  I1214 13:11:21.419516 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/14/24 13:11:21.424
  STEP: listing in namespace @ 12/14/24 13:11:21.427
  STEP: listing across namespaces @ 12/14/24 13:11:21.429
  STEP: patching @ 12/14/24 13:11:21.431
  STEP: updating @ 12/14/24 13:11:21.436
  I1214 13:11:21.440073 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1214 13:11:21.440119 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/14/24 13:11:21.44
  STEP: deleting a collection @ 12/14/24 13:11:21.451
  I1214 13:11:21.468631 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1062" for this suite. @ 12/14/24 13:11:21.471
• [0.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/14/24 13:11:21.478
  I1214 13:11:21.478050 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:11:21.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:21.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:21.498
  I1214 13:11:21.500167 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: creating the pod @ 12/14/24 13:11:21.5
  STEP: submitting the pod to kubernetes @ 12/14/24 13:11:21.5
  I1214 13:11:23.569524 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2409" for this suite. @ 12/14/24 13:11:23.574
• [2.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/14/24 13:11:23.582
  I1214 13:11:23.582575 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:11:23.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:23.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:23.605
  STEP: creating the pod @ 12/14/24 13:11:23.607
  STEP: setting up watch @ 12/14/24 13:11:23.607
  STEP: submitting the pod to kubernetes @ 12/14/24 13:11:23.71
  STEP: verifying the pod is in kubernetes @ 12/14/24 13:11:23.719
  STEP: verifying pod creation was observed @ 12/14/24 13:11:23.723
  STEP: deleting the pod gracefully @ 12/14/24 13:11:25.736
  STEP: verifying pod deletion was observed @ 12/14/24 13:11:25.749
  I1214 13:11:27.098191 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-704" for this suite. @ 12/14/24 13:11:27.101
• [3.526 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/14/24 13:11:27.108
  I1214 13:11:27.108317 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 13:11:27.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:27.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:27.126
  STEP: create the rc @ 12/14/24 13:11:27.127
  W1214 13:11:27.132719      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/14/24 13:11:32.136
  STEP: wait for all pods to be garbage collected @ 12/14/24 13:11:32.143
  STEP: Gathering metrics @ 12/14/24 13:11:37.15
  W1214 13:11:37.155144      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1214 13:11:37.155171 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1214 13:11:37.155353 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8082" for this suite. @ 12/14/24 13:11:37.158
• [10.058 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/14/24 13:11:37.166
  I1214 13:11:37.166380 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 13:11:37.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:11:37.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:11:37.187
  I1214 13:11:37.202485 19 service_accounts.go:618] created pod
  STEP: Saw pod success @ 12/14/24 13:11:39.209
  I1214 13:12:09.212069 19 service_accounts.go:624] polling logs
  I1214 13:12:09.218683 19 service_accounts.go:634] Pod logs: 
  I1214 13:11:37.738142       1 log.go:245] OK: Got token
  I1214 13:11:37.738190       1 log.go:245] validating with in-cluster discovery
  I1214 13:11:37.738380       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1214 13:11:37.738536       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8547:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000485270), NotBefore:(*jwt.NumericDate)(0xc000485360), IssuedAt:(*jwt.NumericDate)(0xc000485280), ID:"d29a419d-ef75-45ed-b13f-c7bf069f7ce4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8547", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7a30ad7e-1abf-46e1-bfc8-21cf733c3dad"}}}
  I1214 13:11:37.744346       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1214 13:11:37.746981       1 log.go:245] OK: Validated signature on JWT
  I1214 13:11:37.747055       1 log.go:245] OK: Got valid claims from token!
  I1214 13:11:37.747080       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8547:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000127560), NotBefore:(*jwt.NumericDate)(0xc000127588), IssuedAt:(*jwt.NumericDate)(0xc000127568), ID:"d29a419d-ef75-45ed-b13f-c7bf069f7ce4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8547", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7a30ad7e-1abf-46e1-bfc8-21cf733c3dad"}}}

  I1214 13:12:09.218718 19 service_accounts.go:638] completed pod
  I1214 13:12:09.223905 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8547" for this suite. @ 12/14/24 13:12:09.227
• [32.066 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/14/24 13:12:09.232
  I1214 13:12:09.232892 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 13:12:09.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:09.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:09.254
  I1214 13:12:09.256412 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I1214 13:12:09.262118 19 deployment.go:1200] Waiting for observed generation 1
  I1214 13:12:11.269244 19 deployment.go:1205] Waiting for all required pods to come up
  I1214 13:12:11.274068 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/14/24 13:12:11.274
  I1214 13:12:13.282800 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1214 13:12:13.289460 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1214 13:12:13.299778 19 deployment.go:313] Updating deployment webserver-deployment
  I1214 13:12:13.299804 19 deployment.go:1224] Waiting for observed generation 2
  I1214 13:12:15.308265 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1214 13:12:15.311172 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1214 13:12:15.313844 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1214 13:12:15.322512 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1214 13:12:15.322534 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1214 13:12:15.325840 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1214 13:12:15.330590 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1214 13:12:15.330607 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1214 13:12:15.337836 19 deployment.go:313] Updating deployment webserver-deployment
  I1214 13:12:15.337865 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1214 13:12:15.345450 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1214 13:12:15.347793 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1214 13:12:17.356254 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7ff3cfa-f8a7-4e14-a02e-a55186a8a0f9",
      ResourceVersion: (string) (len=5) "28359",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 13:12:17.360455 19 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
      ResourceVersion: (string) (len=5) "28144",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d7ff3cfa-f8a7-4e14-a02e-a55186a8a0f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 37 66 66 33 63  66 61 2d 66 38 61 37 2d  |\"d7ff3cfa-f8a7-|
              00000120  34 65 31 34 2d 61 30 32  65 2d 61 35 35 31 38 36  |4e14-a02e-a55186|
              00000130  61 38 61 30 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a8a0f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 13:12:17.360966 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1214 13:12:17.361290 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
      ResourceVersion: (string) (len=5) "28358",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d7ff3cfa-f8a7-4e14-a02e-a55186a8a0f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 37 66 66 33 63  66 61 2d 66 38 61 37 2d  |\"d7ff3cfa-f8a7-|
              00000120  34 65 31 34 2d 61 30 32  65 2d 61 35 35 31 38 36  |4e14-a02e-a55186|
              00000130  61 38 61 30 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a8a0f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 13:12:17.367333 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-24hbr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-24hbr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6eab27aa-d932-47ee-a15f-96ddfd0c6750",
      ResourceVersion: (string) (len=5) "27884",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 32 37 5c 22 7d  |2.168.127.127\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7cq8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7cq8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6c3ab2af843a7c6f6708fb6fc95ab2f739f7c13296cf238f5fa6b7b9636fe5b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d7cq8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.368527 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6b4gt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6b4gt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0258419d-3b8c-481b-946e-63cf14cc822f",
      ResourceVersion: (string) (len=5) "28318",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 30 32 5c 22 7d  |2.168.127.102\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jvrdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jvrdp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://847722717e0622cdec1fee8fd22f58b43fa8e09f7db332248ed2055091d5e29d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jvrdp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.369702 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6kc8v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6kc8v",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44e925b1-16d1-4460-9b58-9edd24141f4c",
      ResourceVersion: (string) (len=5) "28353",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 39 30 5c 22 7d  |2.168.249.190\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-trs96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-trs96",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d8897227aba15e202b873c73f3acb9a884c3103a3cbc25aa9832e3632279c353",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-trs96",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.370970 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7qtc4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7qtc4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0890ef23-c18e-4841-a116-c8177840aae1",
      ResourceVersion: (string) (len=5) "28345",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 31 39 5c 22 7d  |2.168.127.119\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlzpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlzpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0d489d5b39d1e8e95b42e01b2569d707d76a0338a727f19e48a34c5a58690f15",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rlzpm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.372151 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8k2ht" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8k2ht",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8820ea46-6d2a-47f2-a6a7-ac47d9a0029f",
      ResourceVersion: (string) (len=5) "28347",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 38 31 5c 22 7d  |2.168.249.181\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l4n4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l4n4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://94066c831f7cf6376b1d71f90bdea3e33f383a6ec4d153f92c2bfa72a79492e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l4n4q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.374642 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-95b7m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-95b7m",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca898089-b49a-4a43-be25-531884ec41fc",
      ResourceVersion: (string) (len=5) "27910",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 35 39 5c 22 7d  |2.168.249.159\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qbp2q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qbp2q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a0b92ed9f25e78461a99d3639ac1922e6d185ff44e9c93d652a0b3d73296dd6e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qbp2q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.375751 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-d7lcd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-d7lcd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30b44ccb-b720-4614-8c6c-fc8017fba7bd",
      ResourceVersion: (string) (len=5) "28357",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 38 38 5c 22 7d  |2.168.249.188\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vtmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vtmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e81ef670cabb5ef3c9e3e40251573915ae82793e9c6b2e806f58b88b789f2b6c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4vtmd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.376972 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dp952" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dp952",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12439c24-f5ea-43f4-86c9-19e20f42ba8f",
      ResourceVersion: (string) (len=5) "28339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 32 30 5c 22 7d  |2.168.127.120\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfj9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfj9j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://08b2bcd10f656b554c78e670e928b2cf7db2488325bc4137ca117c1bc1531d42",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gfj9j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.378202 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fcmlh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fcmlh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45b0029f-b313-44db-9acc-6b8b5cd2f7ca",
      ResourceVersion: (string) (len=5) "27938",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 33 31 5c 22 7d  |2.168.197.231\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wl4rf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wl4rf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778731,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5171d30033460f56e425a462a205e9725e5d6eaedbabf2a9365b10a50e2b9d85",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wl4rf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.379330 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fhtdq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fhtdq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d662cc35-07ee-4597-b5f6-c82d15707340",
      ResourceVersion: (string) (len=5) "28302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 35 31 5c 22 7d  |2.168.197.251\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ht85x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ht85x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://82b060b51dfdcceef7ba6aa8db3dc6ff6c5597415bd193aa311a176c6a72ee99",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ht85x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.380580 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hlrp4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hlrp4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab3697d7-f5a0-40b0-a6eb-810c4951b755",
      ResourceVersion: (string) (len=5) "27902",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 37 31 5c 22 7d  |2.168.249.171\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jkrk9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jkrk9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f408f2f28223e4ac3ed26e13115ed7d60cdc80b025d043828f9c87c205b633a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jkrk9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.381710 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-k7cr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-k7cr8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d72ffe13-e782-4377-b8ad-a4117961c951",
      ResourceVersion: (string) (len=5) "28313",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 33 39 5c 22 7d  |2.168.197.239\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hh6q2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hh6q2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5218f8633b0b74cd80bcbe45a7a11d2a21a4d61f821eba9943d922822d92a196",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hh6q2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.382822 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kc4qm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kc4qm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a831e2c3-7579-4f6f-b415-5970bd73aaeb",
      ResourceVersion: (string) (len=5) "28320",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 30 35 5c 22 7d  |2.168.197.205\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vtjl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vtjl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1951b08e29e4db5a9ad986dc89d0cd3bd800ce2e6b59b6724b13c550b44eb5f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9vtjl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.383944 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ltjzr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ltjzr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbe4b9c2-4f4c-4a9f-9678-ddd0e186625d",
      ResourceVersion: (string) (len=5) "27893",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 36 34 5c 22 7d  |2.168.249.164\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfnns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfnns",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://865706eb76641c24069b9ca0cf65f5bb84174eb9063e6a6a931a65d300ced364",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kfnns",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.385117 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ml5qv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ml5qv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2b96ac8-644e-47d7-b4c7-599196eab583",
      ResourceVersion: (string) (len=5) "28350",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 31 34 5c 22 7d  |2.168.127.114\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s9z62",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s9z62",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8c4bdedd684fa74a9920d97ed98e8e4ce92849d87848df02a736ba19c07aa49a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s9z62",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.386253 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-pwkbs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pwkbs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88ceadd8-1136-43a0-ac79-6a4cf6f2a108",
      ResourceVersion: (string) (len=5) "27898",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 38 32 5c 22 7d  |2.168.249.182\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nddpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nddpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d307c8c3c1cd74127dbb913cf88a003eaa4d3dc56ae175fbc0f2ea0d7e0ce04d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nddpq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.387394 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rjzb2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rjzb2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c59cdbf1-e092-4ef7-b8d8-465e0a923d90",
      ResourceVersion: (string) (len=5) "27887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 30 36 5c 22 7d  |2.168.127.106\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44mm9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44mm9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://794dafa26d3e36c18dad2d45716b5e494bf1d338b03d7201943d1c627026371b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-44mm9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.388537 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wjfwc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wjfwc",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d55df23c-da95-4c99-8f3f-fe101ef181dc",
      ResourceVersion: (string) (len=5) "28333",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 33 36 5c 22 7d  |2.168.197.236\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wc6l8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wc6l8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1bb9e770b33d8c482050b9c3be3fdf2b5a11c6ff85e38a59d6e865f6770c156d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wc6l8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.389886 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wxv7r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wxv7r",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4f5e97a-d08b-4b6b-b47c-be46053e10ae",
      ResourceVersion: (string) (len=5) "28312",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 32 33 33 5c 22 7d  |2.168.197.233\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfjht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfjht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6e43b230c2724990a4c9294e75472f18c3706fda143af919d957d55f228c2f4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hfjht",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.391004 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zg5l5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zg5l5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d006b8d-d708-45ab-b42c-f82c71815b41",
      ResourceVersion: (string) (len=5) "27892",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cd38e094-ee17-4f86-9df7-1af36957c68c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  33 38 65 30 39 34 2d 65  |d\":\"cd38e094-e|
              00000090  65 31 37 2d 34 66 38 36  2d 39 64 66 37 2d 31 61  |e17-4f86-9df7-1a|
              000000a0  66 33 36 39 35 37 63 36  38 63 5c 22 7d 22 3a 7b  |f36957c68c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 31 38 5c 22 7d  |2.168.127.118\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bt956",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bt956",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869778730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ea64ba0d115292659d754b2302b79fbfc830a2535bc191b2e1d628e87319f00f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bt956",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.392119 19 deployment.go:67] Pod "webserver-deployment-786f49d774-2nrvw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2nrvw",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1653962a-d9c4-4ee3-b444-88f5e3e4d273",
      ResourceVersion: (string) (len=5) "28041",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 37 2e 32  33 37 5c 22 7d 22 3a 7b  |68.197.237\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qjvk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qjvk4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qjvk4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.393338 19 deployment.go:67] Pod "webserver-deployment-786f49d774-6x4gl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6x4gl",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c46f73b0-c6a0-4204-90bf-ca1f1f2ea968",
      ResourceVersion: (string) (len=5) "28315",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 37 2e 32  33 34 5c 22 7d 22 3a 7b  |68.197.234\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjrjb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjrjb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hjrjb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.394461 19 deployment.go:67] Pod "webserver-deployment-786f49d774-7gm54" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-7gm54",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be1949a2-31dd-45fb-96bf-14bbd28ae13b",
      ResourceVersion: (string) (len=5) "28327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 36  38 5c 22 7d 22 3a 7b 22  |68.127.68\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fhvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fhvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=14) "192.168.127.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.127.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4fhvk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.395586 19 deployment.go:67] Pod "webserver-deployment-786f49d774-l7r48" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-l7r48",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6c29686-7969-4be1-b9d4-e66e280f49fa",
      ResourceVersion: (string) (len=5) "28344",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 39 2e 31  35 35 5c 22 7d 22 3a 7b  |68.249.155\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bmgmp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bmgmp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bmgmp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.396790 19 deployment.go:67] Pod "webserver-deployment-786f49d774-lf8tw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lf8tw",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6d1bbbe-89af-440e-8ed3-ae02705d1459",
      ResourceVersion: (string) (len=5) "28050",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 39 2e 31  38 37 5c 22 7d 22 3a 7b  |68.249.187\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djhts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djhts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-djhts",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.397905 19 deployment.go:67] Pod "webserver-deployment-786f49d774-lstcr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lstcr",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e089653f-c6c5-41f1-8c7d-2b79d48f6bb9",
      ResourceVersion: (string) (len=5) "28338",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 39 2e 31  38 39 5c 22 7d 22 3a 7b  |68.249.189\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qljqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qljqj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qljqj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.398991 19 deployment.go:67] Pod "webserver-deployment-786f49d774-mtnpg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-mtnpg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8af50217-76dc-445c-b82f-c3e227db4eb2",
      ResourceVersion: (string) (len=5) "28043",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  31 35 5c 22 7d 22 3a 7b  |68.127.115\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5gwkh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5gwkh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5gwkh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.400155 19 deployment.go:67] Pod "webserver-deployment-786f49d774-pxxsj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pxxsj",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "518875d5-3d82-4abe-aea2-9721929bee85",
      ResourceVersion: (string) (len=5) "28039",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 37 2e 32  33 32 5c 22 7d 22 3a 7b  |68.197.232\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkrpd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkrpd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.232",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.232"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkrpd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.401291 19 deployment.go:67] Pod "webserver-deployment-786f49d774-q697p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-q697p",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7a339d0-841f-4e56-91be-a60b6ab1152e",
      ResourceVersion: (string) (len=5) "28330",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 39 2e 31  36 38 5c 22 7d 22 3a 7b  |68.249.168\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2qvsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2qvsm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2qvsm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.402504 19 deployment.go:67] Pod "webserver-deployment-786f49d774-qmpgz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-qmpgz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cf724e7-ff46-4b60-84f5-40e35361d22d",
      ResourceVersion: (string) (len=5) "28308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 37 2e 32  34 34 5c 22 7d 22 3a 7b  |68.197.244\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwmds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwmds",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.244",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.244"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nwmds",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.403645 19 deployment.go:67] Pod "webserver-deployment-786f49d774-rqzn6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-rqzn6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bacf816-5896-4413-91ba-79c7c7b0483b",
      ResourceVersion: (string) (len=5) "28332",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  32 34 5c 22 7d 22 3a 7b  |68.127.124\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zppvt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zppvt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zppvt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.404983 19 deployment.go:67] Pod "webserver-deployment-786f49d774-t479q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-t479q",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "550bb92c-1047-4122-a5eb-0fd0ad15c881",
      ResourceVersion: (string) (len=5) "28046",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  30 37 5c 22 7d 22 3a 7b  |68.127.107\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lgd46",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lgd46",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lgd46",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.406440 19 deployment.go:67] Pod "webserver-deployment-786f49d774-xqjd6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xqjd6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=13) "deployment-79",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7a40ed4-57f2-4758-ac63-7e93c97c3ebe",
      ResourceVersion: (string) (len=5) "28325",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "61f42747-5490-4c9e-9f00-8c6e8b4ba655",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  66 34 32 37 34 37 2d 35  |d\":\"61f42747-5|
              00000090  34 39 30 2d 34 63 39 65  2d 39 66 30 30 2d 38 63  |490-4c9e-9f00-8c|
              000000a0  36 65 38 62 34 62 61 36  35 35 5c 22 7d 22 3a 7b  |6e8b4ba655\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 37 2e 32  30 30 5c 22 7d 22 3a 7b  |68.197.200\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vv5pz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vv5pz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vv5pz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:17.408520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-79" for this suite. @ 12/14/24 13:12:17.413
• [8.188 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/14/24 13:12:17.421
  I1214 13:12:17.421464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-runtime @ 12/14/24 13:12:17.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:17.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:17.442
  STEP: create the container @ 12/14/24 13:12:17.444
  W1214 13:12:17.453405      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/14/24 13:12:17.453
  STEP: get the container status @ 12/14/24 13:12:19.467
  STEP: the container should be terminated @ 12/14/24 13:12:19.471
  STEP: the termination message should be set @ 12/14/24 13:12:19.471
  I1214 13:12:19.471530 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/14/24 13:12:19.471
  I1214 13:12:19.488724 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9474" for this suite. @ 12/14/24 13:12:19.493
• [2.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/14/24 13:12:19.5
  I1214 13:12:19.500770 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 13:12:19.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:19.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:19.524
  STEP: Creating a pod to test substitution in container's args @ 12/14/24 13:12:19.525
  STEP: Saw pod success @ 12/14/24 13:12:21.543
  I1214 13:12:21.547367 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod var-expansion-242cacb9-55a9-482c-ba54-e8f83ba27d3e container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 13:12:21.553
  I1214 13:12:21.568311 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5651" for this suite. @ 12/14/24 13:12:21.571
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/14/24 13:12:21.579
  I1214 13:12:21.579144 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:12:21.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:21.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:21.597
  STEP: Creating a pod to test downward api env vars @ 12/14/24 13:12:21.598
  STEP: Saw pod success @ 12/14/24 13:12:25.621
  I1214 13:12:25.624628 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-1d0e6f59-9419-4632-8965-f32d9768d9f8 container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 13:12:25.631
  I1214 13:12:25.648170 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8283" for this suite. @ 12/14/24 13:12:25.65
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/14/24 13:12:25.657
  I1214 13:12:25.657150 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 13:12:25.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:25.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:25.674
  I1214 13:12:25.675689 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1214 13:12:25.681101 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1214 13:12:25.687566 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I1214 13:12:27.695102 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1214 13:12:27.697510 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1214 13:12:27.708357 19 deployment.go:313] Updating deployment test-recreate-deployment
  I1214 13:12:27.708384 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1214 13:12:27.791924 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e91d44fe-3f6b-4ce9-9709-91961b65f6a8",
      ResourceVersion: (string) (len=5) "28894",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1214 13:12:27.799137 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "823316f9-f528-40d3-a806-6cdcfa172f53",
      ResourceVersion: (string) (len=5) "28893",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e91d44fe-3f6b-4ce9-9709-91961b65f6a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 39 31 64 34 34  66 65 2d 33 66 36 62 2d  |\"e91d44fe-3f6b-|
              00000120  34 63 65 39 2d 39 37 30  39 2d 39 31 39 36 31 62  |4ce9-9709-91961b|
              00000130  36 35 66 36 61 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |65f6a8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 13:12:27.799580 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1214 13:12:27.799864 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "044309a3-e278-4194-a3eb-06ac94143075",
      ResourceVersion: (string) (len=5) "28883",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e91d44fe-3f6b-4ce9-9709-91961b65f6a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 39 31 64 34 34  66 65 2d 33 66 36 62 2d  |\"e91d44fe-3f6b-|
              00000120  34 63 65 39 2d 39 37 30  39 2d 39 31 39 36 31 62  |4ce9-9709-91961b|
              00000130  36 35 66 36 61 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |65f6a8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1214 13:12:27.804151 19 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-grflq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-grflq",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ebdda9b-547e-47d0-ac80-6cab2be2fe74",
      ResourceVersion: (string) (len=5) "28895",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "823316f9-f528-40d3-a806-6cdcfa172f53",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 33 31 36 66 39 2d 66  |d\":\"823316f9-f|
              00000090  35 32 38 2d 34 30 64 33  2d 61 38 30 36 2d 36 63  |528-40d3-a806-6c|
              000000a0  64 63 66 61 31 37 32 66  35 33 5c 22 7d 22 3a 7b  |dcfa172f53\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nbrp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nbrp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869778747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869778747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2nbrp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1214 13:12:27.805600 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4330" for this suite. @ 12/14/24 13:12:27.808
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/14/24 13:12:27.815
  I1214 13:12:27.815496 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/14/24 13:12:27.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:27.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:27.836
  STEP: creating a policy with variables @ 12/14/24 13:12:27.847
  STEP: waiting until the marker is denied @ 12/14/24 13:12:27.863
  STEP: testing a replicated Deployment to be allowed @ 12/14/24 13:12:28.27
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/14/24 13:12:28.286
  I1214 13:12:28.326301 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5623" for this suite. @ 12/14/24 13:12:28.337
• [0.534 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 12/14/24 13:12:28.349
  I1214 13:12:28.349237 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption @ 12/14/24 13:12:28.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:12:28.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:12:28.374
  I1214 13:12:28.391503 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1214 13:13:28.396721 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/14/24 13:13:28.399
  I1214 13:13:28.399947 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/14/24 13:13:28.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:13:28.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:13:28.421
  STEP: Finding an available node @ 12/14/24 13:13:28.423
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/14/24 13:13:28.423
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/14/24 13:13:30.443
  I1214 13:13:30.458841 19 preemption.go:585] found a healthy node: ip-172-31-20-132
  I1214 13:13:36.520916 19 preemption.go:708] pods created so far: [1 1 1]
  I1214 13:13:36.520945 19 preemption.go:709] length of pods created so far: 3
  I1214 13:13:38.535228 19 preemption.go:726] pods created so far: [2 2 1]
  I1214 13:13:45.611445 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-426" for this suite. @ 12/14/24 13:13:45.614
  I1214 13:13:45.622294 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1401" for this suite. @ 12/14/24 13:13:45.626
• [77.282 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 12/14/24 13:13:45.631
  I1214 13:13:45.631462 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename daemonsets @ 12/14/24 13:13:45.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:13:45.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:13:45.651
  STEP: Creating simple DaemonSet "daemon-set" @ 12/14/24 13:13:45.67
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/14/24 13:13:45.676
  I1214 13:13:45.679664 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:13:45.679692 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:13:45.681615 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1214 13:13:45.681637 19 fixtures.go:130] Node ip-172-31-20-132 is running 0 daemon pod, expected 1
  I1214 13:13:46.682507 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-6-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:13:46.682548 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-64-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1214 13:13:46.685730 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1214 13:13:46.685748 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/14/24 13:13:46.689
  STEP: DeleteCollection of the DaemonSets @ 12/14/24 13:13:46.693
  STEP: Verify that ReplicaSets have been deleted @ 12/14/24 13:13:46.701
  I1214 13:13:46.711277 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29421"},"items":null}

  I1214 13:13:46.713695 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29421"},"items":[{"metadata":{"name":"daemon-set-2pw22","generateName":"daemon-set-","namespace":"daemonsets-3451","uid":"677d91c3-b665-460d-9348-6f279e159e48","resourceVersion":"29419","creationTimestamp":"2024-12-14T13:13:45Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"53878952-88d7-4de9-ba92-4f315442ffdb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-14T13:13:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"53878952-88d7-4de9-ba92-4f315442ffdb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-14T13:13:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.249.139\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gmstb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gmstb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-132","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-132"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:45Z"}],"hostIP":"172.31.20.132","hostIPs":[{"ip":"172.31.20.132"}],"podIP":"192.168.249.139","podIPs":[{"ip":"192.168.249.139"}],"startTime":"2024-12-14T13:13:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-14T13:13:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c1404d04615c154f07360892a9847ab4a2ef7334fc2455d53e23864cf013d6e9","started":true,"volumeMounts":[{"name":"kube-api-access-gmstb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-5b7ts","generateName":"daemon-set-","namespace":"daemonsets-3451","uid":"a71d4153-27c5-43a4-b437-5df902a721cf","resourceVersion":"29417","creationTimestamp":"2024-12-14T13:13:45Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"53878952-88d7-4de9-ba92-4f315442ffdb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-14T13:13:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"53878952-88d7-4de9-ba92-4f315442ffdb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-14T13:13:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.127.104\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vbvmt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vbvmt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-38-181","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-38-181"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:45Z"}],"hostIP":"172.31.38.181","hostIPs":[{"ip":"172.31.38.181"}],"podIP":"192.168.127.104","podIPs":[{"ip":"192.168.127.104"}],"startTime":"2024-12-14T13:13:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-14T13:13:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://121e20491f3c6b23f0b855d98d4a06ca022a0c117d8a144387a8ceead5461278","started":true,"volumeMounts":[{"name":"kube-api-access-vbvmt","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-p52nf","generateName":"daemon-set-","namespace":"daemonsets-3451","uid":"c02b688a-b628-481f-87c8-6aeb7510a6d3","resourceVersion":"29412","creationTimestamp":"2024-12-14T13:13:45Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"53878952-88d7-4de9-ba92-4f315442ffdb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-14T13:13:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"53878952-88d7-4de9-ba92-4f315442ffdb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-14T13:13:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.197.203\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-7n9zh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-7n9zh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-5-183","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-5-183"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-14T13:13:45Z"}],"hostIP":"172.31.5.183","hostIPs":[{"ip":"172.31.5.183"}],"podIP":"192.168.197.203","podIPs":[{"ip":"192.168.197.203"}],"startTime":"2024-12-14T13:13:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-14T13:13:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6b3519082a94b856c17c5ab4ffc864cedcd3bd5c19ec8ccd5b91bbded42a22c6","started":true,"volumeMounts":[{"name":"kube-api-access-7n9zh","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1214 13:13:46.730510 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3451" for this suite. @ 12/14/24 13:13:46.733
• [1.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/14/24 13:13:46.738
  I1214 13:13:46.738835 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename subpath @ 12/14/24 13:13:46.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:13:46.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:13:46.757
  STEP: Setting up data @ 12/14/24 13:13:46.758
  STEP: Creating pod pod-subpath-test-projected-4rrc @ 12/14/24 13:13:46.768
  STEP: Creating a pod to test atomic-volume-subpath @ 12/14/24 13:13:46.768
  STEP: Saw pod success @ 12/14/24 13:14:10.843
  I1214 13:14:10.848254 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod pod-subpath-test-projected-4rrc container test-container-subpath-projected-4rrc: <nil>
  STEP: delete the pod @ 12/14/24 13:14:10.869
  STEP: Deleting pod pod-subpath-test-projected-4rrc @ 12/14/24 13:14:10.885
  I1214 13:14:10.885492 19 delete.go:62] Deleting pod "pod-subpath-test-projected-4rrc" in namespace "subpath-5034"
  I1214 13:14:10.889680 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5034" for this suite. @ 12/14/24 13:14:10.893
• [24.163 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/14/24 13:14:10.901
  I1214 13:14:10.901465 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename volumeattachment @ 12/14/24 13:14:10.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:10.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:10.922
  STEP: Create VolumeAttachment "va-e2e-ls4hq" on node "ip-172-31-64-42" @ 12/14/24 13:14:10.926
  STEP: Get VolumeAttachment "va-e2e-ls4hq" on node "ip-172-31-64-42" @ 12/14/24 13:14:10.931
  STEP: Patch VolumeAttachment "va-e2e-ls4hq" on node "ip-172-31-64-42" @ 12/14/24 13:14:10.934
  STEP: List VolumeAttachments with "va-e2e-ls4hq=patched" label @ 12/14/24 13:14:10.938
  STEP: Delete VolumeAttachment "va-e2e-ls4hq" on node "ip-172-31-64-42" @ 12/14/24 13:14:10.941
  STEP: Confirm deletion of VolumeAttachment "va-e2e-ls4hq" on node "ip-172-31-64-42" @ 12/14/24 13:14:10.948
  STEP: Create VolumeAttachment "va-e2e-5q9rf" on node "ip-172-31-64-42" @ 12/14/24 13:14:10.955
  STEP: Update the VolumeAttachment "va-e2e-5q9rf" on node "ip-172-31-64-42" with label "va-e2e=updated" @ 12/14/24 13:14:10.96
  STEP: Create VolumeAttachment "va-e2e-hqs5l" on node "ip-172-31-6-94" @ 12/14/24 13:14:10.973
  STEP: Update the VolumeAttachment "va-e2e-hqs5l" on node "ip-172-31-6-94" with label "va-e2e=updated" @ 12/14/24 13:14:10.977
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/14/24 13:14:10.985
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/14/24 13:14:10.998
  I1214 13:14:11.002777 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-93" for this suite. @ 12/14/24 13:14:11.006
• [0.111 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 12/14/24 13:14:11.012
  I1214 13:14:11.012871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubelet-test @ 12/14/24 13:14:11.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:11.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:11.032
  I1214 13:14:13.065934 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3459" for this suite. @ 12/14/24 13:14:13.069
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/14/24 13:14:13.078
  I1214 13:14:13.078787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pod-network-test @ 12/14/24 13:14:13.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:13.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:13.101
  STEP: Performing setup for networking test in namespace pod-network-test-8131 @ 12/14/24 13:14:13.103
  STEP: creating a selector @ 12/14/24 13:14:13.103
  STEP: Creating the service pods in kubernetes @ 12/14/24 13:14:13.103
  I1214 13:14:13.103604 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/14/24 13:14:25.189
  I1214 13:14:27.209472 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1214 13:14:27.209511 19 networking.go:42] Breadth first check of 192.168.249.140 on host 172.31.20.132...
  I1214 13:14:27.213152 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.116:9080/dial?request=hostname&protocol=http&host=192.168.249.140&port=8083&tries=1'] Namespace:pod-network-test-8131 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:14:27.213175 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:14:27.213600 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:14:27.213654 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8131/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.249.140%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1214 13:14:27.262500 19 utils.go:356] Waiting for responses: map[]
  I1214 13:14:27.262548 19 utils.go:360] reached 192.168.249.140 after 0/1 tries
  I1214 13:14:27.262557 19 networking.go:42] Breadth first check of 192.168.127.69 on host 172.31.38.181...
  I1214 13:14:27.267369 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.116:9080/dial?request=hostname&protocol=http&host=192.168.127.69&port=8083&tries=1'] Namespace:pod-network-test-8131 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:14:27.267392 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:14:27.267802 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:14:27.267852 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8131/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.127.69%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1214 13:14:27.315424 19 utils.go:356] Waiting for responses: map[]
  I1214 13:14:27.315457 19 utils.go:360] reached 192.168.127.69 after 0/1 tries
  I1214 13:14:27.315467 19 networking.go:42] Breadth first check of 192.168.197.199 on host 172.31.5.183...
  I1214 13:14:27.319372 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.116:9080/dial?request=hostname&protocol=http&host=192.168.197.199&port=8083&tries=1'] Namespace:pod-network-test-8131 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:14:27.319393 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:14:27.319783 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:14:27.319829 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8131/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.197.199%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1214 13:14:27.357807 19 utils.go:356] Waiting for responses: map[]
  I1214 13:14:27.357847 19 utils.go:360] reached 192.168.197.199 after 0/1 tries
  I1214 13:14:27.357855 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1214 13:14:27.357961 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8131" for this suite. @ 12/14/24 13:14:27.362
• [14.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/14/24 13:14:27.369
  I1214 13:14:27.369800 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename init-container @ 12/14/24 13:14:27.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:27.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:27.396
  STEP: creating the pod @ 12/14/24 13:14:27.398
  I1214 13:14:27.398425 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1214 13:14:30.367758 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9155" for this suite. @ 12/14/24 13:14:30.371
• [3.008 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/14/24 13:14:30.377
  I1214 13:14:30.377979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:14:30.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:30.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:30.394
  I1214 13:14:30.397060 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/14/24 13:14:31.696
  I1214 13:14:31.696252 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 create -f -'
  I1214 13:14:33.758777 19 builder.go:146] stderr: ""
  I1214 13:14:33.758813 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8308-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1214 13:14:33.758862 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 delete e2e-test-crd-publish-openapi-8308-crds test-foo'
  I1214 13:14:33.806669 19 builder.go:146] stderr: ""
  I1214 13:14:33.806717 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8308-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1214 13:14:33.806761 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 apply -f -'
  I1214 13:14:33.860800 19 builder.go:146] stderr: ""
  I1214 13:14:33.860835 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8308-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1214 13:14:33.860879 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 delete e2e-test-crd-publish-openapi-8308-crds test-foo'
  I1214 13:14:33.906167 19 builder.go:146] stderr: ""
  I1214 13:14:33.906204 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8308-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/14/24 13:14:33.906
  I1214 13:14:33.906275 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 create -f -'
  I1214 13:14:33.946118 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/14/24 13:14:33.946
  I1214 13:14:33.946231 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 create -f -'
  I1214 13:14:33.984277 19 builder.go:135] rc: 1
  I1214 13:14:33.984410 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 apply -f -'
  I1214 13:14:34.029936 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/14/24 13:14:34.029
  I1214 13:14:34.030109 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 create -f -'
  I1214 13:14:34.069335 19 builder.go:135] rc: 1
  I1214 13:14:34.069424 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 --namespace=crd-publish-openapi-9517 apply -f -'
  I1214 13:14:34.115973 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/14/24 13:14:34.116
  I1214 13:14:34.116099 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 explain e2e-test-crd-publish-openapi-8308-crds'
  I1214 13:14:34.153900 19 builder.go:146] stderr: ""
  I1214 13:14:34.153953 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8308-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/14/24 13:14:34.154
  I1214 13:14:34.154190 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 explain e2e-test-crd-publish-openapi-8308-crds.metadata'
  I1214 13:14:34.192806 19 builder.go:146] stderr: ""
  I1214 13:14:34.192904 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8308-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1214 13:14:34.193093 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 explain e2e-test-crd-publish-openapi-8308-crds.spec'
  I1214 13:14:34.232394 19 builder.go:146] stderr: ""
  I1214 13:14:34.232439 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8308-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1214 13:14:34.232528 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 explain e2e-test-crd-publish-openapi-8308-crds.spec.bars'
  I1214 13:14:34.272087 19 builder.go:146] stderr: ""
  I1214 13:14:34.272137 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8308-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/14/24 13:14:34.272
  I1214 13:14:34.272323 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-9517 explain e2e-test-crd-publish-openapi-8308-crds.spec.bars2'
  I1214 13:14:34.312493 19 builder.go:135] rc: 1
  I1214 13:14:35.534577 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9517" for this suite. @ 12/14/24 13:14:35.54
• [5.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/14/24 13:14:35.549
  I1214 13:14:35.549120 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replication-controller @ 12/14/24 13:14:35.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:35.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:35.575
  STEP: creating a ReplicationController @ 12/14/24 13:14:35.582
  STEP: waiting for RC to be added @ 12/14/24 13:14:35.591
  STEP: waiting for available Replicas @ 12/14/24 13:14:35.591
  STEP: patching ReplicationController @ 12/14/24 13:14:36.479
  STEP: waiting for RC to be modified @ 12/14/24 13:14:36.487
  STEP: patching ReplicationController status @ 12/14/24 13:14:36.487
  STEP: waiting for RC to be modified @ 12/14/24 13:14:36.493
  STEP: waiting for available Replicas @ 12/14/24 13:14:36.494
  STEP: fetching ReplicationController status @ 12/14/24 13:14:36.501
  STEP: patching ReplicationController scale @ 12/14/24 13:14:36.504
  STEP: waiting for RC to be modified @ 12/14/24 13:14:36.51
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/14/24 13:14:36.51
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/14/24 13:14:37.386
  STEP: updating ReplicationController status @ 12/14/24 13:14:37.39
  STEP: waiting for RC to be modified @ 12/14/24 13:14:37.395
  STEP: listing all ReplicationControllers @ 12/14/24 13:14:37.398
  STEP: checking that ReplicationController has expected values @ 12/14/24 13:14:37.401
  STEP: deleting ReplicationControllers by collection @ 12/14/24 13:14:37.401
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/14/24 13:14:37.411
  I1214 13:14:37.451226 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1214 13:14:37.451325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1709" for this suite. @ 12/14/24 13:14:37.455
• [1.914 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 12/14/24 13:14:37.463
  I1214 13:14:37.463427 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-pred @ 12/14/24 13:14:37.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:14:37.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:14:37.481
  I1214 13:14:37.483739 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1214 13:14:37.491385 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1214 13:14:37.494490 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-132 before test
  I1214 13:14:37.498480 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-94l4m from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.498513 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 13:14:37.498520 19 predicates.go:957] calico-node-bblb4 from kube-system started at 2024-12-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.498535 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 13:14:37.498541 19 predicates.go:957] coredns-5b4857d7c8-dcvw5 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.498546 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1214 13:14:37.498550 19 predicates.go:957] busybox-readonly-fs2f3cf93c-a906-4179-a3ca-b6ffb1aeccc2 from kubelet-test-3459 started at 2024-12-14 13:14:11 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.498555 19 predicates.go:959] 	Container busybox-readonly-fs2f3cf93c-a906-4179-a3ca-b6ffb1aeccc2 ready: true, restart count 0
  I1214 13:14:37.498560 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-rlqv5 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.498564 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1214 13:14:37.498571 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-jq925 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:14:37.498577 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:14:37.498581 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 13:14:37.498587 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-38-181 before test
  I1214 13:14:37.504284 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9k94x from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.504295 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 13:14:37.504303 19 predicates.go:957] calico-node-vjktq from kube-system started at 2024-12-14 12:16:23 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.504308 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 13:14:37.504313 19 predicates.go:957] kube-state-metrics-5d7bdccd49-gkxkr from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.504318 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1214 13:14:37.504324 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-p9vf9 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (2 container statuses recorded)
  I1214 13:14:37.504329 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1214 13:14:37.504337 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1214 13:14:37.504342 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-gcbn8 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.504346 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1214 13:14:37.504351 19 predicates.go:957] rc-test-s7q6m from replication-controller-1709 started at 2024-12-14 13:14:35 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.504355 19 predicates.go:959] 	Container rc-test ready: true, restart count 0
  I1214 13:14:37.504361 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-bg8kl from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:14:37.504366 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:14:37.504370 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 13:14:37.504375 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I1214 13:14:37.509104 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-59bh9 from ingress-nginx-kubernetes-worker started at 2024-12-14 12:12:11 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.509123 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 13:14:37.509129 19 predicates.go:957] calico-node-jcqlh from kube-system started at 2024-12-14 12:16:34 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.509134 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 13:14:37.509139 19 predicates.go:957] rc-test-zjql4 from replication-controller-1709 started at 2024-12-14 13:14:36 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.509143 19 predicates.go:959] 	Container rc-test ready: true, restart count 0
  I1214 13:14:37.509148 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-14 12:20:03 +0000 UTC (1 container statuses recorded)
  I1214 13:14:37.509153 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1214 13:14:37.509158 19 predicates.go:957] sonobuoy-e2e-job-f6a2dbd00a5f4548 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:14:37.509163 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1214 13:14:37.509167 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:14:37.509172 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-tfgzf from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:14:37.509176 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:14:37.509181 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/14/24 13:14:37.509
  E1214 13:14:38.452183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:39.452622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/14/24 13:14:39.528
  STEP: Trying to apply a random label on the found node. @ 12/14/24 13:14:39.545
  STEP: verifying the node has the label kubernetes.io/e2e-2f9fc139-52b0-43da-9e1f-43c596ec643c 95 @ 12/14/24 13:14:39.553
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/14/24 13:14:39.559
  E1214 13:14:40.453185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:41.453871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.20.132 on the node which pod4 resides and expect not scheduled @ 12/14/24 13:14:41.576
  E1214 13:14:42.454475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:43.454684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:44.456310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:45.455953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:46.456231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:47.456431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:48.456617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:49.456847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:50.456978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:51.457327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:52.457432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:53.457661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:54.457793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:55.458124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:56.458369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:57.459372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:58.459606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:14:59.460315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:00.460428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:01.460505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:02.461050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:03.461167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:04.461389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:05.461558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:06.461659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:07.462260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:08.462348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:09.463207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:10.463325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:11.464216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:12.465266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:13.465782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:14.466570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:15.466666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:16.466812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:17.467064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:18.467220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:19.467549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:20.468153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:21.468415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:22.468569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:23.468792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:24.469423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:25.469632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:26.470690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:27.471668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:28.471715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:29.472231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:30.473314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:31.473614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:32.474147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:33.474468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:34.475264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:35.475438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:36.475714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:37.476078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:38.477128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:39.478142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:40.478813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:41.479086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:42.479340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:43.479464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:44.480212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:45.480315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:46.480478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:47.480595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:48.480706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:49.481221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:50.481776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:51.482460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:52.482549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:53.483320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:54.483810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:55.483949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:56.484102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:57.484173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:58.484521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:15:59.484620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:00.485050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:01.485488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:02.485637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:03.485863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:04.486161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:05.486488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:06.487477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:07.487619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:08.488235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:09.488442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:10.489072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:11.489383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:12.490215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:13.490444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:14.491211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:15.491306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:16.492222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:17.493235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:18.493300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:19.494229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:20.494297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:21.494610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:22.494750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:23.495067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:24.495956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:25.496080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:26.497351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:27.497562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:28.497708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:29.497987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:30.498161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:31.499219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:32.500142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:33.501222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:34.502208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:35.502510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:36.503284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:37.503546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:38.503878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:39.503991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:40.504936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:41.505113      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:42.505345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:43.505507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:44.506420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:45.506548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:46.506878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:47.507107      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:48.507223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:49.508239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:50.508283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:51.508991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:52.509838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:53.510150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:54.510362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:55.510465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:56.510577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:57.510708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:58.510929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:16:59.511036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:00.511152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:01.511250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:02.511608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:03.511710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:04.512233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:05.512311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:06.513211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:07.513312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:08.514225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:09.515221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:10.516262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:11.516858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:12.517164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:13.517457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:14.518240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:15.518737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:16.519727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:17.519964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:18.520763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:19.520873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:20.521060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:21.521189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:22.521307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:23.521626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:24.521719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:25.522256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:26.523250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:27.523352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:28.523461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:29.523578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:30.523690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:31.523936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:32.524596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:33.524702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:34.524841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:35.524939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:36.525321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:37.525517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:38.525839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:39.526147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:40.527071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:41.527424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:42.527595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:43.527857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:44.528717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:45.528972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:46.529255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:47.530262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:48.530478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:49.530567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:50.530676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:51.531693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:52.531802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:53.532253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:54.532548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:55.533264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:56.533857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:57.533961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:58.534235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:17:59.534521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:00.535227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:01.535333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:02.535444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:03.535557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:04.536421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:05.536576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:06.536695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:07.536841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:08.537550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:09.538265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:10.538473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:11.538705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:12.539494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:13.539765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:14.540504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:15.540605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:16.541462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:17.541555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:18.541646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:19.541750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:20.542239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:21.542340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:22.542436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:23.542526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:24.543309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:25.543412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:26.544256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:27.544314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:28.544686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:29.544901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:30.545724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:31.545834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:32.546417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:33.546528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:34.547476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:35.547724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:36.547922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:37.548153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:38.548373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:39.548563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:40.548916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:41.549306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:42.550112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:43.550315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:44.550465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:45.550576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:46.551232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:47.552226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:48.552859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:49.552942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:50.553832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:51.554105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:52.554628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:53.554734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:54.555380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:55.555668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:56.555834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:57.556071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:58.556136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:18:59.557210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:00.557934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:01.558145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:02.558364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:03.558816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:04.559438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:05.559621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:06.559734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:07.559975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:08.560189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:09.560403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:10.560590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:11.560700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:12.561222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:13.561316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:14.562215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:15.563214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:16.563319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:17.564217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:18.565136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:19.565237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:20.565379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:21.565559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:22.566520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:23.566742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:24.567379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:25.568213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:26.569106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:27.569203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:28.569435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:29.569596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:30.570388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:31.570461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:32.571224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:33.572221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:34.572469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:35.572555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:36.572723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:37.572825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:38.573006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:39.573824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:40.573875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:41.574197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-2f9fc139-52b0-43da-9e1f-43c596ec643c off the node ip-172-31-20-132 @ 12/14/24 13:19:41.583
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2f9fc139-52b0-43da-9e1f-43c596ec643c @ 12/14/24 13:19:41.596
  I1214 13:19:41.600608 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5318" for this suite. @ 12/14/24 13:19:41.605
• [304.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 12/14/24 13:19:41.614
  I1214 13:19:41.614042 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 13:19:41.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:19:41.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:19:41.631
  STEP: Creating a ResourceQuota with terminating scope @ 12/14/24 13:19:41.634
  STEP: Ensuring ResourceQuota status is calculated @ 12/14/24 13:19:41.639
  E1214 13:19:42.575237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:43.575461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 12/14/24 13:19:43.644
  STEP: Ensuring ResourceQuota status is calculated @ 12/14/24 13:19:43.648
  E1214 13:19:44.576339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:45.576571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 12/14/24 13:19:45.654
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/14/24 13:19:45.668
  E1214 13:19:46.576650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:47.576782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/14/24 13:19:47.672
  E1214 13:19:48.576939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:49.576998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/14/24 13:19:49.679
  STEP: Ensuring resource quota status released the pod usage @ 12/14/24 13:19:49.694
  E1214 13:19:50.577213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:51.577395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 12/14/24 13:19:51.698
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/14/24 13:19:51.71
  E1214 13:19:52.577505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:53.577717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/14/24 13:19:53.716
  E1214 13:19:54.578091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:55.578192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/14/24 13:19:55.721
  STEP: Ensuring resource quota status released the pod usage @ 12/14/24 13:19:55.736
  E1214 13:19:56.579052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:57.579213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:19:57.742648 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2206" for this suite. @ 12/14/24 13:19:57.746
• [16.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/14/24 13:19:57.756
  I1214 13:19:57.756611 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename certificates @ 12/14/24 13:19:57.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:19:57.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:19:57.775
  STEP: getting /apis @ 12/14/24 13:19:58.054
  STEP: getting /apis/certificates.k8s.io @ 12/14/24 13:19:58.057
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/14/24 13:19:58.058
  STEP: creating @ 12/14/24 13:19:58.059
  STEP: getting @ 12/14/24 13:19:58.077
  STEP: listing @ 12/14/24 13:19:58.08
  STEP: watching @ 12/14/24 13:19:58.083
  I1214 13:19:58.083670 19 certificates.go:316] starting watch
  STEP: patching @ 12/14/24 13:19:58.084
  STEP: updating @ 12/14/24 13:19:58.092
  I1214 13:19:58.098898 19 certificates.go:332] waiting for watch events with expected annotations
  I1214 13:19:58.098934 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/14/24 13:19:58.099
  STEP: patching /approval @ 12/14/24 13:19:58.101
  STEP: updating /approval @ 12/14/24 13:19:58.109
  STEP: getting /status @ 12/14/24 13:19:58.116
  STEP: patching /status @ 12/14/24 13:19:58.119
  STEP: updating /status @ 12/14/24 13:19:58.128
  STEP: deleting @ 12/14/24 13:19:58.137
  STEP: deleting a collection @ 12/14/24 13:19:58.149
  I1214 13:19:58.166218 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2576" for this suite. @ 12/14/24 13:19:58.168
• [0.420 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/14/24 13:19:58.176
  I1214 13:19:58.176487 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:19:58.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:19:58.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:19:58.192
  STEP: Creating a pod to test downward api env vars @ 12/14/24 13:19:58.194
  E1214 13:19:58.579358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:19:59.579568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:00.580335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:01.580392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:20:02.219
  I1214 13:20:02.222776 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downward-api-4b8c0766-db7a-400b-aedd-748c4f9ee910 container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 13:20:02.242
  I1214 13:20:02.263304 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6219" for this suite. @ 12/14/24 13:20:02.267
• [4.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/14/24 13:20:02.273
  I1214 13:20:02.273175 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename namespaces @ 12/14/24 13:20:02.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:02.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:02.294
  STEP: Creating a test namespace @ 12/14/24 13:20:02.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:02.31
  STEP: Creating a pod in the namespace @ 12/14/24 13:20:02.314
  STEP: Waiting for the pod to have running status @ 12/14/24 13:20:02.322
  E1214 13:20:02.581052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:03.581174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 12/14/24 13:20:04.333
  STEP: Waiting for the namespace to be removed. @ 12/14/24 13:20:04.341
  E1214 13:20:04.581586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:05.582560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:06.582645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:07.582783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:08.582880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:09.583805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:10.583928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:11.584330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:12.584419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:13.584541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:14.585471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/14/24 13:20:15.346
  STEP: Verifying there are no pods in the namespace @ 12/14/24 13:20:15.36
  I1214 13:20:15.364464 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9767" for this suite. @ 12/14/24 13:20:15.368
  STEP: Destroying namespace "nsdeletetest-7586" for this suite. @ 12/14/24 13:20:15.375
  I1214 13:20:15.378559 19 framework.go:370] Namespace nsdeletetest-7586 was already deleted
  STEP: Destroying namespace "nsdeletetest-9814" for this suite. @ 12/14/24 13:20:15.378
• [13.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/14/24 13:20:15.387
  I1214 13:20:15.387320 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:20:15.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:15.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:15.408
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:20:15.41
  E1214 13:20:15.585867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:16.586154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:20:17.429
  I1214 13:20:17.433882 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-a6ee743b-bb49-45c0-9cf2-672f46cde010 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:20:17.44
  I1214 13:20:17.460698 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2755" for this suite. @ 12/14/24 13:20:17.463
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/14/24 13:20:17.477
  I1214 13:20:17.477588 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:20:17.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:17.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:17.499
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/14/24 13:20:17.501
  I1214 13:20:17.502184 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:20:17.586657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:18.586643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:19.587336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:20.587313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:21.587466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/14/24 13:20:22.501
  I1214 13:20:22.501518 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:20:22.587741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:23.588066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:23.793369 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:20:24.588279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:25.588392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:26.589339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:27.589517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:28.590237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:28.788636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6940" for this suite. @ 12/14/24 13:20:28.795
• [11.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/14/24 13:20:28.803
  I1214 13:20:28.803712 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename deployment @ 12/14/24 13:20:28.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:28.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:28.823
  STEP: creating a Deployment @ 12/14/24 13:20:28.827
  STEP: waiting for Deployment to be created @ 12/14/24 13:20:28.834
  STEP: waiting for all Replicas to be Ready @ 12/14/24 13:20:28.835
  I1214 13:20:28.835974 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.835993 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.845783 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.845811 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.858279 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.858324 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.902380 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1214 13:20:28.902418 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1214 13:20:29.591208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:30.058439 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1214 13:20:30.058471 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1214 13:20:30.170220 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/14/24 13:20:30.17
  I1214 13:20:30.181964 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/14/24 13:20:30.182
  I1214 13:20:30.183835 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.183867 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.183912 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.183937 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.184138 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.184149 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.184159 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.184165 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 0
  I1214 13:20:30.184172 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:30.184178 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:30.184242 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.184255 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.184262 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.184267 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.196775 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.196804 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.215858 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.215890 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.234531 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:30.234563 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:30.249590 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:30.249623 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  E1214 13:20:30.592084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:30.978661 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:30.978695 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:31.002080 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  STEP: listing Deployments @ 12/14/24 13:20:31.002
  I1214 13:20:31.006252 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/14/24 13:20:31.006
  I1214 13:20:31.019877 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/14/24 13:20:31.019
  I1214 13:20:31.025296 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:31.033255 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:31.048764 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:31.067899 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:31.075784 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1214 13:20:31.592868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:32.066654 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:32.085405 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:32.093780 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:32.113116 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1214 13:20:32.119343 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1214 13:20:32.593948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:33.190005 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/14/24 13:20:33.221
  STEP: fetching the DeploymentStatus @ 12/14/24 13:20:33.228
  I1214 13:20:33.233899 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:33.233993 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:33.234007 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:33.234030 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:33.234090 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 1
  I1214 13:20:33.234224 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:33.234416 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:33.234430 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:33.234488 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:33.234565 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 2
  I1214 13:20:33.234629 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3940 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/14/24 13:20:33.234
  I1214 13:20:33.243126 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243161 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243178 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243205 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243291 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243328 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243342 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243430 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243441 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243469 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243561 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243573 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243581 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.243718 19 deployment.go:475] observed event type MODIFIED
  I1214 13:20:33.246600 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1214 13:20:33.249792 19 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de6a7a13-4a0c-44c1-8990-f9235a546611",
      ResourceVersion: (string) (len=5) "31136",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0488d891-37ea-4c12-aab5-088391725e44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 34 38 38  64 38 39 31 2d 33 37 65  |":\"0488d891-37e|
              00000130  61 2d 34 63 31 32 2d 61  61 62 35 2d 30 38 38 33  |a-4c12-aab5-0883|
              00000140  39 31 37 32 35 65 34 34  5c 22 7d 22 3a 7b 7d 7d  |91725e44\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1214 13:20:33.254820 19 deployment.go:669] pod: "test-deployment-6c86c7f765-77lg6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-77lg6",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-3940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c85e309-5559-4bdc-9960-6ea8d33ff48f",
      ResourceVersion: (string) (len=5) "31094",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "de6a7a13-4a0c-44c1-8990-f9235a546611",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 65 36 61 37 61 31 33  |uid\":\"de6a7a13|
              000000a0  2d 34 61 30 63 2d 34 34  63 31 2d 38 39 39 30 2d  |-4a0c-44c1-8990-|
              000000b0  66 39 32 33 35 61 35 34  36 36 31 31 5c 22 7d 22  |f9235a546611\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 32 31 5c 22 7d  |2.168.127.121\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s759t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s759t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-38-181",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.38.181",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.38.181"
        }
      },
      PodIP: (string) (len=15) "192.168.127.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869779231,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dbaceeae3c229e6899e20779e5d1a675c49bc91f91bb239a23db738e237f874c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s759t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1214 13:20:33.256527 19 deployment.go:669] pod: "test-deployment-6c86c7f765-zt22d":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-zt22d",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-3940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf4ab79d-bbd2-48c0-bd11-e84190021a57",
      ResourceVersion: (string) (len=5) "31135",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "de6a7a13-4a0c-44c1-8990-f9235a546611",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 65 36 61 37 61 31 33  |uid\":\"de6a7a13|
              000000a0  2d 34 61 30 63 2d 34 34  63 31 2d 38 39 39 30 2d  |-4a0c-44c1-8990-|
              000000b0  66 39 32 33 35 61 35 34  36 36 31 31 5c 22 7d 22  |f9235a546611\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  39 2e 31 34 33 5c 22 7d  |2.168.249.143\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-472kb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-472kb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-20-132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.132"
        }
      },
      PodIP: (string) (len=15) "192.168.249.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.249.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869779232,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aa3f9ffb8d53b21b8118a78500f0bbfe30141688f673678858e88f86e2201689",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-472kb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1214 13:20:33.257738 19 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aac1ae86-4e79-48bf-adeb-c4b8021a6c2e",
      ResourceVersion: (string) (len=5) "31146",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779230,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0488d891-37ea-4c12-aab5-088391725e44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 34 38 38  64 38 39 31 2d 33 37 65  |":\"0488d891-37e|
              00000130  61 2d 34 63 31 32 2d 61  61 62 35 2d 30 38 38 33  |a-4c12-aab5-0883|
              00000140  39 31 37 32 35 65 34 34  5c 22 7d 22 3a 7b 7d 7d  |91725e44\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1214 13:20:33.262159 19 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-wbqqg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-wbqqg",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-3940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc6d0b73-4530-4400-b11b-c18a7c7206a8",
      ResourceVersion: (string) (len=5) "31141",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779230,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "aac1ae86-4e79-48bf-adeb-c4b8021a6c2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 61 63 31 61 65 38 36  |uid\":\"aac1ae86|
              000000a0  2d 34 65 37 39 2d 34 38  62 66 2d 61 64 65 62 2d  |-4e79-48bf-adeb-|
              000000b0  63 34 62 38 30 32 31 61  36 63 32 65 5c 22 7d 22  |c4b8021a6c2e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  37 2e 31 39 36 5c 22 7d  |2.168.197.196\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7lx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7lx6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=15) "192.168.197.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.197.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779230,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869779230,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://624de8915d4cf031fa1a2e02a27fce68d4817998f93464799e5b7765d1772cbc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b7lx6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1214 13:20:33.263909 19 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "516e6916-f69f-4c69-9a85-9c95728d603c",
      ResourceVersion: (string) (len=5) "31045",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869779228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0488d891-37ea-4c12-aab5-088391725e44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 34 38 38  64 38 39 31 2d 33 37 65  |":\"0488d891-37e|
              00000130  61 2d 34 63 31 32 2d 61  61 62 35 2d 30 38 38 33  |a-4c12-aab5-0883|
              00000140  39 31 37 32 35 65 34 34  5c 22 7d 22 3a 7b 7d 7d  |91725e44\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869779230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1214 13:20:33.268848 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3940" for this suite. @ 12/14/24 13:20:33.272
• [4.475 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/14/24 13:20:33.278
  I1214 13:20:33.278626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 13:20:33.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:33.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:33.295
  I1214 13:20:33.328326 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1214 13:20:33.328361 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1214 13:20:33.335234 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I1214 13:20:33.335262 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1214 13:20:33.339761 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1214 13:20:33.339780 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1214 13:20:33.349237 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1214 13:20:33.349267 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1214 13:20:33.357188 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1214 13:20:33.359408 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1214 13:20:33.462243 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1214 13:20:33.462289 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1214 13:20:33.468919 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1214 13:20:33.468944 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1214 13:20:33.474954 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1214 13:20:33.474979 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1214 13:20:33.479241 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1214 13:20:33.479259 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1214 13:20:33.479354 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1998" for this suite. @ 12/14/24 13:20:33.487
• [0.217 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/14/24 13:20:33.496
  I1214 13:20:33.496067 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:20:33.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:33.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:33.522
  STEP: Creating the pod @ 12/14/24 13:20:33.524
  E1214 13:20:33.594243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:34.594220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:35.594274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:36.070563 19 pod_client.go:173] Successfully updated pod "annotationupdate876456b8-980c-4d45-aa68-2eaf9cb43f04"
  E1214 13:20:36.594530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:37.595464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:38.085744 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4152" for this suite. @ 12/14/24 13:20:38.09
• [4.601 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/14/24 13:20:38.096
  I1214 13:20:38.096959 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:20:38.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:38.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:38.123
  STEP: Creating the pod @ 12/14/24 13:20:38.126
  E1214 13:20:38.595813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:39.596079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:40.597105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:40.669663 19 pod_client.go:173] Successfully updated pod "annotationupdate8f8fa08c-b071-46a6-a78d-baa9a6947513"
  E1214 13:20:41.597242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:42.597658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:43.597804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:44.598008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:44.694813 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1536" for this suite. @ 12/14/24 13:20:44.698
• [6.609 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 12/14/24 13:20:44.706
  I1214 13:20:44.706461 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:20:44.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:20:44.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:20:44.725
  STEP: Setting up server cert @ 12/14/24 13:20:44.748
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:20:44.89
  STEP: Deploying the webhook pod @ 12/14/24 13:20:44.9
  STEP: Wait for the deployment to be ready @ 12/14/24 13:20:44.912
  I1214 13:20:44.920975 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 13:20:45.598655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:46.598937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 13:20:46.932
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:20:46.945
  E1214 13:20:47.599225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:20:47.945704 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/14/24 13:20:47.954
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/14/24 13:20:47.954
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/14/24 13:20:47.968
  E1214 13:20:48.599425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/14/24 13:20:48.978
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/14/24 13:20:48.979
  E1214 13:20:49.600260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/14/24 13:20:50.011
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/14/24 13:20:50.011
  E1214 13:20:50.600458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:51.601501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:52.602098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:53.602159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:54.603196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/14/24 13:20:55.042
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/14/24 13:20:55.042
  E1214 13:20:55.603594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:56.604299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:57.604944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:58.605161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:20:59.605351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:21:00.131167 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-547" for this suite. @ 12/14/24 13:21:00.138
  STEP: Destroying namespace "webhook-markers-5082" for this suite. @ 12/14/24 13:21:00.147
• [15.446 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 12/14/24 13:21:00.152
  I1214 13:21:00.152633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 13:21:00.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:21:00.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:21:00.174
  STEP: Creating a test externalName service @ 12/14/24 13:21:00.175
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-903.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-903.svc.cluster.local; sleep 1; done
   @ 12/14/24 13:21:00.181
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-903.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-903.svc.cluster.local; sleep 1; done
   @ 12/14/24 13:21:00.182
  STEP: creating a pod to probe DNS @ 12/14/24 13:21:00.182
  STEP: submitting the pod to kubernetes @ 12/14/24 13:21:00.182
  E1214 13:21:00.606433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:01.606796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/14/24 13:21:02.199
  STEP: looking for the results for each expected name from probers @ 12/14/24 13:21:02.202
  I1214 13:21:02.213270 19 dns_common.go:552] DNS probes using dns-test-cbe533b0-13b7-413c-8716-aa64be43e1c6 succeeded

  STEP: changing the externalName to bar.example.com @ 12/14/24 13:21:02.213
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-903.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-903.svc.cluster.local; sleep 1; done
   @ 12/14/24 13:21:02.22
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-903.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-903.svc.cluster.local; sleep 1; done
   @ 12/14/24 13:21:02.22
  STEP: creating a second pod to probe DNS @ 12/14/24 13:21:02.22
  STEP: submitting the pod to kubernetes @ 12/14/24 13:21:02.22
  E1214 13:21:02.607443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:03.607765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/14/24 13:21:04.235
  STEP: looking for the results for each expected name from probers @ 12/14/24 13:21:04.238
  I1214 13:21:04.243649 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-903.svc.cluster.local from pod  dns-903/dns-test-8dcf4447-9f33-4379-821e-59d2d166f45c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1214 13:21:04.246968 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-903.svc.cluster.local from pod  dns-903/dns-test-8dcf4447-9f33-4379-821e-59d2d166f45c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1214 13:21:04.246997 19 dns_common.go:489] Lookups using dns-903/dns-test-8dcf4447-9f33-4379-821e-59d2d166f45c failed for: [wheezy_udp@dns-test-service-3.dns-903.svc.cluster.local jessie_udp@dns-test-service-3.dns-903.svc.cluster.local]

  I1214 13:21:04.252365 19 dns_common.go:495] Pod client logs for webserver: 
  I1214 13:21:04.259361 19 dns_common.go:495] Pod client logs for querier: 
  I1214 13:21:04.265092 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1214 13:21:04.607761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:05.607861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:06.607988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:07.608168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:08.608530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:21:09.248410 19 dns_common.go:552] DNS probes using dns-test-8dcf4447-9f33-4379-821e-59d2d166f45c succeeded

  STEP: changing the service to type=ClusterIP @ 12/14/24 13:21:09.248
  W1214 13:21:09.261226      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-903.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-903.svc.cluster.local; sleep 1; done
   @ 12/14/24 13:21:09.261
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-903.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-903.svc.cluster.local; sleep 1; done
   @ 12/14/24 13:21:09.261
  STEP: creating a third pod to probe DNS @ 12/14/24 13:21:09.261
  STEP: submitting the pod to kubernetes @ 12/14/24 13:21:09.266
  E1214 13:21:09.609087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:10.609176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:11.609310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:12.609548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:13.609701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:14.609930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:15.610924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:16.611174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/14/24 13:21:17.296
  STEP: looking for the results for each expected name from probers @ 12/14/24 13:21:17.299
  I1214 13:21:17.309335 19 dns_common.go:552] DNS probes using dns-test-57f93746-5b4b-491c-93cc-44eb400a4ef1 succeeded

  STEP: deleting the pod @ 12/14/24 13:21:17.309
  STEP: deleting the pod @ 12/14/24 13:21:17.32
  STEP: deleting the pod @ 12/14/24 13:21:17.331
  STEP: deleting the test externalName service @ 12/14/24 13:21:17.344
  I1214 13:21:17.356240 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-903" for this suite. @ 12/14/24 13:21:17.361
• [17.214 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/14/24 13:21:17.366
  I1214 13:21:17.366367 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename chunking @ 12/14/24 13:21:17.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:21:17.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:21:17.385
  STEP: creating a large number of resources @ 12/14/24 13:21:17.387
  E1214 13:21:17.612118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:18.612181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:19.612880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:20.613332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:21.614252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:22.615310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:23.615450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:24.615919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:25.616333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:26.616597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:27.616687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:28.616860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:29.617779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:30.618425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:31.618651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:32.618867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:33.619541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:34.619771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 12/14/24 13:21:35.072
  I1214 13:21:35.122443 19 chunking.go:163] Retrieved 40/40 results with rv 32187 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/14/24 13:21:35.122
  E1214 13:21:35.619996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:36.620007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:37.620917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:38.621819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:39.621919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:40.622209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:41.622328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:42.623228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:43.623336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:44.624207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:45.625219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:46.626232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:47.626419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:48.627225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:49.628104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:50.628212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:51.628293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:52.629286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:53.630214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:54.630386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:21:55.130212 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:21:55.630601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:56.630843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:57.630934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:58.631148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:21:59.632214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:00.632334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:01.633409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:02.633554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:03.633750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:04.633962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:05.634236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:06.634332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:07.634580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:08.634656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:09.634812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:10.634902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:11.635152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:12.635367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:13.635576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:14.635790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:22:15.127589 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:22:15.636057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:16.636374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:17.636574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:18.636768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:19.637065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:20.637275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:21.638225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:22.638366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:23.638630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:24.638839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:25.639118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:26.639195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:27.639372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:28.639707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:29.639864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:30.639963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:31.640155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:32.640399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:33.640520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:34.640603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:22:35.127840 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:22:35.641111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:36.641329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:37.642260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:38.642513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:39.643525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:40.644153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:41.645218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:42.645416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:43.645617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:44.645825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:45.646044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:46.646355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:47.646696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:48.647226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:49.647479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:50.648466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:51.648605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:52.648789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:53.649069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:54.649265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:22:55.126848 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:22:55.649321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:56.649625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:57.649729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:58.649832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:22:59.650132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:00.650313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:01.650462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:02.650620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:03.650794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:04.651715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:05.651817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:06.651917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:07.652218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:08.653215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:09.654211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:10.654431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:11.654680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:12.654979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:13.655222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:14.655430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:23:15.128861 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:23:15.656326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:16.656443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:17.657149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:18.657372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:19.657621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:20.657878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:21.658224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:22.659213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:23.660238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:24.660416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:25.660512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:26.661338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:27.662230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:28.662343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:29.663224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:30.663482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:31.663593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:32.664229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:33.665225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:34.665488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:23:35.128085 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:23:35.666503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:36.666912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:37.667100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:38.667315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:39.667590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:40.667787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:41.668213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:42.669221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:43.669403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:44.669634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:45.669728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:46.669833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:47.670157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:48.670407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:49.670520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:50.670638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:51.670766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:52.670873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:53.671631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:54.671725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:23:55.129509 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:23:55.671891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:56.672144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:57.673212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:58.673457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:23:59.673668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:00.673877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:01.674148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:02.674365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:03.674569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:04.675315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:05.675573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:06.675724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:07.675937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:08.676166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:09.676382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:10.676606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:11.676972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:12.677223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:13.677425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:14.677730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:24:15.128451 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:24:15.677878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:16.678258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:17.678411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:18.679230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:19.679433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:20.679670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:21.679847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:22.680071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:23.680160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:24.680981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:25.681146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:26.681275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:27.681644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:28.681743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:29.682332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:30.682434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:31.683217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:32.684228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:33.684329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:34.684444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:24:35.127618 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:24:35.685186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:36.685516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:37.685846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:38.686373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:39.686492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:40.687465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:41.687798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:42.688258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:43.688389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:44.688583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:45.688824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:46.689077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:47.689228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:48.689457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:49.689650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:50.690586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:51.690699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:52.691667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:53.691761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:54.692479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:24:55.129196 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:24:55.693212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:56.693565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:57.694294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:58.694530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:24:59.695255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:00.695452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:01.695807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:02.696787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:03.696898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:04.697301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:05.697500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:06.697851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:07.698067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:08.698270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:09.698616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:10.698838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:11.699215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:12.699458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:13.700400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:14.700608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:25:15.127886 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:25:15.701223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:16.701323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:17.702227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:18.703215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:19.703318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:20.704211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:21.704574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:22.705233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:23.706236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:24.706532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:25.707224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:26.708283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:27.708450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:28.708600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:29.708728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:30.708862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:31.709611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:32.709903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:33.710523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:34.711558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:25:35.127610 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:25:35.712103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:36.712153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:37.713219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:38.714224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:39.714421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:40.715296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:41.715582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:42.715883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:43.716174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:44.716430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:45.717405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:46.717735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:47.718094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:48.718387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:49.718743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:50.719384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:51.719609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:52.719855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:53.720092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:54.720171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:25:55.127672 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:25:55.720408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:56.720968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:57.721177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:58.721375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:25:59.722241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:00.722485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:01.722589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:02.722664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:03.723207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:04.723392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:05.724334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:06.724702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:07.724949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:08.725225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:09.726231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:10.726306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:11.726496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:12.727486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:13.727741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:14.727885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:26:15.128454 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:26:15.728306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:16.728604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:17.728812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:18.729166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:19.730242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:20.730290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:21.731221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:22.732220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:23.732328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:24.733209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:25.733291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:26.733565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:27.734233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:28.734399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:29.734624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:30.735315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:31.735427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:32.735522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:33.735746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:34.735955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:26:35.129113 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:26:35.736332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:36.736416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:37.736609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:38.736877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:39.736992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:40.737310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:41.738237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:42.738318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:43.739243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:44.739348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:45.740388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:46.740542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:47.740626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:48.741227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:49.742309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:50.743363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:51.743473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:52.743814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:53.744361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:54.744540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:26:55.127965 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:26:55.745454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:56.745654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:57.745865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:58.746105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:26:59.746355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:00.747297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:01.747592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:02.748235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:03.748549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:04.748780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:05.749593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:06.749692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:07.749860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:08.749976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:09.750251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:10.751333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:11.751569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:12.751669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:13.751780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:14.751964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:27:15.129622 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:27:15.752324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:16.753216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:17.753545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:18.754215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:19.755227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:20.755294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:21.755571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:22.755802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:23.756259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:24.756343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:25.756490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:26.756685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:27.756909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:28.757262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:29.757448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:30.757507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:31.757696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:32.757930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:33.758144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:34.758343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:27:35.127974 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:27:35.758439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:36.758503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:37.758830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:38.759105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:39.759288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:40.759377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:41.760236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:42.760366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:43.760731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:44.760867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:45.761392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:46.762256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:47.763214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:48.764215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:49.764417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:50.765473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:51.765649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:52.766409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:53.767353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:54.767450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:27:55.127535 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:27:55.768312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:56.768497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:57.768706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:58.769224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:27:59.769418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:00.769499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:01.769706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:02.769898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:03.770046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:04.771031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:05.771474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:06.772212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:07.773232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:08.773404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:09.774220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:10.774355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:11.774562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:12.775246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:13.775508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:14.776218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:28:15.128448 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:28:15.777143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:16.777412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:17.777897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:18.778119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:19.778309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:20.778430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:21.778633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:22.778955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:23.779256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:24.779546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:25.780588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:26.780692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:27.780800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:28.781260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:29.782231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:30.782306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:31.782395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:32.783213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:33.784227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:34.785269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:28:35.128703 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:28:35.785301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:36.785573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:37.785655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:38.786121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:39.786183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:40.786482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:41.786754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:42.786971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:43.787170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:44.787392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:45.787430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:46.787629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:47.788224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:48.788441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:49.788653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:50.789497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:51.789841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:52.789946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:53.790046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:54.790143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:28:55.127900 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:28:55.790634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:56.791540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:57.792224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:58.793207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:28:59.793401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:00.794343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:01.794688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:02.794941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:03.795172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:04.795377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:05.796362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:06.796549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:07.797532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:08.797812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:09.798096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:10.798434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:11.798677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:12.798900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:13.799151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:14.799434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:29:15.127980 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:29:15.800392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:16.800991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:17.801158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:18.801237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:19.802219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:20.802302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:21.803210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:22.804215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:23.805248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:24.806206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:25.806319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:26.807291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:27.807479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:28.807705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:29.807939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:30.808848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:31.809163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:32.809380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:33.809746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:34.810089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:29:35.127238 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:29:35.810522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:36.810612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:37.810741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:38.810929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:39.811681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:40.812371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:41.813216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:42.813438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:43.814214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:44.814527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:45.815514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:46.815740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:47.815998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:48.816202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:49.817222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:50.817391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:51.818285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:52.818600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:53.818896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:54.819225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:29:55.128621 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:29:55.819498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:56.819659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:57.819929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:58.820164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:29:59.820359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:00.821423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:01.822214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:02.823212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:03.824231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:04.824486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:05.825363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:06.825487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:07.825584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:08.825898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:09.826165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:10.826393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:11.826646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:12.827704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:13.827984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:14.828216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:30:15.127615 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:30:15.828353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:16.828489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:17.829252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:18.829423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:19.829637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:20.830503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:21.830559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:22.831217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:23.831342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:24.831427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:25.832311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:26.832404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:27.832535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:28.832633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:29.832717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:30.833427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:31.833613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:32.834218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:33.834858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:34.834984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:30:35.129036 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:30:35.835591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:36.835913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:37.836218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:38.836578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:39.836433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:40.836516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:41.836732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:42.836839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:43.837077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:44.837332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:45.838402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:46.838536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:47.838686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:48.838981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:49.839218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:50.839501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:51.839728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:52.839990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:53.840220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:54.840423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:30:55.127786 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:30:55.841424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:56.842215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:57.843222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:58.844218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:30:59.844396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:00.845443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:01.845638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:02.846228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:03.846479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:04.846691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:05.847600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:06.847918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:07.848197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:08.849219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:09.849316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:10.849380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:11.849607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:12.849832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:13.849938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:14.850653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:15.128065 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1214 13:31:15.851383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:16.851488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:17.852312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:18.853220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:19.854255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:20.854339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:21.854581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:22.854821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:23.854983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:24.855178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:25.855368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:26.855581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:27.855770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:28.855975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:29.856232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:30.856372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:31.856653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:32.856920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:33.857199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:34.857488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:35.128306 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1214 13:31:35.128344 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/14/24 13:31:35.128
  STEP: retrieving all remaining pages @ 12/14/24 13:31:35.132
  I1214 13:31:35.135595 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1214 13:31:35.139915 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1214 13:31:35.143786 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1214 13:31:35.147043 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1214 13:31:35.151722 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1214 13:31:35.155408 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1214 13:31:35.158274 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzMzMzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1214 13:31:35.163441 19 chunking.go:221] Retrieved 40/40 results with rv 33330 and continue 
  I1214 13:31:35.163574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9345" for this suite. @ 12/14/24 13:31:35.166
• [617.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/14/24 13:31:35.175
  I1214 13:31:35.175962 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename proxy @ 12/14/24 13:31:35.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:31:35.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:31:35.195
  STEP: starting an echo server on multiple ports @ 12/14/24 13:31:35.206
  STEP: creating replication controller proxy-service-54g8r in namespace proxy-2034 @ 12/14/24 13:31:35.206
  I1214 13:31:35.212665      19 runners.go:193] Created replication controller with name: proxy-service-54g8r, namespace: proxy-2034, replica count: 1
  E1214 13:31:35.858487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:36.264551      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:36.859504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:37.264739      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:37.860335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:38.265145      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:38.860718      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:39.265353      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:39.860998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:40.265585      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:40.861222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:41.265854      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:41.861324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:42.266118      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:42.861415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:43.267212      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:43.861523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:44.268273      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:44.861624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:45.269256      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1214 13:31:45.861741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:46.269425      19 runners.go:193] proxy-service-54g8r Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 13:31:46.273834 19 proxy.go:230] setup took 11.076258014s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/14/24 13:31:46.273
  I1214 13:31:46.279126 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 5.148706ms)
  I1214 13:31:46.279581 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.661631ms)
  I1214 13:31:46.279788 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.704202ms)
  I1214 13:31:46.281143 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 6.981174ms)
  I1214 13:31:46.281320 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 6.963459ms)
  I1214 13:31:46.282324 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 8.120711ms)
  I1214 13:31:46.282422 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 8.287384ms)
  I1214 13:31:46.282421 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 8.239316ms)
  I1214 13:31:46.282586 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 8.258322ms)
  I1214 13:31:46.285369 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 11.141254ms)
  I1214 13:31:46.285369 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 11.11947ms)
  I1214 13:31:46.285548 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 11.259959ms)
  I1214 13:31:46.287005 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 12.998944ms)
  I1214 13:31:46.287046 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 12.740028ms)
  I1214 13:31:46.287206 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 12.868296ms)
  I1214 13:31:46.287236 19 proxy.go:558] (0) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 12.966413ms)
  I1214 13:31:46.290889 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.627092ms)
  I1214 13:31:46.291877 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 4.260534ms)
  I1214 13:31:46.292052 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 4.636405ms)
  I1214 13:31:46.292057 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 4.800769ms)
  I1214 13:31:46.292160 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 4.507287ms)
  I1214 13:31:46.292754 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.068886ms)
  I1214 13:31:46.292998 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 5.53563ms)
  I1214 13:31:46.293087 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.546227ms)
  I1214 13:31:46.293455 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 5.825205ms)
  I1214 13:31:46.293840 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 6.321707ms)
  I1214 13:31:46.293852 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 6.274228ms)
  I1214 13:31:46.294084 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.41802ms)
  I1214 13:31:46.294262 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 6.70031ms)
  I1214 13:31:46.295406 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.914741ms)
  I1214 13:31:46.295450 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 8.008288ms)
  I1214 13:31:46.295490 19 proxy.go:558] (1) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.892724ms)
  I1214 13:31:46.299325 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.721146ms)
  I1214 13:31:46.300088 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 4.332199ms)
  I1214 13:31:46.300110 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 4.583714ms)
  I1214 13:31:46.300453 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.595506ms)
  I1214 13:31:46.300701 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 5.186182ms)
  I1214 13:31:46.301413 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 5.766879ms)
  I1214 13:31:46.301679 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.994275ms)
  I1214 13:31:46.302043 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 6.204824ms)
  I1214 13:31:46.302542 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 6.818999ms)
  I1214 13:31:46.302559 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 6.892219ms)
  I1214 13:31:46.302699 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 6.912077ms)
  I1214 13:31:46.302819 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.118882ms)
  I1214 13:31:46.302827 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 6.93641ms)
  I1214 13:31:46.302844 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 6.969149ms)
  I1214 13:31:46.303507 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.700323ms)
  I1214 13:31:46.304092 19 proxy.go:558] (2) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 8.318465ms)
  I1214 13:31:46.307622 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 3.442021ms)
  I1214 13:31:46.308204 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.986877ms)
  I1214 13:31:46.309001 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.596069ms)
  I1214 13:31:46.309000 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 4.539431ms)
  I1214 13:31:46.309972 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.48961ms)
  I1214 13:31:46.309986 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.697341ms)
  I1214 13:31:46.309997 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 5.556097ms)
  I1214 13:31:46.310839 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.595056ms)
  I1214 13:31:46.311324 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.051506ms)
  I1214 13:31:46.311472 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 7.048953ms)
  I1214 13:31:46.311764 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.383778ms)
  I1214 13:31:46.311977 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 7.631911ms)
  I1214 13:31:46.312035 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 7.918942ms)
  I1214 13:31:46.312054 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.554461ms)
  I1214 13:31:46.312065 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.702819ms)
  I1214 13:31:46.312283 19 proxy.go:558] (3) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.956796ms)
  I1214 13:31:46.315650 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 3.005104ms)
  I1214 13:31:46.315669 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.366762ms)
  I1214 13:31:46.316161 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 3.800694ms)
  I1214 13:31:46.317245 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 4.626937ms)
  I1214 13:31:46.317272 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.839628ms)
  I1214 13:31:46.317673 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 5.339837ms)
  I1214 13:31:46.317689 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.150942ms)
  I1214 13:31:46.317961 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.486799ms)
  I1214 13:31:46.318047 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 5.470728ms)
  I1214 13:31:46.318362 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 5.75899ms)
  I1214 13:31:46.319193 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 6.634492ms)
  I1214 13:31:46.319243 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 6.864042ms)
  I1214 13:31:46.319565 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.110132ms)
  I1214 13:31:46.319740 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.332036ms)
  I1214 13:31:46.319986 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.466618ms)
  I1214 13:31:46.320214 19 proxy.go:558] (4) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.712635ms)
  I1214 13:31:46.324082 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 3.75534ms)
  I1214 13:31:46.324648 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.199004ms)
  I1214 13:31:46.325988 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.595ms)
  I1214 13:31:46.326242 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.820006ms)
  I1214 13:31:46.326655 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 6.121195ms)
  I1214 13:31:46.326804 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.23598ms)
  I1214 13:31:46.326807 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 6.437322ms)
  I1214 13:31:46.327084 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 6.532102ms)
  I1214 13:31:46.327278 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 6.924846ms)
  I1214 13:31:46.327332 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.923945ms)
  I1214 13:31:46.327529 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.062775ms)
  I1214 13:31:46.327533 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 7.249102ms)
  I1214 13:31:46.327618 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 7.033313ms)
  I1214 13:31:46.327782 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.542926ms)
  I1214 13:31:46.327918 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.420732ms)
  I1214 13:31:46.330185 19 proxy.go:558] (5) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 9.667697ms)
  I1214 13:31:46.333541 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 3.260926ms)
  I1214 13:31:46.333567 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 3.317834ms)
  I1214 13:31:46.334668 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.183731ms)
  I1214 13:31:46.335196 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 4.985845ms)
  I1214 13:31:46.335300 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 4.847356ms)
  I1214 13:31:46.335681 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.475005ms)
  I1214 13:31:46.335689 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.25838ms)
  I1214 13:31:46.335696 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.30172ms)
  I1214 13:31:46.336386 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.090688ms)
  I1214 13:31:46.336660 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 6.247372ms)
  I1214 13:31:46.336661 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 6.305839ms)
  I1214 13:31:46.336676 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 6.209054ms)
  I1214 13:31:46.337079 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 6.768206ms)
  I1214 13:31:46.337093 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.593106ms)
  I1214 13:31:46.337696 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.327205ms)
  I1214 13:31:46.339262 19 proxy.go:558] (6) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 8.922923ms)
  I1214 13:31:46.342798 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 3.514668ms)
  I1214 13:31:46.343732 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.314121ms)
  I1214 13:31:46.343969 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.432217ms)
  I1214 13:31:46.344989 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.349273ms)
  I1214 13:31:46.345013 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 5.685046ms)
  I1214 13:31:46.345101 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 5.710747ms)
  I1214 13:31:46.345940 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 6.426126ms)
  I1214 13:31:46.345965 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 6.402366ms)
  I1214 13:31:46.345965 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.595294ms)
  I1214 13:31:46.346250 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 6.794296ms)
  I1214 13:31:46.346545 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 7.111581ms)
  I1214 13:31:46.346654 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.03023ms)
  I1214 13:31:46.346654 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 7.157463ms)
  I1214 13:31:46.346673 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 7.069757ms)
  I1214 13:31:46.346709 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.230536ms)
  I1214 13:31:46.347298 19 proxy.go:558] (7) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.717427ms)
  I1214 13:31:46.350265 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 2.838142ms)
  I1214 13:31:46.350338 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 2.871731ms)
  I1214 13:31:46.352067 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 4.365186ms)
  I1214 13:31:46.352151 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.505154ms)
  I1214 13:31:46.352551 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 5.061945ms)
  I1214 13:31:46.352558 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 5.016884ms)
  I1214 13:31:46.352571 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.228669ms)
  I1214 13:31:46.352623 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.117675ms)
  I1214 13:31:46.352862 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 5.544358ms)
  I1214 13:31:46.352951 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 5.321055ms)
  I1214 13:31:46.354006 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.41016ms)
  I1214 13:31:46.354040 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 6.374546ms)
  I1214 13:31:46.354212 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 6.602146ms)
  I1214 13:31:46.354242 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 6.666182ms)
  I1214 13:31:46.354844 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.28485ms)
  I1214 13:31:46.355106 19 proxy.go:558] (8) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.424189ms)
  I1214 13:31:46.359488 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.357714ms)
  I1214 13:31:46.359822 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 4.488336ms)
  I1214 13:31:46.359933 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 4.698289ms)
  I1214 13:31:46.360060 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.790526ms)
  I1214 13:31:46.360153 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 4.742062ms)
  I1214 13:31:46.360370 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.017207ms)
  I1214 13:31:46.360383 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 5.197926ms)
  I1214 13:31:46.360579 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.374187ms)
  I1214 13:31:46.361462 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 5.99532ms)
  I1214 13:31:46.362121 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 6.725397ms)
  I1214 13:31:46.362134 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 6.689816ms)
  I1214 13:31:46.362333 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 7.024009ms)
  I1214 13:31:46.362691 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 7.438315ms)
  I1214 13:31:46.363441 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 8.153779ms)
  I1214 13:31:46.363789 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 8.360009ms)
  I1214 13:31:46.364650 19 proxy.go:558] (9) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 9.268448ms)
  I1214 13:31:46.368238 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 3.547401ms)
  I1214 13:31:46.369163 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 4.080249ms)
  I1214 13:31:46.369196 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.154334ms)
  I1214 13:31:46.369264 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.276047ms)
  I1214 13:31:46.370507 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.63756ms)
  I1214 13:31:46.370509 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 5.5772ms)
  I1214 13:31:46.370521 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 5.552877ms)
  I1214 13:31:46.370532 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 5.621423ms)
  I1214 13:31:46.371259 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.481141ms)
  I1214 13:31:46.371372 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 6.520282ms)
  I1214 13:31:46.371405 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 6.514526ms)
  I1214 13:31:46.371411 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 6.349231ms)
  I1214 13:31:46.371616 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.654795ms)
  I1214 13:31:46.371633 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 6.81045ms)
  I1214 13:31:46.372399 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.393514ms)
  I1214 13:31:46.372413 19 proxy.go:558] (10) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.59557ms)
  I1214 13:31:46.376494 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 4.016228ms)
  I1214 13:31:46.376503 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 3.798113ms)
  I1214 13:31:46.377035 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 4.394328ms)
  I1214 13:31:46.377145 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 4.707493ms)
  I1214 13:31:46.377429 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 4.637254ms)
  I1214 13:31:46.377883 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 5.147347ms)
  I1214 13:31:46.377997 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 5.189784ms)
  I1214 13:31:46.378218 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.447508ms)
  I1214 13:31:46.378233 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.634856ms)
  I1214 13:31:46.378337 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.69585ms)
  I1214 13:31:46.378341 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 5.628973ms)
  I1214 13:31:46.378588 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 5.763321ms)
  I1214 13:31:46.379781 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.219929ms)
  I1214 13:31:46.379908 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 7.244314ms)
  I1214 13:31:46.379952 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.416267ms)
  I1214 13:31:46.380406 19 proxy.go:558] (11) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.652795ms)
  I1214 13:31:46.383978 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.551228ms)
  I1214 13:31:46.384418 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 3.824893ms)
  I1214 13:31:46.384697 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 3.91033ms)
  I1214 13:31:46.385273 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 4.622713ms)
  I1214 13:31:46.385933 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 5.379077ms)
  I1214 13:31:46.386358 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 5.785912ms)
  I1214 13:31:46.386388 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 5.776793ms)
  I1214 13:31:46.386546 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.860119ms)
  I1214 13:31:46.386831 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 6.298318ms)
  I1214 13:31:46.386971 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.523257ms)
  I1214 13:31:46.387422 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.700862ms)
  I1214 13:31:46.387439 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 6.682432ms)
  I1214 13:31:46.387551 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 6.883528ms)
  I1214 13:31:46.388132 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 7.50062ms)
  I1214 13:31:46.388440 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.736871ms)
  I1214 13:31:46.389187 19 proxy.go:558] (12) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 8.691186ms)
  I1214 13:31:46.392273 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 3.037897ms)
  I1214 13:31:46.393270 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 3.816451ms)
  I1214 13:31:46.393757 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 4.455109ms)
  I1214 13:31:46.394698 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 5.150757ms)
  I1214 13:31:46.394698 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 5.437659ms)
  I1214 13:31:46.394708 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 5.233663ms)
  I1214 13:31:46.395076 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.745933ms)
  I1214 13:31:46.395190 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.849629ms)
  I1214 13:31:46.395216 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.686119ms)
  I1214 13:31:46.395625 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 6.223564ms)
  I1214 13:31:46.396011 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 6.521636ms)
  I1214 13:31:46.396041 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 6.653938ms)
  I1214 13:31:46.396334 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 6.899667ms)
  I1214 13:31:46.397279 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.907846ms)
  I1214 13:31:46.397493 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 8.074473ms)
  I1214 13:31:46.397511 19 proxy.go:558] (13) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 7.999987ms)
  I1214 13:31:46.401513 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 3.812766ms)
  I1214 13:31:46.401533 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.002279ms)
  I1214 13:31:46.403153 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 5.57385ms)
  I1214 13:31:46.403160 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.298952ms)
  I1214 13:31:46.403173 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.572017ms)
  I1214 13:31:46.403174 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.368385ms)
  I1214 13:31:46.403736 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 5.895923ms)
  I1214 13:31:46.404069 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 6.246333ms)
  I1214 13:31:46.404068 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 6.314364ms)
  I1214 13:31:46.404333 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.542816ms)
  I1214 13:31:46.404364 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 6.593215ms)
  I1214 13:31:46.404520 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 6.846131ms)
  I1214 13:31:46.404522 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 6.802926ms)
  I1214 13:31:46.404534 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 6.657679ms)
  I1214 13:31:46.406074 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 8.436359ms)
  I1214 13:31:46.406762 19 proxy.go:558] (14) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 9.211518ms)
  I1214 13:31:46.411763 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.941043ms)
  I1214 13:31:46.412042 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.033504ms)
  I1214 13:31:46.412357 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 5.282062ms)
  I1214 13:31:46.412375 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 5.317127ms)
  I1214 13:31:46.412373 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 5.576853ms)
  I1214 13:31:46.412562 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.780012ms)
  I1214 13:31:46.413480 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 6.43598ms)
  I1214 13:31:46.413488 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 6.621532ms)
  I1214 13:31:46.413497 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 6.651785ms)
  I1214 13:31:46.414251 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.330907ms)
  I1214 13:31:46.414319 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 7.434258ms)
  I1214 13:31:46.414437 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 7.483673ms)
  I1214 13:31:46.414965 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 7.973481ms)
  I1214 13:31:46.414998 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 8.020009ms)
  I1214 13:31:46.415241 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 8.307009ms)
  I1214 13:31:46.415502 19 proxy.go:558] (15) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 8.600783ms)
  I1214 13:31:46.418802 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 3.27243ms)
  I1214 13:31:46.419379 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.68325ms)
  I1214 13:31:46.419500 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 3.844435ms)
  I1214 13:31:46.419744 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 3.950898ms)
  I1214 13:31:46.419758 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.943494ms)
  I1214 13:31:46.421324 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 5.587521ms)
  I1214 13:31:46.421324 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 5.572186ms)
  I1214 13:31:46.421361 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.67973ms)
  I1214 13:31:46.421592 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.954493ms)
  I1214 13:31:46.421699 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 5.931944ms)
  I1214 13:31:46.421768 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 6.204526ms)
  I1214 13:31:46.421848 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 5.9868ms)
  I1214 13:31:46.421871 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 6.041633ms)
  I1214 13:31:46.422689 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 6.973922ms)
  I1214 13:31:46.422703 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 6.855098ms)
  I1214 13:31:46.423175 19 proxy.go:558] (16) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.56335ms)
  I1214 13:31:46.427917 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 4.713998ms)
  I1214 13:31:46.428533 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 5.201428ms)
  I1214 13:31:46.428556 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 5.172066ms)
  I1214 13:31:46.428579 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 5.280404ms)
  I1214 13:31:46.428912 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 5.495857ms)
  I1214 13:31:46.429330 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.87531ms)
  I1214 13:31:46.429465 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 6.064924ms)
  I1214 13:31:46.430080 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 6.804048ms)
  I1214 13:31:46.430432 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.081082ms)
  I1214 13:31:46.430443 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 7.18636ms)
  I1214 13:31:46.430654 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 7.219451ms)
  I1214 13:31:46.430823 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 7.508667ms)
  I1214 13:31:46.430900 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.531899ms)
  I1214 13:31:46.430910 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 7.427028ms)
  I1214 13:31:46.431279 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 8.053765ms)
  I1214 13:31:46.431336 19 proxy.go:558] (17) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 7.865573ms)
  I1214 13:31:46.435434 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 3.820894ms)
  I1214 13:31:46.435994 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 4.314206ms)
  I1214 13:31:46.436178 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 4.820347ms)
  I1214 13:31:46.436571 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 4.908579ms)
  I1214 13:31:46.438058 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 6.508866ms)
  I1214 13:31:46.438085 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 6.442826ms)
  I1214 13:31:46.438089 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.586056ms)
  I1214 13:31:46.438491 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 6.792752ms)
  I1214 13:31:46.438694 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 7.214787ms)
  I1214 13:31:46.438707 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 7.253246ms)
  I1214 13:31:46.438863 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.292599ms)
  I1214 13:31:46.438863 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 7.505995ms)
  I1214 13:31:46.438877 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 7.344018ms)
  I1214 13:31:46.438882 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 7.29598ms)
  I1214 13:31:46.439097 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.700022ms)
  I1214 13:31:46.439801 19 proxy.go:558] (18) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 8.177944ms)
  I1214 13:31:46.443262 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:443/proxy/tlsrewritem... (200; 3.440464ms)
  I1214 13:31:46.443603 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:160/proxy/: foo (200; 3.683414ms)
  I1214 13:31:46.443603 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:160/proxy/: foo (200; 3.621259ms)
  I1214 13:31:46.444612 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:1080/proxy/rewriteme">... (200; 4.548261ms)
  I1214 13:31:46.444778 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:462/proxy/: tls qux (200; 4.649663ms)
  I1214 13:31:46.444802 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/https:proxy-service-54g8r-qljks:460/proxy/: tls baz (200; 4.72265ms)
  I1214 13:31:46.445417 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.403718ms)
  I1214 13:31:46.445438 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks/proxy/rewriteme">test</a> (200; 5.329456ms)
  I1214 13:31:46.445587 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/http:proxy-service-54g8r-qljks:162/proxy/: bar (200; 5.398638ms)
  I1214 13:31:46.446012 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/: <a href="/api/v1/namespaces/proxy-2034/pods/proxy-service-54g8r-qljks:1080/proxy/rewriteme">test<... (200; 6.047132ms)
  I1214 13:31:46.446470 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname1/proxy/: tls baz (200; 6.634558ms)
  I1214 13:31:46.446716 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname2/proxy/: bar (200; 6.624631ms)
  I1214 13:31:46.446923 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/services/https:proxy-service-54g8r:tlsportname2/proxy/: tls qux (200; 7.020682ms)
  I1214 13:31:46.446927 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/services/http:proxy-service-54g8r:portname1/proxy/: foo (200; 6.885236ms)
  I1214 13:31:46.447096 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname1/proxy/: foo (200; 6.947378ms)
  I1214 13:31:46.448101 19 proxy.go:558] (19) /api/v1/namespaces/proxy-2034/services/proxy-service-54g8r:portname2/proxy/: bar (200; 7.937389ms)
  STEP: deleting ReplicationController proxy-service-54g8r in namespace proxy-2034, will wait for the garbage collector to delete the pods @ 12/14/24 13:31:46.448
  I1214 13:31:46.510471 19 resources.go:139] Deleting ReplicationController proxy-service-54g8r took: 7.556382ms
  I1214 13:31:46.611389 19 resources.go:163] Terminating ReplicationController proxy-service-54g8r pods took: 100.915466ms
  E1214 13:31:46.861947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:47.862685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:48.312520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2034" for this suite. @ 12/14/24 13:31:48.318
• [13.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 12/14/24 13:31:48.325
  I1214 13:31:48.325702 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:31:48.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:31:48.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:31:48.344
  STEP: validating cluster-info @ 12/14/24 13:31:48.345
  I1214 13:31:48.345656 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4745 cluster-info'
  I1214 13:31:48.388446 19 builder.go:146] stderr: ""
  I1214 13:31:48.388494 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1214 13:31:48.388603 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4745" for this suite. @ 12/14/24 13:31:48.392
• [0.076 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/14/24 13:31:48.401
  I1214 13:31:48.401455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename svcaccounts @ 12/14/24 13:31:48.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:31:48.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:31:48.424
  STEP: Creating ServiceAccount "e2e-sa-r6bbr"  @ 12/14/24 13:31:48.426
  I1214 13:31:48.430297 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-r6bbr"  @ 12/14/24 13:31:48.43
  I1214 13:31:48.437442 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I1214 13:31:48.437585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5946" for this suite. @ 12/14/24 13:31:48.44
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/14/24 13:31:48.447
  I1214 13:31:48.447890 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:31:48.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:31:48.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:31:48.464
  STEP: creating the pod @ 12/14/24 13:31:48.466
  STEP: submitting the pod to kubernetes @ 12/14/24 13:31:48.466
  W1214 13:31:48.476091      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1214 13:31:48.863457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:49.863631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/14/24 13:31:50.487
  STEP: updating the pod @ 12/14/24 13:31:50.49
  E1214 13:31:50.864114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:51.004742 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-6d0e1abf-c751-4186-b920-4cfb66204ad3"
  E1214 13:31:51.864141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:52.864192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:53.864415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:54.864543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:31:55.017217 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7763" for this suite. @ 12/14/24 13:31:55.021
• [6.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 12/14/24 13:31:55.029
  I1214 13:31:55.029719 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 13:31:55.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:31:55.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:31:55.051
  STEP: Creating a job @ 12/14/24 13:31:55.052
  STEP: Ensuring job reaches completions @ 12/14/24 13:31:55.059
  E1214 13:31:55.864842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:56.864984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:57.865261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:58.865460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:31:59.866482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:00.866545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:01.866780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:02.867091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:03.867588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:04.867810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:05.868675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:06.868913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:32:07.069375 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2214" for this suite. @ 12/14/24 13:32:07.073
• [12.053 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/14/24 13:32:07.082
  I1214 13:32:07.082400 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:32:07.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:32:07.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:32:07.101
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:32:07.103
  E1214 13:32:07.869054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:08.869279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:09.869370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:10.869416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:32:11.121
  I1214 13:32:11.126543 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-f428ea61-2431-4a31-bc98-5532d65ea705 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:32:11.142
  I1214 13:32:11.160001 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5048" for this suite. @ 12/14/24 13:32:11.164
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/14/24 13:32:11.175
  I1214 13:32:11.175309 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:32:11.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:32:11.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:32:11.198
  STEP: Creating projection with secret that has name projected-secret-test-map-e3058619-095a-4bfa-aa3c-c723a284dd9e @ 12/14/24 13:32:11.2
  STEP: Creating a pod to test consume secrets @ 12/14/24 13:32:11.204
  E1214 13:32:11.869648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:12.869975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:13.871010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:14.871352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:32:15.226
  I1214 13:32:15.230986 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-secrets-f6916cbf-1586-4497-87ba-f102d3048785 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:32:15.238
  I1214 13:32:15.259264 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1239" for this suite. @ 12/14/24 13:32:15.262
• [4.117 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/14/24 13:32:15.292
  I1214 13:32:15.292669 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename hostport @ 12/14/24 13:32:15.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:32:15.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:32:15.314
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/14/24 13:32:15.32
  E1214 13:32:15.872450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:16.872539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.38.181 on the node which pod1 resides and expect scheduled @ 12/14/24 13:32:17.34
  E1214 13:32:17.873251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:18.873378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:19.874325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:20.874506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:21.875576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:22.875795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:23.875934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:24.876192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:25.876386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:26.876618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:27.876784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:28.876960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.38.181 but use UDP protocol on the node which pod2 resides @ 12/14/24 13:32:29.379
  E1214 13:32:29.876978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:30.877387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:31.878324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:32.878436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/14/24 13:32:33.415
  I1214 13:32:33.415412 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.38.181 http://127.0.0.1:54323/hostname] Namespace:hostport-6129 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:32:33.415429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:32:33.415888 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:32:33.415928 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6129/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.38.181+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.38.181, port: 54323 @ 12/14/24 13:32:33.461
  I1214 13:32:33.461751 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.38.181:54323/hostname] Namespace:hostport-6129 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:32:33.461774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:32:33.462258 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:32:33.462304 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6129/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.38.181%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.38.181, port: 54323 UDP @ 12/14/24 13:32:33.503
  I1214 13:32:33.503467 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.38.181 54323] Namespace:hostport-6129 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:32:33.503485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:32:33.504001 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:32:33.504088 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6129/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.38.181+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1214 13:32:33.879231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:34.879480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:35.879506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:36.879723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:37.880040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:32:38.545574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6129" for this suite. @ 12/14/24 13:32:38.551
• [23.267 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 12/14/24 13:32:38.559
  I1214 13:32:38.559743 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 13:32:38.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:32:38.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:32:38.583
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/14/24 13:32:38.585
  I1214 13:32:38.592073 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3236  7d52d4eb-c633-481e-8f96-201e906df3d5 34242 0 2024-12-14 13:32:38 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-14 13:32:38 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wz6jq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wz6jq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1214 13:32:38.880487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:39.880262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/14/24 13:32:40.601
  I1214 13:32:40.601765 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3236 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:32:40.601784 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:32:40.602259 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:32:40.602300 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3236/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/14/24 13:32:40.654
  I1214 13:32:40.654760 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3236 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:32:40.654779 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:32:40.655285 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:32:40.655380 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3236/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1214 13:32:40.699680 19 dns.go:423] Deleting pod test-dns-nameservers...
  I1214 13:32:40.716606 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3236" for this suite. @ 12/14/24 13:32:40.72
• [2.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/14/24 13:32:40.728
  I1214 13:32:40.728300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename cronjob @ 12/14/24 13:32:40.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:32:40.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:32:40.75
  STEP: Creating a cronjob @ 12/14/24 13:32:40.751
  STEP: Ensuring more than one job is running at a time @ 12/14/24 13:32:40.758
  E1214 13:32:40.880810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:41.880916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:42.881525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:43.881616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:44.881677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:45.882543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:46.883238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:47.883324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:48.883574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:49.883752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:50.884289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:51.884392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:52.884453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:53.884546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:54.885143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:55.885438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:56.885907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:57.886124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:58.886808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:32:59.887195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:00.887290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:01.887493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:02.888062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:03.888214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:04.888738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:05.889476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:06.889587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:07.889866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:08.890829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:09.890946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:10.891050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:11.891183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:12.892005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:13.892308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:14.892985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:15.893201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:16.893740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:17.893886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:18.894722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:19.894823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:20.895151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:21.895297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:22.896144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:23.896353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:24.897153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:25.897488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:26.897607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:27.897785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:28.898735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:29.898931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:30.899923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:31.899960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:32.900625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:33.900863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:34.901518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:35.901612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:36.902219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:37.902310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:38.902423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:39.902514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:40.902975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:41.903296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:42.903507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:43.903620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:44.904221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:45.904387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:46.904611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:47.904702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:48.905490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:49.905716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:50.905726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:51.905941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:52.906731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:53.906890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:54.907727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:55.908537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:56.909605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:57.909724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:58.909792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:33:59.909898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/14/24 13:34:00.764
  STEP: Removing cronjob @ 12/14/24 13:34:00.768
  I1214 13:34:00.773908 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3335" for this suite. @ 12/14/24 13:34:00.776
• [80.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 12/14/24 13:34:00.782
  I1214 13:34:00.782854 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubelet-test @ 12/14/24 13:34:00.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:00.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:00.807
  STEP: Waiting for pod completion @ 12/14/24 13:34:00.821
  E1214 13:34:00.910640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:01.910748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:02.911535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:03.911614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:34:04.851330 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-685" for this suite. @ 12/14/24 13:34:04.855
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 12/14/24 13:34:04.862
  I1214 13:34:04.862974 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:34:04.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:04.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:04.884
  STEP: Setting up server cert @ 12/14/24 13:34:04.91
  E1214 13:34:04.911822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:34:05.117
  STEP: Deploying the webhook pod @ 12/14/24 13:34:05.125
  STEP: Wait for the deployment to be ready @ 12/14/24 13:34:05.136
  I1214 13:34:05.145377 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 13:34:05.911978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:06.912203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 13:34:07.156
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:34:07.167
  E1214 13:34:07.912342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:34:08.167755 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/14/24 13:34:08.176
  STEP: create a pod that should be updated by the webhook @ 12/14/24 13:34:08.187
  I1214 13:34:08.249911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6186" for this suite. @ 12/14/24 13:34:08.253
  STEP: Destroying namespace "webhook-markers-8538" for this suite. @ 12/14/24 13:34:08.257
• [3.401 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/14/24 13:34:08.264
  I1214 13:34:08.264211 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:34:08.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:08.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:08.283
  STEP: Creating projection with secret that has name projected-secret-test-map-b96a54cb-eda4-4389-9eac-49a6d014e43b @ 12/14/24 13:34:08.285
  STEP: Creating a pod to test consume secrets @ 12/14/24 13:34:08.29
  E1214 13:34:08.913082      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:09.913250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:10.914246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:11.914350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:34:12.311
  I1214 13:34:12.316241 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-1e404f75-1c37-48bb-9f7c-ccff99f28ede container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:34:12.324
  I1214 13:34:12.346700 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5836" for this suite. @ 12/14/24 13:34:12.351
• [4.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/14/24 13:34:12.356
  I1214 13:34:12.357041 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:34:12.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:12.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:12.378
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:34:12.379
  E1214 13:34:12.914462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:13.914838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:14.914923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:15.915629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:34:16.403
  I1214 13:34:16.406667 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-3a64da4e-36fa-40c8-8a3d-8c0d08e36075 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:34:16.413
  I1214 13:34:16.434040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3679" for this suite. @ 12/14/24 13:34:16.438
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 12/14/24 13:34:16.445
  I1214 13:34:16.445751 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:34:16.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:16.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:16.465
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/14/24 13:34:16.467
  I1214 13:34:16.467289 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-5975 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1214 13:34:16.519608 19 builder.go:146] stderr: ""
  I1214 13:34:16.519646 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/14/24 13:34:16.519
  E1214 13:34:16.916262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:17.917245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:18.917459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:19.917698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:20.918519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/14/24 13:34:21.571
  I1214 13:34:21.571176 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-5975 get pod e2e-test-httpd-pod -o json'
  I1214 13:34:21.617992 19 builder.go:146] stderr: ""
  I1214 13:34:21.618109 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-14T13:34:16Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5975\",\n        \"resourceVersion\": \"34739\",\n        \"uid\": \"143ea876-81c8-4677-a4b9-dfff4630be59\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-m2brf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-5-183\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-m2brf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-14T13:34:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-14T13:34:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-14T13:34:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-14T13:34:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-14T13:34:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e9fad8362f94f58b9a9f7038a8ea64daa41efd74413385c5e19ea999a041732f\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-14T13:34:17Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-m2brf\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.5.183\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.5.183\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.197.253\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.197.253\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-14T13:34:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/14/24 13:34:21.618
  I1214 13:34:21.618224 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-5975 replace -f -'
  I1214 13:34:21.712117 19 builder.go:146] stderr: ""
  I1214 13:34:21.712180 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/14/24 13:34:21.712
  I1214 13:34:21.715521 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-5975 delete pods e2e-test-httpd-pod'
  E1214 13:34:21.918660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:22.918940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:34:23.322295 19 builder.go:146] stderr: ""
  I1214 13:34:23.322354 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1214 13:34:23.322506 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5975" for this suite. @ 12/14/24 13:34:23.326
• [6.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 12/14/24 13:34:23.333
  I1214 13:34:23.333601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:34:23.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:23.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:23.356
  STEP: creating Agnhost RC @ 12/14/24 13:34:23.358
  I1214 13:34:23.358325 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-3075 create -f -'
  I1214 13:34:23.441460 19 builder.go:146] stderr: ""
  I1214 13:34:23.441503 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/14/24 13:34:23.441
  E1214 13:34:23.918996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:34:24.449487 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 13:34:24.449529 19 framework.go:733] Found 1 / 1
  I1214 13:34:24.449546 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/14/24 13:34:24.449
  I1214 13:34:24.453759 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 13:34:24.454041 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1214 13:34:24.454239 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-3075 patch pod agnhost-primary-vrb8m -p {"metadata":{"annotations":{"x":"y"}}}'
  I1214 13:34:24.517404 19 builder.go:146] stderr: ""
  I1214 13:34:24.517443 19 builder.go:147] stdout: "pod/agnhost-primary-vrb8m patched\n"
  STEP: checking annotations @ 12/14/24 13:34:24.517
  I1214 13:34:24.520194 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1214 13:34:24.520214 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1214 13:34:24.520307 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3075" for this suite. @ 12/14/24 13:34:24.522
• [1.197 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 12/14/24 13:34:24.53
  I1214 13:34:24.530987 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-preemption @ 12/14/24 13:34:24.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:34:24.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:34:24.55
  I1214 13:34:24.565341 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1214 13:34:24.919192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:25.919650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:26.919716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:27.919936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:28.920760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:29.920836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:30.921518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:31.921608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:32.922252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:33.923220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:34.924146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:35.924249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:36.924529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:37.924609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:38.926497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:39.926559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:40.927387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:41.927648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:42.928488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:43.928739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:44.929405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:45.929474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:46.930302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:47.930552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:48.931233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:49.931337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:50.932260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:51.932426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:52.932913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:53.933002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:54.933700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:55.934442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:56.935240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:57.935453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:58.936005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:34:59.936335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:00.937329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:01.937424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:02.937649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:03.937848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:04.938546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:05.938564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:06.939504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:07.939653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:08.940790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:09.940978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:10.941124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:11.941170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:12.941945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:13.942054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:14.942777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:15.943098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:16.943373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:17.943453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:18.944402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:19.944487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:20.945297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:21.945358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:22.946121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:23.946341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:35:24.571781 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/14/24 13:35:24.576
  I1214 13:35:24.597702 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1214 13:35:24.604837 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1214 13:35:24.618460 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1214 13:35:24.624297 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1214 13:35:24.639425 19 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1214 13:35:24.649445 19 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/14/24 13:35:24.649
  E1214 13:35:24.947063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:25.947477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/14/24 13:35:26.678
  E1214 13:35:26.947972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:27.948270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:28.948466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:29.948694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:35:30.761927 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6867" for this suite. @ 12/14/24 13:35:30.764
• [66.241 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/14/24 13:35:30.771
  I1214 13:35:30.771686 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 13:35:30.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:30.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:30.79
  STEP: Creating secret with name secret-test-816aea0c-57c4-4a7d-ba69-50b1f69e1c5a @ 12/14/24 13:35:30.792
  STEP: Creating a pod to test consume secrets @ 12/14/24 13:35:30.797
  E1214 13:35:30.949541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:31.949803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:35:32.821
  I1214 13:35:32.823910 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-8829c3aa-f2ee-4e45-8937-7d4cc23779a0 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:35:32.837
  I1214 13:35:32.871047 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7978" for this suite. @ 12/14/24 13:35:32.876
• [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/14/24 13:35:32.886
  I1214 13:35:32.886277 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename security-context-test @ 12/14/24 13:35:32.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:32.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:32.907
  E1214 13:35:32.950138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:33.950200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:34.951158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:35.951320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:35:36.940747 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2795" for this suite. @ 12/14/24 13:35:36.945
  E1214 13:35:36.951911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/14/24 13:35:36.952
  I1214 13:35:36.952536 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:35:36.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:36.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:36.974
  I1214 13:35:36.975772 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:35:37.952000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/14/24 13:35:38.191
  I1214 13:35:38.191924 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-2344 --namespace=crd-publish-openapi-2344 create -f -'
  I1214 13:35:38.249816 19 builder.go:146] stderr: ""
  I1214 13:35:38.249915 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6095-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1214 13:35:38.249961 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-2344 --namespace=crd-publish-openapi-2344 delete e2e-test-crd-publish-openapi-6095-crds test-cr'
  I1214 13:35:38.309985 19 builder.go:146] stderr: ""
  I1214 13:35:38.310072 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6095-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1214 13:35:38.310146 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-2344 --namespace=crd-publish-openapi-2344 apply -f -'
  I1214 13:35:38.368503 19 builder.go:146] stderr: ""
  I1214 13:35:38.368547 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6095-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1214 13:35:38.368729 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-2344 --namespace=crd-publish-openapi-2344 delete e2e-test-crd-publish-openapi-6095-crds test-cr'
  I1214 13:35:38.420669 19 builder.go:146] stderr: ""
  I1214 13:35:38.420768 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6095-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/14/24 13:35:38.42
  I1214 13:35:38.420863 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-2344 explain e2e-test-crd-publish-openapi-6095-crds'
  I1214 13:35:38.463867 19 builder.go:146] stderr: ""
  I1214 13:35:38.463924 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6095-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1214 13:35:38.952199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:35:39.738997 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2344" for this suite. @ 12/14/24 13:35:39.746
• [2.802 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/14/24 13:35:39.754
  I1214 13:35:39.754542 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sysctl @ 12/14/24 13:35:39.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:39.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:39.782
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/14/24 13:35:39.784
  STEP: Watching for error events or started pod @ 12/14/24 13:35:39.795
  E1214 13:35:39.953177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:40.953426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 12/14/24 13:35:41.8
  E1214 13:35:41.953899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:42.954001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 12/14/24 13:35:43.813
  STEP: Getting logs from the pod @ 12/14/24 13:35:43.813
  STEP: Checking that the sysctl is actually updated @ 12/14/24 13:35:43.823
  I1214 13:35:43.823891 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5851" for this suite. @ 12/14/24 13:35:43.829
• [4.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/14/24 13:35:43.836
  I1214 13:35:43.836610 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:35:43.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:43.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:43.855
  STEP: creating a ConfigMap @ 12/14/24 13:35:43.86
  STEP: fetching the ConfigMap @ 12/14/24 13:35:43.866
  STEP: patching the ConfigMap @ 12/14/24 13:35:43.868
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/14/24 13:35:43.873
  STEP: deleting the ConfigMap by collection with a label selector @ 12/14/24 13:35:43.878
  STEP: listing all ConfigMaps in test namespace @ 12/14/24 13:35:43.914
  I1214 13:35:43.924997 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8121" for this suite. @ 12/14/24 13:35:43.929
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 12/14/24 13:35:43.939
  I1214 13:35:43.939775 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-pred @ 12/14/24 13:35:43.94
  E1214 13:35:43.954812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:43.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:43.959
  I1214 13:35:43.961120 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1214 13:35:43.969121 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1214 13:35:43.972405 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-132 before test
  I1214 13:35:43.978721 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-94l4m from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.978742 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 13:35:43.978750 19 predicates.go:957] calico-node-bblb4 from kube-system started at 2024-12-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.978755 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 13:35:43.978761 19 predicates.go:957] coredns-5b4857d7c8-dcvw5 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.978767 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1214 13:35:43.978863 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-rlqv5 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.978874 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1214 13:35:43.978882 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-jq925 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:35:43.978928 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:35:43.978959 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 13:35:43.978982 19 predicates.go:957] sysctl-6c9295cf-6fa8-458f-af22-0a87a08ec577 from sysctl-5851 started at 2024-12-14 13:35:39 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.978996 19 predicates.go:959] 	Container test-container ready: false, restart count 0
  I1214 13:35:43.979003 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-38-181 before test
  I1214 13:35:43.984457 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9k94x from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.984491 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 13:35:43.984497 19 predicates.go:957] calico-node-vjktq from kube-system started at 2024-12-14 12:16:23 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.984502 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 13:35:43.984507 19 predicates.go:957] kube-state-metrics-5d7bdccd49-gkxkr from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.984523 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1214 13:35:43.984529 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-p9vf9 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (2 container statuses recorded)
  I1214 13:35:43.984534 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1214 13:35:43.984538 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1214 13:35:43.984543 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-gcbn8 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.984548 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1214 13:35:43.984553 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-bg8kl from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:35:43.984558 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:35:43.984563 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 13:35:43.984573 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I1214 13:35:43.989131 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-59bh9 from ingress-nginx-kubernetes-worker started at 2024-12-14 12:12:11 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.989148 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 13:35:43.989156 19 predicates.go:957] calico-node-jcqlh from kube-system started at 2024-12-14 12:16:34 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.989162 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 13:35:43.989168 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-14 12:20:03 +0000 UTC (1 container statuses recorded)
  I1214 13:35:43.989172 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1214 13:35:43.989178 19 predicates.go:957] sonobuoy-e2e-job-f6a2dbd00a5f4548 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:35:43.989183 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1214 13:35:43.989188 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:35:43.989193 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-tfgzf from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 13:35:43.989199 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 13:35:43.989209 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/14/24 13:35:43.989
  E1214 13:35:44.954968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:45.955610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/14/24 13:35:46.015
  STEP: Trying to apply a random label on the found node. @ 12/14/24 13:35:46.032
  STEP: verifying the node has the label kubernetes.io/e2e-cec53cbe-7ee2-42e5-bc9a-e6839f86d792 42 @ 12/14/24 13:35:46.048
  STEP: Trying to relaunch the pod, now with labels. @ 12/14/24 13:35:46.051
  E1214 13:35:46.955989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:47.956171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-cec53cbe-7ee2-42e5-bc9a-e6839f86d792 off the node ip-172-31-20-132 @ 12/14/24 13:35:48.079
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-cec53cbe-7ee2-42e5-bc9a-e6839f86d792 @ 12/14/24 13:35:48.092
  I1214 13:35:48.096000 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2661" for this suite. @ 12/14/24 13:35:48.1
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/14/24 13:35:48.109
  I1214 13:35:48.109441 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename conformance-tests @ 12/14/24 13:35:48.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:48.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:48.123
  STEP: Getting node addresses @ 12/14/24 13:35:48.127
  I1214 13:35:48.127913 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1214 13:35:48.134223 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2774" for this suite. @ 12/14/24 13:35:48.137
• [0.035 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 12/14/24 13:35:48.144
  I1214 13:35:48.144738 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:35:48.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:35:48.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:35:48.156
  STEP: creating service multiprotocol-test in namespace services-6205 @ 12/14/24 13:35:48.163
  STEP: creating pod pod1 in namespace services-6205 @ 12/14/24 13:35:48.185
  STEP: Creating pod pod1 in namespace services-6205 @ 12/14/24 13:35:48.185
  E1214 13:35:48.956260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:49.956385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6205 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/14/24 13:35:50.209
  I1214 13:35:50.222098 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-6205 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/14/24 13:35:50.222
  I1214 13:35:50.222168 19 resource.go:361] Creating new exec pod
  E1214 13:35:50.956503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:51.956614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:35:52.238161 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  I1214 13:35:52.323187 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [tcp/http] succeeded!\n"
  I1214 13:35:52.323245 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:35:52.323305 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E1214 13:35:52.957181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:53.957284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:54.957779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:55.958357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:35:56.405874 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I1214 13:35:56.405913 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/14/24 13:35:56.405
  I1214 13:35:56.415349 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  I1214 13:35:56.501409 19 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [tcp/http] succeeded!\n"
  I1214 13:35:56.501463 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:35:56.501555 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E1214 13:35:56.959414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:57.959591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:58.959800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:35:59.959970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:00.584120 19 builder.go:146] stderr: "+ + nc -v -u -w 2 10.152.183.111 80\necho hostName\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I1214 13:36:00.584172 19 builder.go:147] stdout: ""
  I1214 13:36:00.584231 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E1214 13:36:00.960418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:01.960519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:02.961072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:03.961242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:04.664729 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I1214 13:36:04.664778 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/14/24 13:36:04.664
  I1214 13:36:04.677539 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E1214 13:36:04.961977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:05.962151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:06.962519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:07.962606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:08.773293 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I1214 13:36:08.773341 19 builder.go:147] stdout: "pod1"
  I1214 13:36:08.773433 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E1214 13:36:08.962948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:09.964118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:10.850746 19 builder.go:135] rc: 1
  I1214 13:36:10.850817 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.111 80
  nc: connect to 10.152.183.111 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1214 13:36:10.850884 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E1214 13:36:10.965051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:11.965287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:12.930878 19 builder.go:135] rc: 1
  I1214 13:36:12.930933 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.111 80
  nc: connect to 10.152.183.111 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1214 13:36:12.930996 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E1214 13:36:12.965522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:13.965677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:14.966005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:15.006953 19 builder.go:135] rc: 1
  I1214 13:36:15.007035 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6205 exec execpodcs8zd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.111 80
  nc: connect to 10.152.183.111 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1214 13:36:15.007348 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6205" for this suite. @ 12/14/24 13:36:15.011
• [26.875 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/14/24 13:36:15.02
  I1214 13:36:15.020939 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename runtimeclass @ 12/14/24 13:36:15.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:15.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:15.048
  E1214 13:36:15.966204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:16.966424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:17.078840 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-671" for this suite. @ 12/14/24 13:36:17.083
• [2.072 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/14/24 13:36:17.092
  I1214 13:36:17.092632 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 13:36:17.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:17.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:17.111
  STEP: create the rc @ 12/14/24 13:36:17.119
  W1214 13:36:17.123908      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1214 13:36:17.967334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:18.967462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:19.968213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:20.968896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:21.969222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:22.970725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/14/24 13:36:23.128
  STEP: wait for the rc to be deleted @ 12/14/24 13:36:23.138
  E1214 13:36:23.971387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:24.153870 19 garbage_collector.go:670] 80 pods remaining
  I1214 13:36:24.153902 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1214 13:36:24.153907 19 garbage_collector.go:678] 
  E1214 13:36:24.972069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:25.150451 19 garbage_collector.go:670] 71 pods remaining
  I1214 13:36:25.150478 19 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1214 13:36:25.150483 19 garbage_collector.go:678] 
  E1214 13:36:25.972613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:26.147361 19 garbage_collector.go:670] 60 pods remaining
  I1214 13:36:26.147387 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1214 13:36:26.147393 19 garbage_collector.go:678] 
  E1214 13:36:26.972323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:27.149458 19 garbage_collector.go:670] 40 pods remaining
  I1214 13:36:27.152837 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1214 13:36:27.152894 19 garbage_collector.go:678] 
  E1214 13:36:27.972543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:28.147176 19 garbage_collector.go:670] 31 pods remaining
  I1214 13:36:28.147206 19 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1214 13:36:28.147211 19 garbage_collector.go:678] 
  E1214 13:36:28.972641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:29.147255 19 garbage_collector.go:670] 20 pods remaining
  I1214 13:36:29.147286 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1214 13:36:29.147293 19 garbage_collector.go:678] 
  E1214 13:36:29.972862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/14/24 13:36:30.25
  W1214 13:36:30.270760      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1214 13:36:30.270804 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1214 13:36:30.270950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-857" for this suite. @ 12/14/24 13:36:30.282
• [13.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/14/24 13:36:30.291
  I1214 13:36:30.291747 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename security-context-test @ 12/14/24 13:36:30.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:30.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:30.319
  E1214 13:36:30.973618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:31.973727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:32.974626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:33.974811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:34.352047 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4202" for this suite. @ 12/14/24 13:36:34.356
• [4.074 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/14/24 13:36:34.365
  I1214 13:36:34.365107 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 13:36:34.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:34.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:34.38
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/14/24 13:36:34.384
  E1214 13:36:34.975363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:35.975501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:36.975634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:37.975840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:36:38.408
  I1214 13:36:38.411347 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-91b124ef-c8b3-4aae-a377-a70c72c4a69c container test-container: <nil>
  STEP: delete the pod @ 12/14/24 13:36:38.418
  I1214 13:36:38.434673 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9661" for this suite. @ 12/14/24 13:36:38.438
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/14/24 13:36:38.443
  I1214 13:36:38.443531 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replication-controller @ 12/14/24 13:36:38.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:38.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:38.463
  STEP: Given a ReplicationController is created @ 12/14/24 13:36:38.466
  STEP: When the matched label of one of its pods change @ 12/14/24 13:36:38.47
  I1214 13:36:38.474173 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1214 13:36:38.976070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:39.977146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:40.977181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:41.977524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:42.977781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:43.479210 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/14/24 13:36:43.488
  E1214 13:36:43.977899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:44.497973 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7328" for this suite. @ 12/14/24 13:36:44.501
• [6.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/14/24 13:36:44.51
  I1214 13:36:44.510260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 13:36:44.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:44.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:44.528
  STEP: creating secret secrets-3917/secret-test-5b40246f-6f47-40d0-9188-d1146defbc3e @ 12/14/24 13:36:44.53
  STEP: Creating a pod to test consume secrets @ 12/14/24 13:36:44.535
  E1214 13:36:44.980099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:45.979481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:46.979804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:47.979876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:36:48.556
  I1214 13:36:48.561188 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-4b779a6d-f11d-4da4-a7d9-de644fa6a8b9 container env-test: <nil>
  STEP: delete the pod @ 12/14/24 13:36:48.573
  I1214 13:36:48.596358 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3917" for this suite. @ 12/14/24 13:36:48.603
• [4.103 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/14/24 13:36:48.613
  I1214 13:36:48.613681 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename runtimeclass @ 12/14/24 13:36:48.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:48.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:48.637
  E1214 13:36:48.979986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:49.981083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:50.672144 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7241" for this suite. @ 12/14/24 13:36:50.675
• [2.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 12/14/24 13:36:50.681
  I1214 13:36:50.681740 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:36:50.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:36:50.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:36:50.699
  STEP: creating service in namespace services-763 @ 12/14/24 13:36:50.702
  STEP: creating service affinity-nodeport in namespace services-763 @ 12/14/24 13:36:50.702
  STEP: creating replication controller affinity-nodeport in namespace services-763 @ 12/14/24 13:36:50.714
  I1214 13:36:50.722641      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-763, replica count: 3
  E1214 13:36:50.981412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:51.981504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:52.981613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:53.773477      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 13:36:53.782475 19 resource.go:361] Creating new exec pod
  E1214 13:36:53.982246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:54.982556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:55.982436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:56.800447 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-763 exec execpod-affinitypj8s5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1214 13:36:56.915506 19 builder.go:146] stderr: "+ + nc -vecho -t hostName -w\n 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1214 13:36:56.915563 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:36:56.915642 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-763 exec execpod-affinitypj8s5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  E1214 13:36:56.983381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:36:57.023246 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n"
  I1214 13:36:57.023302 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:36:57.023428 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-763 exec execpod-affinitypj8s5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.38.181 30924'
  I1214 13:36:57.128431 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.38.181 30924\nConnection to 172.31.38.181 30924 port [tcp/*] succeeded!\n"
  I1214 13:36:57.128497 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:36:57.128577 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-763 exec execpod-affinitypj8s5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.183 30924'
  I1214 13:36:57.237102 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.5.183 30924\n+ echo hostName\nConnection to 172.31.5.183 30924 port [tcp/*] succeeded!\n"
  I1214 13:36:57.237161 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:36:57.237232 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-763 exec execpod-affinitypj8s5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.132:30924/ ; done'
  I1214 13:36:57.398481 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30924/\n"
  I1214 13:36:57.398531 19 builder.go:147] stdout: "\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4\naffinity-nodeport-tq6l4"
  I1214 13:36:57.398544 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398552 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398560 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398567 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398574 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398580 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398654 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398661 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398677 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398692 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398702 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398709 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398715 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398727 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398733 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398767 19 service.go:242] Received response from host: affinity-nodeport-tq6l4
  I1214 13:36:57.398897 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-763, will wait for the garbage collector to delete the pods @ 12/14/24 13:36:57.414
  I1214 13:36:57.480966 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 8.270236ms
  I1214 13:36:57.581856 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.888698ms
  E1214 13:36:57.983724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:58.984668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:36:59.985273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:00.707431 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-763" for this suite. @ 12/14/24 13:37:00.71
• [10.035 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 12/14/24 13:37:00.716
  I1214 13:37:00.716487 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 13:37:00.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:00.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:00.746
  I1214 13:37:00.748628 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:37:00.986263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:01.987327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:02.987425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1214 13:37:03.291785      19 warnings.go:70] unknown field "alpha"
  W1214 13:37:03.291804      19 warnings.go:70] unknown field "beta"
  W1214 13:37:03.291807      19 warnings.go:70] unknown field "delta"
  W1214 13:37:03.291809      19 warnings.go:70] unknown field "epsilon"
  W1214 13:37:03.291812      19 warnings.go:70] unknown field "gamma"
  I1214 13:37:03.832905 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6607" for this suite. @ 12/14/24 13:37:03.837
• [3.127 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/14/24 13:37:03.843
  I1214 13:37:03.843248 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename var-expansion @ 12/14/24 13:37:03.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:03.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:03.861
  STEP: Creating a pod to test env composition @ 12/14/24 13:37:03.864
  E1214 13:37:03.987522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:04.987610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:37:05.882
  I1214 13:37:05.885089 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod var-expansion-a877d143-6aef-4c04-bf42-778dd2319e56 container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 13:37:05.891
  I1214 13:37:05.909370 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1125" for this suite. @ 12/14/24 13:37:05.912
• [2.075 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/14/24 13:37:05.918
  I1214 13:37:05.918425 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:37:05.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:05.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:05.932
  STEP: Creating configMap with name configmap-test-volume-741dbe3b-7347-454e-8026-0c997d36dabc @ 12/14/24 13:37:05.935
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:37:05.94
  E1214 13:37:05.988310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:06.988435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:37:07.96
  I1214 13:37:07.964537 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-configmaps-bb9bef16-2c8f-4365-ab3a-8ae696e45c50 container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:37:07.971
  E1214 13:37:07.988946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:07.991241 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8322" for this suite. @ 12/14/24 13:37:07.994
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/14/24 13:37:08.003
  I1214 13:37:08.003659 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:37:08.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:08.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:08.022
  E1214 13:37:08.989076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:09.989290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:10.989499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:11.989886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:12.990305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:13.990605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:37:14.083
  I1214 13:37:14.086884 19 output.go:196] Trying to get logs from node ip-172-31-38-181 pod client-envvars-8a70560f-f9ca-4fe3-9394-f2c3409f5fc4 container env3cont: <nil>
  STEP: delete the pod @ 12/14/24 13:37:14.105
  I1214 13:37:14.120723 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7825" for this suite. @ 12/14/24 13:37:14.124
• [6.126 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 12/14/24 13:37:14.129
  I1214 13:37:14.129424 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 13:37:14.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:14.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:14.146
  I1214 13:37:14.148900 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  W1214 13:37:14.149473      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001356510 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1214 13:37:14.991511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:15.991543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1214 13:37:16.684795      19 warnings.go:70] unknown field "alpha"
  W1214 13:37:16.684814      19 warnings.go:70] unknown field "beta"
  W1214 13:37:16.684822      19 warnings.go:70] unknown field "delta"
  W1214 13:37:16.684825      19 warnings.go:70] unknown field "epsilon"
  W1214 13:37:16.684828      19 warnings.go:70] unknown field "gamma"
  E1214 13:37:16.992055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:17.229271 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6771" for this suite. @ 12/14/24 13:37:17.233
• [3.111 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 12/14/24 13:37:17.24
  I1214 13:37:17.240165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pv @ 12/14/24 13:37:17.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:17.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:17.261
  STEP: Creating initial PV and PVC @ 12/14/24 13:37:17.263
  I1214 13:37:17.263598 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9814" @ 12/14/24 13:37:17.279
  STEP: Listing PVCs in namespace "pv-9814" @ 12/14/24 13:37:17.286
  STEP: Patching the PV "pv-9814-wkrb9" @ 12/14/24 13:37:17.29
  STEP: Patching the PVC "pvc-lvs54" @ 12/14/24 13:37:17.305
  STEP: Getting PV "pv-9814-wkrb9" @ 12/14/24 13:37:17.314
  STEP: Getting PVC "pvc-lvs54" @ 12/14/24 13:37:17.317
  STEP: Deleting PVC "pvc-lvs54" @ 12/14/24 13:37:17.32
  STEP: Confirm deletion of PVC "pvc-lvs54" @ 12/14/24 13:37:17.328
  E1214 13:37:17.992994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:18.993189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9814-wkrb9" @ 12/14/24 13:37:19.336
  STEP: Confirm deletion of PV "pv-9814-wkrb9" @ 12/14/24 13:37:19.343
  E1214 13:37:19.993269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:20.993482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 12/14/24 13:37:21.355
  I1214 13:37:21.355464 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9814-tdnh5" @ 12/14/24 13:37:21.367
  STEP: Updating the PVC "pvc-nsqgq" @ 12/14/24 13:37:21.399
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-nsqgq=updated" @ 12/14/24 13:37:21.452
  STEP: Deleting PVC "pvc-nsqgq" via DeleteCollection @ 12/14/24 13:37:21.456
  STEP: Confirm deletion of PVC "pvc-nsqgq" @ 12/14/24 13:37:21.465
  E1214 13:37:21.993724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:22.994260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9814-tdnh5" via DeleteCollection @ 12/14/24 13:37:23.474
  STEP: Confirm deletion of PV "pv-9814-tdnh5" @ 12/14/24 13:37:23.487
  E1214 13:37:23.994390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:24.994508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:25.494045 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1214 13:37:25.494072 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-nsqgq"
  I1214 13:37:25.497636 19 pv.go:193] Deleting PersistentVolume "pv-9814-tdnh5"
  I1214 13:37:25.502085 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9814" for this suite. @ 12/14/24 13:37:25.505
• [8.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 12/14/24 13:37:25.511
  I1214 13:37:25.511869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename disruption @ 12/14/24 13:37:25.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:25.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:25.529
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:37:25.535
  STEP: Waiting for all pods to be running @ 12/14/24 13:37:25.567
  I1214 13:37:25.575364 19 disruption.go:691] running pods: 0 < 3
  E1214 13:37:25.994934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:26.995231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:27.574185 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2617" for this suite. @ 12/14/24 13:37:27.578
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 12/14/24 13:37:27.585
  I1214 13:37:27.586007 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:37:27.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:27.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:27.603
  STEP: creating service in namespace services-9625 @ 12/14/24 13:37:27.61
  STEP: creating service affinity-clusterip-transition in namespace services-9625 @ 12/14/24 13:37:27.61
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9625 @ 12/14/24 13:37:27.62
  I1214 13:37:27.629493      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-9625, replica count: 3
  E1214 13:37:27.995335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:28.996129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:29.996183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:30.680006      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 13:37:30.687003 19 resource.go:361] Creating new exec pod
  E1214 13:37:30.997179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:31.997312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:32.998207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:33.699996 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-9625 exec execpod-affinity4zcx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1214 13:37:33.789412 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1214 13:37:33.789442 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:37:33.789522 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-9625 exec execpod-affinity4zcx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.170 80'
  I1214 13:37:33.877127 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.170 80\nConnection to 10.152.183.170 80 port [tcp/http] succeeded!\n"
  I1214 13:37:33.877168 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:37:33.888443 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-9625 exec execpod-affinity4zcx7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.170:80/ ; done'
  E1214 13:37:33.998921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:34.041956 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n"
  I1214 13:37:34.042004 19 builder.go:147] stdout: "\naffinity-clusterip-transition-vm4rf\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-vm4rf\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-vm4rf\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-vm4rf\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-vm4rf\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-6dspb\naffinity-clusterip-transition-6dspb"
  I1214 13:37:34.042015 19 service.go:242] Received response from host: affinity-clusterip-transition-vm4rf
  I1214 13:37:34.042038 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042045 19 service.go:242] Received response from host: affinity-clusterip-transition-vm4rf
  I1214 13:37:34.042051 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042056 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042061 19 service.go:242] Received response from host: affinity-clusterip-transition-vm4rf
  I1214 13:37:34.042067 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.042072 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042079 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.042085 19 service.go:242] Received response from host: affinity-clusterip-transition-vm4rf
  I1214 13:37:34.042090 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.042100 19 service.go:242] Received response from host: affinity-clusterip-transition-vm4rf
  I1214 13:37:34.042105 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042109 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042114 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.042134 19 service.go:242] Received response from host: affinity-clusterip-transition-6dspb
  I1214 13:37:34.053644 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-9625 exec execpod-affinity4zcx7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.170:80/ ; done'
  I1214 13:37:34.188955 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.170:80/\n"
  I1214 13:37:34.189008 19 builder.go:147] stdout: "\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb\naffinity-clusterip-transition-fgfbb"
  I1214 13:37:34.189034 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189056 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189062 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189068 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189074 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189080 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189090 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189095 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189100 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189105 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189110 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189189 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189197 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189247 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189253 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189259 19 service.go:242] Received response from host: affinity-clusterip-transition-fgfbb
  I1214 13:37:34.189354 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9625, will wait for the garbage collector to delete the pods @ 12/14/24 13:37:34.206
  I1214 13:37:34.269399 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 7.80386ms
  I1214 13:37:34.369973 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.569559ms
  E1214 13:37:34.999008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:35.999367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:36.790246 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9625" for this suite. @ 12/14/24 13:37:36.796
• [9.217 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/14/24 13:37:36.803
  I1214 13:37:36.803151 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename events @ 12/14/24 13:37:36.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:36.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:36.822
  STEP: Create set of events @ 12/14/24 13:37:36.824
  STEP: get a list of Events with a label in the current namespace @ 12/14/24 13:37:36.84
  STEP: delete a list of events @ 12/14/24 13:37:36.844
  I1214 13:37:36.844845 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/14/24 13:37:36.866
  I1214 13:37:36.869831 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2477" for this suite. @ 12/14/24 13:37:36.873
• [0.078 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 12/14/24 13:37:36.88
  I1214 13:37:36.880920 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename job @ 12/14/24 13:37:36.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:36.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:36.899
  STEP: Creating a suspended job @ 12/14/24 13:37:36.904
  STEP: Patching the Job @ 12/14/24 13:37:36.91
  STEP: Watching for Job to be patched @ 12/14/24 13:37:36.927
  I1214 13:37:36.928531 19 job.go:1330] Event ADDED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks] and annotations: map[]
  I1214 13:37:36.928577 19 job.go:1330] Event MODIFIED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks] and annotations: map[]
  I1214 13:37:36.928590 19 job.go:1333] Event MODIFIED found for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[]
  STEP: Updating the job @ 12/14/24 13:37:36.928
  STEP: Watching for Job to be updated @ 12/14/24 13:37:36.94
  I1214 13:37:36.941256 19 job.go:1333] Event MODIFIED found for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  I1214 13:37:36.941320 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/14/24 13:37:36.941
  I1214 13:37:36.944157 19 job.go:1233] Job: e2e-pqmks as labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched]
  STEP: Waiting for job to complete @ 12/14/24 13:37:36.944
  E1214 13:37:36.999519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:37.999743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:38.999822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:40.000821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:41.001465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:42.001557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:43.002249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:44.003319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 12/14/24 13:37:44.953
  STEP: Watching for Job to be deleted @ 12/14/24 13:37:44.963
  I1214 13:37:44.965217 19 job.go:1330] Event MODIFIED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  I1214 13:37:44.965242 19 job.go:1330] Event MODIFIED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  I1214 13:37:44.965255 19 job.go:1330] Event MODIFIED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  I1214 13:37:44.965370 19 job.go:1330] Event MODIFIED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  I1214 13:37:44.965391 19 job.go:1330] Event MODIFIED observed for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  I1214 13:37:44.965435 19 job.go:1333] Event DELETED found for Job e2e-pqmks in namespace job-7255 with labels: map[e2e-job-label:e2e-pqmks e2e-pqmks:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/14/24 13:37:44.965
  I1214 13:37:44.969667 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7255" for this suite. @ 12/14/24 13:37:44.973
• [8.110 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/14/24 13:37:44.991
  I1214 13:37:44.991307 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename endpointslice @ 12/14/24 13:37:44.991
  E1214 13:37:45.003844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:45.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:45.013
  I1214 13:37:45.025683 19 endpointslice.go:1045] Endpoints addresses: [172.31.6.94 172.31.64.42] , ports: [6443]
  I1214 13:37:45.025707 19 endpointslice.go:1075] EndpointSlices addresses: [172.31.6.94 172.31.64.42] , ports: [6443]
  I1214 13:37:45.025782 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2694" for this suite. @ 12/14/24 13:37:45.03
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/14/24 13:37:45.039
  I1214 13:37:45.039448 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:37:45.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:45.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:45.056
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/14/24 13:37:45.059
  I1214 13:37:45.059464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:37:46.004397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:46.275138 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:37:47.005278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:48.008593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:49.008703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:50.009212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:51.009543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:51.325818 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-385" for this suite. @ 12/14/24 13:37:51.333
• [6.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 12/14/24 13:37:51.34
  I1214 13:37:51.340728 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 13:37:51.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:37:51.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:37:51.361
  STEP: Creating resourceQuota "e2e-rq-status-vb8th" @ 12/14/24 13:37:51.368
  I1214 13:37:51.378380 19 resource_quota.go:1102] Resource quota "e2e-rq-status-vb8th" reports spec: hard cpu limit of 500m
  I1214 13:37:51.378410 19 resource_quota.go:1104] Resource quota "e2e-rq-status-vb8th" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-vb8th" /status @ 12/14/24 13:37:51.378
  STEP: Confirm /status for "e2e-rq-status-vb8th" resourceQuota via watch @ 12/14/24 13:37:51.386
  I1214 13:37:51.388291 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-vb8th" in namespace "resourcequota-7833" with hard status: v1.ResourceList(nil)
  I1214 13:37:51.388385 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-vb8th" in namespace "resourcequota-7833" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1214 13:37:51.388396 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-vb8th" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/14/24 13:37:51.392
  I1214 13:37:51.398007 19 resource_quota.go:1152] Resource quota "e2e-rq-status-vb8th" reports spec: hard cpu limit of 1
  I1214 13:37:51.398052 19 resource_quota.go:1153] Resource quota "e2e-rq-status-vb8th" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-vb8th" /status @ 12/14/24 13:37:51.398
  STEP: Confirm /status for "e2e-rq-status-vb8th" resourceQuota via watch @ 12/14/24 13:37:51.405
  I1214 13:37:51.406702 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-vb8th" in namespace "resourcequota-7833" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1214 13:37:51.406748 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-vb8th" in namespace "resourcequota-7833" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1214 13:37:51.406757 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-vb8th" /status was patched
  STEP: Get "e2e-rq-status-vb8th" /status @ 12/14/24 13:37:51.406
  I1214 13:37:51.412268 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-vb8th" reports status: hard cpu of 1
  I1214 13:37:51.412290 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-vb8th" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-vb8th" /status before checking Spec is unchanged @ 12/14/24 13:37:51.415
  I1214 13:37:51.421259 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-vb8th" reports status: hard cpu of 2
  I1214 13:37:51.421287 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-vb8th" reports status: hard memory of 2Gi
  I1214 13:37:51.422262 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-vb8th" in namespace "resourcequota-7833" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1214 13:37:51.427284 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b451a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b451d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:37:52.010076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:53.010180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:54.010509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:55.010630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:56.011633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:37:56.427013 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c851a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c851d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:37:57.012256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:58.012353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:37:59.012427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:00.012528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:01.013599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:01.426816 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c853b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c853e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:02.014519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:03.015248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:04.015314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:05.015433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:06.015564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:06.428524 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:07.016157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:08.016490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:09.016705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:10.016773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:11.017469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:11.427814 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b454b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:12.017513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:13.017816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:14.018048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:15.018429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:16.018685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:16.426386 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45668), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:17.019102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:18.019921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:19.020680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:20.021472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:21.022134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:21.427505 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b457a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b457d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45800), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:22.022254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:23.022334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:24.023215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:25.024214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:26.024482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:26.427319 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85878), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c858a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:27.024650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:28.024861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:29.025087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:30.025152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:31.025409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:31.426933 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b459e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45a10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45a40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:32.025688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:33.026231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:34.026400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:35.026602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:36.026652      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:36.428387 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45ba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45bd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45c08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:37.026819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:38.027112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:39.027280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:40.027495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:41.027582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:41.427641 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85b30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:42.028325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:43.028447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:44.028629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:45.028815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:46.029644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:46.426812 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85c80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85cb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:47.030546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:48.030638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:49.030828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:50.031673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:51.031836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:51.427495 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45e30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b45e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:52.031929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:53.032149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:54.032190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:55.033219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:56.033501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:38:56.427074 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85ed8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85f08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c85f50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:38:57.033684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:58.033862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:38:59.034061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:00.034243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:01.034529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:01.428328 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014121e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:02.034916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:03.035296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:04.036229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:05.036348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:06.036542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:06.427736 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014124e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014125b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:07.037456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:08.037553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:09.037682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:10.037931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:11.038391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:11.426564 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047682a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047682d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:12.039207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:13.039369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:14.039572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:15.040641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:16.041603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:16.428687 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047685e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:17.042214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:18.043240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:19.044222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:20.044463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:21.044571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:21.427245 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047687e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:22.044732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:23.045323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:24.045598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:25.045907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:26.046743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:26.426864 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:27.047536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:28.047738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:29.047933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:30.048173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:31.048474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:31.428607 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412c60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:32.049516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:33.049813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:34.050829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:35.051730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:36.052651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:36.428103 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768be8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768c60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:37.053215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:38.053318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:39.053595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:40.054217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:41.054537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:41.426936 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014131a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413248), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:42.054684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:43.055259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:44.055400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:45.055635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:46.056680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:46.428566 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:47.057241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:48.058217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:49.059231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:50.060255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:51.060786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:51.427819 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047680a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047680f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:52.061165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:53.061276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:54.061445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:55.061541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:56.061617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:39:56.426767 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047682e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:39:57.062214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:58.062351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:39:59.062607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:00.063298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:01.063400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:01.428482 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014121e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014122b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:02.064388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:03.065264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:04.065443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:05.066268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:06.066982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:06.426472 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014125b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:07.067200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:08.067611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:09.067885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:10.068159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:11.068466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:11.428697 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047686a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047686d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:12.068657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:13.068895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:14.069149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:15.069659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:16.070628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:16.427691 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014129a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014129d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:17.071542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:18.071608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:19.071701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:20.071831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:21.072797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:21.427415 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047689a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:22.073139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:23.073366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:24.073463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:25.074437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:26.074640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:26.429046 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412c60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:27.075192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:28.075432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:29.075568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:30.075800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:31.075958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:31.427372 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014130f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014131b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:32.076164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:33.076710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:34.076950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:35.077065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:36.077324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:36.426474 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768d50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768d80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004768dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:37.078399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:38.078598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:39.078929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:40.079262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:41.079606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:41.428452 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413488), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:42.079729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:43.079893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:44.079976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:45.080189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:46.081168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:46.426571 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413878), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014138c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:47.082255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:48.082345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:49.083243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:50.084284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:51.084580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:51.427162 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413b90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:52.084710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:53.084923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:54.085195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:55.085525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:56.085646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:40:56.428853 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:40:57.086654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:58.086911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:40:59.087149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:00.087300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:01.087619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:01.427648 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c4e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:02.088191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:03.088417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:04.088733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:05.088917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:06.089793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:06.427390 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047691b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769248), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:07.090125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:08.090966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:09.091988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:10.092187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:11.092657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:11.428547 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:12.093177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:13.093272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:14.093406      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:15.093715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:16.094711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:16.426774 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047696e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769770), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:17.095471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:18.095688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:19.095912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:20.096155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:21.096431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:21.427081 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004769968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047699b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047699e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:22.096643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:23.096824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:24.096996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:25.097175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:26.098226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:26.427901 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329c9f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:27.098615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:28.098726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:29.099055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:30.099211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:31.099572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:31.427537 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329ccf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329cd50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329cd80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:32.100226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:33.100506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:34.100608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:35.100773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:36.101691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:36.427212 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-vb8th" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-vb8th", GenerateName:"", Namespace:"resourcequota-7833", SelfLink:"", UID:"30c2fb52-0c96-49c3-b22e-4c302f10d01f", ResourceVersion:"39066", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-vb8th"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329d0c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329d0f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 37, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00329d188), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1214 13:41:37.101814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:38.101924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:39.102286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:40.102349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:41.102662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:41.426400 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-vb8th" Spec was unchanged and /status reset
  I1214 13:41:41.426536 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7833" for this suite. @ 12/14/24 13:41:41.431
• [230.099 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/14/24 13:41:41.44
  I1214 13:41:41.440365 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename ingress @ 12/14/24 13:41:41.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:41:41.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:41:41.462
  STEP: getting /apis @ 12/14/24 13:41:41.463
  STEP: getting /apis/networking.k8s.io @ 12/14/24 13:41:41.465
  STEP: getting /apis/networking.k8s.iov1 @ 12/14/24 13:41:41.466
  STEP: creating @ 12/14/24 13:41:41.466
  STEP: getting @ 12/14/24 13:41:41.482
  STEP: listing @ 12/14/24 13:41:41.485
  STEP: watching @ 12/14/24 13:41:41.491
  I1214 13:41:41.491653 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/14/24 13:41:41.492
  STEP: cluster-wide watching @ 12/14/24 13:41:41.495
  I1214 13:41:41.495175 19 ingress.go:198] starting watch
  STEP: patching @ 12/14/24 13:41:41.495
  STEP: updating @ 12/14/24 13:41:41.502
  I1214 13:41:41.514640 19 ingress.go:221] waiting for watch events with expected annotations
  I1214 13:41:41.514868 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/14/24 13:41:41.515
  STEP: updating /status @ 12/14/24 13:41:41.522
  STEP: get /status @ 12/14/24 13:41:41.538
  STEP: deleting @ 12/14/24 13:41:41.541
  STEP: deleting a collection @ 12/14/24 13:41:41.558
  I1214 13:41:41.574126 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2848" for this suite. @ 12/14/24 13:41:41.577
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 12/14/24 13:41:41.584
  I1214 13:41:41.584578 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubelet-test @ 12/14/24 13:41:41.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:41:41.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:41:41.606
  E1214 13:41:42.103479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:43.103561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:44.104352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:45.104719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:41:45.625801 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8947" for this suite. @ 12/14/24 13:41:45.629
• [4.052 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/14/24 13:41:45.636
  I1214 13:41:45.636315 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename containers @ 12/14/24 13:41:45.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:41:45.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:41:45.655
  STEP: Creating a pod to test override all @ 12/14/24 13:41:45.657
  E1214 13:41:46.105416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:47.106273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:48.106362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:49.106579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:41:49.68
  I1214 13:41:49.684150 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod client-containers-e4a457b7-390e-4f56-9a84-82c776bdb442 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:41:49.702
  I1214 13:41:49.722694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1139" for this suite. @ 12/14/24 13:41:49.726
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/14/24 13:41:49.732
  I1214 13:41:49.732579 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:41:49.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:41:49.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:41:49.751
  STEP: Creating configMap with name configmap-projected-all-test-volume-cfd5d96c-cf9e-491d-82dd-70f8ab672529 @ 12/14/24 13:41:49.752
  STEP: Creating secret with name secret-projected-all-test-volume-b67c612c-efd2-46e8-bf48-491009f883b4 @ 12/14/24 13:41:49.756
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/14/24 13:41:49.76
  E1214 13:41:50.106705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:51.107735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:52.108499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:53.109337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:41:53.783
  I1214 13:41:53.786680 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod projected-volume-8179e1f6-56a6-4979-a243-1e736aa7c667 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:41:53.794
  I1214 13:41:53.815862 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4533" for this suite. @ 12/14/24 13:41:53.82
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/14/24 13:41:53.828
  I1214 13:41:53.828696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/14/24 13:41:53.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:41:53.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:41:53.851
  STEP: creating a target pod @ 12/14/24 13:41:53.852
  E1214 13:41:54.109895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:55.110202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/14/24 13:41:55.877
  E1214 13:41:56.110721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:57.110812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/14/24 13:41:57.893
  I1214 13:41:57.893763 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1964 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:41:57.893780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:41:57.894232 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:41:57.894267 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1964/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1214 13:41:57.934113 19 exec_util.go:111] Exec stderr: ""
  I1214 13:41:57.940792 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1964" for this suite. @ 12/14/24 13:41:57.943
• [4.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/14/24 13:41:57.953
  I1214 13:41:57.953231 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename endpointslice @ 12/14/24 13:41:57.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:41:57.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:41:57.974
  E1214 13:41:58.111771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:41:59.111839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 12/14/24 13:42:00.048
  STEP: referencing matching pods with named port @ 12/14/24 13:42:00.054
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/14/24 13:42:00.059
  STEP: recreating EndpointSlices after they've been deleted @ 12/14/24 13:42:00.067
  I1214 13:42:00.086001 19 endpointslice.go:938] EndpointSlice for Service endpointslice-4983/example-named-port not found
  E1214 13:42:00.112264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:01.112360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:02.091906 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4983" for this suite. @ 12/14/24 13:42:02.096
• [4.150 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/14/24 13:42:02.103
  I1214 13:42:02.103412 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename endpointslice @ 12/14/24 13:42:02.104
  E1214 13:42:02.112456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:02.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:02.122
  E1214 13:42:03.113185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:04.114119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:05.114921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:06.115067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:06.170122 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9959" for this suite. @ 12/14/24 13:42:06.174
• [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/14/24 13:42:06.18
  I1214 13:42:06.180900 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/14/24 13:42:06.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:06.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:06.204
  I1214 13:42:06.205675 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:42:07.115189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:08.115590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:09.116563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:09.259674 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2571" for this suite. @ 12/14/24 13:42:09.265
• [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 12/14/24 13:42:09.272
  I1214 13:42:09.273007 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubelet-test @ 12/14/24 13:42:09.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:09.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:09.295
  I1214 13:42:09.324807 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-541" for this suite. @ 12/14/24 13:42:09.328
• [0.061 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/14/24 13:42:09.334
  I1214 13:42:09.334527 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename proxy @ 12/14/24 13:42:09.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:09.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:09.356
  I1214 13:42:09.360472 19 proxy.go:387] Creating pod...
  E1214 13:42:10.116640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:11.117694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:11.385428 19 proxy.go:411] Creating service...
  I1214 13:42:11.395827 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=DELETE
  I1214 13:42:11.400234 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1214 13:42:11.400436 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=OPTIONS
  I1214 13:42:11.404776 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1214 13:42:11.404876 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=PATCH
  I1214 13:42:11.408965 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1214 13:42:11.408992 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=POST
  I1214 13:42:11.412535 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1214 13:42:11.412566 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=PUT
  I1214 13:42:11.415511 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1214 13:42:11.415534 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=DELETE
  I1214 13:42:11.421177 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1214 13:42:11.421204 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1214 13:42:11.426469 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1214 13:42:11.426487 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=PATCH
  I1214 13:42:11.430173 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1214 13:42:11.430196 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=POST
  I1214 13:42:11.435256 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1214 13:42:11.435281 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=PUT
  I1214 13:42:11.442295 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1214 13:42:11.442329 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=GET
  I1214 13:42:11.446219 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1214 13:42:11.446246 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=GET
  I1214 13:42:11.451657 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1214 13:42:11.451682 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/pods/agnhost/proxy?method=HEAD
  I1214 13:42:11.454902 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1214 13:42:11.454926 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6050/services/e2e-proxy-test-service/proxy?method=HEAD
  I1214 13:42:11.459079 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1214 13:42:11.459205 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6050" for this suite. @ 12/14/24 13:42:11.462
• [2.133 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/14/24 13:42:11.467
  I1214 13:42:11.467692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:42:11.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:11.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:11.486
  STEP: Creating the pod @ 12/14/24 13:42:11.488
  E1214 13:42:12.118289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:13.119240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:14.036834 19 pod_client.go:173] Successfully updated pod "labelsupdate052485a9-b4bc-4e8e-aa6a-eb990943d92f"
  E1214 13:42:14.119785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:15.119951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:16.058250 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5999" for this suite. @ 12/14/24 13:42:16.063
• [4.604 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 12/14/24 13:42:16.071
  I1214 13:42:16.071521 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:42:16.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:16.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:16.092
  I1214 13:42:16.098263 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-789" for this suite. @ 12/14/24 13:42:16.102
• [0.036 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/14/24 13:42:16.107
  I1214 13:42:16.107479 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pods @ 12/14/24 13:42:16.108
  E1214 13:42:16.120877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:16.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:16.131
  STEP: creating pod @ 12/14/24 13:42:16.133
  E1214 13:42:17.121007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:18.121153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:18.156678 19 pods.go:83] Pod pod-hostip-e845ad58-b35b-4949-ae79-72794e0acefd has hostIP: 172.31.20.132
  I1214 13:42:18.156794 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1932" for this suite. @ 12/14/24 13:42:18.16
• [2.060 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/14/24 13:42:18.167
  I1214 13:42:18.167542 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:42:18.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:18.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:18.187
  STEP: Creating a pod to test downward api env vars @ 12/14/24 13:42:18.189
  E1214 13:42:19.121294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:20.125677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:42:20.21
  I1214 13:42:20.213825 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-6f5b3145-0ad4-49bb-baf6-2962d1e3d62f container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 13:42:20.233
  I1214 13:42:20.249784 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5150" for this suite. @ 12/14/24 13:42:20.253
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/14/24 13:42:20.261
  I1214 13:42:20.261228 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/14/24 13:42:20.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:20.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:20.281
  STEP: creating @ 12/14/24 13:42:20.283
  STEP: getting @ 12/14/24 13:42:20.302
  STEP: listing in namespace @ 12/14/24 13:42:20.306
  STEP: patching @ 12/14/24 13:42:20.308
  STEP: deleting @ 12/14/24 13:42:20.314
  I1214 13:42:20.326879 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4773" for this suite. @ 12/14/24 13:42:20.331
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/14/24 13:42:20.339
  I1214 13:42:20.339995 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:42:20.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:20.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:20.36
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:42:20.362
  E1214 13:42:21.126246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:22.126493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:42:22.379
  I1214 13:42:22.383592 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-7edd763b-c8ad-4027-b9dc-04c892ea2dbb container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:42:22.389
  I1214 13:42:22.407820 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8251" for this suite. @ 12/14/24 13:42:22.41
• [2.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 12/14/24 13:42:22.418
  I1214 13:42:22.418255 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:42:22.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:22.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:22.436
  STEP: Setting up server cert @ 12/14/24 13:42:22.466
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:42:22.647
  STEP: Deploying the webhook pod @ 12/14/24 13:42:22.657
  STEP: Wait for the deployment to be ready @ 12/14/24 13:42:22.672
  I1214 13:42:22.679420 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 13:42:23.126635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:24.126749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 13:42:24.692
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:42:24.707
  E1214 13:42:25.127567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:25.707258 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/14/24 13:42:25.714
  I1214 13:42:25.754654 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4548" for this suite. @ 12/14/24 13:42:25.762
  STEP: Destroying namespace "webhook-markers-683" for this suite. @ 12/14/24 13:42:25.77
• [3.376 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/14/24 13:42:25.794
  I1214 13:42:25.794386 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:42:25.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:25.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:25.813
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:42:25.815
  E1214 13:42:26.127815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:27.128081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:28.128973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:29.129259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:42:29.839
  I1214 13:42:29.843624 19 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-47bcac0c-d798-4acf-a636-d511aeebeab9 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:42:29.85
  I1214 13:42:29.865933 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-440" for this suite. @ 12/14/24 13:42:29.868
• [4.081 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/14/24 13:42:29.875
  I1214 13:42:29.875597 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:42:29.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:42:29.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:42:29.895
  STEP: Creating service test in namespace statefulset-7251 @ 12/14/24 13:42:29.897
  STEP: Creating a new StatefulSet @ 12/14/24 13:42:29.901
  I1214 13:42:29.917336 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1214 13:42:30.129706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:31.129970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:32.130201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:33.130282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:34.130389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:35.130533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:36.130566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:37.131283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:38.131392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:39.132220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:42:39.916568 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:42:39.916605 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:42:39.916614 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/14/24 13:42:39.927
  I1214 13:42:39.938309 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/14/24 13:42:39.938
  E1214 13:42:40.132923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:41.133248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:42.133316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:43.133498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:44.133859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:45.133984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:46.134108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:47.134192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:48.134379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:49.134612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/14/24 13:42:49.949
  STEP: Performing a canary update @ 12/14/24 13:42:49.949
  I1214 13:42:49.959871 19 statefulset.go:2507] Updating stateful set ss2
  I1214 13:42:49.969723 19 wait.go:74] Waiting for Pod statefulset-7251/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1214 13:42:50.134998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:51.135343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:52.135539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:53.135777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:54.136081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:55.136259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:56.136904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:57.137178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:58.137386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:42:59.137607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/14/24 13:42:59.966
  I1214 13:43:00.000880 19 wait.go:40] Found 1 stateful pods, waiting for 3
  E1214 13:43:00.138106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:01.138183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:02.139194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:03.140253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:04.140334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:05.140564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:06.140621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:07.140838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:08.141788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:09.142417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:43:10.004506 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:43:10.004536 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:43:10.004545 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/14/24 13:43:10.011
  I1214 13:43:10.022959 19 statefulset.go:2507] Updating stateful set ss2
  I1214 13:43:10.029078 19 wait.go:74] Waiting for Pod statefulset-7251/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1214 13:43:10.143364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:11.143599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:12.143637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:13.143863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:14.144282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:15.144401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:16.144747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:17.144945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:18.145162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:19.145342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:43:20.043180 19 statefulset.go:2507] Updating stateful set ss2
  I1214 13:43:20.049852 19 wait.go:56] Waiting for StatefulSet statefulset-7251/ss2 to complete update
  I1214 13:43:20.049893 19 wait.go:63] Waiting for Pod statefulset-7251/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1214 13:43:20.146177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:21.146498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:22.146643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:23.146841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:24.147250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:25.147474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:26.147595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:27.147968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:28.148259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:29.148454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:43:30.050869 19 statefulset.go:138] Deleting all statefulset in ns statefulset-7251
  I1214 13:43:30.055417 19 rest.go:150] Scaling statefulset ss2 to 0
  E1214 13:43:30.149583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:31.149744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:32.149857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:33.150243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:34.150464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:35.150563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:36.150733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:37.151702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:38.152246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:39.152338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:43:40.069965 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:43:40.074364 19 rest.go:88] Deleting statefulset ss2
  I1214 13:43:40.086335 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7251" for this suite. @ 12/14/24 13:43:40.089
• [70.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/14/24 13:43:40.097
  I1214 13:43:40.097741 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename namespaces @ 12/14/24 13:43:40.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:43:40.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:43:40.119
  STEP: Creating a test namespace @ 12/14/24 13:43:40.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:43:40.141
  STEP: Creating a service in the namespace @ 12/14/24 13:43:40.143
  E1214 13:43:40.152673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 12/14/24 13:43:40.154
  STEP: Waiting for the namespace to be removed. @ 12/14/24 13:43:40.16
  E1214 13:43:41.153483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:42.154196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:43.154495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:44.155057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:45.155582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:46.155757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/14/24 13:43:46.166
  STEP: Verifying there is no service in the namespace @ 12/14/24 13:43:46.184
  I1214 13:43:46.186805 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9436" for this suite. @ 12/14/24 13:43:46.189
  STEP: Destroying namespace "nsdeletetest-3434" for this suite. @ 12/14/24 13:43:46.198
  I1214 13:43:46.200634 19 framework.go:370] Namespace nsdeletetest-3434 was already deleted
  STEP: Destroying namespace "nsdeletetest-459" for this suite. @ 12/14/24 13:43:46.2
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 12/14/24 13:43:46.207
  I1214 13:43:46.207785 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 13:43:46.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:43:46.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:43:46.225
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5258.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5258.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/14/24 13:43:46.227
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5258.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5258.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/14/24 13:43:46.227
  STEP: creating a pod to probe /etc/hosts @ 12/14/24 13:43:46.227
  STEP: submitting the pod to kubernetes @ 12/14/24 13:43:46.227
  E1214 13:43:47.156138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:48.156462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/14/24 13:43:48.245
  STEP: looking for the results for each expected name from probers @ 12/14/24 13:43:48.249
  I1214 13:43:48.269040 19 dns_common.go:527] DNS probes using dns-5258/dns-test-e5663da3-4505-4440-9cca-f0bf9406e11c succeeded

  STEP: deleting the pod @ 12/14/24 13:43:48.269
  I1214 13:43:48.356740 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5258" for this suite. @ 12/14/24 13:43:48.361
• [2.161 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 12/14/24 13:43:48.368
  I1214 13:43:48.368533 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 13:43:48.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:43:48.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:43:48.389
  STEP: Counting existing ResourceQuota @ 12/14/24 13:43:48.391
  E1214 13:43:49.157475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:50.158077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:51.159013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:52.159330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:53.159336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/14/24 13:43:53.396
  STEP: Ensuring resource quota status is calculated @ 12/14/24 13:43:53.401
  E1214 13:43:54.159763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:55.159999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:43:55.407926 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-408" for this suite. @ 12/14/24 13:43:55.411
• [7.051 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 12/14/24 13:43:55.419
  I1214 13:43:55.419947 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:43:55.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:43:55.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:43:55.439
  STEP: creating service multi-endpoint-test in namespace services-970 @ 12/14/24 13:43:55.44
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-970 to expose endpoints map[] @ 12/14/24 13:43:55.448
  I1214 13:43:55.452384 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1214 13:43:56.160742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:43:56.460818 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-970 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-970 @ 12/14/24 13:43:56.46
  E1214 13:43:57.160846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:43:58.161657      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-970 to expose endpoints map[pod1:[100]] @ 12/14/24 13:43:58.484
  I1214 13:43:58.493907 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-970 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-970 @ 12/14/24 13:43:58.493
  E1214 13:43:59.162267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:00.163259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-970 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/14/24 13:44:00.511
  I1214 13:44:00.524850 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-970 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/14/24 13:44:00.524
  I1214 13:44:00.524936 19 resource.go:361] Creating new exec pod
  E1214 13:44:01.163331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:02.163432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:03.164161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:03.539730 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-970 exec execpodmp46b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1214 13:44:03.624219 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1214 13:44:03.624270 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:44:03.624350 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-970 exec execpodmp46b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.230 80'
  I1214 13:44:03.700346 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.230 80\nConnection to 10.152.183.230 80 port [tcp/http] succeeded!\n"
  I1214 13:44:03.700386 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:44:03.700458 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-970 exec execpodmp46b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1214 13:44:03.780353 19 builder.go:146] stderr: "+ echo+ nc hostName\n -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1214 13:44:03.780395 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 13:44:03.780466 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-970 exec execpodmp46b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.230 81'
  I1214 13:44:03.851775 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.230 81\nConnection to 10.152.183.230 81 port [tcp/*] succeeded!\n"
  I1214 13:44:03.851814 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-970 @ 12/14/24 13:44:03.851
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-970 to expose endpoints map[pod2:[101]] @ 12/14/24 13:44:03.863
  E1214 13:44:04.165057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:04.883455 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-970 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-970 @ 12/14/24 13:44:04.883
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-970 to expose endpoints map[] @ 12/14/24 13:44:04.9
  E1214 13:44:05.165639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:05.919518 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-970 exposes endpoints map[]
  I1214 13:44:05.937264 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-970" for this suite. @ 12/14/24 13:44:05.941
• [10.527 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/14/24 13:44:05.946
  I1214 13:44:05.946860 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 13:44:05.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:44:05.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:44:05.965
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/14/24 13:44:05.967
  E1214 13:44:06.166191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:07.166411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:08.166738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:09.167192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:44:09.989
  I1214 13:44:09.992899 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-09e4e49a-c07d-4fdb-85b1-ddf0cf781f1d container test-container: <nil>
  STEP: delete the pod @ 12/14/24 13:44:10.003
  I1214 13:44:10.021812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3754" for this suite. @ 12/14/24 13:44:10.026
• [4.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/14/24 13:44:10.034
  I1214 13:44:10.034258 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:44:10.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:44:10.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:44:10.051
  STEP: Creating service test in namespace statefulset-9510 @ 12/14/24 13:44:10.053
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/14/24 13:44:10.058
  STEP: Creating stateful set ss in namespace statefulset-9510 @ 12/14/24 13:44:10.06
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9510 @ 12/14/24 13:44:10.068
  I1214 13:44:10.074189 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1214 13:44:10.167662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:11.167699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:12.168049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:13.168309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:14.168601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:15.168776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:16.168791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:17.168933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:18.169043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:19.169280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:20.073625 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/14/24 13:44:20.073
  I1214 13:44:20.078145 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:44:20.163355 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:44:20.163411 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:44:20.163429 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:44:20.168322 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1214 13:44:20.169285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:21.169533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:22.169680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:23.169927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:24.170055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:25.170283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:26.170487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:27.170592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:28.171246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:29.172236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:30.169289 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:44:30.169331 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  E1214 13:44:30.172361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:30.186106 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999647s
  E1214 13:44:31.172498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:31.192118 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.996475416s
  E1214 13:44:32.172590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:32.196837 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.990460109s
  E1214 13:44:33.172711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:33.202704 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.986190852s
  E1214 13:44:34.173351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:34.207993 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.979690431s
  E1214 13:44:35.173972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:35.212662 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.974984726s
  E1214 13:44:36.174962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:36.217647 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.970119856s
  E1214 13:44:37.175111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:37.223108 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.964726965s
  E1214 13:44:38.175406      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:38.227910 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.959637237s
  E1214 13:44:39.175925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:39.233207 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 955.019661ms
  E1214 13:44:40.176320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9510 @ 12/14/24 13:44:40.233
  I1214 13:44:40.239810 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:44:40.319414 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:44:40.319460 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:44:40.319469 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:44:40.322128 19 wait.go:40] Found 1 stateful pods, waiting for 3
  E1214 13:44:41.176476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:42.176564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:43.176695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:44.176920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:45.177159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:46.177453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:47.177628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:48.177945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:49.178238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:50.178562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:44:50.323821 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:44:50.323857 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:44:50.323864 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/14/24 13:44:50.323
  STEP: Scale down will halt with unhealthy stateful pod @ 12/14/24 13:44:50.323
  I1214 13:44:50.330357 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:44:50.411434 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:44:50.411475 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:44:50.411484 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:44:50.411541 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:44:50.489969 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:44:50.490013 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:44:50.490043 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:44:50.490084 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:44:50.583429 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:44:50.583476 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:44:50.583485 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1214 13:44:50.583493 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1214 13:44:50.587333 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1214 13:44:51.178787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:52.178900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:53.179253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:54.179441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:55.179587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:56.179801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:57.180000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:58.180204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:44:59.180458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:00.180575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:00.591715 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:45:00.591748 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:45:00.591755 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1214 13:45:00.607155 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999657s
  E1214 13:45:01.180631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:01.613176 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.994619023s
  E1214 13:45:02.181630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:02.618260 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988742835s
  E1214 13:45:03.181825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:03.623429 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983726461s
  E1214 13:45:04.181899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:04.628820 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.978355192s
  E1214 13:45:05.182187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:05.635591 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.973071365s
  E1214 13:45:06.182308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:06.641980 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.967074109s
  E1214 13:45:07.183255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:07.646982 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.960008252s
  E1214 13:45:08.183348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:08.653730 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.954811375s
  E1214 13:45:09.184265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:45:09.658162 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 949.036628ms
  E1214 13:45:10.184707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9510 @ 12/14/24 13:45:10.658
  I1214 13:45:10.662684 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:45:10.742527 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:45:10.742572 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:45:10.742585 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:45:10.742642 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:45:10.823449 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:45:10.823496 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:45:10.823508 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:45:10.823553 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-9510 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:45:10.921239 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:45:10.921286 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:45:10.921297 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1214 13:45:10.921308 19 rest.go:150] Scaling statefulset ss to 0
  E1214 13:45:11.185704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:12.185940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:13.186908      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:14.186965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:15.187139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:16.187284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:17.187468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:18.187768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:19.187911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:20.188008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/14/24 13:45:20.93
  I1214 13:45:20.930861 19 statefulset.go:138] Deleting all statefulset in ns statefulset-9510
  I1214 13:45:20.936552 19 rest.go:150] Scaling statefulset ss to 0
  I1214 13:45:20.941988 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:45:20.946112 19 rest.go:88] Deleting statefulset ss
  I1214 13:45:20.959151 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9510" for this suite. @ 12/14/24 13:45:20.963
• [70.936 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/14/24 13:45:20.969
  I1214 13:45:20.969971 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-watch @ 12/14/24 13:45:20.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:45:20.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:45:20.988
  I1214 13:45:20.990636 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:45:21.189106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:22.190160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:23.190197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 12/14/24 13:45:23.527
  I1214 13:45:23.532755 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-14T13:45:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-14T13:45:23Z]] name:name1 resourceVersion:41437 uid:4f772a81-b2aa-4b8a-b64d-2e01b7494554] num:map[num1:9223372036854775807 num2:1000000]]}
  E1214 13:45:24.190487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:25.190566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:26.190712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:27.191569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:28.191659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:29.192104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:30.192157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:31.193220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:32.193335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:33.193556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 12/14/24 13:45:33.533
  I1214 13:45:33.539583 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-14T13:45:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-14T13:45:33Z]] name:name2 resourceVersion:41487 uid:b6b3ed7e-dfe7-4841-a550-61dc35b631a1] num:map[num1:9223372036854775807 num2:1000000]]}
  E1214 13:45:34.194379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:35.194609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:36.194765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:37.194975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:38.195314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:39.195558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:40.195818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:41.196807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:42.196961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:43.197155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 12/14/24 13:45:43.539
  I1214 13:45:43.548428 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-14T13:45:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-14T13:45:43Z]] name:name1 resourceVersion:41507 uid:4f772a81-b2aa-4b8a-b64d-2e01b7494554] num:map[num1:9223372036854775807 num2:1000000]]}
  E1214 13:45:44.197304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:45.197522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:46.197870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:47.198239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:48.198610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:49.199213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:50.199502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:51.199705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:52.200014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:53.200361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 12/14/24 13:45:53.548
  I1214 13:45:53.555426 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-14T13:45:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-14T13:45:53Z]] name:name2 resourceVersion:41527 uid:b6b3ed7e-dfe7-4841-a550-61dc35b631a1] num:map[num1:9223372036854775807 num2:1000000]]}
  E1214 13:45:54.201293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:55.201391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:56.201493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:57.202218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:58.202329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:45:59.203260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:00.204232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:01.204562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:02.204797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:03.204998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 12/14/24 13:46:03.555
  I1214 13:46:03.564681 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-14T13:45:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-14T13:45:43Z]] name:name1 resourceVersion:41547 uid:4f772a81-b2aa-4b8a-b64d-2e01b7494554] num:map[num1:9223372036854775807 num2:1000000]]}
  E1214 13:46:04.205490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:05.205744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:06.205826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:07.206051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:08.206167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:09.206333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:10.206585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:11.206879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:12.207239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:13.207533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 12/14/24 13:46:13.565
  I1214 13:46:13.573839 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-14T13:45:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-14T13:45:53Z]] name:name2 resourceVersion:41566 uid:b6b3ed7e-dfe7-4841-a550-61dc35b631a1] num:map[num1:9223372036854775807 num2:1000000]]}
  E1214 13:46:14.207587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:15.207905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:16.207962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:17.208162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:18.208373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:19.208575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:20.208795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:21.208959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:22.209212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:23.209518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:24.090951 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6931" for this suite. @ 12/14/24 13:46:24.095
• [63.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/14/24 13:46:24.105
  I1214 13:46:24.105857 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:46:24.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:46:24.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:46:24.13
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 13:46:24.132
  E1214 13:46:24.209680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:25.209869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:26.210852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:27.210943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:46:28.157
  I1214 13:46:28.162323 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-eca03cd7-a4e8-4560-96ab-d5d5a111dfca container client-container: <nil>
  STEP: delete the pod @ 12/14/24 13:46:28.171
  I1214 13:46:28.191278 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6014" for this suite. @ 12/14/24 13:46:28.195
• [4.096 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 12/14/24 13:46:28.201
  I1214 13:46:28.201570 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:46:28.202
  E1214 13:46:28.211610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:46:28.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:46:28.22
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6786 @ 12/14/24 13:46:28.222
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/14/24 13:46:28.235
  STEP: creating service externalsvc in namespace services-6786 @ 12/14/24 13:46:28.235
  STEP: creating replication controller externalsvc in namespace services-6786 @ 12/14/24 13:46:28.25
  I1214 13:46:28.258010      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6786, replica count: 2
  E1214 13:46:29.212183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:30.213258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:31.213596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:31.309089      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/14/24 13:46:31.313
  I1214 13:46:31.332990 19 resource.go:361] Creating new exec pod
  E1214 13:46:32.213812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:33.213955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:33.351912 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-6786 exec execpod7858h -- /bin/sh -x -c nslookup clusterip-service.services-6786.svc.cluster.local'
  I1214 13:46:33.437409 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-6786.svc.cluster.local\n"
  I1214 13:46:33.437471 19 builder.go:147] stdout: "Server:\t\t10.152.183.238\nAddress:\t10.152.183.238#53\n\nclusterip-service.services-6786.svc.cluster.local\tcanonical name = externalsvc.services-6786.svc.cluster.local.\nName:\texternalsvc.services-6786.svc.cluster.local\nAddress: 10.152.183.80\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6786, will wait for the garbage collector to delete the pods @ 12/14/24 13:46:33.437
  I1214 13:46:33.500553 19 resources.go:139] Deleting ReplicationController externalsvc took: 9.414347ms
  I1214 13:46:33.600787 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.229989ms
  E1214 13:46:34.214195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:35.214614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:36.215298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:36.717929 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1214 13:46:36.728770 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6786" for this suite. @ 12/14/24 13:46:36.731
• [8.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 12/14/24 13:46:36.739
  I1214 13:46:36.739924 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:46:36.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:46:36.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:46:36.764
  STEP: creating a replication controller @ 12/14/24 13:46:36.766
  I1214 13:46:36.766560 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 create -f -'
  I1214 13:46:36.915827 19 builder.go:146] stderr: ""
  I1214 13:46:36.916367 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/14/24 13:46:36.916
  I1214 13:46:36.916616 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:46:36.989096 19 builder.go:146] stderr: ""
  I1214 13:46:36.989216 19 builder.go:147] stdout: "update-demo-nautilus-gmpg4 update-demo-nautilus-l5x6v "
  I1214 13:46:36.989267 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods update-demo-nautilus-gmpg4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:46:37.055698 19 builder.go:146] stderr: ""
  I1214 13:46:37.055838 19 builder.go:147] stdout: ""
  I1214 13:46:37.055850 19 kubectl.go:2502] update-demo-nautilus-gmpg4 is created but not running
  E1214 13:46:37.216147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:38.216410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:39.216545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:40.216669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:41.216737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:42.057427 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:46:42.136666 19 builder.go:146] stderr: ""
  I1214 13:46:42.136711 19 builder.go:147] stdout: "update-demo-nautilus-gmpg4 update-demo-nautilus-l5x6v "
  I1214 13:46:42.136822 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods update-demo-nautilus-gmpg4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:46:42.181682 19 builder.go:146] stderr: ""
  I1214 13:46:42.181718 19 builder.go:147] stdout: "true"
  I1214 13:46:42.181786 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods update-demo-nautilus-gmpg4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1214 13:46:42.216812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:42.227281 19 builder.go:146] stderr: ""
  I1214 13:46:42.227321 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:46:42.227331 19 kubectl.go:2393] validating pod update-demo-nautilus-gmpg4
  I1214 13:46:42.234041 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:46:42.234109 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:46:42.234121 19 kubectl.go:2520] update-demo-nautilus-gmpg4 is verified up and running
  I1214 13:46:42.234225 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods update-demo-nautilus-l5x6v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:46:42.281443 19 builder.go:146] stderr: ""
  I1214 13:46:42.281486 19 builder.go:147] stdout: "true"
  I1214 13:46:42.281544 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods update-demo-nautilus-l5x6v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1214 13:46:42.329393 19 builder.go:146] stderr: ""
  I1214 13:46:42.329449 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:46:42.329461 19 kubectl.go:2393] validating pod update-demo-nautilus-l5x6v
  I1214 13:46:42.334845 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:46:42.334889 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:46:42.334898 19 kubectl.go:2520] update-demo-nautilus-l5x6v is verified up and running
  STEP: using delete to clean up resources @ 12/14/24 13:46:42.334
  I1214 13:46:42.335011 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 delete --grace-period=0 --force -f -'
  I1214 13:46:42.386301 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 13:46:42.386339 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1214 13:46:42.386406 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get rc,svc -l name=update-demo --no-headers'
  I1214 13:46:42.487060 19 builder.go:146] stderr: "No resources found in kubectl-1081 namespace.\n"
  I1214 13:46:42.487222 19 builder.go:147] stdout: ""
  I1214 13:46:42.487276 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-1081 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1214 13:46:42.536345 19 builder.go:146] stderr: ""
  I1214 13:46:42.536390 19 builder.go:147] stdout: ""
  I1214 13:46:42.536639 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1081" for this suite. @ 12/14/24 13:46:42.541
• [5.808 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/14/24 13:46:42.548
  I1214 13:46:42.548395 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/14/24 13:46:42.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:46:42.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:46:42.568
  STEP: create the container to handle the HTTPGet hook request. @ 12/14/24 13:46:42.573
  E1214 13:46:43.217249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:44.218262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:45.218488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:46.218920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:47.219103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:48.219388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/14/24 13:46:48.604
  E1214 13:46:49.219472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:50.219522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/14/24 13:46:50.622
  STEP: delete the pod with lifecycle hook @ 12/14/24 13:46:50.634
  E1214 13:46:51.220594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:52.220654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:46:52.652092 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3152" for this suite. @ 12/14/24 13:46:52.656
• [10.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/14/24 13:46:52.666
  I1214 13:46:52.666538 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename init-container @ 12/14/24 13:46:52.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:46:52.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:46:52.687
  STEP: creating the pod @ 12/14/24 13:46:52.689
  I1214 13:46:52.689141 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1214 13:46:53.221084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:54.221634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:55.221742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:56.221812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:57.221880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:58.221961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:46:59.222190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:00.222279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:01.222369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:02.222662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:03.223464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:04.223550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:05.223750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:06.223990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:07.224182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:08.224274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:09.224539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:10.224894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:11.225858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:12.225966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:13.226174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:14.226470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:15.226726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:16.226922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:17.227145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:18.228037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:19.228189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:20.228513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:21.228582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:22.229285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:23.229502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:24.229695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:25.229918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:26.230165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:27.230271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:28.231215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:29.231314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:30.231409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:30.720733 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4b03d157-344a-4b2f-a62b-8d3cbbe26dbc", GenerateName:"", Namespace:"init-container-2093", SelfLink:"", UID:"753b2e34-d6e0-4791-805c-206b0300aab4", ResourceVersion:"42045", Generation:0, CreationTimestamp:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"689131290"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003742138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 14, 13, 47, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003742180), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jx722", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004fb4aa0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jx722", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jx722", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jx722", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002892cd0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-20-132", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003bcf900), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002892d60)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002892d80)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002892d88), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002892d8c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000e4aac0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 14, 13, 46, 53, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.20.132", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.20.132"}}, PodIP:"192.168.249.132", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.249.132"}}, StartTime:time.Date(2024, time.December, 14, 13, 46, 52, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0034baa80)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0034babd0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://421da5dddbcf19034c090e08215ed8634861c93025cc37632c853f0ddc248bed", Started:(*bool)(0xc002892e3a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jx722", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e4aae0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004fb4b00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002892e4d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jx722", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e4aaf0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004fb4ae0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc002892e04), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jx722", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e4aad0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1214 13:47:30.720881 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2093" for this suite. @ 12/14/24 13:47:30.725
• [38.065 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 12/14/24 13:47:30.731
  I1214 13:47:30.731895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:47:30.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:47:30.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:47:30.753
  STEP: creating a replication controller @ 12/14/24 13:47:30.755
  I1214 13:47:30.755810 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 create -f -'
  I1214 13:47:30.843203 19 builder.go:146] stderr: ""
  I1214 13:47:30.843250 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/14/24 13:47:30.843
  I1214 13:47:30.843375 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:47:30.890159 19 builder.go:146] stderr: ""
  I1214 13:47:30.890199 19 builder.go:147] stdout: "update-demo-nautilus-h59pf update-demo-nautilus-plnnc "
  I1214 13:47:30.890248 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-h59pf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:30.933101 19 builder.go:146] stderr: ""
  I1214 13:47:30.933146 19 builder.go:147] stdout: ""
  I1214 13:47:30.933156 19 kubectl.go:2502] update-demo-nautilus-h59pf is created but not running
  E1214 13:47:31.232335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:32.233229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:33.233353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:34.233574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:35.233744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:35.933385 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:47:35.978307 19 builder.go:146] stderr: ""
  I1214 13:47:35.978344 19 builder.go:147] stdout: "update-demo-nautilus-h59pf update-demo-nautilus-plnnc "
  I1214 13:47:35.978397 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-h59pf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:36.022559 19 builder.go:146] stderr: ""
  I1214 13:47:36.022611 19 builder.go:147] stdout: "true"
  I1214 13:47:36.022663 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-h59pf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1214 13:47:36.067076 19 builder.go:146] stderr: ""
  I1214 13:47:36.067122 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:47:36.067135 19 kubectl.go:2393] validating pod update-demo-nautilus-h59pf
  I1214 13:47:36.071218 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:47:36.071281 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:47:36.071294 19 kubectl.go:2520] update-demo-nautilus-h59pf is verified up and running
  I1214 13:47:36.071333 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-plnnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:36.116124 19 builder.go:146] stderr: ""
  I1214 13:47:36.116161 19 builder.go:147] stdout: "true"
  I1214 13:47:36.116211 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-plnnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1214 13:47:36.159971 19 builder.go:146] stderr: ""
  I1214 13:47:36.160042 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:47:36.160057 19 kubectl.go:2393] validating pod update-demo-nautilus-plnnc
  I1214 13:47:36.165440 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:47:36.165491 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:47:36.165504 19 kubectl.go:2520] update-demo-nautilus-plnnc is verified up and running
  STEP: scaling down the replication controller @ 12/14/24 13:47:36.165
  I1214 13:47:36.166389 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1214 13:47:36.166421 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1214 13:47:36.234740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:37.231146 19 builder.go:146] stderr: ""
  I1214 13:47:37.231192 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/14/24 13:47:37.231
  I1214 13:47:37.231292 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1214 13:47:37.235693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:37.278549 19 builder.go:146] stderr: ""
  I1214 13:47:37.278587 19 builder.go:147] stdout: "update-demo-nautilus-h59pf update-demo-nautilus-plnnc "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/14/24 13:47:37.278
  E1214 13:47:38.236201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:39.236243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:40.236362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:41.236871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:42.237823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:42.279209 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:47:42.324518 19 builder.go:146] stderr: ""
  I1214 13:47:42.324566 19 builder.go:147] stdout: "update-demo-nautilus-plnnc "
  I1214 13:47:42.324624 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-plnnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:42.368833 19 builder.go:146] stderr: ""
  I1214 13:47:42.368873 19 builder.go:147] stdout: "true"
  I1214 13:47:42.368952 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-plnnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1214 13:47:42.414084 19 builder.go:146] stderr: ""
  I1214 13:47:42.414124 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:47:42.414137 19 kubectl.go:2393] validating pod update-demo-nautilus-plnnc
  I1214 13:47:42.419145 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:47:42.419185 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:47:42.419194 19 kubectl.go:2520] update-demo-nautilus-plnnc is verified up and running
  STEP: scaling up the replication controller @ 12/14/24 13:47:42.419
  I1214 13:47:42.419997 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1214 13:47:42.420048 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1214 13:47:43.238135      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:43.485692 19 builder.go:146] stderr: ""
  I1214 13:47:43.485727 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/14/24 13:47:43.485
  I1214 13:47:43.485809 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:47:43.532415 19 builder.go:146] stderr: ""
  I1214 13:47:43.532452 19 builder.go:147] stdout: "update-demo-nautilus-k25lq update-demo-nautilus-plnnc "
  I1214 13:47:43.532503 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-k25lq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:43.575995 19 builder.go:146] stderr: ""
  I1214 13:47:43.576055 19 builder.go:147] stdout: ""
  I1214 13:47:43.576075 19 kubectl.go:2502] update-demo-nautilus-k25lq is created but not running
  E1214 13:47:44.238182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:45.238256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:46.238353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:47.238484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:48.238599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:47:48.576276 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1214 13:47:48.623337 19 builder.go:146] stderr: ""
  I1214 13:47:48.623375 19 builder.go:147] stdout: "update-demo-nautilus-k25lq update-demo-nautilus-plnnc "
  I1214 13:47:48.623423 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-k25lq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:48.669114 19 builder.go:146] stderr: ""
  I1214 13:47:48.669191 19 builder.go:147] stdout: "true"
  I1214 13:47:48.669273 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-k25lq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1214 13:47:48.712349 19 builder.go:146] stderr: ""
  I1214 13:47:48.712387 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:47:48.712398 19 kubectl.go:2393] validating pod update-demo-nautilus-k25lq
  I1214 13:47:48.718064 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:47:48.718109 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:47:48.718121 19 kubectl.go:2520] update-demo-nautilus-k25lq is verified up and running
  I1214 13:47:48.718180 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-plnnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1214 13:47:48.761896 19 builder.go:146] stderr: ""
  I1214 13:47:48.761939 19 builder.go:147] stdout: "true"
  I1214 13:47:48.761985 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods update-demo-nautilus-plnnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1214 13:47:48.806242 19 builder.go:146] stderr: ""
  I1214 13:47:48.806278 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1214 13:47:48.806291 19 kubectl.go:2393] validating pod update-demo-nautilus-plnnc
  I1214 13:47:48.812525 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1214 13:47:48.812569 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1214 13:47:48.812581 19 kubectl.go:2520] update-demo-nautilus-plnnc is verified up and running
  STEP: using delete to clean up resources @ 12/14/24 13:47:48.812
  I1214 13:47:48.812739 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 delete --grace-period=0 --force -f -'
  I1214 13:47:48.862300 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1214 13:47:48.862347 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1214 13:47:48.862479 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get rc,svc -l name=update-demo --no-headers'
  I1214 13:47:48.912389 19 builder.go:146] stderr: "No resources found in kubectl-4786 namespace.\n"
  I1214 13:47:48.912433 19 builder.go:147] stdout: ""
  I1214 13:47:48.912481 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-4786 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1214 13:47:48.959669 19 builder.go:146] stderr: ""
  I1214 13:47:48.959780 19 builder.go:147] stdout: ""
  I1214 13:47:48.959962 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4786" for this suite. @ 12/14/24 13:47:48.965
• [18.241 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 12/14/24 13:47:48.973
  I1214 13:47:48.973121 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename taint-single-pod @ 12/14/24 13:47:48.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:47:48.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:47:48.997
  I1214 13:47:48.999086 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1214 13:47:49.239085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:50.239275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:51.239690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:52.240193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:53.240535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:54.240784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:55.241581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:56.241733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:57.242530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:58.243259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:47:59.244143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:00.244355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:01.245222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:02.245422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:03.246419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:04.246635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:05.247404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:06.248211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:07.248480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:08.248684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:09.249300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:10.249419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:11.249674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:12.249872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:13.250081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:14.250306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:15.251104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:16.251622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:17.252220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:18.252359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:19.252815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:20.252927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:21.253214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:22.253318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:23.253743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:24.253960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:25.254706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:26.254804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:27.254953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:28.255428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:29.255781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:30.256190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:31.257214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:32.257288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:33.258107      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:34.258186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:35.258893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:36.259163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:37.259237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:38.259499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:39.260141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:40.260744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:41.261428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:42.262214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:43.263065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:44.263158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:45.263946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:46.264948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:47.265122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:48.265448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:48:48.999457 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1214 13:48:49.003656 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 12/14/24 13:48:49.003
  I1214 13:48:49.220902 19 taints.go:294] Pod is running on ip-172-31-20-132. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/14/24 13:48:49.22
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/14/24 13:48:49.23
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/14/24 13:48:49.234
  I1214 13:48:49.234350 19 taints.go:313] Pod wasn't evicted. Proceeding
  I1214 13:48:49.234364 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/14/24 13:48:49.245
  STEP: Waiting some time to make sure that toleration time passed. @ 12/14/24 13:48:49.248
  E1214 13:48:49.266396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:50.266486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:51.267185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:52.267262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:53.267471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:54.267634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:55.267841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:56.267977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:57.268231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:58.268391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:48:59.268686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:00.268930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:01.269004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:02.269167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:03.269381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:04.269578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:05.269773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:06.270060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:07.270360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:08.270559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:09.270689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:10.270776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:11.271610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:12.271703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:13.272265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:14.273212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:15.274236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:16.274539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:17.274642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:18.275217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:19.275354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:20.275612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:21.276243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:22.276608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:23.276816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:24.277057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:25.277262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:26.277574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:27.277893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:28.278286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:29.278595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:30.278891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:31.279099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:32.279292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:33.279518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:34.279749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:35.280616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:36.280711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:37.280825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:38.280927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:39.281071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:40.281243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:41.281444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:42.282226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:43.283213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:44.283399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:45.284234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:46.284431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:47.285253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:48.285516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:49.286160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:50.286434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:51.286906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:52.287218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:53.287542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:54.287782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:55.288007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:56.288343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:57.288546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:58.288685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:49:59.288975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:00.289247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:01.289595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:02.289932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:03.290238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:50:04.248340 19 taints.go:329] Pod wasn't evicted. Test successful
  I1214 13:50:04.248521 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2303" for this suite. @ 12/14/24 13:50:04.253
• [135.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/14/24 13:50:04.261
  I1214 13:50:04.261069 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:50:04.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:50:04.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:50:04.282
  STEP: Creating configMap with name configmap-test-upd-584b6030-dc2b-462c-84f9-f3af1ecb8483 @ 12/14/24 13:50:04.286
  E1214 13:50:04.290925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating the pod @ 12/14/24 13:50:04.292
  E1214 13:50:05.291185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:06.291256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-584b6030-dc2b-462c-84f9-f3af1ecb8483 @ 12/14/24 13:50:06.328
  STEP: waiting to observe update in volume @ 12/14/24 13:50:06.334
  E1214 13:50:07.291373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:08.291468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:09.291572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:10.291673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:11.291847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:12.292275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:13.292369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:14.293243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:15.293357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:16.294222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:17.294368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:18.294593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:19.294761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:20.294880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:21.294954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:22.295214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:23.295895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:24.296253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:25.296423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:26.297528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:27.297859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:28.298687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:29.299188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:30.299288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:31.300363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:32.301235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:33.301338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:34.301431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:35.301534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:36.302210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:37.303163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:38.303353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:39.303466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:40.303580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:41.303900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:42.304004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:43.304177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:44.304310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:45.304407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:46.304686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:47.305730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:48.305911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:49.306195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:50.306405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:51.307455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:52.308263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:53.308449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:54.308530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:55.309400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:56.309659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:57.310665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:58.310758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:50:59.310971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:00.311188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:01.311236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:02.311314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:03.311431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:04.311533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:05.311637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:06.311712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:07.312387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:08.313238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:09.314275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:10.314473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:11.314578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:12.314800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:13.315092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:14.315268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:15.315387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:16.315642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:17.316542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:18.316761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:19.317000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:20.317216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:21.317514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:22.317629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:23.317876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:24.318670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:51:24.709081 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4016" for this suite. @ 12/14/24 13:51:24.713
• [80.461 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/14/24 13:51:24.722
  I1214 13:51:24.722543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/14/24 13:51:24.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:24.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:24.744
  I1214 13:51:24.747795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-61" for this suite. @ 12/14/24 13:51:24.75
• [0.036 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/14/24 13:51:24.758
  I1214 13:51:24.758478 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 13:51:24.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:24.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:24.779
  STEP: Creating configMap configmap-5021/configmap-test-5a7fd370-200f-480e-b758-f59b3afd3084 @ 12/14/24 13:51:24.78
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:51:24.784
  E1214 13:51:25.319639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:26.319930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:27.320143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:28.320385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:51:28.806
  I1214 13:51:28.810828 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-configmaps-50f30c6a-d6ea-4574-8cae-80c105fa9f72 container env-test: <nil>
  STEP: delete the pod @ 12/14/24 13:51:28.817
  I1214 13:51:28.834418 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5021" for this suite. @ 12/14/24 13:51:28.838
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/14/24 13:51:28.848
  I1214 13:51:28.848076 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 13:51:28.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:28.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:28.869
  STEP: Creating secret with name secret-test-map-2df70e07-7b59-4836-9f96-c413fbb20cdb @ 12/14/24 13:51:28.871
  STEP: Creating a pod to test consume secrets @ 12/14/24 13:51:28.876
  E1214 13:51:29.321254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:30.321349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:31.321438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:32.322253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:51:32.901
  I1214 13:51:32.904832 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-5fd334c3-f7d8-4e1f-92a9-288d2e620e3c container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 13:51:32.912
  I1214 13:51:32.939362 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1294" for this suite. @ 12/14/24 13:51:32.942
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/14/24 13:51:32.949
  I1214 13:51:32.949557 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:51:32.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:32.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:32.974
  STEP: Creating service test in namespace statefulset-8474 @ 12/14/24 13:51:32.975
  I1214 13:51:32.999241 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1214 13:51:33.322708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:34.322817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:35.322886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:36.323965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:37.324359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:38.324525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:39.324624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:40.324708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:41.324920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:42.325139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:51:43.000843 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/14/24 13:51:43.006
  I1214 13:51:43.020985 19 wait.go:40] Found 1 stateful pods, waiting for 2
  E1214 13:51:43.325365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:44.325627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:45.325811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:46.326140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:47.326363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:48.326574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:49.326881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:50.327187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:51.327445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:52.327658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:51:53.023825 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:51:53.023864 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/14/24 13:51:53.031
  STEP: Delete all of the StatefulSets @ 12/14/24 13:51:53.036
  STEP: Verify that StatefulSets have been deleted @ 12/14/24 13:51:53.047
  I1214 13:51:53.050759 19 statefulset.go:138] Deleting all statefulset in ns statefulset-8474
  I1214 13:51:53.065691 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8474" for this suite. @ 12/14/24 13:51:53.07
• [20.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/14/24 13:51:53.081
  I1214 13:51:53.081843 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename events @ 12/14/24 13:51:53.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:53.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:53.101
  STEP: creating a test event @ 12/14/24 13:51:53.103
  STEP: listing events in all namespaces @ 12/14/24 13:51:53.11
  STEP: listing events in test namespace @ 12/14/24 13:51:53.115
  STEP: listing events with field selection filtering on source @ 12/14/24 13:51:53.117
  STEP: listing events with field selection filtering on reportingController @ 12/14/24 13:51:53.12
  STEP: getting the test event @ 12/14/24 13:51:53.123
  STEP: patching the test event @ 12/14/24 13:51:53.126
  STEP: getting the test event @ 12/14/24 13:51:53.136
  STEP: updating the test event @ 12/14/24 13:51:53.139
  STEP: getting the test event @ 12/14/24 13:51:53.147
  STEP: deleting the test event @ 12/14/24 13:51:53.15
  STEP: listing events in all namespaces @ 12/14/24 13:51:53.158
  STEP: listing events in test namespace @ 12/14/24 13:51:53.162
  I1214 13:51:53.167390 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1992" for this suite. @ 12/14/24 13:51:53.17
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 12/14/24 13:51:53.182
  I1214 13:51:53.182133 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename disruption @ 12/14/24 13:51:53.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:53.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:53.203
  STEP: creating the pdb @ 12/14/24 13:51:53.204
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:51:53.208
  E1214 13:51:53.328056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:54.328263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 12/14/24 13:51:55.214
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:51:55.222
  STEP: patching the pdb @ 12/14/24 13:51:55.229
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:51:55.238
  STEP: Waiting for the pdb to be deleted @ 12/14/24 13:51:55.25
  I1214 13:51:55.254383 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6863" for this suite. @ 12/14/24 13:51:55.258
• [2.083 seconds]
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/14/24 13:51:55.265
  I1214 13:51:55.265135 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replication-controller @ 12/14/24 13:51:55.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:55.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:55.288
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/14/24 13:51:55.29
  E1214 13:51:55.329098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:51:56.329469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 12/14/24 13:51:57.312
  STEP: Then the orphan pod is adopted @ 12/14/24 13:51:57.319
  E1214 13:51:57.330478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:51:58.326711 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6380" for this suite. @ 12/14/24 13:51:58.329
  E1214 13:51:58.330706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [3.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 12/14/24 13:51:58.335
  I1214 13:51:58.335618 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 13:51:58.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:51:58.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:51:58.352
  E1214 13:51:59.331189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:00.331302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:01.331817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:02.332002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:03.332194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:04.332302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:05.332422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:06.333256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:07.334193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:08.334581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:09.334761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:10.334947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:11.335248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:12.335462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:13.335656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:14.336193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:15.336371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/14/24 13:52:15.359
  E1214 13:52:16.336488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:17.336582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:18.336893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:19.337214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:20.337452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/14/24 13:52:20.363
  STEP: Ensuring resource quota status is calculated @ 12/14/24 13:52:20.369
  E1214 13:52:21.337642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:22.337902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/14/24 13:52:22.375
  STEP: Ensuring resource quota status captures configMap creation @ 12/14/24 13:52:22.388
  E1214 13:52:23.338160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:24.338383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/14/24 13:52:24.392
  STEP: Ensuring resource quota status released usage @ 12/14/24 13:52:24.399
  E1214 13:52:25.339173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:26.339561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:26.405395 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7884" for this suite. @ 12/14/24 13:52:26.41
• [28.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 12/14/24 13:52:26.417
  I1214 13:52:26.417817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:52:26.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:52:26.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:52:26.439
  STEP: Setting up server cert @ 12/14/24 13:52:26.467
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:52:26.744
  STEP: Deploying the webhook pod @ 12/14/24 13:52:26.755
  STEP: Wait for the deployment to be ready @ 12/14/24 13:52:26.766
  I1214 13:52:26.772902 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1214 13:52:27.340131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:28.339954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 13:52:28.785
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:52:28.795
  E1214 13:52:29.340379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:29.796057 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1214 13:52:29.806265 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-262-crds.webhook.example.com via the AdmissionRegistration API @ 12/14/24 13:52:30.317
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/14/24 13:52:30.331
  E1214 13:52:30.341398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:31.342242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:32.342344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:32.930294 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1181" for this suite. @ 12/14/24 13:52:32.934
  STEP: Destroying namespace "webhook-markers-8342" for this suite. @ 12/14/24 13:52:32.942
• [6.532 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 12/14/24 13:52:32.95
  I1214 13:52:32.950174 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:52:32.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:52:32.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:52:32.971
  STEP: Setting up server cert @ 12/14/24 13:52:32.994
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:52:33.337
  E1214 13:52:33.342613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 12/14/24 13:52:33.344
  STEP: Wait for the deployment to be ready @ 12/14/24 13:52:33.357
  I1214 13:52:33.365906 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 13:52:34.343237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:35.343332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 13:52:35.377
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:52:35.39
  E1214 13:52:36.343443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:36.390759 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/14/24 13:52:36.397
  I1214 13:52:36.435371 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2163" for this suite. @ 12/14/24 13:52:36.438
  STEP: Destroying namespace "webhook-markers-687" for this suite. @ 12/14/24 13:52:36.446
• [3.504 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 12/14/24 13:52:36.453
  I1214 13:52:36.453864 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename disruption @ 12/14/24 13:52:36.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:52:36.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:52:36.474
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/14/24 13:52:36.475
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:52:36.48
  E1214 13:52:37.343551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:38.343758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/14/24 13:52:38.492
  STEP: Waiting for all pods to be running @ 12/14/24 13:52:38.492
  I1214 13:52:38.495796 19 disruption.go:680] pods: 0 < 3
  E1214 13:52:39.343915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:40.343996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/14/24 13:52:40.497
  STEP: Updating the pdb to allow a pod to be evicted @ 12/14/24 13:52:40.509
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:52:40.517
  E1214 13:52:41.344193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:42.344333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/14/24 13:52:42.521
  STEP: Waiting for all pods to be running @ 12/14/24 13:52:42.521
  STEP: Waiting for the pdb to observed all healthy pods @ 12/14/24 13:52:42.524
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/14/24 13:52:42.553
  STEP: Waiting for the pdb to be processed @ 12/14/24 13:52:42.578
  E1214 13:52:43.344450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:44.344655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/14/24 13:52:44.583
  STEP: locating a running pod @ 12/14/24 13:52:44.586
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/14/24 13:52:44.597
  STEP: Waiting for the pdb to be deleted @ 12/14/24 13:52:44.604
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/14/24 13:52:44.607
  STEP: Waiting for all pods to be running @ 12/14/24 13:52:44.607
  I1214 13:52:44.630249 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8856" for this suite. @ 12/14/24 13:52:44.638
• [8.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/14/24 13:52:44.65
  I1214 13:52:44.650801 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 13:52:44.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:52:44.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:52:44.678
  STEP: Creating pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648 @ 12/14/24 13:52:44.679
  E1214 13:52:45.344753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:46.344978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 13:52:46.769
  I1214 13:52:46.773468 19 container_probe.go:1749] Initial restart count of pod liveness-2bba07cd-228a-4577-a910-22a32e882851 is 0
  I1214 13:52:46.776554 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:47.345224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:48.345485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:48.782221 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:49.345863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:50.345999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:50.786694 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:51.346220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:52.346296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:52.791727 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:53.347171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:54.348238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:54.796983 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:55.349220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:56.349337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:56.802234 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:57.349824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:52:58.349936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:52:58.808655 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:52:59.350288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:00.350860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:00.814010 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:53:01.351246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:02.351343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:02.820267 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:53:03.351433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:04.352216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:04.824779 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  E1214 13:53:05.352339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:06.353211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:06.830518 19 container_probe.go:1759] Get pod liveness-2bba07cd-228a-4577-a910-22a32e882851 in namespace container-probe-7648
  I1214 13:53:06.830556 19 container_probe.go:1763] Restart count of pod container-probe-7648/liveness-2bba07cd-228a-4577-a910-22a32e882851 is now 1 (20.057058754s elapsed)
  STEP: deleting the pod @ 12/14/24 13:53:06.83
  I1214 13:53:06.844863 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7648" for this suite. @ 12/14/24 13:53:06.848
• [22.203 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 12/14/24 13:53:06.853
  I1214 13:53:06.853906 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 13:53:06.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:53:06.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:53:06.875
  STEP: Creating a test headless service @ 12/14/24 13:53:06.876
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3812.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3812.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/14/24 13:53:06.884
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3812.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3812.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/14/24 13:53:06.884
  STEP: creating a pod to probe DNS @ 12/14/24 13:53:06.884
  STEP: submitting the pod to kubernetes @ 12/14/24 13:53:06.884
  E1214 13:53:07.353510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:08.354261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/14/24 13:53:08.903
  STEP: looking for the results for each expected name from probers @ 12/14/24 13:53:08.906
  I1214 13:53:08.924769 19 dns_common.go:527] DNS probes using dns-3812/dns-test-6207a37a-1424-4098-8130-fb05b308b504 succeeded

  STEP: deleting the pod @ 12/14/24 13:53:08.924
  STEP: deleting the test headless service @ 12/14/24 13:53:08.942
  I1214 13:53:08.955967 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3812" for this suite. @ 12/14/24 13:53:08.959
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/14/24 13:53:08.968
  I1214 13:53:08.968305 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 13:53:08.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:53:08.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:53:08.991
  STEP: Creating pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253 @ 12/14/24 13:53:08.992
  E1214 13:53:09.355139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:10.355342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 13:53:11.01
  I1214 13:53:11.014649 19 container_probe.go:1749] Initial restart count of pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e is 0
  I1214 13:53:11.017141 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:11.355444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:12.355666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:13.022649 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:13.356156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:14.356173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:15.028125 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:15.356561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:16.356836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:17.033292 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:17.357899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:18.358154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:19.038515 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:19.358999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:20.359244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:21.044893 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:21.359515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:22.359766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:23.049687 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:23.360094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:24.360216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:25.056058 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:25.360390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:26.361335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:27.060907 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:27.362256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:28.362340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:29.065938 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:29.362407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:30.363265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:31.070777 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:31.364188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:32.364291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:33.076341 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:33.364796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:34.365102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:35.082782 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:35.365217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:36.365321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:37.088358 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:37.365696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:38.365936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:39.093287 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:39.366875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:40.367124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:41.100125 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:41.367508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:42.367732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:43.105115 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:43.368500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:44.368731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:45.110864 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:45.369274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:46.369639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:47.115633 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:47.369898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:48.369993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:49.119910 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:49.370267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:50.370374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:51.125375 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:51.370505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:52.370642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:53.130537 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:53.370728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:54.371164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:55.134781 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:55.372114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:56.372180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:57.140699 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:57.373114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:53:58.373330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:53:59.146197 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:53:59.373443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:00.373538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:01.150530 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:01.373855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:02.374122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:03.156646 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:03.375147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:04.375388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:05.160831 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:05.376397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:06.376473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:07.165731 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:07.377049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:08.377401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:09.171807 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:09.378211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:10.378293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:11.176691 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:11.379124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:12.379352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:13.183216 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:13.379535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:14.379634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:15.189456 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:15.379771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:16.379910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:17.194956 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:17.380199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:18.381211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:19.199226 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:19.381463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:20.382245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:21.204984 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:21.383254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:22.383458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:23.209761 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:23.384069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:24.384205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:25.215471 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:25.384753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:26.384891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:27.220440 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:27.385182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:28.385398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:29.226301 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:29.385440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:30.385731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:31.230860 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:31.386218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:32.386404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:33.235251 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:33.386494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:34.386687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:35.241653 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:35.386900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:36.386946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:37.247049 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:37.387217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:38.387453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:39.251907 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:39.388337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:40.388527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:41.256560 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:41.388659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:42.388741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:43.261287 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:43.389551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:44.389802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:45.267924 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:45.390209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:46.390547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:47.273551 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:47.390913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:48.391102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:49.279578 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:49.391799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:50.391931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:51.284706 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:51.392888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:52.393003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:53.289420 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:53.393580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:54.393685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:55.295176 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:55.394334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:56.394444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:57.301078 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:57.395305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:54:58.395554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:54:59.306706 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:54:59.395871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:00.396121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:01.310697 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:01.396983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:02.397360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:03.315330 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:03.397474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:04.398654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:05.321255 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:05.399631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:06.399817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:07.326844 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:07.399970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:08.400222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:09.332094 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:09.400251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:10.400459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:11.337063 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:11.401254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:12.402222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:13.341679 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:13.402858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:14.403331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:15.345753 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:15.403922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:16.404224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:17.351462 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:17.404603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:18.404939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:19.356332 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:19.405464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:20.405677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:21.360616 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:21.405839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:22.406120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:23.365829 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:23.407145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:24.407213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:25.370359 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:25.407472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:26.407792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:27.375605 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:27.408844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:28.408958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:29.380314 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:29.409661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:30.409874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:31.385901 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:31.410053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:32.410189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:33.391997 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:33.411245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:34.412240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:35.397737 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:35.412876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:36.412979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:37.402823 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:37.413995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:38.414163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:39.407556 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:39.414827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:40.415076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:41.413149 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:41.415165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:42.415435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:43.415683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:43.418062 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:44.416260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:45.416469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:45.424325 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:46.417270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:47.417361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:47.429758 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:48.417621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:49.417838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:49.434238 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:50.418172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:51.418335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:51.439562 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:52.418650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:53.419271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:53.445119 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:54.420209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:55.421211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:55.449632 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:56.421372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:57.421469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:57.456041 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:55:58.422256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:55:59.422358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:55:59.461095 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:00.422475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:01.423345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:01.465675 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:02.423448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:03.423615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:03.471177 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:04.426319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:05.425336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:05.475899 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:06.425465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:07.425702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:07.482108 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:08.425936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:09.426187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:09.487335 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:10.426407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:11.426472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:11.491971 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:12.427398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:13.427588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:13.498681 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:14.427598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:15.427798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:15.505114 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:16.428094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:17.428423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:17.510489 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:18.429503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:19.429722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:19.514823 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:20.429786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:21.429952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:21.518907 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:22.430314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:23.430464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:23.523393 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:24.431345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:25.432257      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:25.529782 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:26.432947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:27.433470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:27.535633 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:28.433388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:29.433752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:29.541286 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:30.434140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:31.434164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:31.546331 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:32.434313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:33.434603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:33.551749 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:34.434840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:35.435319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:35.557699 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:36.435746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:37.435980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:37.563183 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:38.436215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:39.436438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:39.568567 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:40.436505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:41.436588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:41.575112 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:42.436877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:43.437190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:43.579865 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:44.438054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:45.437813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:45.585931 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:46.437910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:47.438222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:47.590818 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:48.438726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:49.438960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:49.596093 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:50.439188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:51.439621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:51.602945 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:52.439815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:53.440759      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:53.607737 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:54.441357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:55.441400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:55.613176 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:56.442389      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:57.442490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:57.619764 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:56:58.443211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:56:59.444218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:56:59.625181 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:57:00.445181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:01.445497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:01.630567 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:57:02.445708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:03.446278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:03.635529 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:57:04.448191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:05.448616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:05.640277 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:57:06.449170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:07.449361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:07.646721 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:57:08.449630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:09.450692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:09.650869 19 container_probe.go:1759] Get pod test-webserver-b361f1ad-f8ab-4eca-8070-6c752b57939e in namespace container-probe-7253
  E1214 13:57:10.451209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:11.451299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/14/24 13:57:11.651
  I1214 13:57:11.669176 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7253" for this suite. @ 12/14/24 13:57:11.673
• [242.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 12/14/24 13:57:11.681
  I1214 13:57:11.681540 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl-logs @ 12/14/24 13:57:11.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:11.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:11.716
  STEP: creating a pod @ 12/14/24 13:57:11.717
  I1214 13:57:11.717704 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1214 13:57:11.768631 19 builder.go:146] stderr: ""
  I1214 13:57:11.768721 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/14/24 13:57:11.768
  I1214 13:57:11.768817 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1214 13:57:12.452243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:13.452355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:13.777139 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/14/24 13:57:13.777
  I1214 13:57:13.777237 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 logs logs-generator logs-generator'
  I1214 13:57:13.835806 19 builder.go:146] stderr: ""
  I1214 13:57:13.835850 19 builder.go:147] stdout: "I1214 13:57:12.300028       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4ps 539\nI1214 13:57:12.500140       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/hrk9 494\nI1214 13:57:12.700779       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/k6qc 359\nI1214 13:57:12.900039       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/mr5 514\nI1214 13:57:13.100350       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/vnz4 427\nI1214 13:57:13.300670       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/4hm 407\nI1214 13:57:13.500992       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/6qz7 324\nI1214 13:57:13.700345       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jj8 521\n"
  STEP: limiting log lines @ 12/14/24 13:57:13.835
  I1214 13:57:13.835940 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 logs logs-generator logs-generator --tail=1'
  I1214 13:57:13.893142 19 builder.go:146] stderr: ""
  I1214 13:57:13.893198 19 builder.go:147] stdout: "I1214 13:57:13.700345       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jj8 521\n"
  I1214 13:57:13.893209 19 logs.go:180] got output "I1214 13:57:13.700345       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jj8 521\n"
  STEP: limiting log bytes @ 12/14/24 13:57:13.893
  I1214 13:57:13.893300 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 logs logs-generator logs-generator --limit-bytes=1'
  I1214 13:57:13.944946 19 builder.go:146] stderr: ""
  I1214 13:57:13.944984 19 builder.go:147] stdout: "I"
  I1214 13:57:13.944992 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 12/14/24 13:57:13.945
  I1214 13:57:13.945101 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 logs logs-generator logs-generator --tail=1 --timestamps'
  I1214 13:57:13.996437 19 builder.go:146] stderr: ""
  I1214 13:57:13.996480 19 builder.go:147] stdout: "2024-12-14T13:57:13.900730589Z I1214 13:57:13.900633       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/cg2 413\n"
  I1214 13:57:13.996491 19 logs.go:192] got output "2024-12-14T13:57:13.900730589Z I1214 13:57:13.900633       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/cg2 413\n"
  STEP: restricting to a time range @ 12/14/24 13:57:13.996
  E1214 13:57:14.453392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:15.454219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:16.454424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:16.496652 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 logs logs-generator logs-generator --since=1s'
  I1214 13:57:16.554629 19 builder.go:146] stderr: ""
  I1214 13:57:16.554671 19 builder.go:147] stdout: "I1214 13:57:15.700241       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/2lv 501\nI1214 13:57:15.900540       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/k2z 584\nI1214 13:57:16.100876       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/pcj 497\nI1214 13:57:16.300164       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/9pf 481\nI1214 13:57:16.500484       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/g8mg 258\n"
  I1214 13:57:16.554718 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 logs logs-generator logs-generator --since=24h'
  I1214 13:57:16.605667 19 builder.go:146] stderr: ""
  I1214 13:57:16.605730 19 builder.go:147] stdout: "I1214 13:57:12.300028       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4ps 539\nI1214 13:57:12.500140       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/hrk9 494\nI1214 13:57:12.700779       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/k6qc 359\nI1214 13:57:12.900039       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/mr5 514\nI1214 13:57:13.100350       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/vnz4 427\nI1214 13:57:13.300670       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/4hm 407\nI1214 13:57:13.500992       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/6qz7 324\nI1214 13:57:13.700345       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jj8 521\nI1214 13:57:13.900633       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/cg2 413\nI1214 13:57:14.100975       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/4mq 435\nI1214 13:57:14.300184       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/j4s 230\nI1214 13:57:14.500484       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/jdz 501\nI1214 13:57:14.700801       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/ffd 477\nI1214 13:57:14.900045       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/n4x 548\nI1214 13:57:15.100394       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/w7nb 454\nI1214 13:57:15.300719       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/hgw 513\nI1214 13:57:15.501016       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/hnn5 463\nI1214 13:57:15.700241       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/2lv 501\nI1214 13:57:15.900540       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/k2z 584\nI1214 13:57:16.100876       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/pcj 497\nI1214 13:57:16.300164       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/9pf 481\nI1214 13:57:16.500484       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/g8mg 258\n"
  I1214 13:57:16.605930 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-logs-6388 delete pod logs-generator'
  E1214 13:57:17.454550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:17.728379 19 builder.go:146] stderr: ""
  I1214 13:57:17.728420 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1214 13:57:17.728556 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6388" for this suite. @ 12/14/24 13:57:17.732
• [6.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/14/24 13:57:17.739
  I1214 13:57:17.739605 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename podtemplate @ 12/14/24 13:57:17.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:17.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:17.758
  STEP: Create a pod template @ 12/14/24 13:57:17.76
  STEP: Replace a pod template @ 12/14/24 13:57:17.767
  I1214 13:57:17.773465 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1214 13:57:17.773578 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6792" for this suite. @ 12/14/24 13:57:17.776
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/14/24 13:57:17.783
  I1214 13:57:17.783241 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/14/24 13:57:17.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:17.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:17.803
  STEP: create the container to handle the HTTPGet hook request. @ 12/14/24 13:57:17.809
  E1214 13:57:18.454932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:19.455246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/14/24 13:57:19.829
  E1214 13:57:20.456121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:21.456419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/14/24 13:57:21.848
  E1214 13:57:22.456950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:23.457200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/14/24 13:57:23.865
  I1214 13:57:23.879144 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5366" for this suite. @ 12/14/24 13:57:23.882
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/14/24 13:57:23.889
  I1214 13:57:23.889624 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename endpointslice @ 12/14/24 13:57:23.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:23.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:23.91
  STEP: getting /apis @ 12/14/24 13:57:23.911
  STEP: getting /apis/discovery.k8s.io @ 12/14/24 13:57:23.914
  STEP: getting /apis/discovery.k8s.iov1 @ 12/14/24 13:57:23.915
  STEP: creating @ 12/14/24 13:57:23.915
  STEP: getting @ 12/14/24 13:57:23.932
  STEP: listing @ 12/14/24 13:57:23.934
  STEP: watching @ 12/14/24 13:57:23.937
  I1214 13:57:23.937314 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/14/24 13:57:23.937
  STEP: cluster-wide watching @ 12/14/24 13:57:23.941
  I1214 13:57:23.941215 19 endpointslice.go:459] starting watch
  STEP: patching @ 12/14/24 13:57:23.942
  STEP: updating @ 12/14/24 13:57:23.947
  I1214 13:57:23.953815 19 endpointslice.go:482] waiting for watch events with expected annotations
  I1214 13:57:23.953853 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/14/24 13:57:23.953
  STEP: deleting a collection @ 12/14/24 13:57:23.964
  I1214 13:57:23.980912 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-849" for this suite. @ 12/14/24 13:57:23.984
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/14/24 13:57:23.994
  I1214 13:57:23.994442 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 13:57:23.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:24.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:24.01
  STEP: Creating configMap with name projected-configmap-test-volume-48140ca9-42d1-4306-87ba-bd0a6d195e1a @ 12/14/24 13:57:24.012
  STEP: Creating a pod to test consume configMaps @ 12/14/24 13:57:24.018
  E1214 13:57:24.459354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:25.458064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:57:26.033
  I1214 13:57:26.038309 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-configmaps-d675d6a6-182d-4f0d-8117-788d529ca5d7 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 13:57:26.045
  I1214 13:57:26.059855 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3890" for this suite. @ 12/14/24 13:57:26.064
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/14/24 13:57:26.071
  I1214 13:57:26.071676 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename watch @ 12/14/24 13:57:26.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:26.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:26.095
  STEP: creating a watch on configmaps with a certain label @ 12/14/24 13:57:26.097
  STEP: creating a new configmap @ 12/14/24 13:57:26.097
  STEP: modifying the configmap once @ 12/14/24 13:57:26.101
  STEP: changing the label value of the configmap @ 12/14/24 13:57:26.109
  STEP: Expecting to observe a delete notification for the watched object @ 12/14/24 13:57:26.115
  I1214 13:57:26.115674 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1359  7aeda8da-ef18-433f-b098-c2198eb451e2 44386 0 2024-12-14 13:57:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-14 13:57:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:57:26.115893 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1359  7aeda8da-ef18-433f-b098-c2198eb451e2 44388 0 2024-12-14 13:57:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-14 13:57:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:57:26.116066 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1359  7aeda8da-ef18-433f-b098-c2198eb451e2 44389 0 2024-12-14 13:57:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-14 13:57:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/14/24 13:57:26.116
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/14/24 13:57:26.124
  E1214 13:57:26.458638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:27.458852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:28.458978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:29.459120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:30.459407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:31.459627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:32.459880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:33.460001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:34.462267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:35.462352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 12/14/24 13:57:36.125
  STEP: modifying the configmap a third time @ 12/14/24 13:57:36.135
  STEP: deleting the configmap @ 12/14/24 13:57:36.142
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/14/24 13:57:36.149
  I1214 13:57:36.149191 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1359  7aeda8da-ef18-433f-b098-c2198eb451e2 44450 0 2024-12-14 13:57:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-14 13:57:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:57:36.149328 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1359  7aeda8da-ef18-433f-b098-c2198eb451e2 44451 0 2024-12-14 13:57:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-14 13:57:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:57:36.150142 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1359  7aeda8da-ef18-433f-b098-c2198eb451e2 44452 0 2024-12-14 13:57:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-14 13:57:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1214 13:57:36.150235 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1359" for this suite. @ 12/14/24 13:57:36.153
• [10.089 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/14/24 13:57:36.16
  I1214 13:57:36.160934 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 13:57:36.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:36.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:36.181
  STEP: Creating a pod to test downward api env vars @ 12/14/24 13:57:36.183
  E1214 13:57:36.463088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:37.463269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:38.463450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:39.464245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 13:57:40.209
  I1214 13:57:40.213837 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downward-api-038acd2b-3829-4bdb-b847-104fbcc677c1 container dapi-container: <nil>
  STEP: delete the pod @ 12/14/24 13:57:40.222
  I1214 13:57:40.241267 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3527" for this suite. @ 12/14/24 13:57:40.244
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/14/24 13:57:40.25
  I1214 13:57:40.250722 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename containers @ 12/14/24 13:57:40.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:40.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:40.272
  E1214 13:57:40.464290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:41.464469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:42.297960 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6135" for this suite. @ 12/14/24 13:57:42.302
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/14/24 13:57:42.309
  I1214 13:57:42.309972 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename emptydir @ 12/14/24 13:57:42.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:42.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:42.328
  STEP: Creating Pod @ 12/14/24 13:57:42.33
  E1214 13:57:42.465262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:43.465487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 12/14/24 13:57:44.348
  I1214 13:57:44.348184 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4860 PodName:pod-sharedvolume-c4538a65-e901-49f5-9378-a7f04f876483 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 13:57:44.348203 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 13:57:44.348636 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 13:57:44.348688 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-4860/pods/pod-sharedvolume-c4538a65-e901-49f5-9378-a7f04f876483/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1214 13:57:44.385628 19 exec_util.go:111] Exec stderr: ""
  I1214 13:57:44.385828 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4860" for this suite. @ 12/14/24 13:57:44.389
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/14/24 13:57:44.397
  I1214 13:57:44.397947 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename limitrange @ 12/14/24 13:57:44.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:44.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:44.423
  STEP: Creating a LimitRange @ 12/14/24 13:57:44.428
  STEP: Setting up watch @ 12/14/24 13:57:44.428
  E1214 13:57:44.467003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Submitting a LimitRange @ 12/14/24 13:57:44.533
  STEP: Verifying LimitRange creation was observed @ 12/14/24 13:57:44.54
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/14/24 13:57:44.54
  I1214 13:57:44.543998 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1214 13:57:44.544049 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/14/24 13:57:44.544
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/14/24 13:57:44.55
  I1214 13:57:44.554998 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1214 13:57:44.555057 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/14/24 13:57:44.555
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/14/24 13:57:44.562
  I1214 13:57:44.566846 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1214 13:57:44.566880 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/14/24 13:57:44.566
  STEP: Failing to create a Pod with more than max resources @ 12/14/24 13:57:44.568
  STEP: Updating a LimitRange @ 12/14/24 13:57:44.57
  STEP: Verifying LimitRange updating is effective @ 12/14/24 13:57:44.575
  E1214 13:57:45.467398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:46.467707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 12/14/24 13:57:46.58
  STEP: Failing to create a Pod with more than max resources @ 12/14/24 13:57:46.587
  STEP: Deleting a LimitRange @ 12/14/24 13:57:46.588
  STEP: Verifying the LimitRange was deleted @ 12/14/24 13:57:46.599
  E1214 13:57:47.467950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:48.468192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:49.468515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:50.468642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:51.468882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:51.604964 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/14/24 13:57:51.605
  I1214 13:57:51.612659 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4473" for this suite. @ 12/14/24 13:57:51.617
• [7.297 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/14/24 13:57:51.695
  I1214 13:57:51.695194 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:57:51.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:57:51.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:57:51.717
  STEP: Creating service test in namespace statefulset-3184 @ 12/14/24 13:57:51.719
  STEP: Looking for a node to schedule stateful set and pod @ 12/14/24 13:57:51.724
  STEP: Creating pod with conflicting port in namespace statefulset-3184 @ 12/14/24 13:57:51.728
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3184 @ 12/14/24 13:57:51.736
  E1214 13:57:52.469199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:53.469463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3184 @ 12/14/24 13:57:53.746
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3184 @ 12/14/24 13:57:53.753
  I1214 13:57:53.768403 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-3184, name: ss-0, uid: 60f1fc82-37ee-4466-bdb5-897f9e14c5b9, status phase: Pending. Waiting for statefulset controller to delete.
  I1214 13:57:53.785949 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-3184, name: ss-0, uid: 60f1fc82-37ee-4466-bdb5-897f9e14c5b9, status phase: Failed. Waiting for statefulset controller to delete.
  I1214 13:57:53.794750 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-3184, name: ss-0, uid: 60f1fc82-37ee-4466-bdb5-897f9e14c5b9, status phase: Failed. Waiting for statefulset controller to delete.
  I1214 13:57:53.798160 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-3184
  STEP: Removing pod with conflicting port in namespace statefulset-3184 @ 12/14/24 13:57:53.798
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3184 and will be in running state @ 12/14/24 13:57:53.812
  E1214 13:57:54.470498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:55.470503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:57:55.823044 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3184
  I1214 13:57:55.828247 19 rest.go:150] Scaling statefulset ss to 0
  E1214 13:57:56.470590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:57.470698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:58.471649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:57:59.471767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:00.471858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:01.472158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:02.472339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:03.472474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:04.472594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:05.472701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:58:05.845083 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:58:05.849963 19 rest.go:88] Deleting statefulset ss
  I1214 13:58:05.863667 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3184" for this suite. @ 12/14/24 13:58:05.866
• [14.178 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/14/24 13:58:05.872
  I1214 13:58:05.872754 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 13:58:05.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:58:05.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:58:05.894
  STEP: create the deployment @ 12/14/24 13:58:05.896
  W1214 13:58:05.903276      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/14/24 13:58:05.903
  STEP: delete the deployment @ 12/14/24 13:58:06.412
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/14/24 13:58:06.421
  E1214 13:58:06.473341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/14/24 13:58:06.937
  W1214 13:58:06.941236      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1214 13:58:06.941264 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1214 13:58:06.941395 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5765" for this suite. @ 12/14/24 13:58:06.946
• [1.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/14/24 13:58:06.953
  I1214 13:58:06.953580 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename runtimeclass @ 12/14/24 13:58:06.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:58:06.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:58:06.973
  STEP: Deleting RuntimeClass runtimeclass-8395-delete-me @ 12/14/24 13:58:06.981
  STEP: Waiting for the RuntimeClass to disappear @ 12/14/24 13:58:06.988
  I1214 13:58:06.997518 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8395" for this suite. @ 12/14/24 13:58:07.001
• [0.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 12/14/24 13:58:07.007
  I1214 13:58:07.007458 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 13:58:07.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:58:07.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:58:07.028
  STEP: Setting up server cert @ 12/14/24 13:58:07.057
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 13:58:07.161
  STEP: Deploying the webhook pod @ 12/14/24 13:58:07.168
  STEP: Wait for the deployment to be ready @ 12/14/24 13:58:07.182
  I1214 13:58:07.190292 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 13:58:07.473557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:08.473777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 13:58:09.202
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 13:58:09.213
  E1214 13:58:09.474698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:58:10.213543 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/14/24 13:58:10.222
  STEP: create a namespace for the webhook @ 12/14/24 13:58:10.235
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/14/24 13:58:10.254
  I1214 13:58:10.336220 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7327" for this suite. @ 12/14/24 13:58:10.339
  STEP: Destroying namespace "webhook-markers-1399" for this suite. @ 12/14/24 13:58:10.344
  STEP: Destroying namespace "fail-closed-namespace-2196" for this suite. @ 12/14/24 13:58:10.35
• [3.351 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/14/24 13:58:10.358
  I1214 13:58:10.358858 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename statefulset @ 12/14/24 13:58:10.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:58:10.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:58:10.376
  STEP: Creating service test in namespace statefulset-3243 @ 12/14/24 13:58:10.378
  STEP: Creating a new StatefulSet @ 12/14/24 13:58:10.384
  I1214 13:58:10.395618 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1214 13:58:10.474824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:11.475096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:12.475339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:13.476419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:14.476847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:15.477289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:16.477620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:17.478226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:18.478406      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:19.478604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:58:20.397766 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:58:20.397802 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:58:20.397811 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1214 13:58:20.408542 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-3243 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1214 13:58:20.478983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:58:20.496662 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:58:20.496726 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:58:20.496735 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1214 13:58:21.479204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:22.479551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:23.479789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:24.480053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:25.480270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:26.480529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:27.480794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:28.480918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:29.481204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:30.481273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/14/24 13:58:30.505
  I1214 13:58:30.517112 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/14/24 13:58:30.517
  E1214 13:58:31.482242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:32.482343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:33.482410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:34.482503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:35.482638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:36.482803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:37.482898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:38.483140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:39.483174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:40.483347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 12/14/24 13:58:40.526
  I1214 13:58:40.530715 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-3243 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:58:40.611064 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:58:40.611101 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:58:40.611111 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1214 13:58:41.484294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:42.484518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:43.484734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:44.485241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:45.486238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:46.486745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:47.486943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:48.487158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:49.487350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:50.488216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 12/14/24 13:58:50.626
  I1214 13:58:50.626865 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-3243 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1214 13:58:50.714146 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1214 13:58:50.714185 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1214 13:58:50.714195 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1214 13:58:51.488367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:52.488573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:53.488813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:54.488882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:55.489000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:56.489386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:57.489628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:58.489866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:58:59.490127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:00.490187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:00.735457 19 statefulset.go:2507] Updating stateful set ss2
  E1214 13:59:01.491221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:02.491286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:03.491375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:04.491512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:05.492256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:06.493217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:07.493396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:08.493766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:09.493860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:10.494084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 12/14/24 13:59:10.746
  I1214 13:59:10.749790 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=statefulset-3243 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1214 13:59:10.835763 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1214 13:59:10.835802 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1214 13:59:10.835811 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1214 13:59:11.494401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:12.494629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:13.494788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:14.495008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:15.495268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:16.495487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:17.495904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:18.496243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:19.496396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:20.496582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:20.852421 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3243
  I1214 13:59:20.856193 19 rest.go:150] Scaling statefulset ss2 to 0
  E1214 13:59:21.496991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:22.497173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:23.497420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:24.497757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:25.497900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:26.498188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:27.498396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:28.498645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:29.498794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:30.499089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:30.873338 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1214 13:59:30.877088 19 rest.go:88] Deleting statefulset ss2
  I1214 13:59:30.891486 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3243" for this suite. @ 12/14/24 13:59:30.895
• [80.545 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 12/14/24 13:59:30.904
  I1214 13:59:30.904379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:59:30.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:30.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:30.932
  STEP: creating a Service @ 12/14/24 13:59:30.936
  STEP: watching for the Service to be added @ 12/14/24 13:59:30.955
  I1214 13:59:30.956991 19 service.go:3445] Found Service test-service-9mnwh in namespace services-1266 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31735}]
  I1214 13:59:30.957035 19 service.go:3452] Service test-service-9mnwh created
  STEP: Getting /status @ 12/14/24 13:59:30.957
  I1214 13:59:30.961641 19 service.go:3463] Service test-service-9mnwh has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/14/24 13:59:30.961
  STEP: watching for the Service to be patched @ 12/14/24 13:59:30.967
  I1214 13:59:30.968737 19 service.go:3486] observed Service test-service-9mnwh in namespace services-1266 with annotations: map[] & LoadBalancer: {[]}
  I1214 13:59:30.968772 19 service.go:3489] Found Service test-service-9mnwh in namespace services-1266 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc004148aa0 []}]}
  I1214 13:59:30.968784 19 service.go:3496] Service test-service-9mnwh has service status patched
  STEP: updating the ServiceStatus @ 12/14/24 13:59:30.968
  I1214 13:59:30.977596 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/14/24 13:59:30.977
  I1214 13:59:30.979812 19 service.go:3527] Observed Service test-service-9mnwh in namespace services-1266 with annotations: map[] & Conditions: []
  I1214 13:59:30.980134 19 service.go:3538] Observed Service test-service-9mnwh in namespace services-1266 with annotations: map[patchedstatus:true] & Conditions: []
  I1214 13:59:30.980404 19 service.go:3534] Found Service test-service-9mnwh in namespace services-1266 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1214 13:59:30.980712 19 service.go:3545] Service test-service-9mnwh has service status updated
  STEP: patching the service @ 12/14/24 13:59:30.98
  STEP: watching for the Service to be patched @ 12/14/24 13:59:30.992
  I1214 13:59:30.993837 19 service.go:3568] observed Service test-service-9mnwh in namespace services-1266 with labels: map[test-service-static:true]
  I1214 13:59:30.993871 19 service.go:3568] observed Service test-service-9mnwh in namespace services-1266 with labels: map[test-service-static:true]
  I1214 13:59:30.993951 19 service.go:3568] observed Service test-service-9mnwh in namespace services-1266 with labels: map[test-service-static:true]
  I1214 13:59:30.993964 19 service.go:3571] Found Service test-service-9mnwh in namespace services-1266 with labels: map[test-service:patched test-service-static:true]
  I1214 13:59:30.993972 19 service.go:3578] Service test-service-9mnwh patched
  STEP: deleting the service @ 12/14/24 13:59:30.993
  STEP: watching for the Service to be deleted @ 12/14/24 13:59:31.009
  I1214 13:59:31.010556 19 service.go:3602] Observed event: ADDED
  I1214 13:59:31.010583 19 service.go:3602] Observed event: MODIFIED
  I1214 13:59:31.010593 19 service.go:3602] Observed event: MODIFIED
  I1214 13:59:31.010649 19 service.go:3602] Observed event: MODIFIED
  I1214 13:59:31.010713 19 service.go:3598] Found Service test-service-9mnwh in namespace services-1266 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1214 13:59:31.010721 19 service.go:3607] Service test-service-9mnwh deleted
  I1214 13:59:31.010903 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1266" for this suite. @ 12/14/24 13:59:31.014
• [0.116 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 12/14/24 13:59:31.02
  I1214 13:59:31.020425 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:59:31.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:31.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:31.04
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/14/24 13:59:31.042
  I1214 13:59:31.042348 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8812 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1214 13:59:31.099690 19 builder.go:146] stderr: ""
  I1214 13:59:31.099727 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/14/24 13:59:31.099
  I1214 13:59:31.103444 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8812 delete pods e2e-test-httpd-pod'
  E1214 13:59:31.499158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:32.499310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:32.982940 19 builder.go:146] stderr: ""
  I1214 13:59:32.982976 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1214 13:59:32.983119 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8812" for this suite. @ 12/14/24 13:59:32.987
• [1.974 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 12/14/24 13:59:32.994
  I1214 13:59:32.994143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename resourcequota @ 12/14/24 13:59:32.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:33.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:33.011
  STEP: Counting existing ResourceQuota @ 12/14/24 13:59:33.013
  E1214 13:59:33.499370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:34.499470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:35.500238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:36.501211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:37.502073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/14/24 13:59:38.018
  STEP: Ensuring resource quota status is calculated @ 12/14/24 13:59:38.024
  E1214 13:59:38.502987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:39.503193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 12/14/24 13:59:40.03
  STEP: Ensuring resource quota status captures replicaset creation @ 12/14/24 13:59:40.044
  E1214 13:59:40.504256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:41.504374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 12/14/24 13:59:42.048
  STEP: Ensuring resource quota status released usage @ 12/14/24 13:59:42.055
  E1214 13:59:42.504509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:43.504616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:44.062390 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8577" for this suite. @ 12/14/24 13:59:44.066
• [11.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 12/14/24 13:59:44.073
  I1214 13:59:44.073399 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:59:44.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:44.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:44.093
  STEP: fetching services @ 12/14/24 13:59:44.095
  I1214 13:59:44.098255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5802" for this suite. @ 12/14/24 13:59:44.102
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/14/24 13:59:44.11
  I1214 13:59:44.110876 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename podtemplate @ 12/14/24 13:59:44.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:44.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:44.132
  I1214 13:59:44.164608 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3152" for this suite. @ 12/14/24 13:59:44.168
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 12/14/24 13:59:44.177
  I1214 13:59:44.177592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 13:59:44.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:44.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:44.198
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3822 @ 12/14/24 13:59:44.2
  STEP: changing the ExternalName service to type=ClusterIP @ 12/14/24 13:59:44.206
  STEP: creating replication controller externalname-service in namespace services-3822 @ 12/14/24 13:59:44.219
  I1214 13:59:44.227100      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3822, replica count: 2
  E1214 13:59:44.505141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:45.505262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:46.506317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:47.277860      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 13:59:47.277899 19 resource.go:361] Creating new exec pod
  E1214 13:59:47.507176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:48.507378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:49.508179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:50.298262 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-3822 exec execpod4z2p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1214 13:59:50.381052 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1214 13:59:50.381096 19 builder.go:147] stdout: ""
  E1214 13:59:50.508413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:51.298379 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-3822 exec execpod4z2p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1214 13:59:51.386053 19 builder.go:146] stderr: "+ + nc -v -t -w 2 externalname-service 80\necho hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1214 13:59:51.386093 19 builder.go:147] stdout: "externalname-service-g5srl"
  I1214 13:59:51.386173 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-3822 exec execpod4z2p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.183 80'
  I1214 13:59:51.464807 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.183 80\nConnection to 10.152.183.183 80 port [tcp/http] succeeded!\n"
  I1214 13:59:51.464849 19 builder.go:147] stdout: ""
  E1214 13:59:51.508993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:52.387080 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-3822 exec execpod4z2p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.183 80'
  I1214 13:59:52.468103 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.183 80\nConnection to 10.152.183.183 80 port [tcp/http] succeeded!\n"
  I1214 13:59:52.468145 19 builder.go:147] stdout: "externalname-service-9snqf"
  I1214 13:59:52.468317 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1214 13:59:52.488906 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3822" for this suite. @ 12/14/24 13:59:52.493
• [8.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/14/24 13:59:52.5
  I1214 13:59:52.500434 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 13:59:52.501
  E1214 13:59:52.509242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:52.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:52.521
  STEP: set up a multi version CRD @ 12/14/24 13:59:52.522
  I1214 13:59:52.523302 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 13:59:53.510235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:54.511230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:55.512192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 12/14/24 13:59:55.783
  STEP: check the new version name is served @ 12/14/24 13:59:55.795
  STEP: check the old version name is removed @ 12/14/24 13:59:56.496
  E1214 13:59:56.513227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 12/14/24 13:59:57.103
  E1214 13:59:57.514007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:58.514747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 13:59:59.515031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 13:59:59.560012 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5420" for this suite. @ 12/14/24 13:59:59.57
• [7.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/14/24 13:59:59.581
  I1214 13:59:59.581087 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename kubectl @ 12/14/24 13:59:59.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:59.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:59.61
  STEP: Starting the proxy @ 12/14/24 13:59:59.614
  I1214 13:59:59.614902 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=kubectl-8593 proxy --unix-socket=/tmp/kubectl-proxy-unix1119172535/test'
  STEP: retrieving proxy /api/ output @ 12/14/24 13:59:59.648
  I1214 13:59:59.649265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8593" for this suite. @ 12/14/24 13:59:59.654
• [0.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/14/24 13:59:59.662
  I1214 13:59:59.662913 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/14/24 13:59:59.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 13:59:59.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 13:59:59.682
  STEP: create the container to handle the HTTPGet hook request. @ 12/14/24 13:59:59.692
  E1214 14:00:00.515319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:01.515494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/14/24 14:00:01.715
  E1214 14:00:02.516499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:03.517246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/14/24 14:00:03.734
  STEP: delete the pod with lifecycle hook @ 12/14/24 14:00:03.748
  E1214 14:00:04.517325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:05.517553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:05.770125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7067" for this suite. @ 12/14/24 14:00:05.773
• [6.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 12/14/24 14:00:05.782
  I1214 14:00:05.782656 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename field-validation @ 12/14/24 14:00:05.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:00:05.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:00:05.804
  I1214 14:00:05.807060 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 14:00:06.518341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:07.518510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1214 14:00:08.343044      19 warnings.go:70] unknown field "alpha"
  W1214 14:00:08.343063      19 warnings.go:70] unknown field "beta"
  W1214 14:00:08.343067      19 warnings.go:70] unknown field "delta"
  W1214 14:00:08.343070      19 warnings.go:70] unknown field "epsilon"
  W1214 14:00:08.343073      19 warnings.go:70] unknown field "gamma"
  E1214 14:00:08.518639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:08.913790 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6187" for this suite. @ 12/14/24 14:00:08.919
• [3.145 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/14/24 14:00:08.927
  I1214 14:00:08.927622 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/14/24 14:00:08.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:00:08.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:00:08.951
  I1214 14:00:08.953619 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  E1214 14:00:09.519176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/14/24 14:00:10.159
  I1214 14:00:10.159198 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-863 --namespace=crd-publish-openapi-863 create -f -'
  I1214 14:00:10.230357 19 builder.go:146] stderr: ""
  I1214 14:00:10.230403 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7529-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1214 14:00:10.230457 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-863 --namespace=crd-publish-openapi-863 delete e2e-test-crd-publish-openapi-7529-crds test-cr'
  I1214 14:00:10.281865 19 builder.go:146] stderr: ""
  I1214 14:00:10.281910 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7529-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1214 14:00:10.281975 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-863 --namespace=crd-publish-openapi-863 apply -f -'
  I1214 14:00:10.349319 19 builder.go:146] stderr: ""
  I1214 14:00:10.349376 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7529-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1214 14:00:10.349442 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-863 --namespace=crd-publish-openapi-863 delete e2e-test-crd-publish-openapi-7529-crds test-cr'
  I1214 14:00:10.403809 19 builder.go:146] stderr: ""
  I1214 14:00:10.403846 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7529-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/14/24 14:00:10.403
  I1214 14:00:10.403926 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=crd-publish-openapi-863 explain e2e-test-crd-publish-openapi-7529-crds'
  I1214 14:00:10.449772 19 builder.go:146] stderr: ""
  I1214 14:00:10.449821 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7529-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1214 14:00:10.520153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:11.520426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:11.721053 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-863" for this suite. @ 12/14/24 14:00:11.727
• [2.808 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/14/24 14:00:11.735
  I1214 14:00:11.735721 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename gc @ 12/14/24 14:00:11.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:00:11.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:00:11.753
  STEP: create the rc1 @ 12/14/24 14:00:11.758
  STEP: create the rc2 @ 12/14/24 14:00:11.764
  E1214 14:00:12.523352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:13.523490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:14.524209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:15.528084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:16.525595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:17.525659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/14/24 14:00:17.781
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/14/24 14:00:18.449
  STEP: wait for the rc to be deleted @ 12/14/24 14:00:18.455
  E1214 14:00:18.525792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:19.526106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:20.526257      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:21.526451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:22.526886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:23.466647 19 garbage_collector.go:762] 72 pods remaining
  I1214 14:00:23.466678 19 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I1214 14:00:23.466684 19 garbage_collector.go:770] 
  E1214 14:00:23.527289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:24.529983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:25.530144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:26.531220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:27.531321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/14/24 14:00:28.467
  W1214 14:00:28.473083      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1214 14:00:28.473154 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1214 14:00:28.473214 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27dg2" in namespace "gc-8453"
  I1214 14:00:28.489810 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2hknd" in namespace "gc-8453"
  I1214 14:00:28.504906 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rpv7" in namespace "gc-8453"
  I1214 14:00:28.520507 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2skwh" in namespace "gc-8453"
  E1214 14:00:28.531488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:28.532455 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2stl6" in namespace "gc-8453"
  I1214 14:00:28.549462 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4bfpd" in namespace "gc-8453"
  I1214 14:00:28.561905 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jcxg" in namespace "gc-8453"
  I1214 14:00:28.581949 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tssb" in namespace "gc-8453"
  I1214 14:00:28.599515 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5kxdf" in namespace "gc-8453"
  I1214 14:00:28.624658 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5z5b4" in namespace "gc-8453"
  I1214 14:00:28.645811 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6874f" in namespace "gc-8453"
  I1214 14:00:28.664995 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6kg6c" in namespace "gc-8453"
  I1214 14:00:28.678944 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pvxs" in namespace "gc-8453"
  I1214 14:00:28.693926 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-72xkf" in namespace "gc-8453"
  I1214 14:00:28.707092 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-787r6" in namespace "gc-8453"
  I1214 14:00:28.719420 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qd76" in namespace "gc-8453"
  I1214 14:00:28.735571 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7zh5w" in namespace "gc-8453"
  I1214 14:00:28.751772 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87ld7" in namespace "gc-8453"
  I1214 14:00:28.799276 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bhnn" in namespace "gc-8453"
  I1214 14:00:28.910377 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8kcgk" in namespace "gc-8453"
  I1214 14:00:28.927870 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l7pl" in namespace "gc-8453"
  I1214 14:00:28.945166 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8x2cv" in namespace "gc-8453"
  I1214 14:00:28.957521 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nc6r" in namespace "gc-8453"
  I1214 14:00:28.980341 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9tr6q" in namespace "gc-8453"
  I1214 14:00:28.997269 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6q4c" in namespace "gc-8453"
  I1214 14:00:29.011994 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bk554" in namespace "gc-8453"
  I1214 14:00:29.027457 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwbts" in namespace "gc-8453"
  I1214 14:00:29.048095 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ccf9n" in namespace "gc-8453"
  I1214 14:00:29.069784 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cs2rb" in namespace "gc-8453"
  I1214 14:00:29.091294 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwlg2" in namespace "gc-8453"
  I1214 14:00:29.106950 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7c2s" in namespace "gc-8453"
  I1214 14:00:29.122763 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgr6k" in namespace "gc-8453"
  I1214 14:00:29.142084 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drfqm" in namespace "gc-8453"
  I1214 14:00:29.157657 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f9z5x" in namespace "gc-8453"
  I1214 14:00:29.179804 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmkjm" in namespace "gc-8453"
  I1214 14:00:29.192912 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fsrnj" in namespace "gc-8453"
  I1214 14:00:29.212327 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ft8ml" in namespace "gc-8453"
  I1214 14:00:29.233146 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fv5tr" in namespace "gc-8453"
  I1214 14:00:29.245712 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g5tql" in namespace "gc-8453"
  I1214 14:00:29.256141 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gz4rt" in namespace "gc-8453"
  I1214 14:00:29.271480 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hg4cl" in namespace "gc-8453"
  I1214 14:00:29.289998 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hhvkf" in namespace "gc-8453"
  I1214 14:00:29.305341 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j7v6t" in namespace "gc-8453"
  I1214 14:00:29.323251 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j8x5r" in namespace "gc-8453"
  I1214 14:00:29.339911 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbc5p" in namespace "gc-8453"
  I1214 14:00:29.366348 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jhv4x" in namespace "gc-8453"
  I1214 14:00:29.381548 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jj7ss" in namespace "gc-8453"
  I1214 14:00:29.410110 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jvl58" in namespace "gc-8453"
  I1214 14:00:29.436945 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k7tfk" in namespace "gc-8453"
  I1214 14:00:29.455613 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kbrjk" in namespace "gc-8453"
  I1214 14:00:29.478922 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8453" for this suite. @ 12/14/24 14:00:29.486
• [17.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 12/14/24 14:00:29.495
  I1214 14:00:29.495452 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 14:00:29.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:00:29.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:00:29.528
  E1214 14:00:29.532539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 12/14/24 14:00:29.56
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 14:00:30.326
  STEP: Deploying the webhook pod @ 12/14/24 14:00:30.334
  STEP: Wait for the deployment to be ready @ 12/14/24 14:00:30.352
  I1214 14:00:30.366346 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 14:00:30.533187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:31.533240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 14:00:32.381
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 14:00:32.396
  E1214 14:00:32.533973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:33.396832 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/14/24 14:00:33.406
  STEP: create a pod @ 12/14/24 14:00:33.419
  E1214 14:00:33.534716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:34.534926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/14/24 14:00:35.436
  I1214 14:00:35.436533 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=webhook-8495 attach --namespace=webhook-8495 to-be-attached-pod -i -c=container1'
  I1214 14:00:35.499477 19 builder.go:135] rc: 1
  E1214 14:00:35.535513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:00:35.547753 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8495" for this suite. @ 12/14/24 14:00:35.55
  STEP: Destroying namespace "webhook-markers-8641" for this suite. @ 12/14/24 14:00:35.562
• [6.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 12/14/24 14:00:35.568
  I1214 14:00:35.568926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename dns @ 12/14/24 14:00:35.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:00:35.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:00:35.584
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/14/24 14:00:35.587
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/14/24 14:00:35.587
  STEP: creating a pod to probe DNS @ 12/14/24 14:00:35.587
  STEP: submitting the pod to kubernetes @ 12/14/24 14:00:35.587
  E1214 14:00:36.535660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:37.535864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/14/24 14:00:37.627
  STEP: looking for the results for each expected name from probers @ 12/14/24 14:00:37.63
  I1214 14:00:37.645882 19 dns_common.go:527] DNS probes using dns-3509/dns-test-ec1e0d04-6e49-4094-a693-b7691cf0aeb0 succeeded

  STEP: deleting the pod @ 12/14/24 14:00:37.645
  I1214 14:00:37.664709 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3509" for this suite. @ 12/14/24 14:00:37.668
• [2.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/14/24 14:00:37.675
  I1214 14:00:37.675507 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename subpath @ 12/14/24 14:00:37.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:00:37.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:00:37.694
  STEP: Setting up data @ 12/14/24 14:00:37.696
  STEP: Creating pod pod-subpath-test-configmap-8qfx @ 12/14/24 14:00:37.705
  STEP: Creating a pod to test atomic-volume-subpath @ 12/14/24 14:00:37.705
  E1214 14:00:38.536134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:39.536358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:40.537150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:41.537476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:42.537820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:43.537956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:44.538132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:45.538439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:46.539254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:47.539449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:48.539595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:49.539824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:50.539929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:51.540056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:52.540234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:53.540342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:54.540597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:55.541560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:56.541659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:57.541756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:58.542243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:00:59.543241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:00.543379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:01.543458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 14:01:01.783
  I1214 14:01:01.788424 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-subpath-test-configmap-8qfx container test-container-subpath-configmap-8qfx: <nil>
  STEP: delete the pod @ 12/14/24 14:01:01.8
  STEP: Deleting pod pod-subpath-test-configmap-8qfx @ 12/14/24 14:01:01.82
  I1214 14:01:01.820464 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-8qfx" in namespace "subpath-3538"
  I1214 14:01:01.823954 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3538" for this suite. @ 12/14/24 14:01:01.827
• [24.159 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 12/14/24 14:01:01.834
  I1214 14:01:01.834498 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 14:01:01.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:01.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:01.851
  STEP: Setting up server cert @ 12/14/24 14:01:01.872
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 14:01:02.131
  STEP: Deploying the webhook pod @ 12/14/24 14:01:02.14
  STEP: Wait for the deployment to be ready @ 12/14/24 14:01:02.155
  I1214 14:01:02.169444 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 14:01:02.543635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:03.543760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 14:01:04.184
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 14:01:04.194
  E1214 14:01:04.544148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:05.194370 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/14/24 14:01:05.202
  STEP: verifying the validating webhook match conditions @ 12/14/24 14:01:05.22
  STEP: updating the validating webhook match conditions @ 12/14/24 14:01:05.226
  STEP: verifying the validating webhook match conditions @ 12/14/24 14:01:05.238
  I1214 14:01:05.302229 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5849" for this suite. @ 12/14/24 14:01:05.305
  STEP: Destroying namespace "webhook-markers-3818" for this suite. @ 12/14/24 14:01:05.314
• [3.488 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/14/24 14:01:05.322
  I1214 14:01:05.322780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-runtime @ 12/14/24 14:01:05.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:05.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:05.344
  STEP: create the container @ 12/14/24 14:01:05.347
  W1214 14:01:05.354660      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/14/24 14:01:05.354
  E1214 14:01:05.544197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:06.544897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:07.545073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/14/24 14:01:08.376
  STEP: the container should be terminated @ 12/14/24 14:01:08.381
  STEP: the termination message should be set @ 12/14/24 14:01:08.381
  I1214 14:01:08.381396 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/14/24 14:01:08.381
  I1214 14:01:08.398756 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9105" for this suite. @ 12/14/24 14:01:08.402
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/14/24 14:01:08.411
  I1214 14:01:08.411894 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 14:01:08.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:08.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:08.429
  STEP: Creating configMap with name configmap-test-volume-map-0639626d-b5bc-4e03-bbf3-6ea8011c9bdf @ 12/14/24 14:01:08.431
  STEP: Creating a pod to test consume configMaps @ 12/14/24 14:01:08.437
  E1214 14:01:08.545280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:09.545590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:10.545809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:11.545917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 14:01:12.463
  I1214 14:01:12.466438 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-configmaps-1e7324d4-7efd-431f-9690-0fa675527484 container agnhost-container: <nil>
  STEP: delete the pod @ 12/14/24 14:01:12.475
  I1214 14:01:12.496798 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8836" for this suite. @ 12/14/24 14:01:12.499
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 12/14/24 14:01:12.507
  I1214 14:01:12.507280 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename webhook @ 12/14/24 14:01:12.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:12.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:12.525
  E1214 14:01:12.546543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 12/14/24 14:01:12.553
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/14/24 14:01:12.671
  STEP: Deploying the webhook pod @ 12/14/24 14:01:12.678
  STEP: Wait for the deployment to be ready @ 12/14/24 14:01:12.689
  I1214 14:01:12.697369 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1214 14:01:13.546772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:14.546975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/14/24 14:01:14.712
  STEP: Verifying the service has paired with the endpoint @ 12/14/24 14:01:14.725
  E1214 14:01:15.547127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:15.725621 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1214 14:01:15.734728 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/14/24 14:01:16.244
  STEP: Creating a custom resource that should be denied by the webhook @ 12/14/24 14:01:16.257
  E1214 14:01:16.547216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:17.547575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/14/24 14:01:18.274
  STEP: Updating the custom resource with disallowed data should be denied @ 12/14/24 14:01:18.283
  STEP: Deleting the custom resource should be denied @ 12/14/24 14:01:18.292
  STEP: Remove the offending key and value from the custom resource data @ 12/14/24 14:01:18.3
  STEP: Deleting the updated custom resource should be successful @ 12/14/24 14:01:18.31
  E1214 14:01:18.548536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:18.882633 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4346" for this suite. @ 12/14/24 14:01:18.887
  STEP: Destroying namespace "webhook-markers-3513" for this suite. @ 12/14/24 14:01:18.897
• [6.398 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 12/14/24 14:01:18.905
  I1214 14:01:18.905318 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename security-context @ 12/14/24 14:01:18.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:18.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:18.924
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/14/24 14:01:18.927
  E1214 14:01:19.548823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:20.549156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:21.549937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:22.550061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 14:01:22.949
  I1214 14:01:22.954127 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod security-context-de1e04a6-eeb5-4444-bf6b-40722ab0f931 container test-container: <nil>
  STEP: delete the pod @ 12/14/24 14:01:22.961
  I1214 14:01:22.980413 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8955" for this suite. @ 12/14/24 14:01:22.983
• [4.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 12/14/24 14:01:22.991
  I1214 14:01:22.991900 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename sched-pred @ 12/14/24 14:01:22.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:23.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:23.011
  I1214 14:01:23.014633 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1214 14:01:23.022367 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1214 14:01:23.026186 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-132 before test
  I1214 14:01:23.030620 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-zbkpp from ingress-nginx-kubernetes-worker started at 2024-12-14 13:49:00 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.030639 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 14:01:23.030647 19 predicates.go:957] calico-node-bblb4 from kube-system started at 2024-12-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.030652 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 14:01:23.030659 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-jq925 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 14:01:23.030664 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 14:01:23.030669 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 14:01:23.030675 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-38-181 before test
  I1214 14:01:23.035535 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9k94x from ingress-nginx-kubernetes-worker started at 2024-12-14 12:09:48 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.035554 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 14:01:23.035561 19 predicates.go:957] calico-node-vjktq from kube-system started at 2024-12-14 12:16:23 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.035582 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 14:01:23.035588 19 predicates.go:957] kube-state-metrics-5d7bdccd49-gkxkr from kube-system started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.035593 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1214 14:01:23.035599 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-p9vf9 from kube-system started at 2024-12-14 12:09:49 +0000 UTC (2 container statuses recorded)
  I1214 14:01:23.035604 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1214 14:01:23.035616 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1214 14:01:23.035621 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-9pn8j from kubernetes-dashboard started at 2024-12-14 13:48:49 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.035626 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1214 14:01:23.035664 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-gcbn8 from kubernetes-dashboard started at 2024-12-14 12:09:49 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.035674 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1214 14:01:23.035680 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-bg8kl from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 14:01:23.035685 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 14:01:23.035690 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1214 14:01:23.035696 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I1214 14:01:23.041563 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-59bh9 from ingress-nginx-kubernetes-worker started at 2024-12-14 12:12:11 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.041582 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1214 14:01:23.041590 19 predicates.go:957] calico-node-jcqlh from kube-system started at 2024-12-14 12:16:34 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.041595 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1214 14:01:23.041602 19 predicates.go:957] coredns-5b4857d7c8-22b4z from kube-system started at 2024-12-14 13:48:49 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.041608 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1214 14:01:23.041613 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-14 12:20:03 +0000 UTC (1 container statuses recorded)
  I1214 14:01:23.041618 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1214 14:01:23.041624 19 predicates.go:957] sonobuoy-e2e-job-f6a2dbd00a5f4548 from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 14:01:23.041634 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1214 14:01:23.041641 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 14:01:23.041647 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-32279afd5c474a48-tfgzf from sonobuoy started at 2024-12-14 12:20:07 +0000 UTC (2 container statuses recorded)
  I1214 14:01:23.041651 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1214 14:01:23.041657 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/14/24 14:01:23.041
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18110ff689c96c1c], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 12/14/24 14:01:23.07
  E1214 14:01:23.550157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:24.065984 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6797" for this suite. @ 12/14/24 14:01:24.069
• [1.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/14/24 14:01:24.075
  I1214 14:01:24.075742 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename container-probe @ 12/14/24 14:01:24.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:01:24.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:01:24.095
  STEP: Creating pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197 @ 12/14/24 14:01:24.098
  E1214 14:01:24.550186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:25.550294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/14/24 14:01:26.117
  I1214 14:01:26.120222 19 container_probe.go:1749] Initial restart count of pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a is 0
  I1214 14:01:26.125550 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:26.551131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:27.551217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:28.131318 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:28.551809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:29.551886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:30.136719 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:30.552199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:31.552286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:32.141330 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:32.552821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:33.553120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:34.147431 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:34.554054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:35.554253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:36.152787 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:36.555184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:37.555417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:38.158376 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:38.555865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:39.556133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:40.163732 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:40.556469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:41.556811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:42.170379 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:42.557045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:43.557277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:44.174875 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:44.557446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:45.557634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:46.180780 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:46.558395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:47.558745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:48.185491 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:48.559058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:49.559289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:50.191752 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:50.560270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:51.560370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:52.197167 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:52.560487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:53.560605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:54.203326 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:54.560770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:55.560986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:56.209474 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:56.561668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:57.561725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:01:58.214889 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:01:58.562241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:01:59.563217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:00.219430 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:00.563898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:01.564161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:02.225477 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:02.565013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:03.565213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:04.231699 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:04.566245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:05.566477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:06.236792 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:06.567446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:07.567605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:08.242689 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:08.568181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:09.568422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:10.247787 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:10.569354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:11.569517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:12.254320 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:12.569595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:13.569867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:14.258954 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:14.570325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:15.570562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:16.265879 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:16.571469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:17.571583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:18.271581 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:18.571670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:19.571853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:20.276191 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:20.572596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:21.573292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:22.281782 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:22.574219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:23.574418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:24.288534 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:24.575003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:25.575304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:26.295369 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:26.575835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:27.576134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:28.300742 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:28.576184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:29.576401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:30.305812 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:30.577277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:31.577372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:32.311189 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:32.577622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:33.577868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:34.316276 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:34.578746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:35.578849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:36.321365 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:36.579809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:37.580140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:38.326333 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:38.580723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:39.581406      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:40.332480 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:40.581782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:41.582442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:42.337780 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:42.583275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:43.584234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:44.343563 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:44.584887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:45.585151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:46.350883 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:46.585307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:47.586209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:48.355043 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:48.586358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:49.586501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:50.358812 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:50.587146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:51.587476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:52.362812 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:52.588152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:53.588443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:54.367118 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:54.589447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:55.589723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:56.373473 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:56.590785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:57.591038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:02:58.379068 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:02:58.591145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:02:59.591237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:00.385156 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:00.591328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:01.592242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:02.390153 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:02.592329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:03.592425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:04.396550 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:04.592836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:05.593070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:06.400849 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:06.593110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:07.593176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:08.406877 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:08.594152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:09.594372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:10.411435 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:10.594797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:11.595139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:12.417739 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:12.596152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:13.596396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:14.422925 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:14.597142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:15.598205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:16.428554 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:16.598969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:17.599243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:18.434008 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:18.599369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:19.599578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:20.440395 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:20.599624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:21.599758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:22.445444 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:22.600826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:23.601000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:24.452955 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:24.601165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:25.602223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:26.457879 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:26.603257      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:27.603324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:28.462294 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:28.604311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:29.604397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:30.467596 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:30.605136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:31.605699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:32.472176 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:32.606541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:33.606731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:34.477886 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:34.607207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:35.607343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:36.482790 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:36.607999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:37.608192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:38.488722 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:38.609054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:39.609325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:40.493919 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:40.610088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:41.610167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:42.500376 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:42.610764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:43.610950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:44.504412 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:44.611630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:45.612213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:46.510375 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:46.612613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:47.612795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:48.514943 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:48.613139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:49.613275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:50.519727 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:50.613962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:51.614151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:52.524395 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:52.614620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:53.614888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:54.529274 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:54.615499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:55.615677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:56.536128 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:56.616228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:57.616655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:03:58.541552 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:03:58.616731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:03:59.617061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:00.547596 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:00.617775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:01.617990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:02.552457 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:02.618654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:03.618869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:04.558632 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:04.619737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:05.619858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:06.563298 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:06.620508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:07.620615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:08.570591 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:08.620679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:09.620773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:10.576694 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:10.621836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:11.621933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:12.582832 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:12.622244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:13.623211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:14.587820 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:14.623947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:15.624068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:16.594084 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:16.624246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:17.624618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:18.601810 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:18.624949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:19.625218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:20.607606 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:20.625801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:21.626048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:22.612811 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:22.627002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:23.627175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:24.618199 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:24.627546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:25.627650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:26.624515 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:26.628540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:27.628667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:28.629009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:28.629243 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:29.629150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:30.629260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:30.635260 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:31.629340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:32.629434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:32.640446 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:33.630177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:34.630239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:34.646116 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:35.630522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:36.630619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:36.651714 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:37.630721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:38.630807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:38.656372 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:39.631422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:40.632215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:40.660907 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:41.632331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:42.632449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:42.665969 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:43.633243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:44.633328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:44.671471 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:45.633527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:46.633659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:46.678092 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:47.634173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:48.634379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:48.683036 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:49.634602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:50.634700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:50.690220 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:51.634922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:52.635136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:52.695126 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:53.635243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:54.635382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:54.701528 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:55.635622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:56.635957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:56.706233 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:57.636115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:04:58.636179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:04:58.712858 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:04:59.636814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:00.637259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:00.717814 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:01.638319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:02.638640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:02.723182 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:03.638759      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:04.638878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:04.728324 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:05.639047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:06.639394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:06.733701 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:07.639567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:08.639612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:08.737797 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:09.639819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:10.639922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:10.743268 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:11.640232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:12.640339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:12.749733 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:13.640898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:14.640976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:14.755442 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:15.641188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:16.641290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:16.761784 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:17.641373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:18.641488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:18.768677 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:19.641574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:20.641665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:20.774753 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:21.642251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:22.642351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:22.781033 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:23.642442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:24.642905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:24.786410 19 container_probe.go:1759] Get pod test-grpc-58ca05e8-578b-4ec7-9fca-54be7b9c507a in namespace container-probe-7197
  E1214 14:05:25.643167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:26.643500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/14/24 14:05:26.787
  I1214 14:05:26.807580 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7197" for this suite. @ 12/14/24 14:05:26.813
• [242.745 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 12/14/24 14:05:26.821
  I1214 14:05:26.821279 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 14:05:26.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:05:26.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:05:26.844
  STEP: creating service in namespace services-4566 @ 12/14/24 14:05:26.846
  STEP: creating service affinity-nodeport-transition in namespace services-4566 @ 12/14/24 14:05:26.846
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4566 @ 12/14/24 14:05:26.864
  I1214 14:05:26.873085      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4566, replica count: 3
  E1214 14:05:27.643882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:28.644913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:29.645013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:29.924455      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1214 14:05:29.935983 19 resource.go:361] Creating new exec pod
  E1214 14:05:30.645350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:31.645450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:32.645737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:32.957395 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-4566 exec execpod-affinity9dsqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1214 14:05:33.059760 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1214 14:05:33.059803 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 14:05:33.059890 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-4566 exec execpod-affinity9dsqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.136 80'
  I1214 14:05:33.140841 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.136 80\nConnection to 10.152.183.136 80 port [tcp/http] succeeded!\n"
  I1214 14:05:33.140901 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 14:05:33.140987 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-4566 exec execpod-affinity9dsqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.38.181 30312'
  I1214 14:05:33.223949 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.38.181 30312\nConnection to 172.31.38.181 30312 port [tcp/*] succeeded!\n"
  I1214 14:05:33.223998 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 14:05:33.224103 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-4566 exec execpod-affinity9dsqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.132 30312'
  I1214 14:05:33.306202 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.132 30312\nConnection to 172.31.20.132 30312 port [tcp/*] succeeded!\n"
  I1214 14:05:33.306244 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1214 14:05:33.314838 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-4566 exec execpod-affinity9dsqc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.132:30312/ ; done'
  I1214 14:05:33.457354 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n"
  I1214 14:05:33.457397 19 builder.go:147] stdout: "\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-97r9t\naffinity-nodeport-transition-97r9t\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-97r9t\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-rx55h\naffinity-nodeport-transition-97r9t\naffinity-nodeport-transition-97r9t\naffinity-nodeport-transition-97r9t\naffinity-nodeport-transition-rx55h"
  I1214 14:05:33.457410 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457417 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.457425 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457431 19 service.go:242] Received response from host: affinity-nodeport-transition-97r9t
  I1214 14:05:33.457437 19 service.go:242] Received response from host: affinity-nodeport-transition-97r9t
  I1214 14:05:33.457442 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457449 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.457454 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457460 19 service.go:242] Received response from host: affinity-nodeport-transition-97r9t
  I1214 14:05:33.457465 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457471 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457477 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.457488 19 service.go:242] Received response from host: affinity-nodeport-transition-97r9t
  I1214 14:05:33.457493 19 service.go:242] Received response from host: affinity-nodeport-transition-97r9t
  I1214 14:05:33.457498 19 service.go:242] Received response from host: affinity-nodeport-transition-97r9t
  I1214 14:05:33.457529 19 service.go:242] Received response from host: affinity-nodeport-transition-rx55h
  I1214 14:05:33.469822 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3994781486 --namespace=services-4566 exec execpod-affinity9dsqc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.132:30312/ ; done'
  I1214 14:05:33.608833 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.132:30312/\n"
  I1214 14:05:33.608884 19 builder.go:147] stdout: "\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm\naffinity-nodeport-transition-d4gnm"
  I1214 14:05:33.608897 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608907 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608914 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608922 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608928 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608933 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608939 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608945 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608951 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608956 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608961 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608967 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608972 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608982 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608988 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.608994 19 service.go:242] Received response from host: affinity-nodeport-transition-d4gnm
  I1214 14:05:33.609184 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4566, will wait for the garbage collector to delete the pods @ 12/14/24 14:05:33.623
  E1214 14:05:33.645893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:33.686529 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 9.30512ms
  I1214 14:05:33.787548 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.016733ms
  E1214 14:05:34.646335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:35.647391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:36.648150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:36.912550 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4566" for this suite. @ 12/14/24 14:05:36.917
• [10.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/14/24 14:05:36.924
  I1214 14:05:36.924668 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename replicaset @ 12/14/24 14:05:36.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:05:36.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:05:36.942
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/14/24 14:05:36.945
  E1214 14:05:37.648200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:38.649248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 12/14/24 14:05:38.963
  STEP: Then the orphan pod is adopted @ 12/14/24 14:05:38.969
  E1214 14:05:39.649328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 12/14/24 14:05:39.978
  I1214 14:05:39.983159 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/14/24 14:05:39.994
  E1214 14:05:40.649401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:05:41.004598 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2445" for this suite. @ 12/14/24 14:05:41.008
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/14/24 14:05:41.014
  I1214 14:05:41.014839 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename configmap @ 12/14/24 14:05:41.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:05:41.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:05:41.034
  STEP: Creating configMap with name cm-test-opt-del-24fd10e6-3005-4294-afcf-b7aa484f132c @ 12/14/24 14:05:41.04
  STEP: Creating configMap with name cm-test-opt-upd-dfea3d69-b4a4-4e83-b9f6-945e26e50e60 @ 12/14/24 14:05:41.044
  STEP: Creating the pod @ 12/14/24 14:05:41.048
  E1214 14:05:41.649604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:42.649938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-24fd10e6-3005-4294-afcf-b7aa484f132c @ 12/14/24 14:05:43.107
  STEP: Updating configmap cm-test-opt-upd-dfea3d69-b4a4-4e83-b9f6-945e26e50e60 @ 12/14/24 14:05:43.114
  STEP: Creating configMap with name cm-test-opt-create-d7ecd605-4a1e-4ed8-a9c4-d5c4f5b8551b @ 12/14/24 14:05:43.122
  STEP: waiting to observe update in volume @ 12/14/24 14:05:43.126
  E1214 14:05:43.650252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:44.650446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:45.650560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:46.650639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:47.650726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:48.650828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:49.651243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:50.651310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:51.651401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:52.651509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:53.651595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:54.651671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:55.652265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:56.653269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:57.653369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:58.653464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:05:59.654247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:00.655249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:01.656049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:02.656256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:03.656428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:04.656698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:05.657248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:06.657476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:07.657650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:08.657866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:09.658119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:10.658310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:11.659143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:12.659402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:13.659683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:14.659900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:15.660174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:16.660384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:17.660518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:18.660717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:19.661542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:20.661638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:21.661741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:22.661836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:23.662758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:24.662833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:25.663129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:26.663194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:27.663312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:28.663400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:29.664337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:30.664568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:31.665243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:32.665365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:33.665551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:34.665643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:35.666131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:36.666250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:37.667261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:38.667392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:39.668257      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:40.668532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:41.669464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:42.669644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:43.670157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:44.671234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:45.672164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:46.672269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:47.673249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:48.673358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:49.674229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:50.674472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:51.674656      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:52.674803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:53.675695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:54.675952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:55.676365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:56.676543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:57.677492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:58.677746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:06:59.678711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:00.678900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:01.679046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:02.679310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:07:03.498210 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8325" for this suite. @ 12/14/24 14:07:03.501
• [82.493 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/14/24 14:07:03.508
  I1214 14:07:03.508224 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename pod-network-test @ 12/14/24 14:07:03.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:03.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:03.527
  STEP: Performing setup for networking test in namespace pod-network-test-2430 @ 12/14/24 14:07:03.529
  STEP: creating a selector @ 12/14/24 14:07:03.529
  STEP: Creating the service pods in kubernetes @ 12/14/24 14:07:03.529
  I1214 14:07:03.529952 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1214 14:07:03.679698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:04.679781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:05.680499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:06.680569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:07.681087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:08.681196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:09.681749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:10.681833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:11.682220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:12.682339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:13.682534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:14.682635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:15.683433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:16.683786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:17.684767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:18.684949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:19.685585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:20.685768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:21.686131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:22.686353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:23.686408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:24.686488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/14/24 14:07:25.645
  E1214 14:07:25.687111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:26.687275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:07:27.679766 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1214 14:07:27.679801 19 utils.go:496] Going to poll 192.168.249.182 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1214 14:07:27.683359 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.249.182:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2430 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 14:07:27.683379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 14:07:27.683811 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 14:07:27.683855 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2430/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.249.182%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1214 14:07:27.687332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:07:27.721245 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1214 14:07:27.721282 19 utils.go:496] Going to poll 192.168.127.98 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1214 14:07:27.725951 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.127.98:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2430 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 14:07:27.725967 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 14:07:27.726396 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 14:07:27.726463 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2430/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.127.98%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1214 14:07:27.765548 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1214 14:07:27.765605 19 utils.go:496] Going to poll 192.168.197.251 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1214 14:07:27.770188 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.197.251:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2430 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1214 14:07:27.770206 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  I1214 14:07:27.770615 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1214 14:07:27.770657 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2430/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.197.251%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1214 14:07:27.806528 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1214 14:07:27.806667 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2430" for this suite. @ 12/14/24 14:07:27.811
• [24.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 12/14/24 14:07:27.819
  I1214 14:07:27.819703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename services @ 12/14/24 14:07:27.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:27.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:27.84
  STEP: creating a collection of services @ 12/14/24 14:07:27.843
  I1214 14:07:27.843176 19 service.go:3655] Creating e2e-svc-a-ghx2h
  I1214 14:07:27.858411 19 service.go:3655] Creating e2e-svc-b-dzt9f
  I1214 14:07:27.868426 19 service.go:3655] Creating e2e-svc-c-jcvvm
  STEP: deleting service collection @ 12/14/24 14:07:27.884
  I1214 14:07:27.914474 19 service.go:3690] Collection of services has been deleted
  I1214 14:07:27.914663 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7978" for this suite. @ 12/14/24 14:07:27.918
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/14/24 14:07:27.928
  I1214 14:07:27.928513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename projected @ 12/14/24 14:07:27.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:27.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:27.947
  STEP: Creating configMap with name projected-configmap-test-volume-a3c7e74a-831d-48c2-83ae-6a9c7bb06d85 @ 12/14/24 14:07:27.95
  STEP: Creating a pod to test consume configMaps @ 12/14/24 14:07:27.954
  E1214 14:07:28.687485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:29.687642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:30.687788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:31.687889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 14:07:31.981
  I1214 14:07:31.985047 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-projected-configmaps-9f651b09-a173-4013-bc92-c8b6ac481af3 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 14:07:31.99
  I1214 14:07:32.011073 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6053" for this suite. @ 12/14/24 14:07:32.015
• [4.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/14/24 14:07:32.021
  I1214 14:07:32.021876 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename secrets @ 12/14/24 14:07:32.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:32.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:32.04
  STEP: Creating secret with name secret-test-2f38dbfc-5972-4a34-a8ff-75ebde1f5c3f @ 12/14/24 14:07:32.063
  STEP: Creating a pod to test consume secrets @ 12/14/24 14:07:32.069
  E1214 14:07:32.688234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:33.688323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:34.689229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:35.689425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 14:07:36.094
  I1214 14:07:36.097319 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod pod-secrets-7726d9f9-776a-4f6d-a509-d9f73aa8c3b1 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/14/24 14:07:36.104
  I1214 14:07:36.121105 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-650" for this suite. @ 12/14/24 14:07:36.125
  STEP: Destroying namespace "secret-namespace-2248" for this suite. @ 12/14/24 14:07:36.132
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/14/24 14:07:36.142
  I1214 14:07:36.142075 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/14/24 14:07:36.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:36.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:36.179
  STEP: getting /apis @ 12/14/24 14:07:36.187
  STEP: getting /apis/admissionregistration.k8s.io @ 12/14/24 14:07:36.19
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/14/24 14:07:36.191
  STEP: creating @ 12/14/24 14:07:36.192
  STEP: getting @ 12/14/24 14:07:36.213
  STEP: listing @ 12/14/24 14:07:36.219
  STEP: watching @ 12/14/24 14:07:36.223
  I1214 14:07:36.223445 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/14/24 14:07:36.228
  STEP: updating @ 12/14/24 14:07:36.237
  I1214 14:07:36.270414 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I1214 14:07:36.270454 19 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I1214 14:07:36.270489 19 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/14/24 14:07:36.27
  STEP: patching /status @ 12/14/24 14:07:36.274
  STEP: updating /status @ 12/14/24 14:07:36.284
  STEP: deleting @ 12/14/24 14:07:36.293
  STEP: deleting a collection @ 12/14/24 14:07:36.306
  I1214 14:07:36.324237 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7347" for this suite. @ 12/14/24 14:07:36.327
• [0.194 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/14/24 14:07:36.336
  I1214 14:07:36.336098 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename csi-storageclass @ 12/14/24 14:07:36.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:36.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:36.358
  STEP: Creating a StorageClass @ 12/14/24 14:07:36.36
  STEP: Get StorageClass "e2e-dcq45" @ 12/14/24 14:07:36.364
  STEP: Patching the StorageClass "e2e-dcq45" @ 12/14/24 14:07:36.367
  STEP: Delete StorageClass "e2e-dcq45" @ 12/14/24 14:07:36.375
  STEP: Confirm deletion of StorageClass "e2e-dcq45" @ 12/14/24 14:07:36.38
  STEP: Create a replacement StorageClass @ 12/14/24 14:07:36.384
  STEP: Updating StorageClass "e2e-v2-kt9xq" @ 12/14/24 14:07:36.388
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-kt9xq=updated" @ 12/14/24 14:07:36.395
  STEP: Deleting StorageClass "e2e-v2-kt9xq" via DeleteCollection @ 12/14/24 14:07:36.399
  STEP: Confirm deletion of StorageClass "e2e-v2-kt9xq" @ 12/14/24 14:07:36.409
  I1214 14:07:36.412209 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-130" for this suite. @ 12/14/24 14:07:36.415
• [0.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 12/14/24 14:07:36.424
  I1214 14:07:36.424458 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/14/24 14:07:36.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:07:36.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:07:36.441
  I1214 14:07:36.443794 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1214 14:07:36.689531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:37.689571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:38.690567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:39.690625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:40.690749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:41.690775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:42.690896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:43.691098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:44.691880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:45.691971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:46.693007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:47.693143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:48.693824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:49.693914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:50.694115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:51.694160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:52.694312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:53.694497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:54.694566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:55.694671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:56.695235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:57.696216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:58.696372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:07:59.697193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:00.697456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:01.697565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:02.698614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:03.699203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:04.699704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:05.699906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:06.699978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:07.700103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:08.700268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:09.700375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:10.701376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:11.701695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:12.702250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:13.702320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:14.703042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:15.703252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:16.703410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:17.703604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:18.703722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:19.703864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:20.704253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:21.704557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:22.705379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:23.705559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:24.706535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:25.706704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:26.707216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:27.707428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:28.708055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:29.708159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:30.708390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:31.708718      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:32.709746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:33.710105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:34.710627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:35.711287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:08:36.444232 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1214 14:08:36.449977 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 12/14/24 14:08:36.45
  I1214 14:08:36.672575 19 taints.go:463] Pod1 is running on ip-172-31-20-132. Tainting Node
  E1214 14:08:36.712161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:37.712577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:38.713243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:08:38.896452 19 taints.go:471] Pod2 is running on ip-172-31-20-132. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/14/24 14:08:38.896
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/14/24 14:08:38.905
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/14/24 14:08:38.909
  E1214 14:08:39.713323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:40.714281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:41.714456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:42.714706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:43.714984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:08:44.638006 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1214 14:08:44.715231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:45.715272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:46.715645      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:47.715727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:48.716326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:49.716529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:50.717476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:51.717605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:52.717876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:53.718013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:54.718221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:55.718341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:56.718527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:57.718716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:58.718894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:08:59.719200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:00.719289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:01.719512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:02.720221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:03.720396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1214 14:09:04.666805 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/14/24 14:09:04.677
  I1214 14:09:04.682124 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7184" for this suite. @ 12/14/24 14:09:04.688
• [88.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/14/24 14:09:04.7
  I1214 14:09:04.700245 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3994781486
  STEP: Building a namespace api object, basename downward-api @ 12/14/24 14:09:04.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/14/24 14:09:04.72
  E1214 14:09:04.720454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/14/24 14:09:04.722
  STEP: Creating a pod to test downward API volume plugin @ 12/14/24 14:09:04.726
  E1214 14:09:05.721329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:06.722238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:07.723172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1214 14:09:08.723324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/14/24 14:09:08.76
  I1214 14:09:08.763885 19 output.go:196] Trying to get logs from node ip-172-31-20-132 pod downwardapi-volume-a1681d10-81ae-4a4d-b6ec-5b36e9b8b7c6 container client-container: <nil>
  STEP: delete the pod @ 12/14/24 14:09:08.773
  I1214 14:09:08.794435 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7728" for this suite. @ 12/14/24 14:09:08.798
• [4.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1214 14:09:08.808550 19 suites.go:34] Running AfterSuite actions on node 1
  I1214 14:09:08.808601 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.028 seconds]
------------------------------

Ran 404 of 6605 Specs in 6482.973 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h48m3.580575748s
Test Suite Passed
